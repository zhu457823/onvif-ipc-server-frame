// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* /home/ydd/share/gsoap-2.8/samples/onvif/onvif.h
   Generated by wsdl2h 2.8.97 from https://www.onvif.org/ver10/network/wsdl/remotediscovery.wsdl https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl https://www.onvif.org/ver10/media/wsdl/media.wsdl https://www.onvif.org/ver10/events/wsdl/event.wsdl https://www.onvif.org/ver10/deviceio.wsdl https://www.onvif.org/ver20/imaging/wsdl/imaging.wsdl https://www.onvif.org/ver20/media/wsdl/media.wsdl https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl and ./typemap.dat
   2020-02-11 01:30:00 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/**

@page page_notes Notes

@note HINTS:
 - Run soapcpp2 on /home/ydd/share/gsoap-2.8/samples/onvif/onvif.h to generate the SOAP/XML processing logic:
   Use soapcpp2 -I to specify paths for #import
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Edit 'typemap.dat' to control namespace bindings and type mappings:
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -c to generate pure C code.
 - Use wsdl2h -R to include the REST operations defined by the WSDLs.
 - Use wsdl2h -O3 or -O4 to optimize by removing unused schema components.
 - Use wsdl2h -d to enable DOM support for xsd:any and xsd:anyType.
 - Use wsdl2h -F to simulate struct-type derivation in C (also works in C++).
 - Use wsdl2h -f to generate flat C++ class hierarchy, removes type derivation.
 - Use wsdl2h -g to generate top-level root elements with readers and writers.
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Use wsdl2h -L to remove this @note and all other @note comments.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE GENERATED soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "wsdd10.h"	// wsdd10 = <http://schemas.xmlsoap.org/ws/2005/04/discovery>
#import "xop.h"		// xop = <http://www.w3.org/2004/08/xop/include>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>
#import "wsse.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to 'typemap.dat' then rerun wsdl2h (use wsdl2h -t typemap.dat):

tdn = "http://www.onvif.org/ver10/network/wsdl"
tmd = "http://www.onvif.org/ver10/deviceIO/wsdl"
tds = "http://www.onvif.org/ver10/device/wsdl"
tt = "http://www.onvif.org/ver10/schema"
wsnt = "http://docs.oasis-open.org/wsn/b-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"
trt = "http://www.onvif.org/ver10/media/wsdl"
tev = "http://www.onvif.org/ver10/events/wsdl"
wsrfrw = "http://docs.oasis-open.org/wsrf/rw-2"
wsrfr = "http://docs.oasis-open.org/wsrf/r-2"
timg = "http://www.onvif.org/ver20/imaging/wsdl"
ns1 = "http://www.onvif.org/ver20/media/wsdl"
tptz = "http://www.onvif.org/ver20/ptz/wsdl"

*/

#define SOAP_NAMESPACE_OF_tdn	"http://www.onvif.org/ver10/network/wsdl"
//gsoap tdn   schema namespace:	http://www.onvif.org/ver10/network/wsdl
//gsoap tdn   schema elementForm:	qualified
//gsoap tdn   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tmd	"http://www.onvif.org/ver10/deviceIO/wsdl"
//gsoap tmd   schema namespace:	http://www.onvif.org/ver10/deviceIO/wsdl
//gsoap tmd   schema elementForm:	qualified
//gsoap tmd   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tds	"http://www.onvif.org/ver10/device/wsdl"
//gsoap tds   schema namespace:	http://www.onvif.org/ver10/device/wsdl
//gsoap tds   schema elementForm:	qualified
//gsoap tds   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tt	"http://www.onvif.org/ver10/schema"
//gsoap tt    schema namespace:	http://www.onvif.org/ver10/schema
//gsoap tt    schema elementForm:	qualified
//gsoap tt    schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trt	"http://www.onvif.org/ver10/media/wsdl"
//gsoap trt   schema namespace:	http://www.onvif.org/ver10/media/wsdl
//gsoap trt   schema elementForm:	qualified
//gsoap trt   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tev	"http://www.onvif.org/ver10/events/wsdl"
//gsoap tev   schema namespace:	http://www.onvif.org/ver10/events/wsdl
//gsoap tev   schema elementForm:	qualified
//gsoap tev   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfrw	"http://docs.oasis-open.org/wsrf/rw-2"
//gsoap wsrfrw schema namespace:	http://docs.oasis-open.org/wsrf/rw-2
//gsoap wsrfrw schema elementForm:	qualified
//gsoap wsrfrw schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfr	"http://docs.oasis-open.org/wsrf/r-2"
//gsoap wsrfr schema namespace:	http://docs.oasis-open.org/wsrf/r-2
//gsoap wsrfr schema elementForm:	qualified
//gsoap wsrfr schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_timg	"http://www.onvif.org/ver20/imaging/wsdl"
//gsoap timg  schema namespace:	http://www.onvif.org/ver20/imaging/wsdl
//gsoap timg  schema elementForm:	qualified
//gsoap timg  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns1	"http://www.onvif.org/ver20/media/wsdl"
//gsoap ns1   schema namespace:	http://www.onvif.org/ver20/media/wsdl
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tptz	"http://www.onvif.org/ver20/ptz/wsdl"
//gsoap tptz  schema namespace:	http://www.onvif.org/ver20/ptz/wsdl
//gsoap tptz  schema elementForm:	qualified
//gsoap tptz  schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in type "SOAP-ENV:Envelope".
struct SOAP_ENV__Envelope { struct SOAP_ENV__Header *SOAP_ENV__Header; _XML SOAP_ENV__Body; };

/// Built-in type "xs:base64Binary".
struct xsd__base64Binary
{
    unsigned char *__ptr;
    int __size;
    char *id, *type, *options; // NOTE: non-NULL for DIME/MIME/MTOM XOP attachments only
};

/// Built-in type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };

/// Built-in type "xs:hexBinary".
struct xsd__hexBinary
{
    unsigned char *__ptr;
    int __size;
};

// Imported type ""http://www.w3.org/2005/08/addressing":EndpointReferenceType" defined by wsa5__EndpointReferenceType.

/// Primitive built-in type "xs:NCName".
typedef char* xsd__NCName;

/// Primitive built-in type "xs:anySimpleType".
typedef char* xsd__anySimpleType;

/// Primitive built-in type "xs:anyURI".
typedef char* xsd__anyURI;

/// Primitive built-in type "xs:duration".
typedef char* xsd__duration;

/// Primitive built-in type "xs:integer".
typedef char* xsd__integer;

/// Primitive built-in type "xs:nonNegativeInteger".
typedef char* xsd__nonNegativeInteger;

/// Primitive built-in type "xs:token".
typedef char* xsd__token;

// Imported element ""http://www.w3.org/2004/08/xop/include":Include" declared as _xop__Include.

/// Built-in attribute "xml:lang".
typedef char* _xml__lang;


/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":ChangedOnly.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":DelayTimes is a simpleType containing a whitespace separated list of values of type xs:float.
///
typedef char* tmd__DelayTimes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes is a simpleType containing a whitespace separated list of values of type xs:int.
///
typedef char* tds__EAPMethodTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":IntAttrList is a simpleType containing a whitespace separated list of values of type xs:int.
///
typedef char* tt__IntAttrList;

/// @brief "http://www.onvif.org/ver10/schema":FloatAttrList is a simpleType containing a whitespace separated list of values of type xs:float.
///
typedef char* tt__FloatAttrList;

/// @brief "http://www.onvif.org/ver10/schema":StringAttrList is a simpleType containing a whitespace separated list of values of type xs:string.
///
typedef char* tt__StringAttrList;

/// @brief "http://www.onvif.org/ver10/schema":StringList is a simpleType containing a whitespace separated list of values of type xs:string.
///
typedef char* tt__StringList;

/// @brief "http://www.onvif.org/ver10/schema":ReferenceTokenList is a simpleType containing a whitespace separated list of values of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef char* tt__ReferenceTokenList;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Union of values from member types "xsd:dateTime xsd:duration".
typedef char* wsnt__AbsoluteOrRelativeTimeType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/media/wsdl":EncodingTypes is a simpleType containing a whitespace separated list of values of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.
/// </BLOCKQUOTE></PRE>
///
typedef char* trt__EncodingTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/media/wsdl":EncodingTypes is a simpleType containing a whitespace separated list of values of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   List of one or more encodings supported for this video source. For name definitions see tt:VideoEncodingMimeNames, and see <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video">IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
typedef char* ns1__EncodingTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The type of serial port.Generic can be signaled as a vendor specific serial port type.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tmd__SerialPortType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tmd__SerialPortType
{
	tmd__SerialPortType__RS232,	///< xs:string value="RS232"
	tmd__SerialPortType__RS422HalfDuplex,	///< xs:string value="RS422HalfDuplex"
	tmd__SerialPortType__RS422FullDuplex,	///< xs:string value="RS422FullDuplex"
	tmd__SerialPortType__RS485HalfDuplex,	///< xs:string value="RS485HalfDuplex"
	tmd__SerialPortType__RS485FullDuplex,	///< xs:string value="RS485FullDuplex"
	tmd__SerialPortType__Generic,	///< xs:string value="Generic"
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBit is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The parity for the data error detection.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tmd__ParityBit__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tmd__ParityBit
{
	tmd__ParityBit__None,	///< xs:string value="None"
	tmd__ParityBit__Even,	///< xs:string value="Even"
	tmd__ParityBit__Odd,	///< xs:string value="Odd"
	tmd__ParityBit__Mark,	///< xs:string value="Mark"
	tmd__ParityBit__Space,	///< xs:string value="Space"
	tmd__ParityBit__Extended,	///< xs:string value="Extended"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":AutoGeoModes is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tds__AutoGeoModes__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tds__AutoGeoModes
{
/// <PRE><BLOCKQUOTE>
///   Automatic adjustment of the device location.
/// </BLOCKQUOTE></PRE>
///
	tds__AutoGeoModes__Location,	///< xs:string value="Location"
/// <PRE><BLOCKQUOTE>
///   Automatic adjustment of the device orientation relative to the compass also called yaw.
/// </BLOCKQUOTE></PRE>
///
	tds__AutoGeoModes__Heading,	///< xs:string value="Heading"
/// <PRE><BLOCKQUOTE>
///   Automatic adjustment of the deviation from the horizon also called pitch and roll.
/// </BLOCKQUOTE></PRE>
///
	tds__AutoGeoModes__Leveling,	///< xs:string value="Leveling"
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tds__StorageType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tds__StorageType
{
/// <PRE><BLOCKQUOTE>
///   NFS protocol
/// </BLOCKQUOTE></PRE>
///
	tds__StorageType__NFS,	///< xs:string value="NFS"
/// <PRE><BLOCKQUOTE>
///   CIFS protocol
/// </BLOCKQUOTE></PRE>
///
	tds__StorageType__CIFS,	///< xs:string value="CIFS"
/// <PRE><BLOCKQUOTE>
///   CDMI protocol
/// </BLOCKQUOTE></PRE>
///
	tds__StorageType__CDMI,	///< xs:string value="CDMI"
/// <PRE><BLOCKQUOTE>
///   FTP protocol
/// </BLOCKQUOTE></PRE>
///
	tds__StorageType__FTP,	///< xs:string value="FTP"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Length of this content is 0 to 64.
typedef char* tt__Name : 64;

/// @brief "http://www.onvif.org/ver10/schema":RotateMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RotateMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RotateMode
{
/// <PRE><BLOCKQUOTE>
///   Enable the Rotate feature. Degree of rotation is specified Degree parameter.
/// </BLOCKQUOTE></PRE>
///
	tt__RotateMode__OFF,	///< xs:string value="OFF"
/// <PRE><BLOCKQUOTE>
///   Disable the Rotate feature.
/// </BLOCKQUOTE></PRE>
///
	tt__RotateMode__ON,	///< xs:string value="ON"
/// <PRE><BLOCKQUOTE>
///   Rotate feature is automatically activated by the device.
/// </BLOCKQUOTE></PRE>
///
	tt__RotateMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":SceneOrientationMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__SceneOrientationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SceneOrientationMode
{
	tt__SceneOrientationMode__MANUAL,	///< xs:string value="MANUAL"
	tt__SceneOrientationMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":SceneOrientationOption is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Defines the acceptable values for the Orientation element of the SceneOrientation type
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__SceneOrientationOption__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SceneOrientationOption
{
	tt__SceneOrientationOption__Below,	///< xs:string value="Below"
	tt__SceneOrientationOption__Horizon,	///< xs:string value="Horizon"
	tt__SceneOrientationOption__Above,	///< xs:string value="Above"
};

/// @brief "http://www.onvif.org/ver10/schema":ViewModes is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Source view modes supported by device.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__ViewModes__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ViewModes
{
/// <PRE><BLOCKQUOTE>
///   Undewarped viewmode from device supporting fisheye lens.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003aFisheye,	///< xs:string value="tt:Fisheye"
/// <PRE><BLOCKQUOTE>
///   360 degree panoramic view.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003a360Panorama,	///< xs:string value="tt:360Panorama"
/// <PRE><BLOCKQUOTE>
///   180 degree panoramic view.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003a180Panorama,	///< xs:string value="tt:180Panorama"
/// <PRE><BLOCKQUOTE>
///   View mode combining four streams in single Quad, eg., applicable for devices supporting four heads.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003aQuad,	///< xs:string value="tt:Quad"
/// <PRE><BLOCKQUOTE>
///   Unaltered view from the sensor.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003aOriginal,	///< xs:string value="tt:Original"
/// <PRE><BLOCKQUOTE>
///   Viewmode combining the left side sensors, applicable for devices supporting multiple sensors.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003aLeftHalf,	///< xs:string value="tt:LeftHalf"
/// <PRE><BLOCKQUOTE>
///   Viewmode combining the right side sensors, applicable for devices supporting multiple sensors.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003aRightHalf,	///< xs:string value="tt:RightHalf"
/// <PRE><BLOCKQUOTE>
///   Dewarped view mode for device supporting fisheye lens.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003aDewarp,	///< xs:string value="tt:Dewarp"
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoding is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__VideoEncoding__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__VideoEncoding
{
	tt__VideoEncoding__JPEG,	///< xs:string value="JPEG"
	tt__VideoEncoding__MPEG4,	///< xs:string value="MPEG4"
	tt__VideoEncoding__H264,	///< xs:string value="H264"
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Profile is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Mpeg4Profile__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Mpeg4Profile
{
	tt__Mpeg4Profile__SP,	///< xs:string value="SP"
	tt__Mpeg4Profile__ASP,	///< xs:string value="ASP"
};

/// @brief "http://www.onvif.org/ver10/schema":H264Profile is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__H264Profile__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__H264Profile
{
	tt__H264Profile__Baseline,	///< xs:string value="Baseline"
	tt__H264Profile__Main,	///< xs:string value="Main"
	tt__H264Profile__Extended,	///< xs:string value="Extended"
	tt__H264Profile__High,	///< xs:string value="High"
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncodingMimeNames is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Video Media Subtypes as referenced by IANA (without the leading "video/" Video Media Type). See also <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__VideoEncodingMimeNames__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__VideoEncodingMimeNames
{
	tt__VideoEncodingMimeNames__JPEG,	///< xs:string value="JPEG"
	tt__VideoEncodingMimeNames__MPV4_ES,	///< xs:string value="MPV4-ES"
	tt__VideoEncodingMimeNames__H264,	///< xs:string value="H264"
	tt__VideoEncodingMimeNames__H265,	///< xs:string value="H265"
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncodingProfiles is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__VideoEncodingProfiles__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__VideoEncodingProfiles
{
	tt__VideoEncodingProfiles__Simple,	///< xs:string value="Simple"
	tt__VideoEncodingProfiles__AdvancedSimple,	///< xs:string value="AdvancedSimple"
	tt__VideoEncodingProfiles__Baseline,	///< xs:string value="Baseline"
	tt__VideoEncodingProfiles__Main,	///< xs:string value="Main"
	tt__VideoEncodingProfiles__Main10,	///< xs:string value="Main10"
	tt__VideoEncodingProfiles__Extended,	///< xs:string value="Extended"
	tt__VideoEncodingProfiles__High,	///< xs:string value="High"
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoding is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__AudioEncoding__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__AudioEncoding
{
	tt__AudioEncoding__G711,	///< xs:string value="G711"
	tt__AudioEncoding__G726,	///< xs:string value="G726"
	tt__AudioEncoding__AAC,	///< xs:string value="AAC"
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncodingMimeNames is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Audio Media Subtypes as referenced by IANA (without the leading "audio/" Audio Media Type). See also <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#audio"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__AudioEncodingMimeNames__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__AudioEncodingMimeNames
{
	tt__AudioEncodingMimeNames__PCMU,	///< xs:string value="PCMU"
	tt__AudioEncodingMimeNames__G726,	///< xs:string value="G726"
	tt__AudioEncodingMimeNames__MP4A_LATM,	///< xs:string value="MP4A-LATM"
	tt__AudioEncodingMimeNames__mpeg4_generic,	///< xs:string value="mpeg4-generic"
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataCompressionType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__MetadataCompressionType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__MetadataCompressionType
{
	tt__MetadataCompressionType__None,	///< xs:string value="None"
	tt__MetadataCompressionType__GZIP,	///< xs:string value="GZIP"
	tt__MetadataCompressionType__EXI,	///< xs:string value="EXI"
};

/// @brief "http://www.onvif.org/ver10/schema":StreamType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__StreamType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__StreamType
{
	tt__StreamType__RTP_Unicast,	///< xs:string value="RTP-Unicast"
	tt__StreamType__RTP_Multicast,	///< xs:string value="RTP-Multicast"
};

/// @brief "http://www.onvif.org/ver10/schema":TransportProtocol is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__TransportProtocol__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__TransportProtocol
{
	tt__TransportProtocol__UDP,	///< xs:string value="UDP"
/// <PRE><BLOCKQUOTE>
///   This value is deprecated.
/// </BLOCKQUOTE></PRE>
///
	tt__TransportProtocol__TCP,	///< xs:string value="TCP"
	tt__TransportProtocol__RTSP,	///< xs:string value="RTSP"
	tt__TransportProtocol__HTTP,	///< xs:string value="HTTP"
};

/// @brief "http://www.onvif.org/ver10/schema":ScopeDefinition is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ScopeDefinition__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ScopeDefinition
{
	tt__ScopeDefinition__Fixed,	///< xs:string value="Fixed"
	tt__ScopeDefinition__Configurable,	///< xs:string value="Configurable"
};

/// @brief "http://www.onvif.org/ver10/schema":DiscoveryMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__DiscoveryMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__DiscoveryMode
{
	tt__DiscoveryMode__Discoverable,	///< xs:string value="Discoverable"
	tt__DiscoveryMode__NonDiscoverable,	///< xs:string value="NonDiscoverable"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority is a simpleType restriction of type xs:integer.
///
/// Value range is 0 to 31.
typedef xsd__integer tt__NetworkInterfaceConfigPriority /* from 0 (inclusive) @warning: could not determine if this type is numeric */ /* to 31 (inclusive) @warning: could not determine if this type is numeric */;

/// @brief "http://www.onvif.org/ver10/schema":Duplex is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Duplex__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Duplex
{
	tt__Duplex__Full,	///< xs:string value="Full"
	tt__Duplex__Half,	///< xs:string value="Half"
};

/// @brief "http://www.onvif.org/ver10/schema":IANA-IfTypes is a simpleType restriction of type xs:int.
///
/// <PRE><BLOCKQUOTE>
///   For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
/// </BLOCKQUOTE></PRE>
///
typedef int tt__IANA_IfTypes;

/// @brief "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IPv6DHCPConfiguration__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPv6DHCPConfiguration
{
	tt__IPv6DHCPConfiguration__Auto,	///< xs:string value="Auto"
	tt__IPv6DHCPConfiguration__Stateful,	///< xs:string value="Stateful"
	tt__IPv6DHCPConfiguration__Stateless,	///< xs:string value="Stateless"
	tt__IPv6DHCPConfiguration__Off,	///< xs:string value="Off"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkProtocolType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__NetworkProtocolType
{
	tt__NetworkProtocolType__HTTP,	///< xs:string value="HTTP"
	tt__NetworkProtocolType__HTTPS,	///< xs:string value="HTTPS"
	tt__NetworkProtocolType__RTSP,	///< xs:string value="RTSP"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkHostType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__NetworkHostType
{
	tt__NetworkHostType__IPv4,	///< xs:string value="IPv4"
	tt__NetworkHostType__IPv6,	///< xs:string value="IPv6"
	tt__NetworkHostType__DNS,	///< xs:string value="DNS"
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__IPv4Address;

/// @brief "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__IPv6Address;

/// @brief "http://www.onvif.org/ver10/schema":HwAddress is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__HwAddress;

/// @brief "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IPType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPType
{
	tt__IPType__IPv4,	///< xs:string value="IPv4"
	tt__IPType__IPv6,	///< xs:string value="IPv6"
};

/// @brief "http://www.onvif.org/ver10/schema":DNSName is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__DNSName;

/// @brief "http://www.onvif.org/ver10/schema":Domain is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__Domain;

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IPAddressFilterType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPAddressFilterType
{
	tt__IPAddressFilterType__Allow,	///< xs:string value="Allow"
	tt__IPAddressFilterType__Deny,	///< xs:string value="Deny"
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__DynamicDNSType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__DynamicDNSType
{
	tt__DynamicDNSType__NoUpdate,	///< xs:string value="NoUpdate"
	tt__DynamicDNSType__ClientUpdates,	///< xs:string value="ClientUpdates"
	tt__DynamicDNSType__ServerUpdates,	///< xs:string value="ServerUpdates"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SSIDType is a simpleType restriction of type xs:hexBinary.
///
/// Length of this content is 1 to 32.
typedef struct xsd__hexBinary tt__Dot11SSIDType 1 : 32;

/// @brief "http://www.onvif.org/ver10/schema":Dot11StationMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11StationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11StationMode
{
	tt__Dot11StationMode__Ad_hoc,	///< xs:string value="Ad-hoc"
	tt__Dot11StationMode__Infrastructure,	///< xs:string value="Infrastructure"
	tt__Dot11StationMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SecurityMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11SecurityMode
{
	tt__Dot11SecurityMode__None,	///< xs:string value="None"
	tt__Dot11SecurityMode__WEP,	///< xs:string value="WEP"
	tt__Dot11SecurityMode__PSK,	///< xs:string value="PSK"
	tt__Dot11SecurityMode__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11SecurityMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Cipher is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11Cipher__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11Cipher
{
	tt__Dot11Cipher__CCMP,	///< xs:string value="CCMP"
	tt__Dot11Cipher__TKIP,	///< xs:string value="TKIP"
	tt__Dot11Cipher__Any,	///< xs:string value="Any"
	tt__Dot11Cipher__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSK is a simpleType restriction of type xs:hexBinary.
///
/// Length of this content is 32.
typedef struct xsd__hexBinary tt__Dot11PSK 32 : 32;

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase is a simpleType restriction of type xs:string.
///
/// Content pattern is "[ -~]{8,63}".
typedef char* tt__Dot11PSKPassphrase "[ -~]{8,63}";

/// @brief "http://www.onvif.org/ver10/schema":Dot11SignalStrength is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SignalStrength__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11SignalStrength
{
	tt__Dot11SignalStrength__None,	///< xs:string value="None"
	tt__Dot11SignalStrength__Very_x0020Bad,	///< xs:string value="Very Bad"
	tt__Dot11SignalStrength__Bad,	///< xs:string value="Bad"
	tt__Dot11SignalStrength__Good,	///< xs:string value="Good"
	tt__Dot11SignalStrength__Very_x0020Good,	///< xs:string value="Very Good"
	tt__Dot11SignalStrength__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AuthAndMangementSuite is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11AuthAndMangementSuite__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11AuthAndMangementSuite
{
	tt__Dot11AuthAndMangementSuite__None,	///< xs:string value="None"
	tt__Dot11AuthAndMangementSuite__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11AuthAndMangementSuite__PSK,	///< xs:string value="PSK"
	tt__Dot11AuthAndMangementSuite__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__CapabilityCategory__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__CapabilityCategory
{
	tt__CapabilityCategory__All,	///< xs:string value="All"
	tt__CapabilityCategory__Analytics,	///< xs:string value="Analytics"
	tt__CapabilityCategory__Device,	///< xs:string value="Device"
	tt__CapabilityCategory__Events,	///< xs:string value="Events"
	tt__CapabilityCategory__Imaging,	///< xs:string value="Imaging"
	tt__CapabilityCategory__Media,	///< xs:string value="Media"
	tt__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available system log modes.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__SystemLogType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SystemLogType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a system log is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__SystemLogType__System,	///< xs:string value="System"
/// <PRE><BLOCKQUOTE>
///   Indicates that a access log is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__SystemLogType__Access,	///< xs:string value="Access"
};

/// @brief "http://www.onvif.org/ver10/schema":FactoryDefaultType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available factory default modes.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__FactoryDefaultType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__FactoryDefaultType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a hard factory default is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__FactoryDefaultType__Hard,	///< xs:string value="Hard"
/// <PRE><BLOCKQUOTE>
///   Indicates that a soft factory default is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__FactoryDefaultType__Soft,	///< xs:string value="Soft"
};

/// @brief "http://www.onvif.org/ver10/schema":SetDateTimeType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__SetDateTimeType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SetDateTimeType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set manually.
/// </BLOCKQUOTE></PRE>
///
	tt__SetDateTimeType__Manual,	///< xs:string value="Manual"
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set through NTP
/// </BLOCKQUOTE></PRE>
///
	tt__SetDateTimeType__NTP,	///< xs:string value="NTP"
};

/// @brief "http://www.onvif.org/ver10/schema":UserLevel is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__UserLevel__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__UserLevel
{
	tt__UserLevel__Administrator,	///< xs:string value="Administrator"
	tt__UserLevel__Operator,	///< xs:string value="Operator"
	tt__UserLevel__User,	///< xs:string value="User"
	tt__UserLevel__Anonymous,	///< xs:string value="Anonymous"
	tt__UserLevel__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayLogicalState is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayLogicalState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayLogicalState
{
	tt__RelayLogicalState__active,	///< xs:string value="active"
	tt__RelayLogicalState__inactive,	///< xs:string value="inactive"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayIdleState is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayIdleState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayIdleState
{
	tt__RelayIdleState__closed,	///< xs:string value="closed"
	tt__RelayIdleState__open,	///< xs:string value="open"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayMode
{
	tt__RelayMode__Monostable,	///< xs:string value="Monostable"
	tt__RelayMode__Bistable,	///< xs:string value="Bistable"
};

/// @brief "http://www.onvif.org/ver10/schema":DigitalIdleState is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__DigitalIdleState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__DigitalIdleState
{
	tt__DigitalIdleState__closed,	///< xs:string value="closed"
	tt__DigitalIdleState__open,	///< xs:string value="open"
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__EFlipMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__EFlipMode
{
	tt__EFlipMode__OFF,	///< xs:string value="OFF"
	tt__EFlipMode__ON,	///< xs:string value="ON"
	tt__EFlipMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ReverseMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ReverseMode
{
	tt__ReverseMode__OFF,	///< xs:string value="OFF"
	tt__ReverseMode__ON,	///< xs:string value="ON"
	tt__ReverseMode__AUTO,	///< xs:string value="AUTO"
	tt__ReverseMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of type xs:string.
///
/// Length of this content is 0 to 128.
typedef char* tt__AuxiliaryData : 128;

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourState is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PTZPresetTourState
{
	tt__PTZPresetTourState__Idle,	///< xs:string value="Idle"
	tt__PTZPresetTourState__Touring,	///< xs:string value="Touring"
	tt__PTZPresetTourState__Paused,	///< xs:string value="Paused"
	tt__PTZPresetTourState__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourDirection is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourDirection__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PTZPresetTourDirection
{
	tt__PTZPresetTourDirection__Forward,	///< xs:string value="Forward"
	tt__PTZPresetTourDirection__Backward,	///< xs:string value="Backward"
	tt__PTZPresetTourDirection__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOperation is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourOperation__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PTZPresetTourOperation
{
	tt__PTZPresetTourOperation__Start,	///< xs:string value="Start"
	tt__PTZPresetTourOperation__Stop,	///< xs:string value="Stop"
	tt__PTZPresetTourOperation__Pause,	///< xs:string value="Pause"
	tt__PTZPresetTourOperation__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":AutoFocusMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__AutoFocusMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__AutoFocusMode
{
	tt__AutoFocusMode__AUTO,	///< xs:string value="AUTO"
	tt__AutoFocusMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":AFModes is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__AFModes__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__AFModes
{
/// <PRE><BLOCKQUOTE>
///   Focus of a moving camera is updated only once after stopping a pan, tilt or zoom movement.
/// </BLOCKQUOTE></PRE>
///
	tt__AFModes__OnceAfterMove,	///< xs:string value="OnceAfterMove"
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__WideDynamicMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__WideDynamicMode
{
	tt__WideDynamicMode__OFF,	///< xs:string value="OFF"
	tt__WideDynamicMode__ON,	///< xs:string value="ON"
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationMode is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available backlight compenstation modes.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__BacklightCompensationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__BacklightCompensationMode
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation is disabled.
/// </BLOCKQUOTE></PRE>
///
	tt__BacklightCompensationMode__OFF,	///< xs:string value="OFF"
/// <PRE><BLOCKQUOTE>
///   Backlight compensation is enabled.
/// </BLOCKQUOTE></PRE>
///
	tt__BacklightCompensationMode__ON,	///< xs:string value="ON"
};

/// @brief "http://www.onvif.org/ver10/schema":ExposurePriority is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ExposurePriority__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ExposurePriority
{
	tt__ExposurePriority__LowNoise,	///< xs:string value="LowNoise"
	tt__ExposurePriority__FrameRate,	///< xs:string value="FrameRate"
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ExposureMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ExposureMode
{
	tt__ExposureMode__AUTO,	///< xs:string value="AUTO"
	tt__ExposureMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":Enabled is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Enabled__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Enabled
{
	tt__Enabled__ENABLED,	///< xs:string value="ENABLED"
	tt__Enabled__DISABLED,	///< xs:string value="DISABLED"
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__WhiteBalanceMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__WhiteBalanceMode
{
	tt__WhiteBalanceMode__AUTO,	///< xs:string value="AUTO"
	tt__WhiteBalanceMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IrCutFilterMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IrCutFilterMode
{
	tt__IrCutFilterMode__ON,	///< xs:string value="ON"
	tt__IrCutFilterMode__OFF,	///< xs:string value="OFF"
	tt__IrCutFilterMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ImageStabilizationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ImageStabilizationMode
{
	tt__ImageStabilizationMode__OFF,	///< xs:string value="OFF"
	tt__ImageStabilizationMode__ON,	///< xs:string value="ON"
	tt__ImageStabilizationMode__AUTO,	///< xs:string value="AUTO"
	tt__ImageStabilizationMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoBoundaryType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IrCutFilterAutoBoundaryType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IrCutFilterAutoBoundaryType
{
	tt__IrCutFilterAutoBoundaryType__Common,	///< xs:string value="Common"
	tt__IrCutFilterAutoBoundaryType__ToOn,	///< xs:string value="ToOn"
	tt__IrCutFilterAutoBoundaryType__ToOff,	///< xs:string value="ToOff"
	tt__IrCutFilterAutoBoundaryType__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ToneCompensationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ToneCompensationMode
{
	tt__ToneCompensationMode__OFF,	///< xs:string value="OFF"
	tt__ToneCompensationMode__ON,	///< xs:string value="ON"
	tt__ToneCompensationMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__DefoggingMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__DefoggingMode
{
	tt__DefoggingMode__OFF,	///< xs:string value="OFF"
	tt__DefoggingMode__ON,	///< xs:string value="ON"
	tt__DefoggingMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":ImageSendingType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ImageSendingType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ImageSendingType
{
	tt__ImageSendingType__Embedded,	///< xs:string value="Embedded"
	tt__ImageSendingType__LocalStorage,	///< xs:string value="LocalStorage"
	tt__ImageSendingType__RemoteStorage,	///< xs:string value="RemoteStorage"
};

/// @brief "http://www.onvif.org/ver10/schema":PropertyOperation is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__PropertyOperation__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PropertyOperation
{
	tt__PropertyOperation__Initialized,	///< xs:string value="Initialized"
	tt__PropertyOperation__Deleted,	///< xs:string value="Deleted"
	tt__PropertyOperation__Changed,	///< xs:string value="Changed"
};

/// @brief "http://www.onvif.org/ver10/schema":Direction is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Direction__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Direction
{
	tt__Direction__Left,	///< xs:string value="Left"
	tt__Direction__Right,	///< xs:string value="Right"
	tt__Direction__Any,	///< xs:string value="Any"
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverMode is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Specifies a receiver connection mode.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__ReceiverMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ReceiverMode
{
/// <PRE><BLOCKQUOTE>
///   The receiver connects on demand, as required by consumers of the media streams.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverMode__AutoConnect,	///< xs:string value="AutoConnect"
/// <PRE><BLOCKQUOTE>
///   The receiver attempts to maintain a persistent connection to the configured endpoint.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverMode__AlwaysConnect,	///< xs:string value="AlwaysConnect"
/// <PRE><BLOCKQUOTE>
///   The receiver does not attempt to connect.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverMode__NeverConnect,	///< xs:string value="NeverConnect"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverMode__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverState is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Specifies the current connection state of the receiver.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__ReceiverState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ReceiverState
{
/// <PRE><BLOCKQUOTE>
///   The receiver is not connected.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverState__NotConnected,	///< xs:string value="NotConnected"
/// <PRE><BLOCKQUOTE>
///   The receiver is attempting to connect.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverState__Connecting,	///< xs:string value="Connecting"
/// <PRE><BLOCKQUOTE>
///   The receiver is connected.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverState__Connected,	///< xs:string value="Connected"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverState__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":Description is a simpleType restriction of type xs:string.
///
typedef char* tt__Description;

/// @brief "http://www.onvif.org/ver10/schema":XPathExpression is a simpleType restriction of type xs:string.
///
typedef char* tt__XPathExpression;

/// @brief "http://www.onvif.org/ver10/schema":SearchState is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__SearchState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SearchState
{
/// <PRE><BLOCKQUOTE>
///   The search is queued and not yet started.
/// </BLOCKQUOTE></PRE>
///
	tt__SearchState__Queued,	///< xs:string value="Queued"
/// <PRE><BLOCKQUOTE>
///   The search is underway and not yet completed.
/// </BLOCKQUOTE></PRE>
///
	tt__SearchState__Searching,	///< xs:string value="Searching"
/// <PRE><BLOCKQUOTE>
///   The search has been completed and no new results will be found.
/// </BLOCKQUOTE></PRE>
///
	tt__SearchState__Completed,	///< xs:string value="Completed"
/// <PRE><BLOCKQUOTE>
///   The state of the search is unknown. (This is not a valid response from GetSearchState.)
/// </BLOCKQUOTE></PRE>
///
	tt__SearchState__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingStatus is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RecordingStatus__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RecordingStatus
{
	tt__RecordingStatus__Initiated,	///< xs:string value="Initiated"
	tt__RecordingStatus__Recording,	///< xs:string value="Recording"
	tt__RecordingStatus__Stopped,	///< xs:string value="Stopped"
	tt__RecordingStatus__Removing,	///< xs:string value="Removing"
	tt__RecordingStatus__Removed,	///< xs:string value="Removed"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
///
	tt__RecordingStatus__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":TrackType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__TrackType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__TrackType
{
	tt__TrackType__Video,	///< xs:string value="Video"
	tt__TrackType__Audio,	///< xs:string value="Audio"
	tt__TrackType__Metadata,	///< xs:string value="Metadata"
/// <PRE><BLOCKQUOTE>
///   Placeholder for future extension.
/// </BLOCKQUOTE></PRE>
///
	tt__TrackType__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobMode is a simpleType restriction of type xs:string.
///
typedef char* tt__RecordingJobMode;

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobState is a simpleType restriction of type xs:string.
///
typedef char* tt__RecordingJobState;

/// @brief "http://www.onvif.org/ver10/schema":ModeOfOperation is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ModeOfOperation__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ModeOfOperation
{
	tt__ModeOfOperation__Idle,	///< xs:string value="Idle"
	tt__ModeOfOperation__Active,	///< xs:string value="Active"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
///
	tt__ModeOfOperation__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   AudioClassType acceptable values are;
///   gun_shot, scream, glass_breaking, tire_screech
/// </BLOCKQUOTE></PRE>
///
typedef char* tt__AudioClassType;

/// @brief "http://www.onvif.org/ver10/schema":OSDType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__OSDType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__OSDType
{
	tt__OSDType__Text,	///< xs:string value="Text"
	tt__OSDType__Image,	///< xs:string value="Image"
	tt__OSDType__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for a physical or logical resource.
///   Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class.
///   Length up to 64 characters. Token may be extended by intermediate terminal with adding prefix to make it global unique.
///   The length should be within 36 characters for generating at local device. See "Remote Token" section in Resource Query specification.
/// </BLOCKQUOTE></PRE>
///
/// Length of this content is 0 to 64.
typedef char* tt__ReferenceToken : 64;

/// @brief "http://www.onvif.org/ver10/schema":MoveStatus is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__MoveStatus__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__MoveStatus
{
	tt__MoveStatus__IDLE,	///< xs:string value="IDLE"
	tt__MoveStatus__MOVING,	///< xs:string value="MOVING"
	tt__MoveStatus__UNKNOWN,	///< xs:string value="UNKNOWN"
};

/// @brief "http://www.onvif.org/ver10/schema":Entity is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Entity__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Entity
{
	tt__Entity__Device,	///< xs:string value="Device"
	tt__Entity__VideoSource,	///< xs:string value="VideoSource"
	tt__Entity__AudioSource,	///< xs:string value="AudioSource"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is a simpleType restriction of type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   TopicPathExpression ::= TopicPath ( '|' TopicPath )* TopicPath ::= RootTopic ChildTopicExpression* RootTopic ::= NamespacePrefix? ('//')? (NCName | '*') NamespacePrefix ::= NCName ':' ChildTopicExpression ::= '/' '/'? (QName | NCName | '*'| '.')
/// </BLOCKQUOTE></PRE>
///
/// Content pattern is "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*".
typedef xsd__token wstop__FullTopicExpression "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*";

/// @brief "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is a simpleType restriction of type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   ConcreteTopicPath ::= RootTopic ChildTopic* RootTopic ::= QName ChildTopic ::= '/' (QName | NCName)
/// </BLOCKQUOTE></PRE>
///
/// Content pattern is "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*".
typedef xsd__token wstop__ConcreteTopicExpression "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*";

/// @brief "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is a simpleType restriction of type xs:QName.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   RootTopic ::= QName
/// </BLOCKQUOTE></PRE>
///
typedef _QName wstop__SimpleTopicExpression;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/imaging/wsdl":ImagingPresetType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Describes standard Imaging Preset types, used to facilitate Multi-language support and client display.
///   "Custom" Type shall be used when Imaging Preset Name does not match any of the types included in the standard classification.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "timg__ImagingPresetType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum timg__ImagingPresetType
{
	timg__ImagingPresetType__Custom,	///< xs:string value="Custom"
	timg__ImagingPresetType__ClearWeather,	///< xs:string value="ClearWeather"
	timg__ImagingPresetType__Cloudy,	///< xs:string value="Cloudy"
	timg__ImagingPresetType__Fog,	///< xs:string value="Fog"
	timg__ImagingPresetType__Rain,	///< xs:string value="Rain"
	timg__ImagingPresetType__Snowing,	///< xs:string value="Snowing"
	timg__ImagingPresetType__Snow,	///< xs:string value="Snow"
	timg__ImagingPresetType__WDR,	///< xs:string value="WDR"
	timg__ImagingPresetType__Shade,	///< xs:string value="Shade"
	timg__ImagingPresetType__Night,	///< xs:string value="Night"
	timg__ImagingPresetType__Indoor,	///< xs:string value="Indoor"
	timg__ImagingPresetType__Fluorescent,	///< xs:string value="Fluorescent"
	timg__ImagingPresetType__Incandescent,	///< xs:string value="Incandescent"
	timg__ImagingPresetType__Sodium_x0028Natrium_x0029,	///< xs:string value="Sodium(Natrium)"
	timg__ImagingPresetType__Sunrise_x0028Horizon_x0029,	///< xs:string value="Sunrise(Horizon)"
	timg__ImagingPresetType__Sunset_x0028Rear_x0029,	///< xs:string value="Sunset(Rear)"
	timg__ImagingPresetType__ExtremeHot,	///< xs:string value="ExtremeHot"
	timg__ImagingPresetType__ExtremeCold,	///< xs:string value="ExtremeCold"
	timg__ImagingPresetType__Underwater,	///< xs:string value="Underwater"
	timg__ImagingPresetType__CloseUp,	///< xs:string value="CloseUp"
	timg__ImagingPresetType__Motion,	///< xs:string value="Motion"
	timg__ImagingPresetType__FlickerFree50,	///< xs:string value="FlickerFree50"
	timg__ImagingPresetType__FlickerFree60,	///< xs:string value="FlickerFree60"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/media/wsdl":ConfigurationEnumeration is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "ns1__ConfigurationEnumeration__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum ns1__ConfigurationEnumeration
{
	ns1__ConfigurationEnumeration__All,	///< xs:string value="All"
	ns1__ConfigurationEnumeration__VideoSource,	///< xs:string value="VideoSource"
	ns1__ConfigurationEnumeration__VideoEncoder,	///< xs:string value="VideoEncoder"
	ns1__ConfigurationEnumeration__AudioSource,	///< xs:string value="AudioSource"
	ns1__ConfigurationEnumeration__AudioEncoder,	///< xs:string value="AudioEncoder"
	ns1__ConfigurationEnumeration__AudioOutput,	///< xs:string value="AudioOutput"
	ns1__ConfigurationEnumeration__AudioDecoder,	///< xs:string value="AudioDecoder"
	ns1__ConfigurationEnumeration__Metadata,	///< xs:string value="Metadata"
	ns1__ConfigurationEnumeration__Analytics,	///< xs:string value="Analytics"
	ns1__ConfigurationEnumeration__PTZ,	///< xs:string value="PTZ"
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":TransportProtocol is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "ns1__TransportProtocol__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum ns1__TransportProtocol
{
	ns1__TransportProtocol__RtspUnicast,	///< xs:string value="RtspUnicast"
	ns1__TransportProtocol__RtspMulticast,	///< xs:string value="RtspMulticast"
	ns1__TransportProtocol__RTSP,	///< xs:string value="RTSP"
	ns1__TransportProtocol__RtspOverHttp,	///< xs:string value="RtspOverHttp"
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":MaskType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "ns1__MaskType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum ns1__MaskType
{
	ns1__MaskType__Color,	///< xs:string value="Color"
	ns1__MaskType__Pixelated,	///< xs:string value="Pixelated"
	ns1__MaskType__Blurred,	///< xs:string value="Blurred"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":ReceiverReference is a simpleType restriction of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__ReceiverReference;

/// @brief "http://www.onvif.org/ver10/schema":RecordingReference is a simpleType restriction of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__RecordingReference;

/// @brief "http://www.onvif.org/ver10/schema":TrackReference is a simpleType restriction of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__TrackReference;

/// @brief "http://www.onvif.org/ver10/schema":JobToken is a simpleType restriction of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__JobToken;

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobReference is a simpleType restriction of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__RecordingJobReference;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities is a complexType.
///
/// @note struct tmd__Capabilities operations:
/// - tmd__Capabilities* soap_new_tmd__Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tmd__Capabilities(struct soap*, tmd__Capabilities*) default initialize members
/// - int soap_read_tmd__Capabilities(struct soap*, tmd__Capabilities*) deserialize from a source
/// - int soap_write_tmd__Capabilities(struct soap*, tmd__Capabilities*) serialize to a sink
/// - tmd__Capabilities* soap_dup_tmd__Capabilities(struct soap*, tmd__Capabilities* dst, tmd__Capabilities *src) returns deep copy of tmd__Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tmd__Capabilities(tmd__Capabilities*) deep deletes tmd__Capabilities data members, use only on dst after soap_dup_tmd__Capabilities(NULL, tmd__Capabilities *dst, tmd__Capabilities *src) (use soapcpp2 -Ed)
struct tmd__Capabilities
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Number of video sources (defaults to none).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "VideoSources" of type xs:int.
  @ int                                  VideoSources                   0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   Number of video outputs (defaults to none).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "VideoOutputs" of type xs:int.
  @ int                                  VideoOutputs                   0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   Number of audio sources (defaults to none).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AudioSources" of type xs:int.
  @ int                                  AudioSources                   0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   Number of audio outputs (defaults to none).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AudioOutputs" of type xs:int.
  @ int                                  AudioOutputs                   0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   Number of relay outputs (defaults to none).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RelayOutputs" of type xs:int.
  @ int                                  RelayOutputs                   0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   Number of serial ports (defaults to none).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SerialPorts" of type xs:int.
  @ int                                  SerialPorts                    0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   Number of digital inputs (defaults to none).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DigitalInputs" of type xs:int.
  @ int                                  DigitalInputs                  0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   Indicates support for DigitalInput configuration of the idle state (defaults to false).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DigitalInputOptions" of type xs:boolean.
  @ enum xsd__boolean                    DigitalInputOptions            0 = xsd__boolean__false_;	///< Optional attribute with default value="false".
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptions is a complexType.
///
/// @note struct tmd__RelayOutputOptions operations:
/// - tmd__RelayOutputOptions* soap_new_tmd__RelayOutputOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tmd__RelayOutputOptions(struct soap*, tmd__RelayOutputOptions*) default initialize members
/// - int soap_read_tmd__RelayOutputOptions(struct soap*, tmd__RelayOutputOptions*) deserialize from a source
/// - int soap_write_tmd__RelayOutputOptions(struct soap*, tmd__RelayOutputOptions*) serialize to a sink
/// - tmd__RelayOutputOptions* soap_dup_tmd__RelayOutputOptions(struct soap*, tmd__RelayOutputOptions* dst, tmd__RelayOutputOptions *src) returns deep copy of tmd__RelayOutputOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tmd__RelayOutputOptions(tmd__RelayOutputOptions*) deep deletes tmd__RelayOutputOptions data members, use only on dst after soap_dup_tmd__RelayOutputOptions(NULL, tmd__RelayOutputOptions *dst, tmd__RelayOutputOptions *src) (use soapcpp2 -Ed)
struct tmd__RelayOutputOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported Modes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__RelayMode* is 1..unbounded.
  $ int                                  __sizeMode                     1;
/// Array enum tt__RelayMode* of size 1..unbounded.
    enum tt__RelayMode*                  Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported delay time range or discrete values in seconds. This element must be present if MonoStable mode is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DelayTimes" of type "http://www.onvif.org/ver10/deviceIO/wsdl":DelayTimes.
    tmd__DelayTimes                      DelayTimes                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if the relay only supports the exact values for the DelayTimes listed. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Element "Discrete" of type xs:boolean.
    enum xsd__boolean*                   Discrete                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptionsExtension.
    struct tmd__RelayOutputOptionsExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Token of the relay output.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptionsExtension is a complexType.
///
/// @note struct tmd__RelayOutputOptionsExtension operations:
/// - tmd__RelayOutputOptionsExtension* soap_new_tmd__RelayOutputOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tmd__RelayOutputOptionsExtension(struct soap*, tmd__RelayOutputOptionsExtension*) default initialize members
/// - int soap_read_tmd__RelayOutputOptionsExtension(struct soap*, tmd__RelayOutputOptionsExtension*) deserialize from a source
/// - int soap_write_tmd__RelayOutputOptionsExtension(struct soap*, tmd__RelayOutputOptionsExtension*) serialize to a sink
/// - tmd__RelayOutputOptionsExtension* soap_dup_tmd__RelayOutputOptionsExtension(struct soap*, tmd__RelayOutputOptionsExtension* dst, tmd__RelayOutputOptionsExtension *src) returns deep copy of tmd__RelayOutputOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tmd__RelayOutputOptionsExtension(tmd__RelayOutputOptionsExtension*) deep deletes tmd__RelayOutputOptionsExtension data members, use only on dst after soap_dup_tmd__RelayOutputOptionsExtension(NULL, tmd__RelayOutputOptionsExtension *dst, tmd__RelayOutputOptionsExtension *src) (use soapcpp2 -Ed)
struct tmd__RelayOutputOptionsExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":Get is a complexType.
///
/// @note struct tmd__Get operations:
/// - tmd__Get* soap_new_tmd__Get(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tmd__Get(struct soap*, tmd__Get*) default initialize members
/// - int soap_read_tmd__Get(struct soap*, tmd__Get*) deserialize from a source
/// - int soap_write_tmd__Get(struct soap*, tmd__Get*) serialize to a sink
/// - tmd__Get* soap_dup_tmd__Get(struct soap*, tmd__Get* dst, tmd__Get *src) returns deep copy of tmd__Get src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tmd__Get(tmd__Get*) deep deletes tmd__Get data members, use only on dst after soap_dup_tmd__Get(NULL, tmd__Get *dst, tmd__Get *src) (use soapcpp2 -Ed)
struct tmd__Get
{
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetResponse is a complexType.
///
/// @note struct tmd__GetResponse operations:
/// - tmd__GetResponse* soap_new_tmd__GetResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tmd__GetResponse(struct soap*, tmd__GetResponse*) default initialize members
/// - int soap_read_tmd__GetResponse(struct soap*, tmd__GetResponse*) deserialize from a source
/// - int soap_write_tmd__GetResponse(struct soap*, tmd__GetResponse*) serialize to a sink
/// - tmd__GetResponse* soap_dup_tmd__GetResponse(struct soap*, tmd__GetResponse* dst, tmd__GetResponse *src) returns deep copy of tmd__GetResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tmd__GetResponse(tmd__GetResponse*) deep deletes tmd__GetResponse data members, use only on dst after soap_dup_tmd__GetResponse(NULL, tmd__GetResponse *dst, tmd__GetResponse *src) (use soapcpp2 -Ed)
struct tmd__GetResponse
{
/// <PRE><BLOCKQUOTE>
///   List tokens of a physical IO of a device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__ReferenceToken* is 0..unbounded.
  $ int                                  __sizeToken                    0;
/// Array tt__ReferenceToken* of size 0..unbounded.
    tt__ReferenceToken*                  Token                          0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":DigitalInputConfigurationOptions is a complexType.
///
/// @note struct tmd__DigitalInputConfigurationOptions operations:
/// - tmd__DigitalInputConfigurationOptions* soap_new_tmd__DigitalInputConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tmd__DigitalInputConfigurationOptions(struct soap*, tmd__DigitalInputConfigurationOptions*) default initialize members
/// - int soap_read_tmd__DigitalInputConfigurationOptions(struct soap*, tmd__DigitalInputConfigurationOptions*) deserialize from a source
/// - int soap_write_tmd__DigitalInputConfigurationOptions(struct soap*, tmd__DigitalInputConfigurationOptions*) serialize to a sink
/// - tmd__DigitalInputConfigurationOptions* soap_dup_tmd__DigitalInputConfigurationOptions(struct soap*, tmd__DigitalInputConfigurationOptions* dst, tmd__DigitalInputConfigurationOptions *src) returns deep copy of tmd__DigitalInputConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tmd__DigitalInputConfigurationOptions(tmd__DigitalInputConfigurationOptions*) deep deletes tmd__DigitalInputConfigurationOptions data members, use only on dst after soap_dup_tmd__DigitalInputConfigurationOptions(NULL, tmd__DigitalInputConfigurationOptions *dst, tmd__DigitalInputConfigurationOptions *src) (use soapcpp2 -Ed)
struct tmd__DigitalInputConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Configuration Options for a digital input.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__DigitalIdleState* is 1..unbounded.
  $ int                                  __sizeIdleState                1;
/// Array enum tt__DigitalIdleState* of size 1..unbounded.
    enum tt__DigitalIdleState*           IdleState                      1;	///< Multiple elements.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The serial port data.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tmd__SerialData operations:
/// - tmd__SerialData* soap_new_tmd__SerialData(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tmd__SerialData(struct soap*, tmd__SerialData*) default initialize members
/// - int soap_read_tmd__SerialData(struct soap*, tmd__SerialData*) deserialize from a source
/// - int soap_write_tmd__SerialData(struct soap*, tmd__SerialData*) serialize to a sink
/// - tmd__SerialData* soap_dup_tmd__SerialData(struct soap*, tmd__SerialData* dst, tmd__SerialData *src) returns deep copy of tmd__SerialData src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tmd__SerialData(tmd__SerialData*) deep deletes tmd__SerialData data members, use only on dst after soap_dup_tmd__SerialData(NULL, tmd__SerialData *dst, tmd__SerialData *src) (use soapcpp2 -Ed)
struct tmd__SerialData
{
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_SerialData            ;	///< Union _tmd__union_SerialData selector: set to SOAP_UNION__tmd__union_SerialData_<fieldname>
/// Union for choice in tmd__SerialData.
    union _tmd__union_SerialData
    {
/// Element "Binary" of type xs:base64Binary.
    struct xsd__base64Binary             Binary                        ;	///< Choice of element (one of multiple choices).
/// Element "String" of type xs:string.
    char*                                String                        ;	///< Choice of element (one of multiple choices).
    }                                    union_SerialData              ;
//  END OF CHOICE
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The parameters for configuring the serial port.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tmd__SerialPortConfiguration operations:
/// - tmd__SerialPortConfiguration* soap_new_tmd__SerialPortConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tmd__SerialPortConfiguration(struct soap*, tmd__SerialPortConfiguration*) default initialize members
/// - int soap_read_tmd__SerialPortConfiguration(struct soap*, tmd__SerialPortConfiguration*) deserialize from a source
/// - int soap_write_tmd__SerialPortConfiguration(struct soap*, tmd__SerialPortConfiguration*) serialize to a sink
/// - tmd__SerialPortConfiguration* soap_dup_tmd__SerialPortConfiguration(struct soap*, tmd__SerialPortConfiguration* dst, tmd__SerialPortConfiguration *src) returns deep copy of tmd__SerialPortConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tmd__SerialPortConfiguration(tmd__SerialPortConfiguration*) deep deletes tmd__SerialPortConfiguration data members, use only on dst after soap_dup_tmd__SerialPortConfiguration(NULL, tmd__SerialPortConfiguration *dst, tmd__SerialPortConfiguration *src) (use soapcpp2 -Ed)
struct tmd__SerialPortConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The transfer bitrate.
/// </BLOCKQUOTE></PRE>
///
/// Element "BaudRate" of type xs:int.
    int                                  BaudRate                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The parity for the data error detection.
/// </BLOCKQUOTE></PRE>
///
/// Element "ParityBit" of type "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBit.
    enum tmd__ParityBit                  ParityBit                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The bit length for each character.
/// </BLOCKQUOTE></PRE>
///
/// Element "CharacterLength" of type xs:int.
    int                                  CharacterLength                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The number of stop bits used to terminate each character.
/// </BLOCKQUOTE></PRE>
///
/// Element "StopBit" of type xs:float.
    float                                StopBit                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// Attribute "type" of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortType.
  @ enum tmd__SerialPortType             type                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfigurationOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The configuration options that relates to serial port.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tmd__SerialPortConfigurationOptions operations:
/// - tmd__SerialPortConfigurationOptions* soap_new_tmd__SerialPortConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tmd__SerialPortConfigurationOptions(struct soap*, tmd__SerialPortConfigurationOptions*) default initialize members
/// - int soap_read_tmd__SerialPortConfigurationOptions(struct soap*, tmd__SerialPortConfigurationOptions*) deserialize from a source
/// - int soap_write_tmd__SerialPortConfigurationOptions(struct soap*, tmd__SerialPortConfigurationOptions*) serialize to a sink
/// - tmd__SerialPortConfigurationOptions* soap_dup_tmd__SerialPortConfigurationOptions(struct soap*, tmd__SerialPortConfigurationOptions* dst, tmd__SerialPortConfigurationOptions *src) returns deep copy of tmd__SerialPortConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tmd__SerialPortConfigurationOptions(tmd__SerialPortConfigurationOptions*) deep deletes tmd__SerialPortConfigurationOptions data members, use only on dst after soap_dup_tmd__SerialPortConfigurationOptions(NULL, tmd__SerialPortConfigurationOptions *dst, tmd__SerialPortConfigurationOptions *src) (use soapcpp2 -Ed)
struct tmd__SerialPortConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   The list of configurable transfer bitrate.
/// </BLOCKQUOTE></PRE>
///
/// Element "BaudRateList" of type "http://www.onvif.org/ver10/schema":IntItems.
    struct tt__IntItems*                 BaudRateList                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The list of configurable parity for the data error detection.
/// </BLOCKQUOTE></PRE>
///
/// Element "ParityBitList" of type "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBitList.
    struct tmd__ParityBitList*           ParityBitList                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The list of configurable bit length for each character.
/// </BLOCKQUOTE></PRE>
///
/// Element "CharacterLengthList" of type "http://www.onvif.org/ver10/schema":IntItems.
    struct tt__IntItems*                 CharacterLengthList            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The list of configurable number of stop bits used to terminate each character.
/// </BLOCKQUOTE></PRE>
///
/// Element "StopBitList" of type "http://www.onvif.org/ver10/schema":FloatItems.
    struct tt__FloatItems*               StopBitList                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBitList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The list of configurable parity for the data error detection.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tmd__ParityBitList operations:
/// - tmd__ParityBitList* soap_new_tmd__ParityBitList(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tmd__ParityBitList(struct soap*, tmd__ParityBitList*) default initialize members
/// - int soap_read_tmd__ParityBitList(struct soap*, tmd__ParityBitList*) deserialize from a source
/// - int soap_write_tmd__ParityBitList(struct soap*, tmd__ParityBitList*) serialize to a sink
/// - tmd__ParityBitList* soap_dup_tmd__ParityBitList(struct soap*, tmd__ParityBitList* dst, tmd__ParityBitList *src) returns deep copy of tmd__ParityBitList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tmd__ParityBitList(tmd__ParityBitList*) deep deletes tmd__ParityBitList data members, use only on dst after soap_dup_tmd__ParityBitList(NULL, tmd__ParityBitList *dst, tmd__ParityBitList *src) (use soapcpp2 -Ed)
struct tmd__ParityBitList
{
/// Size of array of enum tmd__ParityBit* is 0..unbounded.
  $ int                                  __sizeItems                    0;
/// Array enum tmd__ParityBit* of size 0..unbounded.
    enum tmd__ParityBit*                 Items                          0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilities is a complexType.
///
/// @note struct _tmd__GetServiceCapabilities operations:
/// - _tmd__GetServiceCapabilities* soap_new__tmd__GetServiceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetServiceCapabilities(struct soap*, _tmd__GetServiceCapabilities*) default initialize members
/// - int soap_read__tmd__GetServiceCapabilities(struct soap*, _tmd__GetServiceCapabilities*) deserialize from a source
/// - int soap_write__tmd__GetServiceCapabilities(struct soap*, _tmd__GetServiceCapabilities*) serialize to a sink
/// - _tmd__GetServiceCapabilities* soap_dup__tmd__GetServiceCapabilities(struct soap*, _tmd__GetServiceCapabilities* dst, _tmd__GetServiceCapabilities *src) returns deep copy of _tmd__GetServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetServiceCapabilities(_tmd__GetServiceCapabilities*) deep deletes _tmd__GetServiceCapabilities data members, use only on dst after soap_dup__tmd__GetServiceCapabilities(NULL, _tmd__GetServiceCapabilities *dst, _tmd__GetServiceCapabilities *src) (use soapcpp2 -Ed)
struct _tmd__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note struct _tmd__GetServiceCapabilitiesResponse operations:
/// - _tmd__GetServiceCapabilitiesResponse* soap_new__tmd__GetServiceCapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetServiceCapabilitiesResponse(struct soap*, _tmd__GetServiceCapabilitiesResponse*) default initialize members
/// - int soap_read__tmd__GetServiceCapabilitiesResponse(struct soap*, _tmd__GetServiceCapabilitiesResponse*) deserialize from a source
/// - int soap_write__tmd__GetServiceCapabilitiesResponse(struct soap*, _tmd__GetServiceCapabilitiesResponse*) serialize to a sink
/// - _tmd__GetServiceCapabilitiesResponse* soap_dup__tmd__GetServiceCapabilitiesResponse(struct soap*, _tmd__GetServiceCapabilitiesResponse* dst, _tmd__GetServiceCapabilitiesResponse *src) returns deep copy of _tmd__GetServiceCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetServiceCapabilitiesResponse(_tmd__GetServiceCapabilitiesResponse*) deep deletes _tmd__GetServiceCapabilitiesResponse data members, use only on dst after soap_dup__tmd__GetServiceCapabilitiesResponse(NULL, _tmd__GetServiceCapabilitiesResponse *dst, _tmd__GetServiceCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the device IO service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities.
    struct tmd__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptions is a complexType.
///
/// @note struct _tmd__GetRelayOutputOptions operations:
/// - _tmd__GetRelayOutputOptions* soap_new__tmd__GetRelayOutputOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetRelayOutputOptions(struct soap*, _tmd__GetRelayOutputOptions*) default initialize members
/// - int soap_read__tmd__GetRelayOutputOptions(struct soap*, _tmd__GetRelayOutputOptions*) deserialize from a source
/// - int soap_write__tmd__GetRelayOutputOptions(struct soap*, _tmd__GetRelayOutputOptions*) serialize to a sink
/// - _tmd__GetRelayOutputOptions* soap_dup__tmd__GetRelayOutputOptions(struct soap*, _tmd__GetRelayOutputOptions* dst, _tmd__GetRelayOutputOptions *src) returns deep copy of _tmd__GetRelayOutputOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetRelayOutputOptions(_tmd__GetRelayOutputOptions*) deep deletes _tmd__GetRelayOutputOptions data members, use only on dst after soap_dup__tmd__GetRelayOutputOptions(NULL, _tmd__GetRelayOutputOptions *dst, _tmd__GetRelayOutputOptions *src) (use soapcpp2 -Ed)
struct _tmd__GetRelayOutputOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional reference token to the relay for which the options are requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "RelayOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptionsResponse is a complexType.
///
/// @note struct _tmd__GetRelayOutputOptionsResponse operations:
/// - _tmd__GetRelayOutputOptionsResponse* soap_new__tmd__GetRelayOutputOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetRelayOutputOptionsResponse(struct soap*, _tmd__GetRelayOutputOptionsResponse*) default initialize members
/// - int soap_read__tmd__GetRelayOutputOptionsResponse(struct soap*, _tmd__GetRelayOutputOptionsResponse*) deserialize from a source
/// - int soap_write__tmd__GetRelayOutputOptionsResponse(struct soap*, _tmd__GetRelayOutputOptionsResponse*) serialize to a sink
/// - _tmd__GetRelayOutputOptionsResponse* soap_dup__tmd__GetRelayOutputOptionsResponse(struct soap*, _tmd__GetRelayOutputOptionsResponse* dst, _tmd__GetRelayOutputOptionsResponse *src) returns deep copy of _tmd__GetRelayOutputOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetRelayOutputOptionsResponse(_tmd__GetRelayOutputOptionsResponse*) deep deletes _tmd__GetRelayOutputOptionsResponse data members, use only on dst after soap_dup__tmd__GetRelayOutputOptionsResponse(NULL, _tmd__GetRelayOutputOptionsResponse *dst, _tmd__GetRelayOutputOptionsResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetRelayOutputOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   Valid values and ranges for the configuration of a relay output.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tmd__RelayOutputOptions* is 0..unbounded.
  $ int                                  __sizeRelayOutputOptions       0;
/// Array struct tmd__RelayOutputOptions* of size 0..unbounded.
    struct tmd__RelayOutputOptions*      RelayOutputOptions             0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputs
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputs is a complexType.
///
/// @note struct _tmd__GetVideoOutputs operations:
/// - _tmd__GetVideoOutputs* soap_new__tmd__GetVideoOutputs(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetVideoOutputs(struct soap*, _tmd__GetVideoOutputs*) default initialize members
/// - int soap_read__tmd__GetVideoOutputs(struct soap*, _tmd__GetVideoOutputs*) deserialize from a source
/// - int soap_write__tmd__GetVideoOutputs(struct soap*, _tmd__GetVideoOutputs*) serialize to a sink
/// - _tmd__GetVideoOutputs* soap_dup__tmd__GetVideoOutputs(struct soap*, _tmd__GetVideoOutputs* dst, _tmd__GetVideoOutputs *src) returns deep copy of _tmd__GetVideoOutputs src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetVideoOutputs(_tmd__GetVideoOutputs*) deep deletes _tmd__GetVideoOutputs data members, use only on dst after soap_dup__tmd__GetVideoOutputs(NULL, _tmd__GetVideoOutputs *dst, _tmd__GetVideoOutputs *src) (use soapcpp2 -Ed)
struct _tmd__GetVideoOutputs
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputsResponse is a complexType.
///
/// @note struct _tmd__GetVideoOutputsResponse operations:
/// - _tmd__GetVideoOutputsResponse* soap_new__tmd__GetVideoOutputsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetVideoOutputsResponse(struct soap*, _tmd__GetVideoOutputsResponse*) default initialize members
/// - int soap_read__tmd__GetVideoOutputsResponse(struct soap*, _tmd__GetVideoOutputsResponse*) deserialize from a source
/// - int soap_write__tmd__GetVideoOutputsResponse(struct soap*, _tmd__GetVideoOutputsResponse*) serialize to a sink
/// - _tmd__GetVideoOutputsResponse* soap_dup__tmd__GetVideoOutputsResponse(struct soap*, _tmd__GetVideoOutputsResponse* dst, _tmd__GetVideoOutputsResponse *src) returns deep copy of _tmd__GetVideoOutputsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetVideoOutputsResponse(_tmd__GetVideoOutputsResponse*) deep deletes _tmd__GetVideoOutputsResponse data members, use only on dst after soap_dup__tmd__GetVideoOutputsResponse(NULL, _tmd__GetVideoOutputsResponse *dst, _tmd__GetVideoOutputsResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetVideoOutputsResponse
{
/// <PRE><BLOCKQUOTE>
///   List containing all physical Video output connections of a device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoOutput* is 0..unbounded.
  $ int                                  __sizeVideoOutputs             0;
/// Array struct tt__VideoOutput* of size 0..unbounded.
    struct tt__VideoOutput*              VideoOutputs                   0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfiguration is a complexType.
///
/// @note struct _tmd__GetAudioSourceConfiguration operations:
/// - _tmd__GetAudioSourceConfiguration* soap_new__tmd__GetAudioSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetAudioSourceConfiguration(struct soap*, _tmd__GetAudioSourceConfiguration*) default initialize members
/// - int soap_read__tmd__GetAudioSourceConfiguration(struct soap*, _tmd__GetAudioSourceConfiguration*) deserialize from a source
/// - int soap_write__tmd__GetAudioSourceConfiguration(struct soap*, _tmd__GetAudioSourceConfiguration*) serialize to a sink
/// - _tmd__GetAudioSourceConfiguration* soap_dup__tmd__GetAudioSourceConfiguration(struct soap*, _tmd__GetAudioSourceConfiguration* dst, _tmd__GetAudioSourceConfiguration *src) returns deep copy of _tmd__GetAudioSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetAudioSourceConfiguration(_tmd__GetAudioSourceConfiguration*) deep deletes _tmd__GetAudioSourceConfiguration data members, use only on dst after soap_dup__tmd__GetAudioSourceConfiguration(NULL, _tmd__GetAudioSourceConfiguration *dst, _tmd__GetAudioSourceConfiguration *src) (use soapcpp2 -Ed)
struct _tmd__GetAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested AudioSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioSourceToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationResponse is a complexType.
///
/// @note struct _tmd__GetAudioSourceConfigurationResponse operations:
/// - _tmd__GetAudioSourceConfigurationResponse* soap_new__tmd__GetAudioSourceConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetAudioSourceConfigurationResponse(struct soap*, _tmd__GetAudioSourceConfigurationResponse*) default initialize members
/// - int soap_read__tmd__GetAudioSourceConfigurationResponse(struct soap*, _tmd__GetAudioSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__tmd__GetAudioSourceConfigurationResponse(struct soap*, _tmd__GetAudioSourceConfigurationResponse*) serialize to a sink
/// - _tmd__GetAudioSourceConfigurationResponse* soap_dup__tmd__GetAudioSourceConfigurationResponse(struct soap*, _tmd__GetAudioSourceConfigurationResponse* dst, _tmd__GetAudioSourceConfigurationResponse *src) returns deep copy of _tmd__GetAudioSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetAudioSourceConfigurationResponse(_tmd__GetAudioSourceConfigurationResponse*) deep deletes _tmd__GetAudioSourceConfigurationResponse data members, use only on dst after soap_dup__tmd__GetAudioSourceConfigurationResponse(NULL, _tmd__GetAudioSourceConfigurationResponse *dst, _tmd__GetAudioSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetAudioSourceConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Current configuration of the Audio input.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSourceConfiguration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  AudioSourceConfiguration       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfiguration is a complexType.
///
/// @note struct _tmd__GetAudioOutputConfiguration operations:
/// - _tmd__GetAudioOutputConfiguration* soap_new__tmd__GetAudioOutputConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetAudioOutputConfiguration(struct soap*, _tmd__GetAudioOutputConfiguration*) default initialize members
/// - int soap_read__tmd__GetAudioOutputConfiguration(struct soap*, _tmd__GetAudioOutputConfiguration*) deserialize from a source
/// - int soap_write__tmd__GetAudioOutputConfiguration(struct soap*, _tmd__GetAudioOutputConfiguration*) serialize to a sink
/// - _tmd__GetAudioOutputConfiguration* soap_dup__tmd__GetAudioOutputConfiguration(struct soap*, _tmd__GetAudioOutputConfiguration* dst, _tmd__GetAudioOutputConfiguration *src) returns deep copy of _tmd__GetAudioOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetAudioOutputConfiguration(_tmd__GetAudioOutputConfiguration*) deep deletes _tmd__GetAudioOutputConfiguration data members, use only on dst after soap_dup__tmd__GetAudioOutputConfiguration(NULL, _tmd__GetAudioOutputConfiguration *dst, _tmd__GetAudioOutputConfiguration *src) (use soapcpp2 -Ed)
struct _tmd__GetAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the physical Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioOutputToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationResponse is a complexType.
///
/// @note struct _tmd__GetAudioOutputConfigurationResponse operations:
/// - _tmd__GetAudioOutputConfigurationResponse* soap_new__tmd__GetAudioOutputConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetAudioOutputConfigurationResponse(struct soap*, _tmd__GetAudioOutputConfigurationResponse*) default initialize members
/// - int soap_read__tmd__GetAudioOutputConfigurationResponse(struct soap*, _tmd__GetAudioOutputConfigurationResponse*) deserialize from a source
/// - int soap_write__tmd__GetAudioOutputConfigurationResponse(struct soap*, _tmd__GetAudioOutputConfigurationResponse*) serialize to a sink
/// - _tmd__GetAudioOutputConfigurationResponse* soap_dup__tmd__GetAudioOutputConfigurationResponse(struct soap*, _tmd__GetAudioOutputConfigurationResponse* dst, _tmd__GetAudioOutputConfigurationResponse *src) returns deep copy of _tmd__GetAudioOutputConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetAudioOutputConfigurationResponse(_tmd__GetAudioOutputConfigurationResponse*) deep deletes _tmd__GetAudioOutputConfigurationResponse data members, use only on dst after soap_dup__tmd__GetAudioOutputConfigurationResponse(NULL, _tmd__GetAudioOutputConfigurationResponse *dst, _tmd__GetAudioOutputConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetAudioOutputConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Current configuration of the Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutputConfiguration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  AudioOutputConfiguration       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfiguration is a complexType.
///
/// @note struct _tmd__GetVideoSourceConfiguration operations:
/// - _tmd__GetVideoSourceConfiguration* soap_new__tmd__GetVideoSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetVideoSourceConfiguration(struct soap*, _tmd__GetVideoSourceConfiguration*) default initialize members
/// - int soap_read__tmd__GetVideoSourceConfiguration(struct soap*, _tmd__GetVideoSourceConfiguration*) deserialize from a source
/// - int soap_write__tmd__GetVideoSourceConfiguration(struct soap*, _tmd__GetVideoSourceConfiguration*) serialize to a sink
/// - _tmd__GetVideoSourceConfiguration* soap_dup__tmd__GetVideoSourceConfiguration(struct soap*, _tmd__GetVideoSourceConfiguration* dst, _tmd__GetVideoSourceConfiguration *src) returns deep copy of _tmd__GetVideoSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetVideoSourceConfiguration(_tmd__GetVideoSourceConfiguration*) deep deletes _tmd__GetVideoSourceConfiguration data members, use only on dst after soap_dup__tmd__GetVideoSourceConfiguration(NULL, _tmd__GetVideoSourceConfiguration *dst, _tmd__GetVideoSourceConfiguration *src) (use soapcpp2 -Ed)
struct _tmd__GetVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationResponse is a complexType.
///
/// @note struct _tmd__GetVideoSourceConfigurationResponse operations:
/// - _tmd__GetVideoSourceConfigurationResponse* soap_new__tmd__GetVideoSourceConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetVideoSourceConfigurationResponse(struct soap*, _tmd__GetVideoSourceConfigurationResponse*) default initialize members
/// - int soap_read__tmd__GetVideoSourceConfigurationResponse(struct soap*, _tmd__GetVideoSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__tmd__GetVideoSourceConfigurationResponse(struct soap*, _tmd__GetVideoSourceConfigurationResponse*) serialize to a sink
/// - _tmd__GetVideoSourceConfigurationResponse* soap_dup__tmd__GetVideoSourceConfigurationResponse(struct soap*, _tmd__GetVideoSourceConfigurationResponse* dst, _tmd__GetVideoSourceConfigurationResponse *src) returns deep copy of _tmd__GetVideoSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetVideoSourceConfigurationResponse(_tmd__GetVideoSourceConfigurationResponse*) deep deletes _tmd__GetVideoSourceConfigurationResponse data members, use only on dst after soap_dup__tmd__GetVideoSourceConfigurationResponse(NULL, _tmd__GetVideoSourceConfigurationResponse *dst, _tmd__GetVideoSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetVideoSourceConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Current configuration of the Video input.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceConfiguration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  VideoSourceConfiguration       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfiguration is a complexType.
///
/// @note struct _tmd__GetVideoOutputConfiguration operations:
/// - _tmd__GetVideoOutputConfiguration* soap_new__tmd__GetVideoOutputConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetVideoOutputConfiguration(struct soap*, _tmd__GetVideoOutputConfiguration*) default initialize members
/// - int soap_read__tmd__GetVideoOutputConfiguration(struct soap*, _tmd__GetVideoOutputConfiguration*) deserialize from a source
/// - int soap_write__tmd__GetVideoOutputConfiguration(struct soap*, _tmd__GetVideoOutputConfiguration*) serialize to a sink
/// - _tmd__GetVideoOutputConfiguration* soap_dup__tmd__GetVideoOutputConfiguration(struct soap*, _tmd__GetVideoOutputConfiguration* dst, _tmd__GetVideoOutputConfiguration *src) returns deep copy of _tmd__GetVideoOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetVideoOutputConfiguration(_tmd__GetVideoOutputConfiguration*) deep deletes _tmd__GetVideoOutputConfiguration data members, use only on dst after soap_dup__tmd__GetVideoOutputConfiguration(NULL, _tmd__GetVideoOutputConfiguration *dst, _tmd__GetVideoOutputConfiguration *src) (use soapcpp2 -Ed)
struct _tmd__GetVideoOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested VideoOutput.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutputToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationResponse is a complexType.
///
/// @note struct _tmd__GetVideoOutputConfigurationResponse operations:
/// - _tmd__GetVideoOutputConfigurationResponse* soap_new__tmd__GetVideoOutputConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetVideoOutputConfigurationResponse(struct soap*, _tmd__GetVideoOutputConfigurationResponse*) default initialize members
/// - int soap_read__tmd__GetVideoOutputConfigurationResponse(struct soap*, _tmd__GetVideoOutputConfigurationResponse*) deserialize from a source
/// - int soap_write__tmd__GetVideoOutputConfigurationResponse(struct soap*, _tmd__GetVideoOutputConfigurationResponse*) serialize to a sink
/// - _tmd__GetVideoOutputConfigurationResponse* soap_dup__tmd__GetVideoOutputConfigurationResponse(struct soap*, _tmd__GetVideoOutputConfigurationResponse* dst, _tmd__GetVideoOutputConfigurationResponse *src) returns deep copy of _tmd__GetVideoOutputConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetVideoOutputConfigurationResponse(_tmd__GetVideoOutputConfigurationResponse*) deep deletes _tmd__GetVideoOutputConfigurationResponse data members, use only on dst after soap_dup__tmd__GetVideoOutputConfigurationResponse(NULL, _tmd__GetVideoOutputConfigurationResponse *dst, _tmd__GetVideoOutputConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetVideoOutputConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Current configuration of the Video output.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutputConfiguration" of type "http://www.onvif.org/ver10/schema":VideoOutputConfiguration.
    struct tt__VideoOutputConfiguration*  VideoOutputConfiguration       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfiguration is a complexType.
///
/// @note struct _tmd__SetAudioSourceConfiguration operations:
/// - _tmd__SetAudioSourceConfiguration* soap_new__tmd__SetAudioSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SetAudioSourceConfiguration(struct soap*, _tmd__SetAudioSourceConfiguration*) default initialize members
/// - int soap_read__tmd__SetAudioSourceConfiguration(struct soap*, _tmd__SetAudioSourceConfiguration*) deserialize from a source
/// - int soap_write__tmd__SetAudioSourceConfiguration(struct soap*, _tmd__SetAudioSourceConfiguration*) serialize to a sink
/// - _tmd__SetAudioSourceConfiguration* soap_dup__tmd__SetAudioSourceConfiguration(struct soap*, _tmd__SetAudioSourceConfiguration* dst, _tmd__SetAudioSourceConfiguration *src) returns deep copy of _tmd__SetAudioSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SetAudioSourceConfiguration(_tmd__SetAudioSourceConfiguration*) deep deletes _tmd__SetAudioSourceConfiguration data members, use only on dst after soap_dup__tmd__SetAudioSourceConfiguration(NULL, _tmd__SetAudioSourceConfiguration *dst, _tmd__SetAudioSourceConfiguration *src) (use soapcpp2 -Ed)
struct _tmd__SetAudioSourceConfiguration
{
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element determines how configuration
///   changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
///   after reboot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfigurationResponse is a complexType.
///
/// @note struct _tmd__SetAudioSourceConfigurationResponse operations:
/// - _tmd__SetAudioSourceConfigurationResponse* soap_new__tmd__SetAudioSourceConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SetAudioSourceConfigurationResponse(struct soap*, _tmd__SetAudioSourceConfigurationResponse*) default initialize members
/// - int soap_read__tmd__SetAudioSourceConfigurationResponse(struct soap*, _tmd__SetAudioSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__tmd__SetAudioSourceConfigurationResponse(struct soap*, _tmd__SetAudioSourceConfigurationResponse*) serialize to a sink
/// - _tmd__SetAudioSourceConfigurationResponse* soap_dup__tmd__SetAudioSourceConfigurationResponse(struct soap*, _tmd__SetAudioSourceConfigurationResponse* dst, _tmd__SetAudioSourceConfigurationResponse *src) returns deep copy of _tmd__SetAudioSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SetAudioSourceConfigurationResponse(_tmd__SetAudioSourceConfigurationResponse*) deep deletes _tmd__SetAudioSourceConfigurationResponse data members, use only on dst after soap_dup__tmd__SetAudioSourceConfigurationResponse(NULL, _tmd__SetAudioSourceConfigurationResponse *dst, _tmd__SetAudioSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tmd__SetAudioSourceConfigurationResponse
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfiguration is a complexType.
///
/// @note struct _tmd__SetAudioOutputConfiguration operations:
/// - _tmd__SetAudioOutputConfiguration* soap_new__tmd__SetAudioOutputConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SetAudioOutputConfiguration(struct soap*, _tmd__SetAudioOutputConfiguration*) default initialize members
/// - int soap_read__tmd__SetAudioOutputConfiguration(struct soap*, _tmd__SetAudioOutputConfiguration*) deserialize from a source
/// - int soap_write__tmd__SetAudioOutputConfiguration(struct soap*, _tmd__SetAudioOutputConfiguration*) serialize to a sink
/// - _tmd__SetAudioOutputConfiguration* soap_dup__tmd__SetAudioOutputConfiguration(struct soap*, _tmd__SetAudioOutputConfiguration* dst, _tmd__SetAudioOutputConfiguration *src) returns deep copy of _tmd__SetAudioOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SetAudioOutputConfiguration(_tmd__SetAudioOutputConfiguration*) deep deletes _tmd__SetAudioOutputConfiguration data members, use only on dst after soap_dup__tmd__SetAudioOutputConfiguration(NULL, _tmd__SetAudioOutputConfiguration *dst, _tmd__SetAudioOutputConfiguration *src) (use soapcpp2 -Ed)
struct _tmd__SetAudioOutputConfiguration
{
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element determines how configuration
///   changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
///   after reboot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfigurationResponse is a complexType.
///
/// @note struct _tmd__SetAudioOutputConfigurationResponse operations:
/// - _tmd__SetAudioOutputConfigurationResponse* soap_new__tmd__SetAudioOutputConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SetAudioOutputConfigurationResponse(struct soap*, _tmd__SetAudioOutputConfigurationResponse*) default initialize members
/// - int soap_read__tmd__SetAudioOutputConfigurationResponse(struct soap*, _tmd__SetAudioOutputConfigurationResponse*) deserialize from a source
/// - int soap_write__tmd__SetAudioOutputConfigurationResponse(struct soap*, _tmd__SetAudioOutputConfigurationResponse*) serialize to a sink
/// - _tmd__SetAudioOutputConfigurationResponse* soap_dup__tmd__SetAudioOutputConfigurationResponse(struct soap*, _tmd__SetAudioOutputConfigurationResponse* dst, _tmd__SetAudioOutputConfigurationResponse *src) returns deep copy of _tmd__SetAudioOutputConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SetAudioOutputConfigurationResponse(_tmd__SetAudioOutputConfigurationResponse*) deep deletes _tmd__SetAudioOutputConfigurationResponse data members, use only on dst after soap_dup__tmd__SetAudioOutputConfigurationResponse(NULL, _tmd__SetAudioOutputConfigurationResponse *dst, _tmd__SetAudioOutputConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tmd__SetAudioOutputConfigurationResponse
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfiguration is a complexType.
///
/// @note struct _tmd__SetVideoSourceConfiguration operations:
/// - _tmd__SetVideoSourceConfiguration* soap_new__tmd__SetVideoSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SetVideoSourceConfiguration(struct soap*, _tmd__SetVideoSourceConfiguration*) default initialize members
/// - int soap_read__tmd__SetVideoSourceConfiguration(struct soap*, _tmd__SetVideoSourceConfiguration*) deserialize from a source
/// - int soap_write__tmd__SetVideoSourceConfiguration(struct soap*, _tmd__SetVideoSourceConfiguration*) serialize to a sink
/// - _tmd__SetVideoSourceConfiguration* soap_dup__tmd__SetVideoSourceConfiguration(struct soap*, _tmd__SetVideoSourceConfiguration* dst, _tmd__SetVideoSourceConfiguration *src) returns deep copy of _tmd__SetVideoSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SetVideoSourceConfiguration(_tmd__SetVideoSourceConfiguration*) deep deletes _tmd__SetVideoSourceConfiguration data members, use only on dst after soap_dup__tmd__SetVideoSourceConfiguration(NULL, _tmd__SetVideoSourceConfiguration *dst, _tmd__SetVideoSourceConfiguration *src) (use soapcpp2 -Ed)
struct _tmd__SetVideoSourceConfiguration
{
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element determines how configuration
///   changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
///   after reboot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfigurationResponse is a complexType.
///
/// @note struct _tmd__SetVideoSourceConfigurationResponse operations:
/// - _tmd__SetVideoSourceConfigurationResponse* soap_new__tmd__SetVideoSourceConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SetVideoSourceConfigurationResponse(struct soap*, _tmd__SetVideoSourceConfigurationResponse*) default initialize members
/// - int soap_read__tmd__SetVideoSourceConfigurationResponse(struct soap*, _tmd__SetVideoSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__tmd__SetVideoSourceConfigurationResponse(struct soap*, _tmd__SetVideoSourceConfigurationResponse*) serialize to a sink
/// - _tmd__SetVideoSourceConfigurationResponse* soap_dup__tmd__SetVideoSourceConfigurationResponse(struct soap*, _tmd__SetVideoSourceConfigurationResponse* dst, _tmd__SetVideoSourceConfigurationResponse *src) returns deep copy of _tmd__SetVideoSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SetVideoSourceConfigurationResponse(_tmd__SetVideoSourceConfigurationResponse*) deep deletes _tmd__SetVideoSourceConfigurationResponse data members, use only on dst after soap_dup__tmd__SetVideoSourceConfigurationResponse(NULL, _tmd__SetVideoSourceConfigurationResponse *dst, _tmd__SetVideoSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tmd__SetVideoSourceConfigurationResponse
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfiguration is a complexType.
///
/// @note struct _tmd__SetVideoOutputConfiguration operations:
/// - _tmd__SetVideoOutputConfiguration* soap_new__tmd__SetVideoOutputConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SetVideoOutputConfiguration(struct soap*, _tmd__SetVideoOutputConfiguration*) default initialize members
/// - int soap_read__tmd__SetVideoOutputConfiguration(struct soap*, _tmd__SetVideoOutputConfiguration*) deserialize from a source
/// - int soap_write__tmd__SetVideoOutputConfiguration(struct soap*, _tmd__SetVideoOutputConfiguration*) serialize to a sink
/// - _tmd__SetVideoOutputConfiguration* soap_dup__tmd__SetVideoOutputConfiguration(struct soap*, _tmd__SetVideoOutputConfiguration* dst, _tmd__SetVideoOutputConfiguration *src) returns deep copy of _tmd__SetVideoOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SetVideoOutputConfiguration(_tmd__SetVideoOutputConfiguration*) deep deletes _tmd__SetVideoOutputConfiguration data members, use only on dst after soap_dup__tmd__SetVideoOutputConfiguration(NULL, _tmd__SetVideoOutputConfiguration *dst, _tmd__SetVideoOutputConfiguration *src) (use soapcpp2 -Ed)
struct _tmd__SetVideoOutputConfiguration
{
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoOutputConfiguration.
    struct tt__VideoOutputConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element determines how configuration
///   changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
///   after reboot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfigurationResponse is a complexType.
///
/// @note struct _tmd__SetVideoOutputConfigurationResponse operations:
/// - _tmd__SetVideoOutputConfigurationResponse* soap_new__tmd__SetVideoOutputConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SetVideoOutputConfigurationResponse(struct soap*, _tmd__SetVideoOutputConfigurationResponse*) default initialize members
/// - int soap_read__tmd__SetVideoOutputConfigurationResponse(struct soap*, _tmd__SetVideoOutputConfigurationResponse*) deserialize from a source
/// - int soap_write__tmd__SetVideoOutputConfigurationResponse(struct soap*, _tmd__SetVideoOutputConfigurationResponse*) serialize to a sink
/// - _tmd__SetVideoOutputConfigurationResponse* soap_dup__tmd__SetVideoOutputConfigurationResponse(struct soap*, _tmd__SetVideoOutputConfigurationResponse* dst, _tmd__SetVideoOutputConfigurationResponse *src) returns deep copy of _tmd__SetVideoOutputConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SetVideoOutputConfigurationResponse(_tmd__SetVideoOutputConfigurationResponse*) deep deletes _tmd__SetVideoOutputConfigurationResponse data members, use only on dst after soap_dup__tmd__SetVideoOutputConfigurationResponse(NULL, _tmd__SetVideoOutputConfigurationResponse *dst, _tmd__SetVideoOutputConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tmd__SetVideoOutputConfigurationResponse
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptions is a complexType.
///
/// @note struct _tmd__GetVideoSourceConfigurationOptions operations:
/// - _tmd__GetVideoSourceConfigurationOptions* soap_new__tmd__GetVideoSourceConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetVideoSourceConfigurationOptions(struct soap*, _tmd__GetVideoSourceConfigurationOptions*) default initialize members
/// - int soap_read__tmd__GetVideoSourceConfigurationOptions(struct soap*, _tmd__GetVideoSourceConfigurationOptions*) deserialize from a source
/// - int soap_write__tmd__GetVideoSourceConfigurationOptions(struct soap*, _tmd__GetVideoSourceConfigurationOptions*) serialize to a sink
/// - _tmd__GetVideoSourceConfigurationOptions* soap_dup__tmd__GetVideoSourceConfigurationOptions(struct soap*, _tmd__GetVideoSourceConfigurationOptions* dst, _tmd__GetVideoSourceConfigurationOptions *src) returns deep copy of _tmd__GetVideoSourceConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetVideoSourceConfigurationOptions(_tmd__GetVideoSourceConfigurationOptions*) deep deletes _tmd__GetVideoSourceConfigurationOptions data members, use only on dst after soap_dup__tmd__GetVideoSourceConfigurationOptions(NULL, _tmd__GetVideoSourceConfigurationOptions *dst, _tmd__GetVideoSourceConfigurationOptions *src) (use soapcpp2 -Ed)
struct _tmd__GetVideoSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Token of the Video input whose options are requested..
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
///
/// @note struct _tmd__GetVideoSourceConfigurationOptionsResponse operations:
/// - _tmd__GetVideoSourceConfigurationOptionsResponse* soap_new__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, _tmd__GetVideoSourceConfigurationOptionsResponse*) default initialize members
/// - int soap_read__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, _tmd__GetVideoSourceConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, _tmd__GetVideoSourceConfigurationOptionsResponse*) serialize to a sink
/// - _tmd__GetVideoSourceConfigurationOptionsResponse* soap_dup__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, _tmd__GetVideoSourceConfigurationOptionsResponse* dst, _tmd__GetVideoSourceConfigurationOptionsResponse *src) returns deep copy of _tmd__GetVideoSourceConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetVideoSourceConfigurationOptionsResponse(_tmd__GetVideoSourceConfigurationOptionsResponse*) deep deletes _tmd__GetVideoSourceConfigurationOptionsResponse data members, use only on dst after soap_dup__tmd__GetVideoSourceConfigurationOptionsResponse(NULL, _tmd__GetVideoSourceConfigurationOptionsResponse *dst, _tmd__GetVideoSourceConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetVideoSourceConfigurationOptionsResponse
{
/// Element "VideoSourceConfigurationOptions" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    struct tt__VideoSourceConfigurationOptions*  VideoSourceConfigurationOptions 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptions is a complexType.
///
/// @note struct _tmd__GetVideoOutputConfigurationOptions operations:
/// - _tmd__GetVideoOutputConfigurationOptions* soap_new__tmd__GetVideoOutputConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetVideoOutputConfigurationOptions(struct soap*, _tmd__GetVideoOutputConfigurationOptions*) default initialize members
/// - int soap_read__tmd__GetVideoOutputConfigurationOptions(struct soap*, _tmd__GetVideoOutputConfigurationOptions*) deserialize from a source
/// - int soap_write__tmd__GetVideoOutputConfigurationOptions(struct soap*, _tmd__GetVideoOutputConfigurationOptions*) serialize to a sink
/// - _tmd__GetVideoOutputConfigurationOptions* soap_dup__tmd__GetVideoOutputConfigurationOptions(struct soap*, _tmd__GetVideoOutputConfigurationOptions* dst, _tmd__GetVideoOutputConfigurationOptions *src) returns deep copy of _tmd__GetVideoOutputConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetVideoOutputConfigurationOptions(_tmd__GetVideoOutputConfigurationOptions*) deep deletes _tmd__GetVideoOutputConfigurationOptions data members, use only on dst after soap_dup__tmd__GetVideoOutputConfigurationOptions(NULL, _tmd__GetVideoOutputConfigurationOptions *dst, _tmd__GetVideoOutputConfigurationOptions *src) (use soapcpp2 -Ed)
struct _tmd__GetVideoOutputConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output whose options are requested..
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutputToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptionsResponse is a complexType.
///
/// @note struct _tmd__GetVideoOutputConfigurationOptionsResponse operations:
/// - _tmd__GetVideoOutputConfigurationOptionsResponse* soap_new__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, _tmd__GetVideoOutputConfigurationOptionsResponse*) default initialize members
/// - int soap_read__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, _tmd__GetVideoOutputConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, _tmd__GetVideoOutputConfigurationOptionsResponse*) serialize to a sink
/// - _tmd__GetVideoOutputConfigurationOptionsResponse* soap_dup__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, _tmd__GetVideoOutputConfigurationOptionsResponse* dst, _tmd__GetVideoOutputConfigurationOptionsResponse *src) returns deep copy of _tmd__GetVideoOutputConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetVideoOutputConfigurationOptionsResponse(_tmd__GetVideoOutputConfigurationOptionsResponse*) deep deletes _tmd__GetVideoOutputConfigurationOptionsResponse data members, use only on dst after soap_dup__tmd__GetVideoOutputConfigurationOptionsResponse(NULL, _tmd__GetVideoOutputConfigurationOptionsResponse *dst, _tmd__GetVideoOutputConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetVideoOutputConfigurationOptionsResponse
{
/// Element "VideoOutputConfigurationOptions" of type "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions.
    struct tt__VideoOutputConfigurationOptions*  VideoOutputConfigurationOptions 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptions is a complexType.
///
/// @note struct _tmd__GetAudioSourceConfigurationOptions operations:
/// - _tmd__GetAudioSourceConfigurationOptions* soap_new__tmd__GetAudioSourceConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetAudioSourceConfigurationOptions(struct soap*, _tmd__GetAudioSourceConfigurationOptions*) default initialize members
/// - int soap_read__tmd__GetAudioSourceConfigurationOptions(struct soap*, _tmd__GetAudioSourceConfigurationOptions*) deserialize from a source
/// - int soap_write__tmd__GetAudioSourceConfigurationOptions(struct soap*, _tmd__GetAudioSourceConfigurationOptions*) serialize to a sink
/// - _tmd__GetAudioSourceConfigurationOptions* soap_dup__tmd__GetAudioSourceConfigurationOptions(struct soap*, _tmd__GetAudioSourceConfigurationOptions* dst, _tmd__GetAudioSourceConfigurationOptions *src) returns deep copy of _tmd__GetAudioSourceConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetAudioSourceConfigurationOptions(_tmd__GetAudioSourceConfigurationOptions*) deep deletes _tmd__GetAudioSourceConfigurationOptions data members, use only on dst after soap_dup__tmd__GetAudioSourceConfigurationOptions(NULL, _tmd__GetAudioSourceConfigurationOptions *dst, _tmd__GetAudioSourceConfigurationOptions *src) (use soapcpp2 -Ed)
struct _tmd__GetAudioSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Token of the physical Audio input whose options are requested..
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioSourceToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
///
/// @note struct _tmd__GetAudioSourceConfigurationOptionsResponse operations:
/// - _tmd__GetAudioSourceConfigurationOptionsResponse* soap_new__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, _tmd__GetAudioSourceConfigurationOptionsResponse*) default initialize members
/// - int soap_read__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, _tmd__GetAudioSourceConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, _tmd__GetAudioSourceConfigurationOptionsResponse*) serialize to a sink
/// - _tmd__GetAudioSourceConfigurationOptionsResponse* soap_dup__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, _tmd__GetAudioSourceConfigurationOptionsResponse* dst, _tmd__GetAudioSourceConfigurationOptionsResponse *src) returns deep copy of _tmd__GetAudioSourceConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetAudioSourceConfigurationOptionsResponse(_tmd__GetAudioSourceConfigurationOptionsResponse*) deep deletes _tmd__GetAudioSourceConfigurationOptionsResponse data members, use only on dst after soap_dup__tmd__GetAudioSourceConfigurationOptionsResponse(NULL, _tmd__GetAudioSourceConfigurationOptionsResponse *dst, _tmd__GetAudioSourceConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetAudioSourceConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   Returns the AudioSourceToken available.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSourceOptions" of type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    struct tt__AudioSourceConfigurationOptions*  AudioSourceOptions             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptions is a complexType.
///
/// @note struct _tmd__GetAudioOutputConfigurationOptions operations:
/// - _tmd__GetAudioOutputConfigurationOptions* soap_new__tmd__GetAudioOutputConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetAudioOutputConfigurationOptions(struct soap*, _tmd__GetAudioOutputConfigurationOptions*) default initialize members
/// - int soap_read__tmd__GetAudioOutputConfigurationOptions(struct soap*, _tmd__GetAudioOutputConfigurationOptions*) deserialize from a source
/// - int soap_write__tmd__GetAudioOutputConfigurationOptions(struct soap*, _tmd__GetAudioOutputConfigurationOptions*) serialize to a sink
/// - _tmd__GetAudioOutputConfigurationOptions* soap_dup__tmd__GetAudioOutputConfigurationOptions(struct soap*, _tmd__GetAudioOutputConfigurationOptions* dst, _tmd__GetAudioOutputConfigurationOptions *src) returns deep copy of _tmd__GetAudioOutputConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetAudioOutputConfigurationOptions(_tmd__GetAudioOutputConfigurationOptions*) deep deletes _tmd__GetAudioOutputConfigurationOptions data members, use only on dst after soap_dup__tmd__GetAudioOutputConfigurationOptions(NULL, _tmd__GetAudioOutputConfigurationOptions *dst, _tmd__GetAudioOutputConfigurationOptions *src) (use soapcpp2 -Ed)
struct _tmd__GetAudioOutputConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Token of the physical Audio Output whose options are requested..
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioOutputToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
///
/// @note struct _tmd__GetAudioOutputConfigurationOptionsResponse operations:
/// - _tmd__GetAudioOutputConfigurationOptionsResponse* soap_new__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, _tmd__GetAudioOutputConfigurationOptionsResponse*) default initialize members
/// - int soap_read__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, _tmd__GetAudioOutputConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, _tmd__GetAudioOutputConfigurationOptionsResponse*) serialize to a sink
/// - _tmd__GetAudioOutputConfigurationOptionsResponse* soap_dup__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, _tmd__GetAudioOutputConfigurationOptionsResponse* dst, _tmd__GetAudioOutputConfigurationOptionsResponse *src) returns deep copy of _tmd__GetAudioOutputConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetAudioOutputConfigurationOptionsResponse(_tmd__GetAudioOutputConfigurationOptionsResponse*) deep deletes _tmd__GetAudioOutputConfigurationOptionsResponse data members, use only on dst after soap_dup__tmd__GetAudioOutputConfigurationOptionsResponse(NULL, _tmd__GetAudioOutputConfigurationOptionsResponse *dst, _tmd__GetAudioOutputConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetAudioOutputConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   Available settings and ranges for the requested Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutputOptions" of type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    struct tt__AudioOutputConfigurationOptions*  AudioOutputOptions             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettings
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettings is a complexType.
///
/// @note struct _tmd__SetRelayOutputSettings operations:
/// - _tmd__SetRelayOutputSettings* soap_new__tmd__SetRelayOutputSettings(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SetRelayOutputSettings(struct soap*, _tmd__SetRelayOutputSettings*) default initialize members
/// - int soap_read__tmd__SetRelayOutputSettings(struct soap*, _tmd__SetRelayOutputSettings*) deserialize from a source
/// - int soap_write__tmd__SetRelayOutputSettings(struct soap*, _tmd__SetRelayOutputSettings*) serialize to a sink
/// - _tmd__SetRelayOutputSettings* soap_dup__tmd__SetRelayOutputSettings(struct soap*, _tmd__SetRelayOutputSettings* dst, _tmd__SetRelayOutputSettings *src) returns deep copy of _tmd__SetRelayOutputSettings src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SetRelayOutputSettings(_tmd__SetRelayOutputSettings*) deep deletes _tmd__SetRelayOutputSettings data members, use only on dst after soap_dup__tmd__SetRelayOutputSettings(NULL, _tmd__SetRelayOutputSettings *dst, _tmd__SetRelayOutputSettings *src) (use soapcpp2 -Ed)
struct _tmd__SetRelayOutputSettings
{
/// Element "RelayOutput" of type "http://www.onvif.org/ver10/schema":RelayOutput.
    struct tt__RelayOutput*              RelayOutput                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettingsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettingsResponse is a complexType.
///
/// @note struct _tmd__SetRelayOutputSettingsResponse operations:
/// - _tmd__SetRelayOutputSettingsResponse* soap_new__tmd__SetRelayOutputSettingsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SetRelayOutputSettingsResponse(struct soap*, _tmd__SetRelayOutputSettingsResponse*) default initialize members
/// - int soap_read__tmd__SetRelayOutputSettingsResponse(struct soap*, _tmd__SetRelayOutputSettingsResponse*) deserialize from a source
/// - int soap_write__tmd__SetRelayOutputSettingsResponse(struct soap*, _tmd__SetRelayOutputSettingsResponse*) serialize to a sink
/// - _tmd__SetRelayOutputSettingsResponse* soap_dup__tmd__SetRelayOutputSettingsResponse(struct soap*, _tmd__SetRelayOutputSettingsResponse* dst, _tmd__SetRelayOutputSettingsResponse *src) returns deep copy of _tmd__SetRelayOutputSettingsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SetRelayOutputSettingsResponse(_tmd__SetRelayOutputSettingsResponse*) deep deletes _tmd__SetRelayOutputSettingsResponse data members, use only on dst after soap_dup__tmd__SetRelayOutputSettingsResponse(NULL, _tmd__SetRelayOutputSettingsResponse *dst, _tmd__SetRelayOutputSettingsResponse *src) (use soapcpp2 -Ed)
struct _tmd__SetRelayOutputSettingsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputs
/// <PRE><BLOCKQUOTE>
///   Get the available digital inputs of a device.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputs is a complexType.
///
/// @note struct _tmd__GetDigitalInputs operations:
/// - _tmd__GetDigitalInputs* soap_new__tmd__GetDigitalInputs(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetDigitalInputs(struct soap*, _tmd__GetDigitalInputs*) default initialize members
/// - int soap_read__tmd__GetDigitalInputs(struct soap*, _tmd__GetDigitalInputs*) deserialize from a source
/// - int soap_write__tmd__GetDigitalInputs(struct soap*, _tmd__GetDigitalInputs*) serialize to a sink
/// - _tmd__GetDigitalInputs* soap_dup__tmd__GetDigitalInputs(struct soap*, _tmd__GetDigitalInputs* dst, _tmd__GetDigitalInputs *src) returns deep copy of _tmd__GetDigitalInputs src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetDigitalInputs(_tmd__GetDigitalInputs*) deep deletes _tmd__GetDigitalInputs data members, use only on dst after soap_dup__tmd__GetDigitalInputs(NULL, _tmd__GetDigitalInputs *dst, _tmd__GetDigitalInputs *src) (use soapcpp2 -Ed)
struct _tmd__GetDigitalInputs
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputsResponse
/// <PRE><BLOCKQUOTE>
///   Requested digital inputs.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputsResponse is a complexType.
///
/// @note struct _tmd__GetDigitalInputsResponse operations:
/// - _tmd__GetDigitalInputsResponse* soap_new__tmd__GetDigitalInputsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetDigitalInputsResponse(struct soap*, _tmd__GetDigitalInputsResponse*) default initialize members
/// - int soap_read__tmd__GetDigitalInputsResponse(struct soap*, _tmd__GetDigitalInputsResponse*) deserialize from a source
/// - int soap_write__tmd__GetDigitalInputsResponse(struct soap*, _tmd__GetDigitalInputsResponse*) serialize to a sink
/// - _tmd__GetDigitalInputsResponse* soap_dup__tmd__GetDigitalInputsResponse(struct soap*, _tmd__GetDigitalInputsResponse* dst, _tmd__GetDigitalInputsResponse *src) returns deep copy of _tmd__GetDigitalInputsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetDigitalInputsResponse(_tmd__GetDigitalInputsResponse*) deep deletes _tmd__GetDigitalInputsResponse data members, use only on dst after soap_dup__tmd__GetDigitalInputsResponse(NULL, _tmd__GetDigitalInputsResponse *dst, _tmd__GetDigitalInputsResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetDigitalInputsResponse
{
/// Size of array of struct tt__DigitalInput* is 0..unbounded.
  $ int                                  __sizeDigitalInputs            0;
/// Array struct tt__DigitalInput* of size 0..unbounded.
    struct tt__DigitalInput*             DigitalInputs                  0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputConfigurationOptions is a complexType.
///
/// @note struct _tmd__GetDigitalInputConfigurationOptions operations:
/// - _tmd__GetDigitalInputConfigurationOptions* soap_new__tmd__GetDigitalInputConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetDigitalInputConfigurationOptions(struct soap*, _tmd__GetDigitalInputConfigurationOptions*) default initialize members
/// - int soap_read__tmd__GetDigitalInputConfigurationOptions(struct soap*, _tmd__GetDigitalInputConfigurationOptions*) deserialize from a source
/// - int soap_write__tmd__GetDigitalInputConfigurationOptions(struct soap*, _tmd__GetDigitalInputConfigurationOptions*) serialize to a sink
/// - _tmd__GetDigitalInputConfigurationOptions* soap_dup__tmd__GetDigitalInputConfigurationOptions(struct soap*, _tmd__GetDigitalInputConfigurationOptions* dst, _tmd__GetDigitalInputConfigurationOptions *src) returns deep copy of _tmd__GetDigitalInputConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetDigitalInputConfigurationOptions(_tmd__GetDigitalInputConfigurationOptions*) deep deletes _tmd__GetDigitalInputConfigurationOptions data members, use only on dst after soap_dup__tmd__GetDigitalInputConfigurationOptions(NULL, _tmd__GetDigitalInputConfigurationOptions *dst, _tmd__GetDigitalInputConfigurationOptions *src) (use soapcpp2 -Ed)
struct _tmd__GetDigitalInputConfigurationOptions
{
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputConfigurationOptionsResponse is a complexType.
///
/// @note struct _tmd__GetDigitalInputConfigurationOptionsResponse operations:
/// - _tmd__GetDigitalInputConfigurationOptionsResponse* soap_new__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, _tmd__GetDigitalInputConfigurationOptionsResponse*) default initialize members
/// - int soap_read__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, _tmd__GetDigitalInputConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, _tmd__GetDigitalInputConfigurationOptionsResponse*) serialize to a sink
/// - _tmd__GetDigitalInputConfigurationOptionsResponse* soap_dup__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, _tmd__GetDigitalInputConfigurationOptionsResponse* dst, _tmd__GetDigitalInputConfigurationOptionsResponse *src) returns deep copy of _tmd__GetDigitalInputConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetDigitalInputConfigurationOptionsResponse(_tmd__GetDigitalInputConfigurationOptionsResponse*) deep deletes _tmd__GetDigitalInputConfigurationOptionsResponse data members, use only on dst after soap_dup__tmd__GetDigitalInputConfigurationOptionsResponse(NULL, _tmd__GetDigitalInputConfigurationOptionsResponse *dst, _tmd__GetDigitalInputConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetDigitalInputConfigurationOptionsResponse
{
/// Element "DigitalInputOptions" of type "http://www.onvif.org/ver10/deviceIO/wsdl":DigitalInputConfigurationOptions.
    struct tmd__DigitalInputConfigurationOptions*  DigitalInputOptions            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetDigitalInputConfigurations
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetDigitalInputConfigurations is a complexType.
///
/// @note struct _tmd__SetDigitalInputConfigurations operations:
/// - _tmd__SetDigitalInputConfigurations* soap_new__tmd__SetDigitalInputConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SetDigitalInputConfigurations(struct soap*, _tmd__SetDigitalInputConfigurations*) default initialize members
/// - int soap_read__tmd__SetDigitalInputConfigurations(struct soap*, _tmd__SetDigitalInputConfigurations*) deserialize from a source
/// - int soap_write__tmd__SetDigitalInputConfigurations(struct soap*, _tmd__SetDigitalInputConfigurations*) serialize to a sink
/// - _tmd__SetDigitalInputConfigurations* soap_dup__tmd__SetDigitalInputConfigurations(struct soap*, _tmd__SetDigitalInputConfigurations* dst, _tmd__SetDigitalInputConfigurations *src) returns deep copy of _tmd__SetDigitalInputConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SetDigitalInputConfigurations(_tmd__SetDigitalInputConfigurations*) deep deletes _tmd__SetDigitalInputConfigurations data members, use only on dst after soap_dup__tmd__SetDigitalInputConfigurations(NULL, _tmd__SetDigitalInputConfigurations *dst, _tmd__SetDigitalInputConfigurations *src) (use soapcpp2 -Ed)
struct _tmd__SetDigitalInputConfigurations
{
/// Size of array of struct tt__DigitalInput* is 1..unbounded.
  $ int                                  __sizeDigitalInputs            1;
/// Array struct tt__DigitalInput* of size 1..unbounded.
    struct tt__DigitalInput*             DigitalInputs                  1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetDigitalInputConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetDigitalInputConfigurationsResponse is a complexType.
///
/// @note struct _tmd__SetDigitalInputConfigurationsResponse operations:
/// - _tmd__SetDigitalInputConfigurationsResponse* soap_new__tmd__SetDigitalInputConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SetDigitalInputConfigurationsResponse(struct soap*, _tmd__SetDigitalInputConfigurationsResponse*) default initialize members
/// - int soap_read__tmd__SetDigitalInputConfigurationsResponse(struct soap*, _tmd__SetDigitalInputConfigurationsResponse*) deserialize from a source
/// - int soap_write__tmd__SetDigitalInputConfigurationsResponse(struct soap*, _tmd__SetDigitalInputConfigurationsResponse*) serialize to a sink
/// - _tmd__SetDigitalInputConfigurationsResponse* soap_dup__tmd__SetDigitalInputConfigurationsResponse(struct soap*, _tmd__SetDigitalInputConfigurationsResponse* dst, _tmd__SetDigitalInputConfigurationsResponse *src) returns deep copy of _tmd__SetDigitalInputConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SetDigitalInputConfigurationsResponse(_tmd__SetDigitalInputConfigurationsResponse*) deep deletes _tmd__SetDigitalInputConfigurationsResponse data members, use only on dst after soap_dup__tmd__SetDigitalInputConfigurationsResponse(NULL, _tmd__SetDigitalInputConfigurationsResponse *dst, _tmd__SetDigitalInputConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tmd__SetDigitalInputConfigurationsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPorts
/// <PRE><BLOCKQUOTE>
///   The physical serial port on the device that allows serial data to be read and written.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPorts is a complexType.
///
/// @note struct _tmd__GetSerialPorts operations:
/// - _tmd__GetSerialPorts* soap_new__tmd__GetSerialPorts(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetSerialPorts(struct soap*, _tmd__GetSerialPorts*) default initialize members
/// - int soap_read__tmd__GetSerialPorts(struct soap*, _tmd__GetSerialPorts*) deserialize from a source
/// - int soap_write__tmd__GetSerialPorts(struct soap*, _tmd__GetSerialPorts*) serialize to a sink
/// - _tmd__GetSerialPorts* soap_dup__tmd__GetSerialPorts(struct soap*, _tmd__GetSerialPorts* dst, _tmd__GetSerialPorts *src) returns deep copy of _tmd__GetSerialPorts src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetSerialPorts(_tmd__GetSerialPorts*) deep deletes _tmd__GetSerialPorts data members, use only on dst after soap_dup__tmd__GetSerialPorts(NULL, _tmd__GetSerialPorts *dst, _tmd__GetSerialPorts *src) (use soapcpp2 -Ed)
struct _tmd__GetSerialPorts
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortsResponse
/// <PRE><BLOCKQUOTE>
///   Requested serial ports.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortsResponse is a complexType.
///
/// @note struct _tmd__GetSerialPortsResponse operations:
/// - _tmd__GetSerialPortsResponse* soap_new__tmd__GetSerialPortsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetSerialPortsResponse(struct soap*, _tmd__GetSerialPortsResponse*) default initialize members
/// - int soap_read__tmd__GetSerialPortsResponse(struct soap*, _tmd__GetSerialPortsResponse*) deserialize from a source
/// - int soap_write__tmd__GetSerialPortsResponse(struct soap*, _tmd__GetSerialPortsResponse*) serialize to a sink
/// - _tmd__GetSerialPortsResponse* soap_dup__tmd__GetSerialPortsResponse(struct soap*, _tmd__GetSerialPortsResponse* dst, _tmd__GetSerialPortsResponse *src) returns deep copy of _tmd__GetSerialPortsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetSerialPortsResponse(_tmd__GetSerialPortsResponse*) deep deletes _tmd__GetSerialPortsResponse data members, use only on dst after soap_dup__tmd__GetSerialPortsResponse(NULL, _tmd__GetSerialPortsResponse *dst, _tmd__GetSerialPortsResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetSerialPortsResponse
{
/// Size of array of struct tmd__SerialPort* is 0..unbounded.
  $ int                                  __sizeSerialPort               0;
/// Array struct tmd__SerialPort* of size 0..unbounded.
    struct tmd__SerialPort*              SerialPort                     0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfiguration
/// <PRE><BLOCKQUOTE>
///   Gets the configuration that relates to serial port configuration.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfiguration is a complexType.
///
/// @note struct _tmd__GetSerialPortConfiguration operations:
/// - _tmd__GetSerialPortConfiguration* soap_new__tmd__GetSerialPortConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetSerialPortConfiguration(struct soap*, _tmd__GetSerialPortConfiguration*) default initialize members
/// - int soap_read__tmd__GetSerialPortConfiguration(struct soap*, _tmd__GetSerialPortConfiguration*) deserialize from a source
/// - int soap_write__tmd__GetSerialPortConfiguration(struct soap*, _tmd__GetSerialPortConfiguration*) serialize to a sink
/// - _tmd__GetSerialPortConfiguration* soap_dup__tmd__GetSerialPortConfiguration(struct soap*, _tmd__GetSerialPortConfiguration* dst, _tmd__GetSerialPortConfiguration *src) returns deep copy of _tmd__GetSerialPortConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetSerialPortConfiguration(_tmd__GetSerialPortConfiguration*) deep deletes _tmd__GetSerialPortConfiguration data members, use only on dst after soap_dup__tmd__GetSerialPortConfiguration(NULL, _tmd__GetSerialPortConfiguration *dst, _tmd__GetSerialPortConfiguration *src) (use soapcpp2 -Ed)
struct _tmd__GetSerialPortConfiguration
{
/// Element "SerialPortToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SerialPortToken                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationResponse
/// <PRE><BLOCKQUOTE>
///   Requested serial port configuration.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationResponse is a complexType.
///
/// @note struct _tmd__GetSerialPortConfigurationResponse operations:
/// - _tmd__GetSerialPortConfigurationResponse* soap_new__tmd__GetSerialPortConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetSerialPortConfigurationResponse(struct soap*, _tmd__GetSerialPortConfigurationResponse*) default initialize members
/// - int soap_read__tmd__GetSerialPortConfigurationResponse(struct soap*, _tmd__GetSerialPortConfigurationResponse*) deserialize from a source
/// - int soap_write__tmd__GetSerialPortConfigurationResponse(struct soap*, _tmd__GetSerialPortConfigurationResponse*) serialize to a sink
/// - _tmd__GetSerialPortConfigurationResponse* soap_dup__tmd__GetSerialPortConfigurationResponse(struct soap*, _tmd__GetSerialPortConfigurationResponse* dst, _tmd__GetSerialPortConfigurationResponse *src) returns deep copy of _tmd__GetSerialPortConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetSerialPortConfigurationResponse(_tmd__GetSerialPortConfigurationResponse*) deep deletes _tmd__GetSerialPortConfigurationResponse data members, use only on dst after soap_dup__tmd__GetSerialPortConfigurationResponse(NULL, _tmd__GetSerialPortConfigurationResponse *dst, _tmd__GetSerialPortConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetSerialPortConfigurationResponse
{
/// Element "SerialPortConfiguration" of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration.
    struct tmd__SerialPortConfiguration*  SerialPortConfiguration        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfiguration
/// <PRE><BLOCKQUOTE>
///   Sets the configuration that relates to serial port configuration.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfiguration is a complexType.
///
/// @note struct _tmd__SetSerialPortConfiguration operations:
/// - _tmd__SetSerialPortConfiguration* soap_new__tmd__SetSerialPortConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SetSerialPortConfiguration(struct soap*, _tmd__SetSerialPortConfiguration*) default initialize members
/// - int soap_read__tmd__SetSerialPortConfiguration(struct soap*, _tmd__SetSerialPortConfiguration*) deserialize from a source
/// - int soap_write__tmd__SetSerialPortConfiguration(struct soap*, _tmd__SetSerialPortConfiguration*) serialize to a sink
/// - _tmd__SetSerialPortConfiguration* soap_dup__tmd__SetSerialPortConfiguration(struct soap*, _tmd__SetSerialPortConfiguration* dst, _tmd__SetSerialPortConfiguration *src) returns deep copy of _tmd__SetSerialPortConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SetSerialPortConfiguration(_tmd__SetSerialPortConfiguration*) deep deletes _tmd__SetSerialPortConfiguration data members, use only on dst after soap_dup__tmd__SetSerialPortConfiguration(NULL, _tmd__SetSerialPortConfiguration *dst, _tmd__SetSerialPortConfiguration *src) (use soapcpp2 -Ed)
struct _tmd__SetSerialPortConfiguration
{
/// Element "SerialPortConfiguration" of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration.
    struct tmd__SerialPortConfiguration*  SerialPortConfiguration        1;	///< Required element.
/// Element "ForcePersistance" of type xs:boolean.
    enum xsd__boolean                    ForcePersistance               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfigurationResponse is a complexType.
///
/// @note struct _tmd__SetSerialPortConfigurationResponse operations:
/// - _tmd__SetSerialPortConfigurationResponse* soap_new__tmd__SetSerialPortConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SetSerialPortConfigurationResponse(struct soap*, _tmd__SetSerialPortConfigurationResponse*) default initialize members
/// - int soap_read__tmd__SetSerialPortConfigurationResponse(struct soap*, _tmd__SetSerialPortConfigurationResponse*) deserialize from a source
/// - int soap_write__tmd__SetSerialPortConfigurationResponse(struct soap*, _tmd__SetSerialPortConfigurationResponse*) serialize to a sink
/// - _tmd__SetSerialPortConfigurationResponse* soap_dup__tmd__SetSerialPortConfigurationResponse(struct soap*, _tmd__SetSerialPortConfigurationResponse* dst, _tmd__SetSerialPortConfigurationResponse *src) returns deep copy of _tmd__SetSerialPortConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SetSerialPortConfigurationResponse(_tmd__SetSerialPortConfigurationResponse*) deep deletes _tmd__SetSerialPortConfigurationResponse data members, use only on dst after soap_dup__tmd__SetSerialPortConfigurationResponse(NULL, _tmd__SetSerialPortConfigurationResponse *dst, _tmd__SetSerialPortConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tmd__SetSerialPortConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptions
/// <PRE><BLOCKQUOTE>
///   Gets the configuration options that relates to serial port configuration.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptions is a complexType.
///
/// @note struct _tmd__GetSerialPortConfigurationOptions operations:
/// - _tmd__GetSerialPortConfigurationOptions* soap_new__tmd__GetSerialPortConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetSerialPortConfigurationOptions(struct soap*, _tmd__GetSerialPortConfigurationOptions*) default initialize members
/// - int soap_read__tmd__GetSerialPortConfigurationOptions(struct soap*, _tmd__GetSerialPortConfigurationOptions*) deserialize from a source
/// - int soap_write__tmd__GetSerialPortConfigurationOptions(struct soap*, _tmd__GetSerialPortConfigurationOptions*) serialize to a sink
/// - _tmd__GetSerialPortConfigurationOptions* soap_dup__tmd__GetSerialPortConfigurationOptions(struct soap*, _tmd__GetSerialPortConfigurationOptions* dst, _tmd__GetSerialPortConfigurationOptions *src) returns deep copy of _tmd__GetSerialPortConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetSerialPortConfigurationOptions(_tmd__GetSerialPortConfigurationOptions*) deep deletes _tmd__GetSerialPortConfigurationOptions data members, use only on dst after soap_dup__tmd__GetSerialPortConfigurationOptions(NULL, _tmd__GetSerialPortConfigurationOptions *dst, _tmd__GetSerialPortConfigurationOptions *src) (use soapcpp2 -Ed)
struct _tmd__GetSerialPortConfigurationOptions
{
/// Element "SerialPortToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SerialPortToken                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptionsResponse
/// <PRE><BLOCKQUOTE>
///   Requested serial port configuration options.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptionsResponse is a complexType.
///
/// @note struct _tmd__GetSerialPortConfigurationOptionsResponse operations:
/// - _tmd__GetSerialPortConfigurationOptionsResponse* soap_new__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, _tmd__GetSerialPortConfigurationOptionsResponse*) default initialize members
/// - int soap_read__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, _tmd__GetSerialPortConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, _tmd__GetSerialPortConfigurationOptionsResponse*) serialize to a sink
/// - _tmd__GetSerialPortConfigurationOptionsResponse* soap_dup__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, _tmd__GetSerialPortConfigurationOptionsResponse* dst, _tmd__GetSerialPortConfigurationOptionsResponse *src) returns deep copy of _tmd__GetSerialPortConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__GetSerialPortConfigurationOptionsResponse(_tmd__GetSerialPortConfigurationOptionsResponse*) deep deletes _tmd__GetSerialPortConfigurationOptionsResponse data members, use only on dst after soap_dup__tmd__GetSerialPortConfigurationOptionsResponse(NULL, _tmd__GetSerialPortConfigurationOptionsResponse *dst, _tmd__GetSerialPortConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _tmd__GetSerialPortConfigurationOptionsResponse
{
/// Element "SerialPortOptions" of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfigurationOptions.
    struct tmd__SerialPortConfigurationOptions*  SerialPortOptions              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommand
/// <PRE><BLOCKQUOTE>
///   Transmitting arbitrary data to the connected serial device and then receiving its response data.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommand is a complexType.
///
/// @note struct _tmd__SendReceiveSerialCommand operations:
/// - _tmd__SendReceiveSerialCommand* soap_new__tmd__SendReceiveSerialCommand(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SendReceiveSerialCommand(struct soap*, _tmd__SendReceiveSerialCommand*) default initialize members
/// - int soap_read__tmd__SendReceiveSerialCommand(struct soap*, _tmd__SendReceiveSerialCommand*) deserialize from a source
/// - int soap_write__tmd__SendReceiveSerialCommand(struct soap*, _tmd__SendReceiveSerialCommand*) serialize to a sink
/// - _tmd__SendReceiveSerialCommand* soap_dup__tmd__SendReceiveSerialCommand(struct soap*, _tmd__SendReceiveSerialCommand* dst, _tmd__SendReceiveSerialCommand *src) returns deep copy of _tmd__SendReceiveSerialCommand src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SendReceiveSerialCommand(_tmd__SendReceiveSerialCommand*) deep deletes _tmd__SendReceiveSerialCommand data members, use only on dst after soap_dup__tmd__SendReceiveSerialCommand(NULL, _tmd__SendReceiveSerialCommand *dst, _tmd__SendReceiveSerialCommand *src) (use soapcpp2 -Ed)
struct _tmd__SendReceiveSerialCommand
{
/// <PRE><BLOCKQUOTE>
///   The physical serial port reference to be used when this request is invoked.
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The serial port data.
/// </BLOCKQUOTE></PRE>
///
/// Element "SerialData" of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData.
    struct tmd__SerialData*              SerialData                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates that the command should be responded back within the specified period of time.
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeOut" of type xs:duration.
    xsd__duration                        TimeOut                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This element may be put in the case that data length returned from the connected serial device is already determined as some fixed bytes length. It indicates the length of received data which can be regarded as available.
/// </BLOCKQUOTE></PRE>
///
/// Element "DataLength" of type xs:integer.
    xsd__integer                         DataLength                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This element may be put in the case that the delimiter codes returned from the connected serial device is already known. It indicates the termination data sequence of the responded data. In case the string has more than one character a device shall interpret the whole string as a single delimiter. Furthermore a device shall return the delimiter character(s) to the client.
/// </BLOCKQUOTE></PRE>
///
/// Element "Delimiter" of type xs:string.
    char*                                Delimiter                      0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommandResponse
/// <PRE><BLOCKQUOTE>
///   Receiving the response data.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommandResponse is a complexType.
///
/// @note struct _tmd__SendReceiveSerialCommandResponse operations:
/// - _tmd__SendReceiveSerialCommandResponse* soap_new__tmd__SendReceiveSerialCommandResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tmd__SendReceiveSerialCommandResponse(struct soap*, _tmd__SendReceiveSerialCommandResponse*) default initialize members
/// - int soap_read__tmd__SendReceiveSerialCommandResponse(struct soap*, _tmd__SendReceiveSerialCommandResponse*) deserialize from a source
/// - int soap_write__tmd__SendReceiveSerialCommandResponse(struct soap*, _tmd__SendReceiveSerialCommandResponse*) serialize to a sink
/// - _tmd__SendReceiveSerialCommandResponse* soap_dup__tmd__SendReceiveSerialCommandResponse(struct soap*, _tmd__SendReceiveSerialCommandResponse* dst, _tmd__SendReceiveSerialCommandResponse *src) returns deep copy of _tmd__SendReceiveSerialCommandResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tmd__SendReceiveSerialCommandResponse(_tmd__SendReceiveSerialCommandResponse*) deep deletes _tmd__SendReceiveSerialCommandResponse data members, use only on dst after soap_dup__tmd__SendReceiveSerialCommandResponse(NULL, _tmd__SendReceiveSerialCommandResponse *dst, _tmd__SendReceiveSerialCommandResponse *src) (use soapcpp2 -Ed)
struct _tmd__SendReceiveSerialCommandResponse
{
/// Element "SerialData" of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData.
    struct tmd__SerialData*              SerialData                     0;	///< Optional element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":Service is a complexType.
///
/// @note struct tds__Service operations:
/// - tds__Service* soap_new_tds__Service(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__Service(struct soap*, tds__Service*) default initialize members
/// - int soap_read_tds__Service(struct soap*, tds__Service*) deserialize from a source
/// - int soap_write_tds__Service(struct soap*, tds__Service*) serialize to a sink
/// - tds__Service* soap_dup_tds__Service(struct soap*, tds__Service* dst, tds__Service *src) returns deep copy of tds__Service src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__Service(tds__Service*) deep deletes tds__Service data members, use only on dst after soap_dup_tds__Service(NULL, tds__Service *dst, tds__Service *src) (use soapcpp2 -Ed)
struct tds__Service
{
/// <PRE><BLOCKQUOTE>
///   Namespace of the service being described. This parameter allows to match the service capabilities to the service. Note that only one set of capabilities is supported per namespace.
/// </BLOCKQUOTE></PRE>
///
/// Element "Namespace" of type xs:anyURI.
    xsd__anyURI                          Namespace                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The transport addresses where the service can be reached. The scheme and IP part shall match the one used in the request (i.e. the GetServices request).
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @note struct _tds__Service_Capabilities operations:
/// - _tds__Service_Capabilities* soap_new__tds__Service_Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities*) default initialize members
/// - int soap_read__tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities*) deserialize from a source
/// - int soap_write__tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities*) serialize to a sink
/// - _tds__Service_Capabilities* soap_dup__tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities* dst, _tds__Service_Capabilities *src) returns deep copy of _tds__Service_Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__Service_Capabilities(_tds__Service_Capabilities*) deep deletes _tds__Service_Capabilities data members, use only on dst after soap_dup__tds__Service_Capabilities(NULL, _tds__Service_Capabilities *dst, _tds__Service_Capabilities *src) (use soapcpp2 -Ed)
    struct _tds__Service_Capabilities
    {
/// <any namespace="##any">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Capabilities                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The version of the service (not the ONVIF core spec version).
/// </BLOCKQUOTE></PRE>
///
/// Element "Version" of type "http://www.onvif.org/ver10/schema":OnvifVersion.
    struct tt__OnvifVersion*             Version                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities is a complexType.
///
/// @note struct tds__DeviceServiceCapabilities operations:
/// - tds__DeviceServiceCapabilities* soap_new_tds__DeviceServiceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities*) default initialize members
/// - int soap_read_tds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities*) deserialize from a source
/// - int soap_write_tds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities*) serialize to a sink
/// - tds__DeviceServiceCapabilities* soap_dup_tds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities* dst, tds__DeviceServiceCapabilities *src) returns deep copy of tds__DeviceServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__DeviceServiceCapabilities(tds__DeviceServiceCapabilities*) deep deletes tds__DeviceServiceCapabilities data members, use only on dst after soap_dup_tds__DeviceServiceCapabilities(NULL, tds__DeviceServiceCapabilities *dst, tds__DeviceServiceCapabilities *src) (use soapcpp2 -Ed)
struct tds__DeviceServiceCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Network" of type "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities.
    struct tds__NetworkCapabilities*     Network                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Security" of type "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities.
    struct tds__SecurityCapabilities*    Security                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "System" of type "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities.
    struct tds__SystemCapabilities*      System                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Capabilities that do not fit in any of the other categories.
/// </BLOCKQUOTE></PRE>
///
/// Element "Misc" of type "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities.
    struct tds__MiscCapabilities*        Misc                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities is a complexType.
///
/// @note struct tds__NetworkCapabilities operations:
/// - tds__NetworkCapabilities* soap_new_tds__NetworkCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities*) default initialize members
/// - int soap_read_tds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities*) deserialize from a source
/// - int soap_write_tds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities*) serialize to a sink
/// - tds__NetworkCapabilities* soap_dup_tds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities* dst, tds__NetworkCapabilities *src) returns deep copy of tds__NetworkCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__NetworkCapabilities(tds__NetworkCapabilities*) deep deletes tds__NetworkCapabilities data members, use only on dst after soap_dup_tds__NetworkCapabilities(NULL, tds__NetworkCapabilities *dst, tds__NetworkCapabilities *src) (use soapcpp2 -Ed)
struct tds__NetworkCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates support for IP filtering.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IPFilter" of type xs:boolean.
  @ enum xsd__boolean*                   IPFilter                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for zeroconf.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ZeroConfiguration" of type xs:boolean.
  @ enum xsd__boolean*                   ZeroConfiguration              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IPv6.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IPVersion6" of type xs:boolean.
  @ enum xsd__boolean*                   IPVersion6                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for dynamic DNS configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DynDNS" of type xs:boolean.
  @ enum xsd__boolean*                   DynDNS                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.11 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot11Configuration" of type xs:boolean.
  @ enum xsd__boolean*                   Dot11Configuration             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of Dot1X configurations supported by the device
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot1XConfigurations" of type xs:int.
  @ int*                                 Dot1XConfigurations            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of hostname from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HostnameFromDHCP" of type xs:boolean.
  @ enum xsd__boolean*                   HostnameFromDHCP               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of NTP servers supported by the devices SetNTP command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "NTP" of type xs:int.
  @ int*                                 NTP                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for Stateful IPv6 DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DHCPv6" of type xs:boolean.
  @ enum xsd__boolean*                   DHCPv6                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities is a complexType.
///
/// @note struct tds__SecurityCapabilities operations:
/// - tds__SecurityCapabilities* soap_new_tds__SecurityCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities*) default initialize members
/// - int soap_read_tds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities*) deserialize from a source
/// - int soap_write_tds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities*) serialize to a sink
/// - tds__SecurityCapabilities* soap_dup_tds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities* dst, tds__SecurityCapabilities *src) returns deep copy of tds__SecurityCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__SecurityCapabilities(tds__SecurityCapabilities*) deep deletes tds__SecurityCapabilities data members, use only on dst after soap_dup_tds__SecurityCapabilities(NULL, tds__SecurityCapabilities *dst, tds__SecurityCapabilities *src) (use soapcpp2 -Ed)
struct tds__SecurityCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.0.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.0" of type xs:boolean.
  @ enum xsd__boolean*                   TLS1_x002e0                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.1.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.1" of type xs:boolean.
  @ enum xsd__boolean*                   TLS1_x002e1                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.2.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.2" of type xs:boolean.
  @ enum xsd__boolean*                   TLS1_x002e2                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for onboard key generation.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "OnboardKeyGeneration" of type xs:boolean.
  @ enum xsd__boolean*                   OnboardKeyGeneration           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for access policy configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AccessPolicyConfig" of type xs:boolean.
  @ enum xsd__boolean*                   AccessPolicyConfig             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for the ONVIF default access policy.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DefaultAccessPolicy" of type xs:boolean.
  @ enum xsd__boolean*                   DefaultAccessPolicy            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.1X configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot1X" of type xs:boolean.
  @ enum xsd__boolean*                   Dot1X                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote user configuration. Used when accessing another device.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RemoteUserHandling" of type xs:boolean.
  @ enum xsd__boolean*                   RemoteUserHandling             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security X.509 token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "X.509Token" of type xs:boolean.
  @ enum xsd__boolean*                   X_x002e509Token                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security SAML token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SAMLToken" of type xs:boolean.
  @ enum xsd__boolean*                   SAMLToken                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Kerberos token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "KerberosToken" of type xs:boolean.
  @ enum xsd__boolean*                   KerberosToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Username token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "UsernameToken" of type xs:boolean.
  @ enum xsd__boolean*                   UsernameToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS over HTTP digest authenticated communication layer.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpDigest" of type xs:boolean.
  @ enum xsd__boolean*                   HttpDigest                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security REL token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RELToken" of type xs:boolean.
  @ enum xsd__boolean*                   RELToken                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SupportedEAPMethods" of type "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes.
  @ tds__EAPMethodTypes                  SupportedEAPMethods            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum number of users that the device supports.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxUsers" of type xs:int.
  @ int*                                 MaxUsers                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of characters supported for the username by CreateUsers.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxUserNameLength" of type xs:int.
  @ int*                                 MaxUserNameLength              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of characters supported for the password by CreateUsers and SetUser.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxPasswordLength" of type xs:int.
  @ int*                                 MaxPasswordLength              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities is a complexType.
///
/// @note struct tds__SystemCapabilities operations:
/// - tds__SystemCapabilities* soap_new_tds__SystemCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__SystemCapabilities(struct soap*, tds__SystemCapabilities*) default initialize members
/// - int soap_read_tds__SystemCapabilities(struct soap*, tds__SystemCapabilities*) deserialize from a source
/// - int soap_write_tds__SystemCapabilities(struct soap*, tds__SystemCapabilities*) serialize to a sink
/// - tds__SystemCapabilities* soap_dup_tds__SystemCapabilities(struct soap*, tds__SystemCapabilities* dst, tds__SystemCapabilities *src) returns deep copy of tds__SystemCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__SystemCapabilities(tds__SystemCapabilities*) deep deletes tds__SystemCapabilities data members, use only on dst after soap_dup_tds__SystemCapabilities(NULL, tds__SystemCapabilities *dst, tds__SystemCapabilities *src) (use soapcpp2 -Ed)
struct tds__SystemCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS Discovery resolve requests.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DiscoveryResolve" of type xs:boolean.
  @ enum xsd__boolean*                   DiscoveryResolve               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Discovery Bye.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DiscoveryBye" of type xs:boolean.
  @ enum xsd__boolean*                   DiscoveryBye                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote discovery.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RemoteDiscovery" of type xs:boolean.
  @ enum xsd__boolean*                   RemoteDiscovery                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SystemBackup" of type xs:boolean.
  @ enum xsd__boolean*                   SystemBackup                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SystemLogging" of type xs:boolean.
  @ enum xsd__boolean*                   SystemLogging                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FirmwareUpgrade" of type xs:boolean.
  @ enum xsd__boolean*                   FirmwareUpgrade                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpFirmwareUpgrade" of type xs:boolean.
  @ enum xsd__boolean*                   HttpFirmwareUpgrade            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSystemBackup" of type xs:boolean.
  @ enum xsd__boolean*                   HttpSystemBackup               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSystemLogging" of type xs:boolean.
  @ enum xsd__boolean*                   HttpSystemLogging              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieving support information through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSupportInformation" of type xs:boolean.
  @ enum xsd__boolean*                   HttpSupportInformation         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for storage configuration interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StorageConfiguration" of type xs:boolean.
  @ enum xsd__boolean*                   StorageConfiguration           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates maximum number of storage configurations supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxStorageConfigurations" of type xs:int.
  @ int*                                 MaxStorageConfigurations       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If present signals support for geo location. The value signals the supported number of entries.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoLocationEntries" of type xs:int.
  @ int*                                 GeoLocationEntries             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   List of supported automatic GeoLocation adjustment supported by the device. Valid items are defined by tds:AutoGeoMode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AutoGeo" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   AutoGeo                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Enumerates the supported StorageTypes, see tds:StorageType.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StorageTypesSupported" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   StorageTypesSupported          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities is a complexType.
///
/// @note struct tds__MiscCapabilities operations:
/// - tds__MiscCapabilities* soap_new_tds__MiscCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__MiscCapabilities(struct soap*, tds__MiscCapabilities*) default initialize members
/// - int soap_read_tds__MiscCapabilities(struct soap*, tds__MiscCapabilities*) deserialize from a source
/// - int soap_write_tds__MiscCapabilities(struct soap*, tds__MiscCapabilities*) serialize to a sink
/// - tds__MiscCapabilities* soap_dup_tds__MiscCapabilities(struct soap*, tds__MiscCapabilities* dst, tds__MiscCapabilities *src) returns deep copy of tds__MiscCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__MiscCapabilities(tds__MiscCapabilities*) deep deletes tds__MiscCapabilities data members, use only on dst after soap_dup_tds__MiscCapabilities(NULL, tds__MiscCapabilities *dst, tds__MiscCapabilities *src) (use soapcpp2 -Ed)
struct tds__MiscCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Lists of commands supported by SendAuxiliaryCommand.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AuxiliaryCommands" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   AuxiliaryCommands              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":UserCredential is a complexType.
///
/// @note struct tds__UserCredential operations:
/// - tds__UserCredential* soap_new_tds__UserCredential(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__UserCredential(struct soap*, tds__UserCredential*) default initialize members
/// - int soap_read_tds__UserCredential(struct soap*, tds__UserCredential*) deserialize from a source
/// - int soap_write_tds__UserCredential(struct soap*, tds__UserCredential*) serialize to a sink
/// - tds__UserCredential* soap_dup_tds__UserCredential(struct soap*, tds__UserCredential* dst, tds__UserCredential *src) returns deep copy of tds__UserCredential src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__UserCredential(tds__UserCredential*) deep deletes tds__UserCredential data members, use only on dst after soap_dup_tds__UserCredential(NULL, tds__UserCredential *dst, tds__UserCredential *src) (use soapcpp2 -Ed)
struct tds__UserCredential
{
/// <PRE><BLOCKQUOTE>
///   User name
/// </BLOCKQUOTE></PRE>
///
/// Element "UserName" of type xs:string.
    char*                                UserName                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   optional password
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// @note struct _tds__UserCredential_Extension operations:
/// - _tds__UserCredential_Extension* soap_new__tds__UserCredential_Extension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__UserCredential_Extension(struct soap*, _tds__UserCredential_Extension*) default initialize members
/// - int soap_read__tds__UserCredential_Extension(struct soap*, _tds__UserCredential_Extension*) deserialize from a source
/// - int soap_write__tds__UserCredential_Extension(struct soap*, _tds__UserCredential_Extension*) serialize to a sink
/// - _tds__UserCredential_Extension* soap_dup__tds__UserCredential_Extension(struct soap*, _tds__UserCredential_Extension* dst, _tds__UserCredential_Extension *src) returns deep copy of _tds__UserCredential_Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__UserCredential_Extension(_tds__UserCredential_Extension*) deep deletes _tds__UserCredential_Extension data members, use only on dst after soap_dup__tds__UserCredential_Extension(NULL, _tds__UserCredential_Extension *dst, _tds__UserCredential_Extension *src) (use soapcpp2 -Ed)
    struct _tds__UserCredential_Extension
    {
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData is a complexType.
///
/// @note struct tds__StorageConfigurationData operations:
/// - tds__StorageConfigurationData* soap_new_tds__StorageConfigurationData(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__StorageConfigurationData(struct soap*, tds__StorageConfigurationData*) default initialize members
/// - int soap_read_tds__StorageConfigurationData(struct soap*, tds__StorageConfigurationData*) deserialize from a source
/// - int soap_write_tds__StorageConfigurationData(struct soap*, tds__StorageConfigurationData*) serialize to a sink
/// - tds__StorageConfigurationData* soap_dup_tds__StorageConfigurationData(struct soap*, tds__StorageConfigurationData* dst, tds__StorageConfigurationData *src) returns deep copy of tds__StorageConfigurationData src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__StorageConfigurationData(tds__StorageConfigurationData*) deep deletes tds__StorageConfigurationData data members, use only on dst after soap_dup_tds__StorageConfigurationData(NULL, tds__StorageConfigurationData *dst, tds__StorageConfigurationData *src) (use soapcpp2 -Ed)
struct tds__StorageConfigurationData
{
/// <PRE><BLOCKQUOTE>
///   local path
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalPath" of type xs:anyURI.
    xsd__anyURI                          LocalPath                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Storage server address
/// </BLOCKQUOTE></PRE>
///
/// Element "StorageUri" of type xs:anyURI.
    xsd__anyURI                          StorageUri                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User credential for the storage server
/// </BLOCKQUOTE></PRE>
///
/// Element "User" of type "http://www.onvif.org/ver10/device/wsdl":UserCredential.
    struct tds__UserCredential*          User                           0;	///< Optional element.
/// @note struct _tds__StorageConfigurationData_Extension operations:
/// - _tds__StorageConfigurationData_Extension* soap_new__tds__StorageConfigurationData_Extension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__StorageConfigurationData_Extension(struct soap*, _tds__StorageConfigurationData_Extension*) default initialize members
/// - int soap_read__tds__StorageConfigurationData_Extension(struct soap*, _tds__StorageConfigurationData_Extension*) deserialize from a source
/// - int soap_write__tds__StorageConfigurationData_Extension(struct soap*, _tds__StorageConfigurationData_Extension*) serialize to a sink
/// - _tds__StorageConfigurationData_Extension* soap_dup__tds__StorageConfigurationData_Extension(struct soap*, _tds__StorageConfigurationData_Extension* dst, _tds__StorageConfigurationData_Extension *src) returns deep copy of _tds__StorageConfigurationData_Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__StorageConfigurationData_Extension(_tds__StorageConfigurationData_Extension*) deep deletes _tds__StorageConfigurationData_Extension data members, use only on dst after soap_dup__tds__StorageConfigurationData_Extension(NULL, _tds__StorageConfigurationData_Extension *dst, _tds__StorageConfigurationData_Extension *src) (use soapcpp2 -Ed)
    struct _tds__StorageConfigurationData_Extension
    {
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   StorageType lists the acceptable values for type attribute
/// </BLOCKQUOTE></PRE>
///
/// Attribute "type" of type xs:string.
  @ char*                                type                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServices
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServices is a complexType.
///
/// @note struct _tds__GetServices operations:
/// - _tds__GetServices* soap_new__tds__GetServices(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetServices(struct soap*, _tds__GetServices*) default initialize members
/// - int soap_read__tds__GetServices(struct soap*, _tds__GetServices*) deserialize from a source
/// - int soap_write__tds__GetServices(struct soap*, _tds__GetServices*) serialize to a sink
/// - _tds__GetServices* soap_dup__tds__GetServices(struct soap*, _tds__GetServices* dst, _tds__GetServices *src) returns deep copy of _tds__GetServices src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetServices(_tds__GetServices*) deep deletes _tds__GetServices data members, use only on dst after soap_dup__tds__GetServices(NULL, _tds__GetServices *dst, _tds__GetServices *src) (use soapcpp2 -Ed)
struct _tds__GetServices
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the service capabilities (untyped) should be included in the response.
/// </BLOCKQUOTE></PRE>
///
/// Element "IncludeCapability" of type xs:boolean.
    enum xsd__boolean                    IncludeCapability              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse is a complexType.
///
/// @note struct _tds__GetServicesResponse operations:
/// - _tds__GetServicesResponse* soap_new__tds__GetServicesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*) default initialize members
/// - int soap_read__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*) deserialize from a source
/// - int soap_write__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*) serialize to a sink
/// - _tds__GetServicesResponse* soap_dup__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse* dst, _tds__GetServicesResponse *src) returns deep copy of _tds__GetServicesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetServicesResponse(_tds__GetServicesResponse*) deep deletes _tds__GetServicesResponse data members, use only on dst after soap_dup__tds__GetServicesResponse(NULL, _tds__GetServicesResponse *dst, _tds__GetServicesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetServicesResponse
{
/// <PRE><BLOCKQUOTE>
///   Each Service element contains information about one service.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tds__Service* is 1..unbounded.
  $ int                                  __sizeService                  1;
/// Array struct tds__Service* of size 1..unbounded.
    struct tds__Service*                 Service                        1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities is a complexType.
///
/// @note struct _tds__GetServiceCapabilities operations:
/// - _tds__GetServiceCapabilities* soap_new__tds__GetServiceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*) default initialize members
/// - int soap_read__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*) deserialize from a source
/// - int soap_write__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*) serialize to a sink
/// - _tds__GetServiceCapabilities* soap_dup__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities* dst, _tds__GetServiceCapabilities *src) returns deep copy of _tds__GetServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetServiceCapabilities(_tds__GetServiceCapabilities*) deep deletes _tds__GetServiceCapabilities data members, use only on dst after soap_dup__tds__GetServiceCapabilities(NULL, _tds__GetServiceCapabilities *dst, _tds__GetServiceCapabilities *src) (use soapcpp2 -Ed)
struct _tds__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note struct _tds__GetServiceCapabilitiesResponse operations:
/// - _tds__GetServiceCapabilitiesResponse* soap_new__tds__GetServiceCapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*) default initialize members
/// - int soap_read__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*) deserialize from a source
/// - int soap_write__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*) serialize to a sink
/// - _tds__GetServiceCapabilitiesResponse* soap_dup__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse* dst, _tds__GetServiceCapabilitiesResponse *src) returns deep copy of _tds__GetServiceCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetServiceCapabilitiesResponse(_tds__GetServiceCapabilitiesResponse*) deep deletes _tds__GetServiceCapabilitiesResponse data members, use only on dst after soap_dup__tds__GetServiceCapabilitiesResponse(NULL, _tds__GetServiceCapabilitiesResponse *dst, _tds__GetServiceCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the device service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
    struct tds__DeviceServiceCapabilities*  Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation is a complexType.
///
/// @note struct _tds__GetDeviceInformation operations:
/// - _tds__GetDeviceInformation* soap_new__tds__GetDeviceInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*) default initialize members
/// - int soap_read__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*) deserialize from a source
/// - int soap_write__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*) serialize to a sink
/// - _tds__GetDeviceInformation* soap_dup__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation* dst, _tds__GetDeviceInformation *src) returns deep copy of _tds__GetDeviceInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDeviceInformation(_tds__GetDeviceInformation*) deep deletes _tds__GetDeviceInformation data members, use only on dst after soap_dup__tds__GetDeviceInformation(NULL, _tds__GetDeviceInformation *dst, _tds__GetDeviceInformation *src) (use soapcpp2 -Ed)
struct _tds__GetDeviceInformation
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse is a complexType.
///
/// @note struct _tds__GetDeviceInformationResponse operations:
/// - _tds__GetDeviceInformationResponse* soap_new__tds__GetDeviceInformationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*) default initialize members
/// - int soap_read__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*) deserialize from a source
/// - int soap_write__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*) serialize to a sink
/// - _tds__GetDeviceInformationResponse* soap_dup__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse* dst, _tds__GetDeviceInformationResponse *src) returns deep copy of _tds__GetDeviceInformationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDeviceInformationResponse(_tds__GetDeviceInformationResponse*) deep deletes _tds__GetDeviceInformationResponse data members, use only on dst after soap_dup__tds__GetDeviceInformationResponse(NULL, _tds__GetDeviceInformationResponse *dst, _tds__GetDeviceInformationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDeviceInformationResponse
{
/// <PRE><BLOCKQUOTE>
///   The manufactor of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Manufacturer" of type xs:string.
    char*                                Manufacturer                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The device model.
/// </BLOCKQUOTE></PRE>
///
/// Element "Model" of type xs:string.
    char*                                Model                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The firmware version in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "FirmwareVersion" of type xs:string.
    char*                                FirmwareVersion                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The serial number of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "SerialNumber" of type xs:string.
    char*                                SerialNumber                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The hardware ID of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "HardwareId" of type xs:string.
    char*                                HardwareId                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime is a complexType.
///
/// @note struct _tds__SetSystemDateAndTime operations:
/// - _tds__SetSystemDateAndTime* soap_new__tds__SetSystemDateAndTime(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*) default initialize members
/// - int soap_read__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*) deserialize from a source
/// - int soap_write__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*) serialize to a sink
/// - _tds__SetSystemDateAndTime* soap_dup__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime* dst, _tds__SetSystemDateAndTime *src) returns deep copy of _tds__SetSystemDateAndTime src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetSystemDateAndTime(_tds__SetSystemDateAndTime*) deep deletes _tds__SetSystemDateAndTime data members, use only on dst after soap_dup__tds__SetSystemDateAndTime(NULL, _tds__SetSystemDateAndTime *dst, _tds__SetSystemDateAndTime *src) (use soapcpp2 -Ed)
struct _tds__SetSystemDateAndTime
{
/// <PRE><BLOCKQUOTE>
///   Defines if the date and time is set via NTP or manually.
/// </BLOCKQUOTE></PRE>
///
/// Element "DateTimeType" of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Automatically adjust Daylight savings if defined in TimeZone.
/// </BLOCKQUOTE></PRE>
///
/// Element "DaylightSavings" of type xs:boolean.
    enum xsd__boolean                    DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time zone in POSIX 1003.1 format
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeZone" of type "http://www.onvif.org/ver10/schema":TimeZone.
    struct tt__TimeZone*                 TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in UTC. If time is obtained via NTP, UTCDateTime has no meaning
/// </BLOCKQUOTE></PRE>
///
/// Element "UTCDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    struct tt__DateTime*                 UTCDateTime                    0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse is a complexType.
///
/// @note struct _tds__SetSystemDateAndTimeResponse operations:
/// - _tds__SetSystemDateAndTimeResponse* soap_new__tds__SetSystemDateAndTimeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*) default initialize members
/// - int soap_read__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*) deserialize from a source
/// - int soap_write__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*) serialize to a sink
/// - _tds__SetSystemDateAndTimeResponse* soap_dup__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse* dst, _tds__SetSystemDateAndTimeResponse *src) returns deep copy of _tds__SetSystemDateAndTimeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetSystemDateAndTimeResponse(_tds__SetSystemDateAndTimeResponse*) deep deletes _tds__SetSystemDateAndTimeResponse data members, use only on dst after soap_dup__tds__SetSystemDateAndTimeResponse(NULL, _tds__SetSystemDateAndTimeResponse *dst, _tds__SetSystemDateAndTimeResponse *src) (use soapcpp2 -Ed)
struct _tds__SetSystemDateAndTimeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime is a complexType.
///
/// @note struct _tds__GetSystemDateAndTime operations:
/// - _tds__GetSystemDateAndTime* soap_new__tds__GetSystemDateAndTime(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*) default initialize members
/// - int soap_read__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*) deserialize from a source
/// - int soap_write__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*) serialize to a sink
/// - _tds__GetSystemDateAndTime* soap_dup__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime* dst, _tds__GetSystemDateAndTime *src) returns deep copy of _tds__GetSystemDateAndTime src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemDateAndTime(_tds__GetSystemDateAndTime*) deep deletes _tds__GetSystemDateAndTime data members, use only on dst after soap_dup__tds__GetSystemDateAndTime(NULL, _tds__GetSystemDateAndTime *dst, _tds__GetSystemDateAndTime *src) (use soapcpp2 -Ed)
struct _tds__GetSystemDateAndTime
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse is a complexType.
///
/// @note struct _tds__GetSystemDateAndTimeResponse operations:
/// - _tds__GetSystemDateAndTimeResponse* soap_new__tds__GetSystemDateAndTimeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*) default initialize members
/// - int soap_read__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*) deserialize from a source
/// - int soap_write__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*) serialize to a sink
/// - _tds__GetSystemDateAndTimeResponse* soap_dup__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse* dst, _tds__GetSystemDateAndTimeResponse *src) returns deep copy of _tds__GetSystemDateAndTimeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemDateAndTimeResponse(_tds__GetSystemDateAndTimeResponse*) deep deletes _tds__GetSystemDateAndTimeResponse data members, use only on dst after soap_dup__tds__GetSystemDateAndTimeResponse(NULL, _tds__GetSystemDateAndTimeResponse *dst, _tds__GetSystemDateAndTimeResponse *src) (use soapcpp2 -Ed)
struct _tds__GetSystemDateAndTimeResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains information whether system date and time are set manually or by NTP, daylight savings is on or off, time zone in POSIX 1003.1 format and system date and time in UTC and also local system date and time.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemDateAndTime" of type "http://www.onvif.org/ver10/schema":SystemDateTime.
    struct tt__SystemDateTime*           SystemDateAndTime              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault is a complexType.
///
/// @note struct _tds__SetSystemFactoryDefault operations:
/// - _tds__SetSystemFactoryDefault* soap_new__tds__SetSystemFactoryDefault(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*) default initialize members
/// - int soap_read__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*) deserialize from a source
/// - int soap_write__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*) serialize to a sink
/// - _tds__SetSystemFactoryDefault* soap_dup__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault* dst, _tds__SetSystemFactoryDefault *src) returns deep copy of _tds__SetSystemFactoryDefault src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetSystemFactoryDefault(_tds__SetSystemFactoryDefault*) deep deletes _tds__SetSystemFactoryDefault data members, use only on dst after soap_dup__tds__SetSystemFactoryDefault(NULL, _tds__SetSystemFactoryDefault *dst, _tds__SetSystemFactoryDefault *src) (use soapcpp2 -Ed)
struct _tds__SetSystemFactoryDefault
{
/// <PRE><BLOCKQUOTE>
///   Specifies the factory default action type.
/// </BLOCKQUOTE></PRE>
///
/// Element "FactoryDefault" of type "http://www.onvif.org/ver10/schema":FactoryDefaultType.
    enum tt__FactoryDefaultType          FactoryDefault                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse is a complexType.
///
/// @note struct _tds__SetSystemFactoryDefaultResponse operations:
/// - _tds__SetSystemFactoryDefaultResponse* soap_new__tds__SetSystemFactoryDefaultResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*) default initialize members
/// - int soap_read__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*) deserialize from a source
/// - int soap_write__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*) serialize to a sink
/// - _tds__SetSystemFactoryDefaultResponse* soap_dup__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse* dst, _tds__SetSystemFactoryDefaultResponse *src) returns deep copy of _tds__SetSystemFactoryDefaultResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetSystemFactoryDefaultResponse(_tds__SetSystemFactoryDefaultResponse*) deep deletes _tds__SetSystemFactoryDefaultResponse data members, use only on dst after soap_dup__tds__SetSystemFactoryDefaultResponse(NULL, _tds__SetSystemFactoryDefaultResponse *dst, _tds__SetSystemFactoryDefaultResponse *src) (use soapcpp2 -Ed)
struct _tds__SetSystemFactoryDefaultResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware is a complexType.
///
/// @note struct _tds__UpgradeSystemFirmware operations:
/// - _tds__UpgradeSystemFirmware* soap_new__tds__UpgradeSystemFirmware(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*) default initialize members
/// - int soap_read__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*) deserialize from a source
/// - int soap_write__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*) serialize to a sink
/// - _tds__UpgradeSystemFirmware* soap_dup__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware* dst, _tds__UpgradeSystemFirmware *src) returns deep copy of _tds__UpgradeSystemFirmware src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__UpgradeSystemFirmware(_tds__UpgradeSystemFirmware*) deep deletes _tds__UpgradeSystemFirmware data members, use only on dst after soap_dup__tds__UpgradeSystemFirmware(NULL, _tds__UpgradeSystemFirmware *dst, _tds__UpgradeSystemFirmware *src) (use soapcpp2 -Ed)
struct _tds__UpgradeSystemFirmware
{
/// Element "Firmware" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Firmware                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse is a complexType.
///
/// @note struct _tds__UpgradeSystemFirmwareResponse operations:
/// - _tds__UpgradeSystemFirmwareResponse* soap_new__tds__UpgradeSystemFirmwareResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*) default initialize members
/// - int soap_read__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*) deserialize from a source
/// - int soap_write__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*) serialize to a sink
/// - _tds__UpgradeSystemFirmwareResponse* soap_dup__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse* dst, _tds__UpgradeSystemFirmwareResponse *src) returns deep copy of _tds__UpgradeSystemFirmwareResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__UpgradeSystemFirmwareResponse(_tds__UpgradeSystemFirmwareResponse*) deep deletes _tds__UpgradeSystemFirmwareResponse data members, use only on dst after soap_dup__tds__UpgradeSystemFirmwareResponse(NULL, _tds__UpgradeSystemFirmwareResponse *dst, _tds__UpgradeSystemFirmwareResponse *src) (use soapcpp2 -Ed)
struct _tds__UpgradeSystemFirmwareResponse
{
/// Element "Message" of type xs:string.
    char*                                Message                        0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemReboot
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemReboot is a complexType.
///
/// @note struct _tds__SystemReboot operations:
/// - _tds__SystemReboot* soap_new__tds__SystemReboot(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SystemReboot(struct soap*, _tds__SystemReboot*) default initialize members
/// - int soap_read__tds__SystemReboot(struct soap*, _tds__SystemReboot*) deserialize from a source
/// - int soap_write__tds__SystemReboot(struct soap*, _tds__SystemReboot*) serialize to a sink
/// - _tds__SystemReboot* soap_dup__tds__SystemReboot(struct soap*, _tds__SystemReboot* dst, _tds__SystemReboot *src) returns deep copy of _tds__SystemReboot src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SystemReboot(_tds__SystemReboot*) deep deletes _tds__SystemReboot data members, use only on dst after soap_dup__tds__SystemReboot(NULL, _tds__SystemReboot *dst, _tds__SystemReboot *src) (use soapcpp2 -Ed)
struct _tds__SystemReboot
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse is a complexType.
///
/// @note struct _tds__SystemRebootResponse operations:
/// - _tds__SystemRebootResponse* soap_new__tds__SystemRebootResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*) default initialize members
/// - int soap_read__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*) deserialize from a source
/// - int soap_write__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*) serialize to a sink
/// - _tds__SystemRebootResponse* soap_dup__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse* dst, _tds__SystemRebootResponse *src) returns deep copy of _tds__SystemRebootResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SystemRebootResponse(_tds__SystemRebootResponse*) deep deletes _tds__SystemRebootResponse data members, use only on dst after soap_dup__tds__SystemRebootResponse(NULL, _tds__SystemRebootResponse *dst, _tds__SystemRebootResponse *src) (use soapcpp2 -Ed)
struct _tds__SystemRebootResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the reboot message sent by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Message" of type xs:string.
    char*                                Message                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystem
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystem is a complexType.
///
/// @note struct _tds__RestoreSystem operations:
/// - _tds__RestoreSystem* soap_new__tds__RestoreSystem(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*) default initialize members
/// - int soap_read__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*) deserialize from a source
/// - int soap_write__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*) serialize to a sink
/// - _tds__RestoreSystem* soap_dup__tds__RestoreSystem(struct soap*, _tds__RestoreSystem* dst, _tds__RestoreSystem *src) returns deep copy of _tds__RestoreSystem src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__RestoreSystem(_tds__RestoreSystem*) deep deletes _tds__RestoreSystem data members, use only on dst after soap_dup__tds__RestoreSystem(NULL, _tds__RestoreSystem *dst, _tds__RestoreSystem *src) (use soapcpp2 -Ed)
struct _tds__RestoreSystem
{
/// Size of array of struct tt__BackupFile* is 1..unbounded.
  $ int                                  __sizeBackupFiles              1;
/// Array struct tt__BackupFile* of size 1..unbounded.
    struct tt__BackupFile*               BackupFiles                    1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse is a complexType.
///
/// @note struct _tds__RestoreSystemResponse operations:
/// - _tds__RestoreSystemResponse* soap_new__tds__RestoreSystemResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*) default initialize members
/// - int soap_read__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*) deserialize from a source
/// - int soap_write__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*) serialize to a sink
/// - _tds__RestoreSystemResponse* soap_dup__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse* dst, _tds__RestoreSystemResponse *src) returns deep copy of _tds__RestoreSystemResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__RestoreSystemResponse(_tds__RestoreSystemResponse*) deep deletes _tds__RestoreSystemResponse data members, use only on dst after soap_dup__tds__RestoreSystemResponse(NULL, _tds__RestoreSystemResponse *dst, _tds__RestoreSystemResponse *src) (use soapcpp2 -Ed)
struct _tds__RestoreSystemResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup is a complexType.
///
/// @note struct _tds__GetSystemBackup operations:
/// - _tds__GetSystemBackup* soap_new__tds__GetSystemBackup(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*) default initialize members
/// - int soap_read__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*) deserialize from a source
/// - int soap_write__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*) serialize to a sink
/// - _tds__GetSystemBackup* soap_dup__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup* dst, _tds__GetSystemBackup *src) returns deep copy of _tds__GetSystemBackup src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemBackup(_tds__GetSystemBackup*) deep deletes _tds__GetSystemBackup data members, use only on dst after soap_dup__tds__GetSystemBackup(NULL, _tds__GetSystemBackup *dst, _tds__GetSystemBackup *src) (use soapcpp2 -Ed)
struct _tds__GetSystemBackup
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse is a complexType.
///
/// @note struct _tds__GetSystemBackupResponse operations:
/// - _tds__GetSystemBackupResponse* soap_new__tds__GetSystemBackupResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*) default initialize members
/// - int soap_read__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*) deserialize from a source
/// - int soap_write__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*) serialize to a sink
/// - _tds__GetSystemBackupResponse* soap_dup__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse* dst, _tds__GetSystemBackupResponse *src) returns deep copy of _tds__GetSystemBackupResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemBackupResponse(_tds__GetSystemBackupResponse*) deep deletes _tds__GetSystemBackupResponse data members, use only on dst after soap_dup__tds__GetSystemBackupResponse(NULL, _tds__GetSystemBackupResponse *dst, _tds__GetSystemBackupResponse *src) (use soapcpp2 -Ed)
struct _tds__GetSystemBackupResponse
{
/// Size of array of struct tt__BackupFile* is 1..unbounded.
  $ int                                  __sizeBackupFiles              1;
/// Array struct tt__BackupFile* of size 1..unbounded.
    struct tt__BackupFile*               BackupFiles                    1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation is a complexType.
///
/// @note struct _tds__GetSystemSupportInformation operations:
/// - _tds__GetSystemSupportInformation* soap_new__tds__GetSystemSupportInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*) default initialize members
/// - int soap_read__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*) deserialize from a source
/// - int soap_write__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*) serialize to a sink
/// - _tds__GetSystemSupportInformation* soap_dup__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation* dst, _tds__GetSystemSupportInformation *src) returns deep copy of _tds__GetSystemSupportInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemSupportInformation(_tds__GetSystemSupportInformation*) deep deletes _tds__GetSystemSupportInformation data members, use only on dst after soap_dup__tds__GetSystemSupportInformation(NULL, _tds__GetSystemSupportInformation *dst, _tds__GetSystemSupportInformation *src) (use soapcpp2 -Ed)
struct _tds__GetSystemSupportInformation
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse is a complexType.
///
/// @note struct _tds__GetSystemSupportInformationResponse operations:
/// - _tds__GetSystemSupportInformationResponse* soap_new__tds__GetSystemSupportInformationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*) default initialize members
/// - int soap_read__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*) deserialize from a source
/// - int soap_write__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*) serialize to a sink
/// - _tds__GetSystemSupportInformationResponse* soap_dup__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse* dst, _tds__GetSystemSupportInformationResponse *src) returns deep copy of _tds__GetSystemSupportInformationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemSupportInformationResponse(_tds__GetSystemSupportInformationResponse*) deep deletes _tds__GetSystemSupportInformationResponse data members, use only on dst after soap_dup__tds__GetSystemSupportInformationResponse(NULL, _tds__GetSystemSupportInformationResponse *dst, _tds__GetSystemSupportInformationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetSystemSupportInformationResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the arbitary device diagnostics information.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportInformation" of type "http://www.onvif.org/ver10/schema":SupportInformation.
    struct tt__SupportInformation*       SupportInformation             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLog
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLog is a complexType.
///
/// @note struct _tds__GetSystemLog operations:
/// - _tds__GetSystemLog* soap_new__tds__GetSystemLog(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*) default initialize members
/// - int soap_read__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*) deserialize from a source
/// - int soap_write__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*) serialize to a sink
/// - _tds__GetSystemLog* soap_dup__tds__GetSystemLog(struct soap*, _tds__GetSystemLog* dst, _tds__GetSystemLog *src) returns deep copy of _tds__GetSystemLog src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemLog(_tds__GetSystemLog*) deep deletes _tds__GetSystemLog data members, use only on dst after soap_dup__tds__GetSystemLog(NULL, _tds__GetSystemLog *dst, _tds__GetSystemLog *src) (use soapcpp2 -Ed)
struct _tds__GetSystemLog
{
/// <PRE><BLOCKQUOTE>
///   Specifies the type of system log to get.
/// </BLOCKQUOTE></PRE>
///
/// Element "LogType" of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               LogType                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse is a complexType.
///
/// @note struct _tds__GetSystemLogResponse operations:
/// - _tds__GetSystemLogResponse* soap_new__tds__GetSystemLogResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*) default initialize members
/// - int soap_read__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*) deserialize from a source
/// - int soap_write__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*) serialize to a sink
/// - _tds__GetSystemLogResponse* soap_dup__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse* dst, _tds__GetSystemLogResponse *src) returns deep copy of _tds__GetSystemLogResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemLogResponse(_tds__GetSystemLogResponse*) deep deletes _tds__GetSystemLogResponse data members, use only on dst after soap_dup__tds__GetSystemLogResponse(NULL, _tds__GetSystemLogResponse *dst, _tds__GetSystemLogResponse *src) (use soapcpp2 -Ed)
struct _tds__GetSystemLogResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the system log information.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemLog" of type "http://www.onvif.org/ver10/schema":SystemLog.
    struct tt__SystemLog*                SystemLog                      1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopes is a complexType.
///
/// @note struct _tds__GetScopes operations:
/// - _tds__GetScopes* soap_new__tds__GetScopes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetScopes(struct soap*, _tds__GetScopes*) default initialize members
/// - int soap_read__tds__GetScopes(struct soap*, _tds__GetScopes*) deserialize from a source
/// - int soap_write__tds__GetScopes(struct soap*, _tds__GetScopes*) serialize to a sink
/// - _tds__GetScopes* soap_dup__tds__GetScopes(struct soap*, _tds__GetScopes* dst, _tds__GetScopes *src) returns deep copy of _tds__GetScopes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetScopes(_tds__GetScopes*) deep deletes _tds__GetScopes data members, use only on dst after soap_dup__tds__GetScopes(NULL, _tds__GetScopes *dst, _tds__GetScopes *src) (use soapcpp2 -Ed)
struct _tds__GetScopes
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse is a complexType.
///
/// @note struct _tds__GetScopesResponse operations:
/// - _tds__GetScopesResponse* soap_new__tds__GetScopesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*) default initialize members
/// - int soap_read__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*) deserialize from a source
/// - int soap_write__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*) serialize to a sink
/// - _tds__GetScopesResponse* soap_dup__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse* dst, _tds__GetScopesResponse *src) returns deep copy of _tds__GetScopesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetScopesResponse(_tds__GetScopesResponse*) deep deletes _tds__GetScopesResponse data members, use only on dst after soap_dup__tds__GetScopesResponse(NULL, _tds__GetScopesResponse *dst, _tds__GetScopesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetScopesResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of URI definining the device scopes. Scope parameters can be of two types: fixed and configurable. Fixed parameters can not be altered.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Scope* is 1..unbounded.
  $ int                                  __sizeScopes                   1;
/// Array struct tt__Scope* of size 1..unbounded.
    struct tt__Scope*                    Scopes                         1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopes is a complexType.
///
/// @note struct _tds__SetScopes operations:
/// - _tds__SetScopes* soap_new__tds__SetScopes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetScopes(struct soap*, _tds__SetScopes*) default initialize members
/// - int soap_read__tds__SetScopes(struct soap*, _tds__SetScopes*) deserialize from a source
/// - int soap_write__tds__SetScopes(struct soap*, _tds__SetScopes*) serialize to a sink
/// - _tds__SetScopes* soap_dup__tds__SetScopes(struct soap*, _tds__SetScopes* dst, _tds__SetScopes *src) returns deep copy of _tds__SetScopes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetScopes(_tds__SetScopes*) deep deletes _tds__SetScopes data members, use only on dst after soap_dup__tds__SetScopes(NULL, _tds__SetScopes *dst, _tds__SetScopes *src) (use soapcpp2 -Ed)
struct _tds__SetScopes
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of scope parameters that will replace all existing configurable scope parameters.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeScopes                   1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         Scopes                         1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse is a complexType.
///
/// @note struct _tds__SetScopesResponse operations:
/// - _tds__SetScopesResponse* soap_new__tds__SetScopesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*) default initialize members
/// - int soap_read__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*) deserialize from a source
/// - int soap_write__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*) serialize to a sink
/// - _tds__SetScopesResponse* soap_dup__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse* dst, _tds__SetScopesResponse *src) returns deep copy of _tds__SetScopesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetScopesResponse(_tds__SetScopesResponse*) deep deletes _tds__SetScopesResponse data members, use only on dst after soap_dup__tds__SetScopesResponse(NULL, _tds__SetScopesResponse *dst, _tds__SetScopesResponse *src) (use soapcpp2 -Ed)
struct _tds__SetScopesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopes is a complexType.
///
/// @note struct _tds__AddScopes operations:
/// - _tds__AddScopes* soap_new__tds__AddScopes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__AddScopes(struct soap*, _tds__AddScopes*) default initialize members
/// - int soap_read__tds__AddScopes(struct soap*, _tds__AddScopes*) deserialize from a source
/// - int soap_write__tds__AddScopes(struct soap*, _tds__AddScopes*) serialize to a sink
/// - _tds__AddScopes* soap_dup__tds__AddScopes(struct soap*, _tds__AddScopes* dst, _tds__AddScopes *src) returns deep copy of _tds__AddScopes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__AddScopes(_tds__AddScopes*) deep deletes _tds__AddScopes data members, use only on dst after soap_dup__tds__AddScopes(NULL, _tds__AddScopes *dst, _tds__AddScopes *src) (use soapcpp2 -Ed)
struct _tds__AddScopes
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of new configurable scope parameters that will be added to the existing configurable scope.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeScopeItem                1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         ScopeItem                      1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse is a complexType.
///
/// @note struct _tds__AddScopesResponse operations:
/// - _tds__AddScopesResponse* soap_new__tds__AddScopesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*) default initialize members
/// - int soap_read__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*) deserialize from a source
/// - int soap_write__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*) serialize to a sink
/// - _tds__AddScopesResponse* soap_dup__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse* dst, _tds__AddScopesResponse *src) returns deep copy of _tds__AddScopesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__AddScopesResponse(_tds__AddScopesResponse*) deep deletes _tds__AddScopesResponse data members, use only on dst after soap_dup__tds__AddScopesResponse(NULL, _tds__AddScopesResponse *dst, _tds__AddScopesResponse *src) (use soapcpp2 -Ed)
struct _tds__AddScopesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopes is a complexType.
///
/// @note struct _tds__RemoveScopes operations:
/// - _tds__RemoveScopes* soap_new__tds__RemoveScopes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*) default initialize members
/// - int soap_read__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*) deserialize from a source
/// - int soap_write__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*) serialize to a sink
/// - _tds__RemoveScopes* soap_dup__tds__RemoveScopes(struct soap*, _tds__RemoveScopes* dst, _tds__RemoveScopes *src) returns deep copy of _tds__RemoveScopes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__RemoveScopes(_tds__RemoveScopes*) deep deletes _tds__RemoveScopes data members, use only on dst after soap_dup__tds__RemoveScopes(NULL, _tds__RemoveScopes *dst, _tds__RemoveScopes *src) (use soapcpp2 -Ed)
struct _tds__RemoveScopes
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that should be removed from the device scope.<br/>
///   Note that the response message always will match the request or an error will be returned. The use of the response is for that reason deprecated.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeScopeItem                1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         ScopeItem                      1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse is a complexType.
///
/// @note struct _tds__RemoveScopesResponse operations:
/// - _tds__RemoveScopesResponse* soap_new__tds__RemoveScopesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*) default initialize members
/// - int soap_read__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*) deserialize from a source
/// - int soap_write__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*) serialize to a sink
/// - _tds__RemoveScopesResponse* soap_dup__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse* dst, _tds__RemoveScopesResponse *src) returns deep copy of _tds__RemoveScopesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__RemoveScopesResponse(_tds__RemoveScopesResponse*) deep deletes _tds__RemoveScopesResponse data members, use only on dst after soap_dup__tds__RemoveScopesResponse(NULL, _tds__RemoveScopesResponse *dst, _tds__RemoveScopesResponse *src) (use soapcpp2 -Ed)
struct _tds__RemoveScopesResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that has been removed from the device scope
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 0..unbounded.
  $ int                                  __sizeScopeItem                0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         ScopeItem                      0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode is a complexType.
///
/// @note struct _tds__GetDiscoveryMode operations:
/// - _tds__GetDiscoveryMode* soap_new__tds__GetDiscoveryMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*) default initialize members
/// - int soap_read__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*) deserialize from a source
/// - int soap_write__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*) serialize to a sink
/// - _tds__GetDiscoveryMode* soap_dup__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode* dst, _tds__GetDiscoveryMode *src) returns deep copy of _tds__GetDiscoveryMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDiscoveryMode(_tds__GetDiscoveryMode*) deep deletes _tds__GetDiscoveryMode data members, use only on dst after soap_dup__tds__GetDiscoveryMode(NULL, _tds__GetDiscoveryMode *dst, _tds__GetDiscoveryMode *src) (use soapcpp2 -Ed)
struct _tds__GetDiscoveryMode
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse is a complexType.
///
/// @note struct _tds__GetDiscoveryModeResponse operations:
/// - _tds__GetDiscoveryModeResponse* soap_new__tds__GetDiscoveryModeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*) default initialize members
/// - int soap_read__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*) deserialize from a source
/// - int soap_write__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*) serialize to a sink
/// - _tds__GetDiscoveryModeResponse* soap_dup__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse* dst, _tds__GetDiscoveryModeResponse *src) returns deep copy of _tds__GetDiscoveryModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDiscoveryModeResponse(_tds__GetDiscoveryModeResponse*) deep deletes _tds__GetDiscoveryModeResponse data members, use only on dst after soap_dup__tds__GetDiscoveryModeResponse(NULL, _tds__GetDiscoveryModeResponse *dst, _tds__GetDiscoveryModeResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDiscoveryModeResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode is a complexType.
///
/// @note struct _tds__SetDiscoveryMode operations:
/// - _tds__SetDiscoveryMode* soap_new__tds__SetDiscoveryMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*) default initialize members
/// - int soap_read__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*) deserialize from a source
/// - int soap_write__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*) serialize to a sink
/// - _tds__SetDiscoveryMode* soap_dup__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode* dst, _tds__SetDiscoveryMode *src) returns deep copy of _tds__SetDiscoveryMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDiscoveryMode(_tds__SetDiscoveryMode*) deep deletes _tds__SetDiscoveryMode data members, use only on dst after soap_dup__tds__SetDiscoveryMode(NULL, _tds__SetDiscoveryMode *dst, _tds__SetDiscoveryMode *src) (use soapcpp2 -Ed)
struct _tds__SetDiscoveryMode
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse is a complexType.
///
/// @note struct _tds__SetDiscoveryModeResponse operations:
/// - _tds__SetDiscoveryModeResponse* soap_new__tds__SetDiscoveryModeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*) default initialize members
/// - int soap_read__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*) deserialize from a source
/// - int soap_write__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*) serialize to a sink
/// - _tds__SetDiscoveryModeResponse* soap_dup__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse* dst, _tds__SetDiscoveryModeResponse *src) returns deep copy of _tds__SetDiscoveryModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDiscoveryModeResponse(_tds__SetDiscoveryModeResponse*) deep deletes _tds__SetDiscoveryModeResponse data members, use only on dst after soap_dup__tds__SetDiscoveryModeResponse(NULL, _tds__SetDiscoveryModeResponse *dst, _tds__SetDiscoveryModeResponse *src) (use soapcpp2 -Ed)
struct _tds__SetDiscoveryModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode is a complexType.
///
/// @note struct _tds__GetRemoteDiscoveryMode operations:
/// - _tds__GetRemoteDiscoveryMode* soap_new__tds__GetRemoteDiscoveryMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*) default initialize members
/// - int soap_read__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*) deserialize from a source
/// - int soap_write__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*) serialize to a sink
/// - _tds__GetRemoteDiscoveryMode* soap_dup__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode* dst, _tds__GetRemoteDiscoveryMode *src) returns deep copy of _tds__GetRemoteDiscoveryMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetRemoteDiscoveryMode(_tds__GetRemoteDiscoveryMode*) deep deletes _tds__GetRemoteDiscoveryMode data members, use only on dst after soap_dup__tds__GetRemoteDiscoveryMode(NULL, _tds__GetRemoteDiscoveryMode *dst, _tds__GetRemoteDiscoveryMode *src) (use soapcpp2 -Ed)
struct _tds__GetRemoteDiscoveryMode
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse is a complexType.
///
/// @note struct _tds__GetRemoteDiscoveryModeResponse operations:
/// - _tds__GetRemoteDiscoveryModeResponse* soap_new__tds__GetRemoteDiscoveryModeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*) default initialize members
/// - int soap_read__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*) deserialize from a source
/// - int soap_write__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*) serialize to a sink
/// - _tds__GetRemoteDiscoveryModeResponse* soap_dup__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse* dst, _tds__GetRemoteDiscoveryModeResponse *src) returns deep copy of _tds__GetRemoteDiscoveryModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetRemoteDiscoveryModeResponse(_tds__GetRemoteDiscoveryModeResponse*) deep deletes _tds__GetRemoteDiscoveryModeResponse data members, use only on dst after soap_dup__tds__GetRemoteDiscoveryModeResponse(NULL, _tds__GetRemoteDiscoveryModeResponse *dst, _tds__GetRemoteDiscoveryModeResponse *src) (use soapcpp2 -Ed)
struct _tds__GetRemoteDiscoveryModeResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode is a complexType.
///
/// @note struct _tds__SetRemoteDiscoveryMode operations:
/// - _tds__SetRemoteDiscoveryMode* soap_new__tds__SetRemoteDiscoveryMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*) default initialize members
/// - int soap_read__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*) deserialize from a source
/// - int soap_write__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*) serialize to a sink
/// - _tds__SetRemoteDiscoveryMode* soap_dup__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode* dst, _tds__SetRemoteDiscoveryMode *src) returns deep copy of _tds__SetRemoteDiscoveryMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRemoteDiscoveryMode(_tds__SetRemoteDiscoveryMode*) deep deletes _tds__SetRemoteDiscoveryMode data members, use only on dst after soap_dup__tds__SetRemoteDiscoveryMode(NULL, _tds__SetRemoteDiscoveryMode *dst, _tds__SetRemoteDiscoveryMode *src) (use soapcpp2 -Ed)
struct _tds__SetRemoteDiscoveryMode
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse is a complexType.
///
/// @note struct _tds__SetRemoteDiscoveryModeResponse operations:
/// - _tds__SetRemoteDiscoveryModeResponse* soap_new__tds__SetRemoteDiscoveryModeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*) default initialize members
/// - int soap_read__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*) deserialize from a source
/// - int soap_write__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*) serialize to a sink
/// - _tds__SetRemoteDiscoveryModeResponse* soap_dup__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse* dst, _tds__SetRemoteDiscoveryModeResponse *src) returns deep copy of _tds__SetRemoteDiscoveryModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRemoteDiscoveryModeResponse(_tds__SetRemoteDiscoveryModeResponse*) deep deletes _tds__SetRemoteDiscoveryModeResponse data members, use only on dst after soap_dup__tds__SetRemoteDiscoveryModeResponse(NULL, _tds__SetRemoteDiscoveryModeResponse *dst, _tds__SetRemoteDiscoveryModeResponse *src) (use soapcpp2 -Ed)
struct _tds__SetRemoteDiscoveryModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses is a complexType.
///
/// @note struct _tds__GetDPAddresses operations:
/// - _tds__GetDPAddresses* soap_new__tds__GetDPAddresses(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*) default initialize members
/// - int soap_read__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*) deserialize from a source
/// - int soap_write__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*) serialize to a sink
/// - _tds__GetDPAddresses* soap_dup__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses* dst, _tds__GetDPAddresses *src) returns deep copy of _tds__GetDPAddresses src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDPAddresses(_tds__GetDPAddresses*) deep deletes _tds__GetDPAddresses data members, use only on dst after soap_dup__tds__GetDPAddresses(NULL, _tds__GetDPAddresses *dst, _tds__GetDPAddresses *src) (use soapcpp2 -Ed)
struct _tds__GetDPAddresses
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse is a complexType.
///
/// @note struct _tds__GetDPAddressesResponse operations:
/// - _tds__GetDPAddressesResponse* soap_new__tds__GetDPAddressesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*) default initialize members
/// - int soap_read__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*) deserialize from a source
/// - int soap_write__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*) serialize to a sink
/// - _tds__GetDPAddressesResponse* soap_dup__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse* dst, _tds__GetDPAddressesResponse *src) returns deep copy of _tds__GetDPAddressesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDPAddressesResponse(_tds__GetDPAddressesResponse*) deep deletes _tds__GetDPAddressesResponse data members, use only on dst after soap_dup__tds__GetDPAddressesResponse(NULL, _tds__GetDPAddressesResponse *dst, _tds__GetDPAddressesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDPAddressesResponse
{
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeDPAddress                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              DPAddress                      0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses is a complexType.
///
/// @note struct _tds__SetDPAddresses operations:
/// - _tds__SetDPAddresses* soap_new__tds__SetDPAddresses(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*) default initialize members
/// - int soap_read__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*) deserialize from a source
/// - int soap_write__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*) serialize to a sink
/// - _tds__SetDPAddresses* soap_dup__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses* dst, _tds__SetDPAddresses *src) returns deep copy of _tds__SetDPAddresses src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDPAddresses(_tds__SetDPAddresses*) deep deletes _tds__SetDPAddresses data members, use only on dst after soap_dup__tds__SetDPAddresses(NULL, _tds__SetDPAddresses *dst, _tds__SetDPAddresses *src) (use soapcpp2 -Ed)
struct _tds__SetDPAddresses
{
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeDPAddress                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              DPAddress                      0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse is a complexType.
///
/// @note struct _tds__SetDPAddressesResponse operations:
/// - _tds__SetDPAddressesResponse* soap_new__tds__SetDPAddressesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*) default initialize members
/// - int soap_read__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*) deserialize from a source
/// - int soap_write__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*) serialize to a sink
/// - _tds__SetDPAddressesResponse* soap_dup__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse* dst, _tds__SetDPAddressesResponse *src) returns deep copy of _tds__SetDPAddressesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDPAddressesResponse(_tds__SetDPAddressesResponse*) deep deletes _tds__SetDPAddressesResponse data members, use only on dst after soap_dup__tds__SetDPAddressesResponse(NULL, _tds__SetDPAddressesResponse *dst, _tds__SetDPAddressesResponse *src) (use soapcpp2 -Ed)
struct _tds__SetDPAddressesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference is a complexType.
///
/// @note struct _tds__GetEndpointReference operations:
/// - _tds__GetEndpointReference* soap_new__tds__GetEndpointReference(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*) default initialize members
/// - int soap_read__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*) deserialize from a source
/// - int soap_write__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*) serialize to a sink
/// - _tds__GetEndpointReference* soap_dup__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference* dst, _tds__GetEndpointReference *src) returns deep copy of _tds__GetEndpointReference src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetEndpointReference(_tds__GetEndpointReference*) deep deletes _tds__GetEndpointReference data members, use only on dst after soap_dup__tds__GetEndpointReference(NULL, _tds__GetEndpointReference *dst, _tds__GetEndpointReference *src) (use soapcpp2 -Ed)
struct _tds__GetEndpointReference
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse is a complexType.
///
/// @note struct _tds__GetEndpointReferenceResponse operations:
/// - _tds__GetEndpointReferenceResponse* soap_new__tds__GetEndpointReferenceResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*) default initialize members
/// - int soap_read__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*) deserialize from a source
/// - int soap_write__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*) serialize to a sink
/// - _tds__GetEndpointReferenceResponse* soap_dup__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse* dst, _tds__GetEndpointReferenceResponse *src) returns deep copy of _tds__GetEndpointReferenceResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetEndpointReferenceResponse(_tds__GetEndpointReferenceResponse*) deep deletes _tds__GetEndpointReferenceResponse data members, use only on dst after soap_dup__tds__GetEndpointReferenceResponse(NULL, _tds__GetEndpointReferenceResponse *dst, _tds__GetEndpointReferenceResponse *src) (use soapcpp2 -Ed)
struct _tds__GetEndpointReferenceResponse
{
/// Element "GUID" of type xs:string.
    char*                                GUID                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser is a complexType.
///
/// @note struct _tds__GetRemoteUser operations:
/// - _tds__GetRemoteUser* soap_new__tds__GetRemoteUser(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*) default initialize members
/// - int soap_read__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*) deserialize from a source
/// - int soap_write__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*) serialize to a sink
/// - _tds__GetRemoteUser* soap_dup__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser* dst, _tds__GetRemoteUser *src) returns deep copy of _tds__GetRemoteUser src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetRemoteUser(_tds__GetRemoteUser*) deep deletes _tds__GetRemoteUser data members, use only on dst after soap_dup__tds__GetRemoteUser(NULL, _tds__GetRemoteUser *dst, _tds__GetRemoteUser *src) (use soapcpp2 -Ed)
struct _tds__GetRemoteUser
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse is a complexType.
///
/// @note struct _tds__GetRemoteUserResponse operations:
/// - _tds__GetRemoteUserResponse* soap_new__tds__GetRemoteUserResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*) default initialize members
/// - int soap_read__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*) deserialize from a source
/// - int soap_write__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*) serialize to a sink
/// - _tds__GetRemoteUserResponse* soap_dup__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse* dst, _tds__GetRemoteUserResponse *src) returns deep copy of _tds__GetRemoteUserResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetRemoteUserResponse(_tds__GetRemoteUserResponse*) deep deletes _tds__GetRemoteUserResponse data members, use only on dst after soap_dup__tds__GetRemoteUserResponse(NULL, _tds__GetRemoteUserResponse *dst, _tds__GetRemoteUserResponse *src) (use soapcpp2 -Ed)
struct _tds__GetRemoteUserResponse
{
/// Element "RemoteUser" of type "http://www.onvif.org/ver10/schema":RemoteUser.
    struct tt__RemoteUser*               RemoteUser                     0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser is a complexType.
///
/// @note struct _tds__SetRemoteUser operations:
/// - _tds__SetRemoteUser* soap_new__tds__SetRemoteUser(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*) default initialize members
/// - int soap_read__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*) deserialize from a source
/// - int soap_write__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*) serialize to a sink
/// - _tds__SetRemoteUser* soap_dup__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser* dst, _tds__SetRemoteUser *src) returns deep copy of _tds__SetRemoteUser src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRemoteUser(_tds__SetRemoteUser*) deep deletes _tds__SetRemoteUser data members, use only on dst after soap_dup__tds__SetRemoteUser(NULL, _tds__SetRemoteUser *dst, _tds__SetRemoteUser *src) (use soapcpp2 -Ed)
struct _tds__SetRemoteUser
{
/// Element "RemoteUser" of type "http://www.onvif.org/ver10/schema":RemoteUser.
    struct tt__RemoteUser*               RemoteUser                     0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse is a complexType.
///
/// @note struct _tds__SetRemoteUserResponse operations:
/// - _tds__SetRemoteUserResponse* soap_new__tds__SetRemoteUserResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*) default initialize members
/// - int soap_read__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*) deserialize from a source
/// - int soap_write__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*) serialize to a sink
/// - _tds__SetRemoteUserResponse* soap_dup__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse* dst, _tds__SetRemoteUserResponse *src) returns deep copy of _tds__SetRemoteUserResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRemoteUserResponse(_tds__SetRemoteUserResponse*) deep deletes _tds__SetRemoteUserResponse data members, use only on dst after soap_dup__tds__SetRemoteUserResponse(NULL, _tds__SetRemoteUserResponse *dst, _tds__SetRemoteUserResponse *src) (use soapcpp2 -Ed)
struct _tds__SetRemoteUserResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsers is a complexType.
///
/// @note struct _tds__GetUsers operations:
/// - _tds__GetUsers* soap_new__tds__GetUsers(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetUsers(struct soap*, _tds__GetUsers*) default initialize members
/// - int soap_read__tds__GetUsers(struct soap*, _tds__GetUsers*) deserialize from a source
/// - int soap_write__tds__GetUsers(struct soap*, _tds__GetUsers*) serialize to a sink
/// - _tds__GetUsers* soap_dup__tds__GetUsers(struct soap*, _tds__GetUsers* dst, _tds__GetUsers *src) returns deep copy of _tds__GetUsers src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetUsers(_tds__GetUsers*) deep deletes _tds__GetUsers data members, use only on dst after soap_dup__tds__GetUsers(NULL, _tds__GetUsers *dst, _tds__GetUsers *src) (use soapcpp2 -Ed)
struct _tds__GetUsers
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse is a complexType.
///
/// @note struct _tds__GetUsersResponse operations:
/// - _tds__GetUsersResponse* soap_new__tds__GetUsersResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*) default initialize members
/// - int soap_read__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*) deserialize from a source
/// - int soap_write__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*) serialize to a sink
/// - _tds__GetUsersResponse* soap_dup__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse* dst, _tds__GetUsersResponse *src) returns deep copy of _tds__GetUsersResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetUsersResponse(_tds__GetUsersResponse*) deep deletes _tds__GetUsersResponse data members, use only on dst after soap_dup__tds__GetUsersResponse(NULL, _tds__GetUsersResponse *dst, _tds__GetUsersResponse *src) (use soapcpp2 -Ed)
struct _tds__GetUsersResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of the onvif users and following information is included in each entry: username and user level.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__User* is 0..unbounded.
  $ int                                  __sizeUser                     0;
/// Array struct tt__User* of size 0..unbounded.
    struct tt__User*                     User                           0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsers is a complexType.
///
/// @note struct _tds__CreateUsers operations:
/// - _tds__CreateUsers* soap_new__tds__CreateUsers(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateUsers(struct soap*, _tds__CreateUsers*) default initialize members
/// - int soap_read__tds__CreateUsers(struct soap*, _tds__CreateUsers*) deserialize from a source
/// - int soap_write__tds__CreateUsers(struct soap*, _tds__CreateUsers*) serialize to a sink
/// - _tds__CreateUsers* soap_dup__tds__CreateUsers(struct soap*, _tds__CreateUsers* dst, _tds__CreateUsers *src) returns deep copy of _tds__CreateUsers src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateUsers(_tds__CreateUsers*) deep deletes _tds__CreateUsers data members, use only on dst after soap_dup__tds__CreateUsers(NULL, _tds__CreateUsers *dst, _tds__CreateUsers *src) (use soapcpp2 -Ed)
struct _tds__CreateUsers
{
/// <PRE><BLOCKQUOTE>
///   Creates new device users and corresponding credentials. Each user entry includes: username, password and user level. Either all users are created successfully or a fault message MUST be returned without creating any user. If trying to create several users with exactly the same username the request is rejected and no users are created. If password is missing, then fault message Too weak password is returned.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__User* is 1..unbounded.
  $ int                                  __sizeUser                     1;
/// Array struct tt__User* of size 1..unbounded.
    struct tt__User*                     User                           1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse is a complexType.
///
/// @note struct _tds__CreateUsersResponse operations:
/// - _tds__CreateUsersResponse* soap_new__tds__CreateUsersResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*) default initialize members
/// - int soap_read__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*) deserialize from a source
/// - int soap_write__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*) serialize to a sink
/// - _tds__CreateUsersResponse* soap_dup__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse* dst, _tds__CreateUsersResponse *src) returns deep copy of _tds__CreateUsersResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateUsersResponse(_tds__CreateUsersResponse*) deep deletes _tds__CreateUsersResponse data members, use only on dst after soap_dup__tds__CreateUsersResponse(NULL, _tds__CreateUsersResponse *dst, _tds__CreateUsersResponse *src) (use soapcpp2 -Ed)
struct _tds__CreateUsersResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsers is a complexType.
///
/// @note struct _tds__DeleteUsers operations:
/// - _tds__DeleteUsers* soap_new__tds__DeleteUsers(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*) default initialize members
/// - int soap_read__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*) deserialize from a source
/// - int soap_write__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*) serialize to a sink
/// - _tds__DeleteUsers* soap_dup__tds__DeleteUsers(struct soap*, _tds__DeleteUsers* dst, _tds__DeleteUsers *src) returns deep copy of _tds__DeleteUsers src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteUsers(_tds__DeleteUsers*) deep deletes _tds__DeleteUsers data members, use only on dst after soap_dup__tds__DeleteUsers(NULL, _tds__DeleteUsers *dst, _tds__DeleteUsers *src) (use soapcpp2 -Ed)
struct _tds__DeleteUsers
{
/// <PRE><BLOCKQUOTE>
///   Deletes users on an device and there may exist users that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a fault message MUST be returned and no users be deleted. If a username exists multiple times in the request, then a fault message is returned.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char** is 1..unbounded.
  $ int                                  __sizeUsername                 1;
/// Array char** of size 1..unbounded.
    char**                               Username                       1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse is a complexType.
///
/// @note struct _tds__DeleteUsersResponse operations:
/// - _tds__DeleteUsersResponse* soap_new__tds__DeleteUsersResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*) default initialize members
/// - int soap_read__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*) deserialize from a source
/// - int soap_write__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*) serialize to a sink
/// - _tds__DeleteUsersResponse* soap_dup__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse* dst, _tds__DeleteUsersResponse *src) returns deep copy of _tds__DeleteUsersResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteUsersResponse(_tds__DeleteUsersResponse*) deep deletes _tds__DeleteUsersResponse data members, use only on dst after soap_dup__tds__DeleteUsersResponse(NULL, _tds__DeleteUsersResponse *dst, _tds__DeleteUsersResponse *src) (use soapcpp2 -Ed)
struct _tds__DeleteUsersResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUser is a complexType.
///
/// @note struct _tds__SetUser operations:
/// - _tds__SetUser* soap_new__tds__SetUser(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetUser(struct soap*, _tds__SetUser*) default initialize members
/// - int soap_read__tds__SetUser(struct soap*, _tds__SetUser*) deserialize from a source
/// - int soap_write__tds__SetUser(struct soap*, _tds__SetUser*) serialize to a sink
/// - _tds__SetUser* soap_dup__tds__SetUser(struct soap*, _tds__SetUser* dst, _tds__SetUser *src) returns deep copy of _tds__SetUser src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetUser(_tds__SetUser*) deep deletes _tds__SetUser data members, use only on dst after soap_dup__tds__SetUser(NULL, _tds__SetUser *dst, _tds__SetUser *src) (use soapcpp2 -Ed)
struct _tds__SetUser
{
/// <PRE><BLOCKQUOTE>
///   Updates the credentials for one or several users on an device. Either all change requests are processed successfully or a fault message MUST be returned. If the request contains the same username multiple times, a fault message is returned.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__User* is 1..unbounded.
  $ int                                  __sizeUser                     1;
/// Array struct tt__User* of size 1..unbounded.
    struct tt__User*                     User                           1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUserResponse is a complexType.
///
/// @note struct _tds__SetUserResponse operations:
/// - _tds__SetUserResponse* soap_new__tds__SetUserResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*) default initialize members
/// - int soap_read__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*) deserialize from a source
/// - int soap_write__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*) serialize to a sink
/// - _tds__SetUserResponse* soap_dup__tds__SetUserResponse(struct soap*, _tds__SetUserResponse* dst, _tds__SetUserResponse *src) returns deep copy of _tds__SetUserResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetUserResponse(_tds__SetUserResponse*) deep deletes _tds__SetUserResponse data members, use only on dst after soap_dup__tds__SetUserResponse(NULL, _tds__SetUserResponse *dst, _tds__SetUserResponse *src) (use soapcpp2 -Ed)
struct _tds__SetUserResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl is a complexType.
///
/// @note struct _tds__GetWsdlUrl operations:
/// - _tds__GetWsdlUrl* soap_new__tds__GetWsdlUrl(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*) default initialize members
/// - int soap_read__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*) deserialize from a source
/// - int soap_write__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*) serialize to a sink
/// - _tds__GetWsdlUrl* soap_dup__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl* dst, _tds__GetWsdlUrl *src) returns deep copy of _tds__GetWsdlUrl src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetWsdlUrl(_tds__GetWsdlUrl*) deep deletes _tds__GetWsdlUrl data members, use only on dst after soap_dup__tds__GetWsdlUrl(NULL, _tds__GetWsdlUrl *dst, _tds__GetWsdlUrl *src) (use soapcpp2 -Ed)
struct _tds__GetWsdlUrl
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse is a complexType.
///
/// @note struct _tds__GetWsdlUrlResponse operations:
/// - _tds__GetWsdlUrlResponse* soap_new__tds__GetWsdlUrlResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*) default initialize members
/// - int soap_read__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*) deserialize from a source
/// - int soap_write__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*) serialize to a sink
/// - _tds__GetWsdlUrlResponse* soap_dup__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse* dst, _tds__GetWsdlUrlResponse *src) returns deep copy of _tds__GetWsdlUrlResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetWsdlUrlResponse(_tds__GetWsdlUrlResponse*) deep deletes _tds__GetWsdlUrlResponse data members, use only on dst after soap_dup__tds__GetWsdlUrlResponse(NULL, _tds__GetWsdlUrlResponse *dst, _tds__GetWsdlUrlResponse *src) (use soapcpp2 -Ed)
struct _tds__GetWsdlUrlResponse
{
/// Element "WsdlUrl" of type xs:anyURI.
    xsd__anyURI                          WsdlUrl                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilities is a complexType.
///
/// @note struct _tds__GetCapabilities operations:
/// - _tds__GetCapabilities* soap_new__tds__GetCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*) default initialize members
/// - int soap_read__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*) deserialize from a source
/// - int soap_write__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*) serialize to a sink
/// - _tds__GetCapabilities* soap_dup__tds__GetCapabilities(struct soap*, _tds__GetCapabilities* dst, _tds__GetCapabilities *src) returns deep copy of _tds__GetCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCapabilities(_tds__GetCapabilities*) deep deletes _tds__GetCapabilities data members, use only on dst after soap_dup__tds__GetCapabilities(NULL, _tds__GetCapabilities *dst, _tds__GetCapabilities *src) (use soapcpp2 -Ed)
struct _tds__GetCapabilities
{
/// <PRE><BLOCKQUOTE>
///   List of categories to retrieve capability information on.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__CapabilityCategory* is 0..unbounded.
  $ int                                  __sizeCategory                 0;
/// Array enum tt__CapabilityCategory* of size 0..unbounded.
    enum tt__CapabilityCategory*         Category                       0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse is a complexType.
///
/// @note struct _tds__GetCapabilitiesResponse operations:
/// - _tds__GetCapabilitiesResponse* soap_new__tds__GetCapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*) default initialize members
/// - int soap_read__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*) deserialize from a source
/// - int soap_write__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*) serialize to a sink
/// - _tds__GetCapabilitiesResponse* soap_dup__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse* dst, _tds__GetCapabilitiesResponse *src) returns deep copy of _tds__GetCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCapabilitiesResponse(_tds__GetCapabilitiesResponse*) deep deletes _tds__GetCapabilitiesResponse data members, use only on dst after soap_dup__tds__GetCapabilitiesResponse(NULL, _tds__GetCapabilitiesResponse *dst, _tds__GetCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   Capability information.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/schema":Capabilities.
    struct tt__Capabilities*             Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostname is a complexType.
///
/// @note struct _tds__GetHostname operations:
/// - _tds__GetHostname* soap_new__tds__GetHostname(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetHostname(struct soap*, _tds__GetHostname*) default initialize members
/// - int soap_read__tds__GetHostname(struct soap*, _tds__GetHostname*) deserialize from a source
/// - int soap_write__tds__GetHostname(struct soap*, _tds__GetHostname*) serialize to a sink
/// - _tds__GetHostname* soap_dup__tds__GetHostname(struct soap*, _tds__GetHostname* dst, _tds__GetHostname *src) returns deep copy of _tds__GetHostname src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetHostname(_tds__GetHostname*) deep deletes _tds__GetHostname data members, use only on dst after soap_dup__tds__GetHostname(NULL, _tds__GetHostname *dst, _tds__GetHostname *src) (use soapcpp2 -Ed)
struct _tds__GetHostname
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse is a complexType.
///
/// @note struct _tds__GetHostnameResponse operations:
/// - _tds__GetHostnameResponse* soap_new__tds__GetHostnameResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*) default initialize members
/// - int soap_read__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*) deserialize from a source
/// - int soap_write__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*) serialize to a sink
/// - _tds__GetHostnameResponse* soap_dup__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse* dst, _tds__GetHostnameResponse *src) returns deep copy of _tds__GetHostnameResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetHostnameResponse(_tds__GetHostnameResponse*) deep deletes _tds__GetHostnameResponse data members, use only on dst after soap_dup__tds__GetHostnameResponse(NULL, _tds__GetHostnameResponse *dst, _tds__GetHostnameResponse *src) (use soapcpp2 -Ed)
struct _tds__GetHostnameResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the hostname information.
/// </BLOCKQUOTE></PRE>
///
/// Element "HostnameInformation" of type "http://www.onvif.org/ver10/schema":HostnameInformation.
    struct tt__HostnameInformation*      HostnameInformation            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostname is a complexType.
///
/// @note struct _tds__SetHostname operations:
/// - _tds__SetHostname* soap_new__tds__SetHostname(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetHostname(struct soap*, _tds__SetHostname*) default initialize members
/// - int soap_read__tds__SetHostname(struct soap*, _tds__SetHostname*) deserialize from a source
/// - int soap_write__tds__SetHostname(struct soap*, _tds__SetHostname*) serialize to a sink
/// - _tds__SetHostname* soap_dup__tds__SetHostname(struct soap*, _tds__SetHostname* dst, _tds__SetHostname *src) returns deep copy of _tds__SetHostname src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetHostname(_tds__SetHostname*) deep deletes _tds__SetHostname data members, use only on dst after soap_dup__tds__SetHostname(NULL, _tds__SetHostname *dst, _tds__SetHostname *src) (use soapcpp2 -Ed)
struct _tds__SetHostname
{
/// <PRE><BLOCKQUOTE>
///   The hostname to set.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:token.
    xsd__token                           Name                           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse is a complexType.
///
/// @note struct _tds__SetHostnameResponse operations:
/// - _tds__SetHostnameResponse* soap_new__tds__SetHostnameResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*) default initialize members
/// - int soap_read__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*) deserialize from a source
/// - int soap_write__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*) serialize to a sink
/// - _tds__SetHostnameResponse* soap_dup__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse* dst, _tds__SetHostnameResponse *src) returns deep copy of _tds__SetHostnameResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetHostnameResponse(_tds__SetHostnameResponse*) deep deletes _tds__SetHostnameResponse data members, use only on dst after soap_dup__tds__SetHostnameResponse(NULL, _tds__SetHostnameResponse *dst, _tds__SetHostnameResponse *src) (use soapcpp2 -Ed)
struct _tds__SetHostnameResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP is a complexType.
///
/// @note struct _tds__SetHostnameFromDHCP operations:
/// - _tds__SetHostnameFromDHCP* soap_new__tds__SetHostnameFromDHCP(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*) default initialize members
/// - int soap_read__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*) deserialize from a source
/// - int soap_write__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*) serialize to a sink
/// - _tds__SetHostnameFromDHCP* soap_dup__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP* dst, _tds__SetHostnameFromDHCP *src) returns deep copy of _tds__SetHostnameFromDHCP src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetHostnameFromDHCP(_tds__SetHostnameFromDHCP*) deep deletes _tds__SetHostnameFromDHCP data members, use only on dst after soap_dup__tds__SetHostnameFromDHCP(NULL, _tds__SetHostnameFromDHCP *dst, _tds__SetHostnameFromDHCP *src) (use soapcpp2 -Ed)
struct _tds__SetHostnameFromDHCP
{
/// <PRE><BLOCKQUOTE>
///   True if the hostname shall be obtained via DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse is a complexType.
///
/// @note struct _tds__SetHostnameFromDHCPResponse operations:
/// - _tds__SetHostnameFromDHCPResponse* soap_new__tds__SetHostnameFromDHCPResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*) default initialize members
/// - int soap_read__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*) deserialize from a source
/// - int soap_write__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*) serialize to a sink
/// - _tds__SetHostnameFromDHCPResponse* soap_dup__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse* dst, _tds__SetHostnameFromDHCPResponse *src) returns deep copy of _tds__SetHostnameFromDHCPResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetHostnameFromDHCPResponse(_tds__SetHostnameFromDHCPResponse*) deep deletes _tds__SetHostnameFromDHCPResponse data members, use only on dst after soap_dup__tds__SetHostnameFromDHCPResponse(NULL, _tds__SetHostnameFromDHCPResponse *dst, _tds__SetHostnameFromDHCPResponse *src) (use soapcpp2 -Ed)
struct _tds__SetHostnameFromDHCPResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
/// </BLOCKQUOTE></PRE>
///
/// Element "RebootNeeded" of type xs:boolean.
    enum xsd__boolean                    RebootNeeded                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNS is a complexType.
///
/// @note struct _tds__GetDNS operations:
/// - _tds__GetDNS* soap_new__tds__GetDNS(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDNS(struct soap*, _tds__GetDNS*) default initialize members
/// - int soap_read__tds__GetDNS(struct soap*, _tds__GetDNS*) deserialize from a source
/// - int soap_write__tds__GetDNS(struct soap*, _tds__GetDNS*) serialize to a sink
/// - _tds__GetDNS* soap_dup__tds__GetDNS(struct soap*, _tds__GetDNS* dst, _tds__GetDNS *src) returns deep copy of _tds__GetDNS src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDNS(_tds__GetDNS*) deep deletes _tds__GetDNS data members, use only on dst after soap_dup__tds__GetDNS(NULL, _tds__GetDNS *dst, _tds__GetDNS *src) (use soapcpp2 -Ed)
struct _tds__GetDNS
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse is a complexType.
///
/// @note struct _tds__GetDNSResponse operations:
/// - _tds__GetDNSResponse* soap_new__tds__GetDNSResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*) default initialize members
/// - int soap_read__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*) deserialize from a source
/// - int soap_write__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*) serialize to a sink
/// - _tds__GetDNSResponse* soap_dup__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse* dst, _tds__GetDNSResponse *src) returns deep copy of _tds__GetDNSResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDNSResponse(_tds__GetDNSResponse*) deep deletes _tds__GetDNSResponse data members, use only on dst after soap_dup__tds__GetDNSResponse(NULL, _tds__GetDNSResponse *dst, _tds__GetDNSResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDNSResponse
{
/// <PRE><BLOCKQUOTE>
///   DNS information.
/// </BLOCKQUOTE></PRE>
///
/// Element "DNSInformation" of type "http://www.onvif.org/ver10/schema":DNSInformation.
    struct tt__DNSInformation*           DNSInformation                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNS is a complexType.
///
/// @note struct _tds__SetDNS operations:
/// - _tds__SetDNS* soap_new__tds__SetDNS(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDNS(struct soap*, _tds__SetDNS*) default initialize members
/// - int soap_read__tds__SetDNS(struct soap*, _tds__SetDNS*) deserialize from a source
/// - int soap_write__tds__SetDNS(struct soap*, _tds__SetDNS*) serialize to a sink
/// - _tds__SetDNS* soap_dup__tds__SetDNS(struct soap*, _tds__SetDNS* dst, _tds__SetDNS *src) returns deep copy of _tds__SetDNS src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDNS(_tds__SetDNS*) deep deletes _tds__SetDNS data members, use only on dst after soap_dup__tds__SetDNS(NULL, _tds__SetDNS *dst, _tds__SetDNS *src) (use soapcpp2 -Ed)
struct _tds__SetDNS
{
/// <PRE><BLOCKQUOTE>
///   Indicate if the DNS address is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS search domain.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__token* is 0..unbounded.
  $ int                                  __sizeSearchDomain             0;
/// Array xsd__token* of size 0..unbounded.
    xsd__token*                          SearchDomain                   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   DNS address(es) set manually.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__IPAddress* is 0..unbounded.
  $ int                                  __sizeDNSManual                0;
/// Array struct tt__IPAddress* of size 0..unbounded.
    struct tt__IPAddress*                DNSManual                      0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse is a complexType.
///
/// @note struct _tds__SetDNSResponse operations:
/// - _tds__SetDNSResponse* soap_new__tds__SetDNSResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*) default initialize members
/// - int soap_read__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*) deserialize from a source
/// - int soap_write__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*) serialize to a sink
/// - _tds__SetDNSResponse* soap_dup__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse* dst, _tds__SetDNSResponse *src) returns deep copy of _tds__SetDNSResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDNSResponse(_tds__SetDNSResponse*) deep deletes _tds__SetDNSResponse data members, use only on dst after soap_dup__tds__SetDNSResponse(NULL, _tds__SetDNSResponse *dst, _tds__SetDNSResponse *src) (use soapcpp2 -Ed)
struct _tds__SetDNSResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTP is a complexType.
///
/// @note struct _tds__GetNTP operations:
/// - _tds__GetNTP* soap_new__tds__GetNTP(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNTP(struct soap*, _tds__GetNTP*) default initialize members
/// - int soap_read__tds__GetNTP(struct soap*, _tds__GetNTP*) deserialize from a source
/// - int soap_write__tds__GetNTP(struct soap*, _tds__GetNTP*) serialize to a sink
/// - _tds__GetNTP* soap_dup__tds__GetNTP(struct soap*, _tds__GetNTP* dst, _tds__GetNTP *src) returns deep copy of _tds__GetNTP src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNTP(_tds__GetNTP*) deep deletes _tds__GetNTP data members, use only on dst after soap_dup__tds__GetNTP(NULL, _tds__GetNTP *dst, _tds__GetNTP *src) (use soapcpp2 -Ed)
struct _tds__GetNTP
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse is a complexType.
///
/// @note struct _tds__GetNTPResponse operations:
/// - _tds__GetNTPResponse* soap_new__tds__GetNTPResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*) default initialize members
/// - int soap_read__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*) deserialize from a source
/// - int soap_write__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*) serialize to a sink
/// - _tds__GetNTPResponse* soap_dup__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse* dst, _tds__GetNTPResponse *src) returns deep copy of _tds__GetNTPResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNTPResponse(_tds__GetNTPResponse*) deep deletes _tds__GetNTPResponse data members, use only on dst after soap_dup__tds__GetNTPResponse(NULL, _tds__GetNTPResponse *dst, _tds__GetNTPResponse *src) (use soapcpp2 -Ed)
struct _tds__GetNTPResponse
{
/// <PRE><BLOCKQUOTE>
///   NTP information.
/// </BLOCKQUOTE></PRE>
///
/// Element "NTPInformation" of type "http://www.onvif.org/ver10/schema":NTPInformation.
    struct tt__NTPInformation*           NTPInformation                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTP is a complexType.
///
/// @note struct _tds__SetNTP operations:
/// - _tds__SetNTP* soap_new__tds__SetNTP(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNTP(struct soap*, _tds__SetNTP*) default initialize members
/// - int soap_read__tds__SetNTP(struct soap*, _tds__SetNTP*) deserialize from a source
/// - int soap_write__tds__SetNTP(struct soap*, _tds__SetNTP*) serialize to a sink
/// - _tds__SetNTP* soap_dup__tds__SetNTP(struct soap*, _tds__SetNTP* dst, _tds__SetNTP *src) returns deep copy of _tds__SetNTP src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNTP(_tds__SetNTP*) deep deletes _tds__SetNTP data members, use only on dst after soap_dup__tds__SetNTP(NULL, _tds__SetNTP *dst, _tds__SetNTP *src) (use soapcpp2 -Ed)
struct _tds__SetNTP
{
/// <PRE><BLOCKQUOTE>
///   Indicate if NTP address information is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Manual NTP settings.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeNTPManual                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              NTPManual                      0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse is a complexType.
///
/// @note struct _tds__SetNTPResponse operations:
/// - _tds__SetNTPResponse* soap_new__tds__SetNTPResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*) default initialize members
/// - int soap_read__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*) deserialize from a source
/// - int soap_write__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*) serialize to a sink
/// - _tds__SetNTPResponse* soap_dup__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse* dst, _tds__SetNTPResponse *src) returns deep copy of _tds__SetNTPResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNTPResponse(_tds__SetNTPResponse*) deep deletes _tds__SetNTPResponse data members, use only on dst after soap_dup__tds__SetNTPResponse(NULL, _tds__SetNTPResponse *dst, _tds__SetNTPResponse *src) (use soapcpp2 -Ed)
struct _tds__SetNTPResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS is a complexType.
///
/// @note struct _tds__GetDynamicDNS operations:
/// - _tds__GetDynamicDNS* soap_new__tds__GetDynamicDNS(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*) default initialize members
/// - int soap_read__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*) deserialize from a source
/// - int soap_write__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*) serialize to a sink
/// - _tds__GetDynamicDNS* soap_dup__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS* dst, _tds__GetDynamicDNS *src) returns deep copy of _tds__GetDynamicDNS src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDynamicDNS(_tds__GetDynamicDNS*) deep deletes _tds__GetDynamicDNS data members, use only on dst after soap_dup__tds__GetDynamicDNS(NULL, _tds__GetDynamicDNS *dst, _tds__GetDynamicDNS *src) (use soapcpp2 -Ed)
struct _tds__GetDynamicDNS
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse is a complexType.
///
/// @note struct _tds__GetDynamicDNSResponse operations:
/// - _tds__GetDynamicDNSResponse* soap_new__tds__GetDynamicDNSResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*) default initialize members
/// - int soap_read__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*) deserialize from a source
/// - int soap_write__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*) serialize to a sink
/// - _tds__GetDynamicDNSResponse* soap_dup__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse* dst, _tds__GetDynamicDNSResponse *src) returns deep copy of _tds__GetDynamicDNSResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDynamicDNSResponse(_tds__GetDynamicDNSResponse*) deep deletes _tds__GetDynamicDNSResponse data members, use only on dst after soap_dup__tds__GetDynamicDNSResponse(NULL, _tds__GetDynamicDNSResponse *dst, _tds__GetDynamicDNSResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDynamicDNSResponse
{
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS information.
/// </BLOCKQUOTE></PRE>
///
/// Element "DynamicDNSInformation" of type "http://www.onvif.org/ver10/schema":DynamicDNSInformation.
    struct tt__DynamicDNSInformation*    DynamicDNSInformation          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS is a complexType.
///
/// @note struct _tds__SetDynamicDNS operations:
/// - _tds__SetDynamicDNS* soap_new__tds__SetDynamicDNS(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*) default initialize members
/// - int soap_read__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*) deserialize from a source
/// - int soap_write__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*) serialize to a sink
/// - _tds__SetDynamicDNS* soap_dup__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS* dst, _tds__SetDynamicDNS *src) returns deep copy of _tds__SetDynamicDNS src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDynamicDNS(_tds__SetDynamicDNS*) deep deletes _tds__SetDynamicDNS data members, use only on dst after soap_dup__tds__SetDynamicDNS(NULL, _tds__SetDynamicDNS *dst, _tds__SetDynamicDNS *src) (use soapcpp2 -Ed)
struct _tds__SetDynamicDNS
{
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS record time to live.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:duration.
    xsd__duration                        TTL                            0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse is a complexType.
///
/// @note struct _tds__SetDynamicDNSResponse operations:
/// - _tds__SetDynamicDNSResponse* soap_new__tds__SetDynamicDNSResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*) default initialize members
/// - int soap_read__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*) deserialize from a source
/// - int soap_write__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*) serialize to a sink
/// - _tds__SetDynamicDNSResponse* soap_dup__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse* dst, _tds__SetDynamicDNSResponse *src) returns deep copy of _tds__SetDynamicDNSResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDynamicDNSResponse(_tds__SetDynamicDNSResponse*) deep deletes _tds__SetDynamicDNSResponse data members, use only on dst after soap_dup__tds__SetDynamicDNSResponse(NULL, _tds__SetDynamicDNSResponse *dst, _tds__SetDynamicDNSResponse *src) (use soapcpp2 -Ed)
struct _tds__SetDynamicDNSResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces is a complexType.
///
/// @note struct _tds__GetNetworkInterfaces operations:
/// - _tds__GetNetworkInterfaces* soap_new__tds__GetNetworkInterfaces(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*) default initialize members
/// - int soap_read__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*) deserialize from a source
/// - int soap_write__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*) serialize to a sink
/// - _tds__GetNetworkInterfaces* soap_dup__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces* dst, _tds__GetNetworkInterfaces *src) returns deep copy of _tds__GetNetworkInterfaces src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNetworkInterfaces(_tds__GetNetworkInterfaces*) deep deletes _tds__GetNetworkInterfaces data members, use only on dst after soap_dup__tds__GetNetworkInterfaces(NULL, _tds__GetNetworkInterfaces *dst, _tds__GetNetworkInterfaces *src) (use soapcpp2 -Ed)
struct _tds__GetNetworkInterfaces
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse is a complexType.
///
/// @note struct _tds__GetNetworkInterfacesResponse operations:
/// - _tds__GetNetworkInterfacesResponse* soap_new__tds__GetNetworkInterfacesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*) default initialize members
/// - int soap_read__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*) deserialize from a source
/// - int soap_write__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*) serialize to a sink
/// - _tds__GetNetworkInterfacesResponse* soap_dup__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse* dst, _tds__GetNetworkInterfacesResponse *src) returns deep copy of _tds__GetNetworkInterfacesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNetworkInterfacesResponse(_tds__GetNetworkInterfacesResponse*) deep deletes _tds__GetNetworkInterfacesResponse data members, use only on dst after soap_dup__tds__GetNetworkInterfacesResponse(NULL, _tds__GetNetworkInterfacesResponse *dst, _tds__GetNetworkInterfacesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetNetworkInterfacesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of network interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__NetworkInterface* is 1..unbounded.
  $ int                                  __sizeNetworkInterfaces        1;
/// Array struct tt__NetworkInterface* of size 1..unbounded.
    struct tt__NetworkInterface*         NetworkInterfaces              1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces is a complexType.
///
/// @note struct _tds__SetNetworkInterfaces operations:
/// - _tds__SetNetworkInterfaces* soap_new__tds__SetNetworkInterfaces(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*) default initialize members
/// - int soap_read__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*) deserialize from a source
/// - int soap_write__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*) serialize to a sink
/// - _tds__SetNetworkInterfaces* soap_dup__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces* dst, _tds__SetNetworkInterfaces *src) returns deep copy of _tds__SetNetworkInterfaces src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNetworkInterfaces(_tds__SetNetworkInterfaces*) deep deletes _tds__SetNetworkInterfaces data members, use only on dst after soap_dup__tds__SetNetworkInterfaces(NULL, _tds__SetNetworkInterfaces *dst, _tds__SetNetworkInterfaces *src) (use soapcpp2 -Ed)
struct _tds__SetNetworkInterfaces
{
/// <PRE><BLOCKQUOTE>
///   Symbolic network interface name.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface name.
/// </BLOCKQUOTE></PRE>
///
/// Element "NetworkInterface" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration.
    struct tt__NetworkInterfaceSetConfiguration*  NetworkInterface               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse is a complexType.
///
/// @note struct _tds__SetNetworkInterfacesResponse operations:
/// - _tds__SetNetworkInterfacesResponse* soap_new__tds__SetNetworkInterfacesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*) default initialize members
/// - int soap_read__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*) deserialize from a source
/// - int soap_write__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*) serialize to a sink
/// - _tds__SetNetworkInterfacesResponse* soap_dup__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse* dst, _tds__SetNetworkInterfacesResponse *src) returns deep copy of _tds__SetNetworkInterfacesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNetworkInterfacesResponse(_tds__SetNetworkInterfacesResponse*) deep deletes _tds__SetNetworkInterfacesResponse data members, use only on dst after soap_dup__tds__SetNetworkInterfacesResponse(NULL, _tds__SetNetworkInterfacesResponse *dst, _tds__SetNetworkInterfacesResponse *src) (use soapcpp2 -Ed)
struct _tds__SetNetworkInterfacesResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
///   If a device responds with RebootNeeded set to false, the device can be reached
///   via the new IP address without further action. A client should be aware that a device
///   may not be responsive for a short period of time until it signals availability at
///   the new address via the discovery Hello messages.
///   If a device responds with RebootNeeded set to true, it will be further available under
///   its previous IP address. The settings will only be activated when the device is
///   rebooted via the SystemReboot command.
/// </BLOCKQUOTE></PRE>
///
/// Element "RebootNeeded" of type xs:boolean.
    enum xsd__boolean                    RebootNeeded                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols is a complexType.
///
/// @note struct _tds__GetNetworkProtocols operations:
/// - _tds__GetNetworkProtocols* soap_new__tds__GetNetworkProtocols(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*) default initialize members
/// - int soap_read__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*) deserialize from a source
/// - int soap_write__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*) serialize to a sink
/// - _tds__GetNetworkProtocols* soap_dup__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols* dst, _tds__GetNetworkProtocols *src) returns deep copy of _tds__GetNetworkProtocols src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNetworkProtocols(_tds__GetNetworkProtocols*) deep deletes _tds__GetNetworkProtocols data members, use only on dst after soap_dup__tds__GetNetworkProtocols(NULL, _tds__GetNetworkProtocols *dst, _tds__GetNetworkProtocols *src) (use soapcpp2 -Ed)
struct _tds__GetNetworkProtocols
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse is a complexType.
///
/// @note struct _tds__GetNetworkProtocolsResponse operations:
/// - _tds__GetNetworkProtocolsResponse* soap_new__tds__GetNetworkProtocolsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*) default initialize members
/// - int soap_read__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*) deserialize from a source
/// - int soap_write__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*) serialize to a sink
/// - _tds__GetNetworkProtocolsResponse* soap_dup__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse* dst, _tds__GetNetworkProtocolsResponse *src) returns deep copy of _tds__GetNetworkProtocolsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNetworkProtocolsResponse(_tds__GetNetworkProtocolsResponse*) deep deletes _tds__GetNetworkProtocolsResponse data members, use only on dst after soap_dup__tds__GetNetworkProtocolsResponse(NULL, _tds__GetNetworkProtocolsResponse *dst, _tds__GetNetworkProtocolsResponse *src) (use soapcpp2 -Ed)
struct _tds__GetNetworkProtocolsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains an array of defined protocols supported by the device. There are three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be retrieved for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__NetworkProtocol* is 0..unbounded.
  $ int                                  __sizeNetworkProtocols         0;
/// Array struct tt__NetworkProtocol* of size 0..unbounded.
    struct tt__NetworkProtocol*          NetworkProtocols               0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols is a complexType.
///
/// @note struct _tds__SetNetworkProtocols operations:
/// - _tds__SetNetworkProtocols* soap_new__tds__SetNetworkProtocols(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*) default initialize members
/// - int soap_read__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*) deserialize from a source
/// - int soap_write__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*) serialize to a sink
/// - _tds__SetNetworkProtocols* soap_dup__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols* dst, _tds__SetNetworkProtocols *src) returns deep copy of _tds__SetNetworkProtocols src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNetworkProtocols(_tds__SetNetworkProtocols*) deep deletes _tds__SetNetworkProtocols data members, use only on dst after soap_dup__tds__SetNetworkProtocols(NULL, _tds__SetNetworkProtocols *dst, _tds__SetNetworkProtocols *src) (use soapcpp2 -Ed)
struct _tds__SetNetworkProtocols
{
/// <PRE><BLOCKQUOTE>
///   Configures one or more defined network protocols supported by the device. There are currently three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be set for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__NetworkProtocol* is 1..unbounded.
  $ int                                  __sizeNetworkProtocols         1;
/// Array struct tt__NetworkProtocol* of size 1..unbounded.
    struct tt__NetworkProtocol*          NetworkProtocols               1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse is a complexType.
///
/// @note struct _tds__SetNetworkProtocolsResponse operations:
/// - _tds__SetNetworkProtocolsResponse* soap_new__tds__SetNetworkProtocolsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*) default initialize members
/// - int soap_read__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*) deserialize from a source
/// - int soap_write__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*) serialize to a sink
/// - _tds__SetNetworkProtocolsResponse* soap_dup__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse* dst, _tds__SetNetworkProtocolsResponse *src) returns deep copy of _tds__SetNetworkProtocolsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNetworkProtocolsResponse(_tds__SetNetworkProtocolsResponse*) deep deletes _tds__SetNetworkProtocolsResponse data members, use only on dst after soap_dup__tds__SetNetworkProtocolsResponse(NULL, _tds__SetNetworkProtocolsResponse *dst, _tds__SetNetworkProtocolsResponse *src) (use soapcpp2 -Ed)
struct _tds__SetNetworkProtocolsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway is a complexType.
///
/// @note struct _tds__GetNetworkDefaultGateway operations:
/// - _tds__GetNetworkDefaultGateway* soap_new__tds__GetNetworkDefaultGateway(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*) default initialize members
/// - int soap_read__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*) deserialize from a source
/// - int soap_write__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*) serialize to a sink
/// - _tds__GetNetworkDefaultGateway* soap_dup__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway* dst, _tds__GetNetworkDefaultGateway *src) returns deep copy of _tds__GetNetworkDefaultGateway src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNetworkDefaultGateway(_tds__GetNetworkDefaultGateway*) deep deletes _tds__GetNetworkDefaultGateway data members, use only on dst after soap_dup__tds__GetNetworkDefaultGateway(NULL, _tds__GetNetworkDefaultGateway *dst, _tds__GetNetworkDefaultGateway *src) (use soapcpp2 -Ed)
struct _tds__GetNetworkDefaultGateway
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse is a complexType.
///
/// @note struct _tds__GetNetworkDefaultGatewayResponse operations:
/// - _tds__GetNetworkDefaultGatewayResponse* soap_new__tds__GetNetworkDefaultGatewayResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*) default initialize members
/// - int soap_read__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*) deserialize from a source
/// - int soap_write__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*) serialize to a sink
/// - _tds__GetNetworkDefaultGatewayResponse* soap_dup__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse* dst, _tds__GetNetworkDefaultGatewayResponse *src) returns deep copy of _tds__GetNetworkDefaultGatewayResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNetworkDefaultGatewayResponse(_tds__GetNetworkDefaultGatewayResponse*) deep deletes _tds__GetNetworkDefaultGatewayResponse data members, use only on dst after soap_dup__tds__GetNetworkDefaultGatewayResponse(NULL, _tds__GetNetworkDefaultGatewayResponse *dst, _tds__GetNetworkDefaultGatewayResponse *src) (use soapcpp2 -Ed)
struct _tds__GetNetworkDefaultGatewayResponse
{
/// <PRE><BLOCKQUOTE>
///   Gets the default IPv4 and IPv6 gateway settings from the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "NetworkGateway" of type "http://www.onvif.org/ver10/schema":NetworkGateway.
    struct tt__NetworkGateway*           NetworkGateway                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway is a complexType.
///
/// @note struct _tds__SetNetworkDefaultGateway operations:
/// - _tds__SetNetworkDefaultGateway* soap_new__tds__SetNetworkDefaultGateway(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*) default initialize members
/// - int soap_read__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*) deserialize from a source
/// - int soap_write__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*) serialize to a sink
/// - _tds__SetNetworkDefaultGateway* soap_dup__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway* dst, _tds__SetNetworkDefaultGateway *src) returns deep copy of _tds__SetNetworkDefaultGateway src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNetworkDefaultGateway(_tds__SetNetworkDefaultGateway*) deep deletes _tds__SetNetworkDefaultGateway data members, use only on dst after soap_dup__tds__SetNetworkDefaultGateway(NULL, _tds__SetNetworkDefaultGateway *dst, _tds__SetNetworkDefaultGateway *src) (use soapcpp2 -Ed)
struct _tds__SetNetworkDefaultGateway
{
/// <PRE><BLOCKQUOTE>
///   Sets IPv4 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv4Address* is 0..unbounded.
  $ int                                  __sizeIPv4Address              0;
/// Array tt__IPv4Address* of size 0..unbounded.
    tt__IPv4Address*                     IPv4Address                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Sets IPv6 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv6Address* is 0..unbounded.
  $ int                                  __sizeIPv6Address              0;
/// Array tt__IPv6Address* of size 0..unbounded.
    tt__IPv6Address*                     IPv6Address                    0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse is a complexType.
///
/// @note struct _tds__SetNetworkDefaultGatewayResponse operations:
/// - _tds__SetNetworkDefaultGatewayResponse* soap_new__tds__SetNetworkDefaultGatewayResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*) default initialize members
/// - int soap_read__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*) deserialize from a source
/// - int soap_write__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*) serialize to a sink
/// - _tds__SetNetworkDefaultGatewayResponse* soap_dup__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse* dst, _tds__SetNetworkDefaultGatewayResponse *src) returns deep copy of _tds__SetNetworkDefaultGatewayResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNetworkDefaultGatewayResponse(_tds__SetNetworkDefaultGatewayResponse*) deep deletes _tds__SetNetworkDefaultGatewayResponse data members, use only on dst after soap_dup__tds__SetNetworkDefaultGatewayResponse(NULL, _tds__SetNetworkDefaultGatewayResponse *dst, _tds__SetNetworkDefaultGatewayResponse *src) (use soapcpp2 -Ed)
struct _tds__SetNetworkDefaultGatewayResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration is a complexType.
///
/// @note struct _tds__GetZeroConfiguration operations:
/// - _tds__GetZeroConfiguration* soap_new__tds__GetZeroConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*) default initialize members
/// - int soap_read__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*) deserialize from a source
/// - int soap_write__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*) serialize to a sink
/// - _tds__GetZeroConfiguration* soap_dup__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration* dst, _tds__GetZeroConfiguration *src) returns deep copy of _tds__GetZeroConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetZeroConfiguration(_tds__GetZeroConfiguration*) deep deletes _tds__GetZeroConfiguration data members, use only on dst after soap_dup__tds__GetZeroConfiguration(NULL, _tds__GetZeroConfiguration *dst, _tds__GetZeroConfiguration *src) (use soapcpp2 -Ed)
struct _tds__GetZeroConfiguration
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse is a complexType.
///
/// @note struct _tds__GetZeroConfigurationResponse operations:
/// - _tds__GetZeroConfigurationResponse* soap_new__tds__GetZeroConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*) default initialize members
/// - int soap_read__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*) serialize to a sink
/// - _tds__GetZeroConfigurationResponse* soap_dup__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse* dst, _tds__GetZeroConfigurationResponse *src) returns deep copy of _tds__GetZeroConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetZeroConfigurationResponse(_tds__GetZeroConfigurationResponse*) deep deletes _tds__GetZeroConfigurationResponse data members, use only on dst after soap_dup__tds__GetZeroConfigurationResponse(NULL, _tds__GetZeroConfigurationResponse *dst, _tds__GetZeroConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetZeroConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the zero-configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZeroConfiguration" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration.
    struct tt__NetworkZeroConfiguration*  ZeroConfiguration              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration is a complexType.
///
/// @note struct _tds__SetZeroConfiguration operations:
/// - _tds__SetZeroConfiguration* soap_new__tds__SetZeroConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*) default initialize members
/// - int soap_read__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*) deserialize from a source
/// - int soap_write__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*) serialize to a sink
/// - _tds__SetZeroConfiguration* soap_dup__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration* dst, _tds__SetZeroConfiguration *src) returns deep copy of _tds__SetZeroConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetZeroConfiguration(_tds__SetZeroConfiguration*) deep deletes _tds__SetZeroConfiguration data members, use only on dst after soap_dup__tds__SetZeroConfiguration(NULL, _tds__SetZeroConfiguration *dst, _tds__SetZeroConfiguration *src) (use soapcpp2 -Ed)
struct _tds__SetZeroConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical interface.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Specifies if the zero-configuration should be enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse is a complexType.
///
/// @note struct _tds__SetZeroConfigurationResponse operations:
/// - _tds__SetZeroConfigurationResponse* soap_new__tds__SetZeroConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*) default initialize members
/// - int soap_read__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*) serialize to a sink
/// - _tds__SetZeroConfigurationResponse* soap_dup__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse* dst, _tds__SetZeroConfigurationResponse *src) returns deep copy of _tds__SetZeroConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetZeroConfigurationResponse(_tds__SetZeroConfigurationResponse*) deep deletes _tds__SetZeroConfigurationResponse data members, use only on dst after soap_dup__tds__SetZeroConfigurationResponse(NULL, _tds__SetZeroConfigurationResponse *dst, _tds__SetZeroConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__SetZeroConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter is a complexType.
///
/// @note struct _tds__GetIPAddressFilter operations:
/// - _tds__GetIPAddressFilter* soap_new__tds__GetIPAddressFilter(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*) default initialize members
/// - int soap_read__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*) deserialize from a source
/// - int soap_write__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*) serialize to a sink
/// - _tds__GetIPAddressFilter* soap_dup__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter* dst, _tds__GetIPAddressFilter *src) returns deep copy of _tds__GetIPAddressFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetIPAddressFilter(_tds__GetIPAddressFilter*) deep deletes _tds__GetIPAddressFilter data members, use only on dst after soap_dup__tds__GetIPAddressFilter(NULL, _tds__GetIPAddressFilter *dst, _tds__GetIPAddressFilter *src) (use soapcpp2 -Ed)
struct _tds__GetIPAddressFilter
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse is a complexType.
///
/// @note struct _tds__GetIPAddressFilterResponse operations:
/// - _tds__GetIPAddressFilterResponse* soap_new__tds__GetIPAddressFilterResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*) default initialize members
/// - int soap_read__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*) deserialize from a source
/// - int soap_write__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*) serialize to a sink
/// - _tds__GetIPAddressFilterResponse* soap_dup__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse* dst, _tds__GetIPAddressFilterResponse *src) returns deep copy of _tds__GetIPAddressFilterResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetIPAddressFilterResponse(_tds__GetIPAddressFilterResponse*) deep deletes _tds__GetIPAddressFilterResponse data members, use only on dst after soap_dup__tds__GetIPAddressFilterResponse(NULL, _tds__GetIPAddressFilterResponse *dst, _tds__GetIPAddressFilterResponse *src) (use soapcpp2 -Ed)
struct _tds__GetIPAddressFilterResponse
{
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter is a complexType.
///
/// @note struct _tds__SetIPAddressFilter operations:
/// - _tds__SetIPAddressFilter* soap_new__tds__SetIPAddressFilter(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*) default initialize members
/// - int soap_read__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*) deserialize from a source
/// - int soap_write__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*) serialize to a sink
/// - _tds__SetIPAddressFilter* soap_dup__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter* dst, _tds__SetIPAddressFilter *src) returns deep copy of _tds__SetIPAddressFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetIPAddressFilter(_tds__SetIPAddressFilter*) deep deletes _tds__SetIPAddressFilter data members, use only on dst after soap_dup__tds__SetIPAddressFilter(NULL, _tds__SetIPAddressFilter *dst, _tds__SetIPAddressFilter *src) (use soapcpp2 -Ed)
struct _tds__SetIPAddressFilter
{
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse is a complexType.
///
/// @note struct _tds__SetIPAddressFilterResponse operations:
/// - _tds__SetIPAddressFilterResponse* soap_new__tds__SetIPAddressFilterResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*) default initialize members
/// - int soap_read__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*) deserialize from a source
/// - int soap_write__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*) serialize to a sink
/// - _tds__SetIPAddressFilterResponse* soap_dup__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse* dst, _tds__SetIPAddressFilterResponse *src) returns deep copy of _tds__SetIPAddressFilterResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetIPAddressFilterResponse(_tds__SetIPAddressFilterResponse*) deep deletes _tds__SetIPAddressFilterResponse data members, use only on dst after soap_dup__tds__SetIPAddressFilterResponse(NULL, _tds__SetIPAddressFilterResponse *dst, _tds__SetIPAddressFilterResponse *src) (use soapcpp2 -Ed)
struct _tds__SetIPAddressFilterResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter is a complexType.
///
/// @note struct _tds__AddIPAddressFilter operations:
/// - _tds__AddIPAddressFilter* soap_new__tds__AddIPAddressFilter(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*) default initialize members
/// - int soap_read__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*) deserialize from a source
/// - int soap_write__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*) serialize to a sink
/// - _tds__AddIPAddressFilter* soap_dup__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter* dst, _tds__AddIPAddressFilter *src) returns deep copy of _tds__AddIPAddressFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__AddIPAddressFilter(_tds__AddIPAddressFilter*) deep deletes _tds__AddIPAddressFilter data members, use only on dst after soap_dup__tds__AddIPAddressFilter(NULL, _tds__AddIPAddressFilter *dst, _tds__AddIPAddressFilter *src) (use soapcpp2 -Ed)
struct _tds__AddIPAddressFilter
{
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse is a complexType.
///
/// @note struct _tds__AddIPAddressFilterResponse operations:
/// - _tds__AddIPAddressFilterResponse* soap_new__tds__AddIPAddressFilterResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*) default initialize members
/// - int soap_read__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*) deserialize from a source
/// - int soap_write__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*) serialize to a sink
/// - _tds__AddIPAddressFilterResponse* soap_dup__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse* dst, _tds__AddIPAddressFilterResponse *src) returns deep copy of _tds__AddIPAddressFilterResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__AddIPAddressFilterResponse(_tds__AddIPAddressFilterResponse*) deep deletes _tds__AddIPAddressFilterResponse data members, use only on dst after soap_dup__tds__AddIPAddressFilterResponse(NULL, _tds__AddIPAddressFilterResponse *dst, _tds__AddIPAddressFilterResponse *src) (use soapcpp2 -Ed)
struct _tds__AddIPAddressFilterResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter is a complexType.
///
/// @note struct _tds__RemoveIPAddressFilter operations:
/// - _tds__RemoveIPAddressFilter* soap_new__tds__RemoveIPAddressFilter(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*) default initialize members
/// - int soap_read__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*) deserialize from a source
/// - int soap_write__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*) serialize to a sink
/// - _tds__RemoveIPAddressFilter* soap_dup__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter* dst, _tds__RemoveIPAddressFilter *src) returns deep copy of _tds__RemoveIPAddressFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__RemoveIPAddressFilter(_tds__RemoveIPAddressFilter*) deep deletes _tds__RemoveIPAddressFilter data members, use only on dst after soap_dup__tds__RemoveIPAddressFilter(NULL, _tds__RemoveIPAddressFilter *dst, _tds__RemoveIPAddressFilter *src) (use soapcpp2 -Ed)
struct _tds__RemoveIPAddressFilter
{
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse is a complexType.
///
/// @note struct _tds__RemoveIPAddressFilterResponse operations:
/// - _tds__RemoveIPAddressFilterResponse* soap_new__tds__RemoveIPAddressFilterResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*) default initialize members
/// - int soap_read__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*) deserialize from a source
/// - int soap_write__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*) serialize to a sink
/// - _tds__RemoveIPAddressFilterResponse* soap_dup__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse* dst, _tds__RemoveIPAddressFilterResponse *src) returns deep copy of _tds__RemoveIPAddressFilterResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__RemoveIPAddressFilterResponse(_tds__RemoveIPAddressFilterResponse*) deep deletes _tds__RemoveIPAddressFilterResponse data members, use only on dst after soap_dup__tds__RemoveIPAddressFilterResponse(NULL, _tds__RemoveIPAddressFilterResponse *dst, _tds__RemoveIPAddressFilterResponse *src) (use soapcpp2 -Ed)
struct _tds__RemoveIPAddressFilterResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy is a complexType.
///
/// @note struct _tds__GetAccessPolicy operations:
/// - _tds__GetAccessPolicy* soap_new__tds__GetAccessPolicy(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*) default initialize members
/// - int soap_read__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*) deserialize from a source
/// - int soap_write__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*) serialize to a sink
/// - _tds__GetAccessPolicy* soap_dup__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy* dst, _tds__GetAccessPolicy *src) returns deep copy of _tds__GetAccessPolicy src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetAccessPolicy(_tds__GetAccessPolicy*) deep deletes _tds__GetAccessPolicy data members, use only on dst after soap_dup__tds__GetAccessPolicy(NULL, _tds__GetAccessPolicy *dst, _tds__GetAccessPolicy *src) (use soapcpp2 -Ed)
struct _tds__GetAccessPolicy
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse is a complexType.
///
/// @note struct _tds__GetAccessPolicyResponse operations:
/// - _tds__GetAccessPolicyResponse* soap_new__tds__GetAccessPolicyResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*) default initialize members
/// - int soap_read__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*) deserialize from a source
/// - int soap_write__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*) serialize to a sink
/// - _tds__GetAccessPolicyResponse* soap_dup__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse* dst, _tds__GetAccessPolicyResponse *src) returns deep copy of _tds__GetAccessPolicyResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetAccessPolicyResponse(_tds__GetAccessPolicyResponse*) deep deletes _tds__GetAccessPolicyResponse data members, use only on dst after soap_dup__tds__GetAccessPolicyResponse(NULL, _tds__GetAccessPolicyResponse *dst, _tds__GetAccessPolicyResponse *src) (use soapcpp2 -Ed)
struct _tds__GetAccessPolicyResponse
{
/// Element "PolicyFile" of type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               PolicyFile                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy is a complexType.
///
/// @note struct _tds__SetAccessPolicy operations:
/// - _tds__SetAccessPolicy* soap_new__tds__SetAccessPolicy(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*) default initialize members
/// - int soap_read__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*) deserialize from a source
/// - int soap_write__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*) serialize to a sink
/// - _tds__SetAccessPolicy* soap_dup__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy* dst, _tds__SetAccessPolicy *src) returns deep copy of _tds__SetAccessPolicy src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetAccessPolicy(_tds__SetAccessPolicy*) deep deletes _tds__SetAccessPolicy data members, use only on dst after soap_dup__tds__SetAccessPolicy(NULL, _tds__SetAccessPolicy *dst, _tds__SetAccessPolicy *src) (use soapcpp2 -Ed)
struct _tds__SetAccessPolicy
{
/// Element "PolicyFile" of type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               PolicyFile                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse is a complexType.
///
/// @note struct _tds__SetAccessPolicyResponse operations:
/// - _tds__SetAccessPolicyResponse* soap_new__tds__SetAccessPolicyResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*) default initialize members
/// - int soap_read__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*) deserialize from a source
/// - int soap_write__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*) serialize to a sink
/// - _tds__SetAccessPolicyResponse* soap_dup__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse* dst, _tds__SetAccessPolicyResponse *src) returns deep copy of _tds__SetAccessPolicyResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetAccessPolicyResponse(_tds__SetAccessPolicyResponse*) deep deletes _tds__SetAccessPolicyResponse data members, use only on dst after soap_dup__tds__SetAccessPolicyResponse(NULL, _tds__SetAccessPolicyResponse *dst, _tds__SetAccessPolicyResponse *src) (use soapcpp2 -Ed)
struct _tds__SetAccessPolicyResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificate
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificate is a complexType.
///
/// @note struct _tds__CreateCertificate operations:
/// - _tds__CreateCertificate* soap_new__tds__CreateCertificate(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*) default initialize members
/// - int soap_read__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*) deserialize from a source
/// - int soap_write__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*) serialize to a sink
/// - _tds__CreateCertificate* soap_dup__tds__CreateCertificate(struct soap*, _tds__CreateCertificate* dst, _tds__CreateCertificate *src) returns deep copy of _tds__CreateCertificate src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateCertificate(_tds__CreateCertificate*) deep deletes _tds__CreateCertificate data members, use only on dst after soap_dup__tds__CreateCertificate(NULL, _tds__CreateCertificate *dst, _tds__CreateCertificate *src) (use soapcpp2 -Ed)
struct _tds__CreateCertificate
{
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Identification of the entity associated with the public-key.
/// </BLOCKQUOTE></PRE>
///
/// Element "Subject" of type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate validity start date.
/// </BLOCKQUOTE></PRE>
///
/// Element "ValidNotBefore" of type xs:dateTime.
    time_t*                              ValidNotBefore                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate expiry start date.
/// </BLOCKQUOTE></PRE>
///
/// Element "ValidNotAfter" of type xs:dateTime.
    time_t*                              ValidNotAfter                  0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse is a complexType.
///
/// @note struct _tds__CreateCertificateResponse operations:
/// - _tds__CreateCertificateResponse* soap_new__tds__CreateCertificateResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*) default initialize members
/// - int soap_read__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*) deserialize from a source
/// - int soap_write__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*) serialize to a sink
/// - _tds__CreateCertificateResponse* soap_dup__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse* dst, _tds__CreateCertificateResponse *src) returns deep copy of _tds__CreateCertificateResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateCertificateResponse(_tds__CreateCertificateResponse*) deep deletes _tds__CreateCertificateResponse data members, use only on dst after soap_dup__tds__CreateCertificateResponse(NULL, _tds__CreateCertificateResponse *dst, _tds__CreateCertificateResponse *src) (use soapcpp2 -Ed)
struct _tds__CreateCertificateResponse
{
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "NvtCertificate" of type "http://www.onvif.org/ver10/schema":Certificate.
    struct tt__Certificate*              NvtCertificate                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificates is a complexType.
///
/// @note struct _tds__GetCertificates operations:
/// - _tds__GetCertificates* soap_new__tds__GetCertificates(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCertificates(struct soap*, _tds__GetCertificates*) default initialize members
/// - int soap_read__tds__GetCertificates(struct soap*, _tds__GetCertificates*) deserialize from a source
/// - int soap_write__tds__GetCertificates(struct soap*, _tds__GetCertificates*) serialize to a sink
/// - _tds__GetCertificates* soap_dup__tds__GetCertificates(struct soap*, _tds__GetCertificates* dst, _tds__GetCertificates *src) returns deep copy of _tds__GetCertificates src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCertificates(_tds__GetCertificates*) deep deletes _tds__GetCertificates data members, use only on dst after soap_dup__tds__GetCertificates(NULL, _tds__GetCertificates *dst, _tds__GetCertificates *src) (use soapcpp2 -Ed)
struct _tds__GetCertificates
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse is a complexType.
///
/// @note struct _tds__GetCertificatesResponse operations:
/// - _tds__GetCertificatesResponse* soap_new__tds__GetCertificatesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*) default initialize members
/// - int soap_read__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*) deserialize from a source
/// - int soap_write__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*) serialize to a sink
/// - _tds__GetCertificatesResponse* soap_dup__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse* dst, _tds__GetCertificatesResponse *src) returns deep copy of _tds__GetCertificatesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCertificatesResponse(_tds__GetCertificatesResponse*) deep deletes _tds__GetCertificatesResponse data members, use only on dst after soap_dup__tds__GetCertificatesResponse(NULL, _tds__GetCertificatesResponse *dst, _tds__GetCertificatesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetCertificatesResponse
{
/// <PRE><BLOCKQUOTE>
///   Id and base64 encoded DER representation of all available certificates.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Certificate* is 0..unbounded.
  $ int                                  __sizeNvtCertificate           0;
/// Array struct tt__Certificate* of size 0..unbounded.
    struct tt__Certificate*              NvtCertificate                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus is a complexType.
///
/// @note struct _tds__GetCertificatesStatus operations:
/// - _tds__GetCertificatesStatus* soap_new__tds__GetCertificatesStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*) default initialize members
/// - int soap_read__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*) deserialize from a source
/// - int soap_write__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*) serialize to a sink
/// - _tds__GetCertificatesStatus* soap_dup__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus* dst, _tds__GetCertificatesStatus *src) returns deep copy of _tds__GetCertificatesStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCertificatesStatus(_tds__GetCertificatesStatus*) deep deletes _tds__GetCertificatesStatus data members, use only on dst after soap_dup__tds__GetCertificatesStatus(NULL, _tds__GetCertificatesStatus *dst, _tds__GetCertificatesStatus *src) (use soapcpp2 -Ed)
struct _tds__GetCertificatesStatus
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse is a complexType.
///
/// @note struct _tds__GetCertificatesStatusResponse operations:
/// - _tds__GetCertificatesStatusResponse* soap_new__tds__GetCertificatesStatusResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*) default initialize members
/// - int soap_read__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*) deserialize from a source
/// - int soap_write__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*) serialize to a sink
/// - _tds__GetCertificatesStatusResponse* soap_dup__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse* dst, _tds__GetCertificatesStatusResponse *src) returns deep copy of _tds__GetCertificatesStatusResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCertificatesStatusResponse(_tds__GetCertificatesStatusResponse*) deep deletes _tds__GetCertificatesStatusResponse data members, use only on dst after soap_dup__tds__GetCertificatesStatusResponse(NULL, _tds__GetCertificatesStatusResponse *dst, _tds__GetCertificatesStatusResponse *src) (use soapcpp2 -Ed)
struct _tds__GetCertificatesStatusResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__CertificateStatus* is 0..unbounded.
  $ int                                  __sizeCertificateStatus        0;
/// Array struct tt__CertificateStatus* of size 0..unbounded.
    struct tt__CertificateStatus*        CertificateStatus              0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus is a complexType.
///
/// @note struct _tds__SetCertificatesStatus operations:
/// - _tds__SetCertificatesStatus* soap_new__tds__SetCertificatesStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*) default initialize members
/// - int soap_read__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*) deserialize from a source
/// - int soap_write__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*) serialize to a sink
/// - _tds__SetCertificatesStatus* soap_dup__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus* dst, _tds__SetCertificatesStatus *src) returns deep copy of _tds__SetCertificatesStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetCertificatesStatus(_tds__SetCertificatesStatus*) deep deletes _tds__SetCertificatesStatus data members, use only on dst after soap_dup__tds__SetCertificatesStatus(NULL, _tds__SetCertificatesStatus *dst, _tds__SetCertificatesStatus *src) (use soapcpp2 -Ed)
struct _tds__SetCertificatesStatus
{
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is to be used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__CertificateStatus* is 0..unbounded.
  $ int                                  __sizeCertificateStatus        0;
/// Array struct tt__CertificateStatus* of size 0..unbounded.
    struct tt__CertificateStatus*        CertificateStatus              0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse is a complexType.
///
/// @note struct _tds__SetCertificatesStatusResponse operations:
/// - _tds__SetCertificatesStatusResponse* soap_new__tds__SetCertificatesStatusResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*) default initialize members
/// - int soap_read__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*) deserialize from a source
/// - int soap_write__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*) serialize to a sink
/// - _tds__SetCertificatesStatusResponse* soap_dup__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse* dst, _tds__SetCertificatesStatusResponse *src) returns deep copy of _tds__SetCertificatesStatusResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetCertificatesStatusResponse(_tds__SetCertificatesStatusResponse*) deep deletes _tds__SetCertificatesStatusResponse data members, use only on dst after soap_dup__tds__SetCertificatesStatusResponse(NULL, _tds__SetCertificatesStatusResponse *dst, _tds__SetCertificatesStatusResponse *src) (use soapcpp2 -Ed)
struct _tds__SetCertificatesStatusResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates is a complexType.
///
/// @note struct _tds__DeleteCertificates operations:
/// - _tds__DeleteCertificates* soap_new__tds__DeleteCertificates(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*) default initialize members
/// - int soap_read__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*) deserialize from a source
/// - int soap_write__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*) serialize to a sink
/// - _tds__DeleteCertificates* soap_dup__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates* dst, _tds__DeleteCertificates *src) returns deep copy of _tds__DeleteCertificates src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteCertificates(_tds__DeleteCertificates*) deep deletes _tds__DeleteCertificates data members, use only on dst after soap_dup__tds__DeleteCertificates(NULL, _tds__DeleteCertificates *dst, _tds__DeleteCertificates *src) (use soapcpp2 -Ed)
struct _tds__DeleteCertificates
{
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__token* is 1..unbounded.
  $ int                                  __sizeCertificateID            1;
/// Array xsd__token* of size 1..unbounded.
    xsd__token*                          CertificateID                  1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse is a complexType.
///
/// @note struct _tds__DeleteCertificatesResponse operations:
/// - _tds__DeleteCertificatesResponse* soap_new__tds__DeleteCertificatesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*) default initialize members
/// - int soap_read__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*) deserialize from a source
/// - int soap_write__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*) serialize to a sink
/// - _tds__DeleteCertificatesResponse* soap_dup__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse* dst, _tds__DeleteCertificatesResponse *src) returns deep copy of _tds__DeleteCertificatesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteCertificatesResponse(_tds__DeleteCertificatesResponse*) deep deletes _tds__DeleteCertificatesResponse data members, use only on dst after soap_dup__tds__DeleteCertificatesResponse(NULL, _tds__DeleteCertificatesResponse *dst, _tds__DeleteCertificatesResponse *src) (use soapcpp2 -Ed)
struct _tds__DeleteCertificatesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request is a complexType.
///
/// @note struct _tds__GetPkcs10Request operations:
/// - _tds__GetPkcs10Request* soap_new__tds__GetPkcs10Request(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*) default initialize members
/// - int soap_read__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*) deserialize from a source
/// - int soap_write__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*) serialize to a sink
/// - _tds__GetPkcs10Request* soap_dup__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request* dst, _tds__GetPkcs10Request *src) returns deep copy of _tds__GetPkcs10Request src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetPkcs10Request(_tds__GetPkcs10Request*) deep deletes _tds__GetPkcs10Request data members, use only on dst after soap_dup__tds__GetPkcs10Request(NULL, _tds__GetPkcs10Request *dst, _tds__GetPkcs10Request *src) (use soapcpp2 -Ed)
struct _tds__GetPkcs10Request
{
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative Dinstinguished Name(RDN) CommonName(CN).
/// </BLOCKQUOTE></PRE>
///
/// Element "Subject" of type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional base64 encoded DER attributes.
/// </BLOCKQUOTE></PRE>
///
/// Element "Attributes" of type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Attributes                     0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse is a complexType.
///
/// @note struct _tds__GetPkcs10RequestResponse operations:
/// - _tds__GetPkcs10RequestResponse* soap_new__tds__GetPkcs10RequestResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*) default initialize members
/// - int soap_read__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*) deserialize from a source
/// - int soap_write__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*) serialize to a sink
/// - _tds__GetPkcs10RequestResponse* soap_dup__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse* dst, _tds__GetPkcs10RequestResponse *src) returns deep copy of _tds__GetPkcs10RequestResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetPkcs10RequestResponse(_tds__GetPkcs10RequestResponse*) deep deletes _tds__GetPkcs10RequestResponse data members, use only on dst after soap_dup__tds__GetPkcs10RequestResponse(NULL, _tds__GetPkcs10RequestResponse *dst, _tds__GetPkcs10RequestResponse *src) (use soapcpp2 -Ed)
struct _tds__GetPkcs10RequestResponse
{
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "Pkcs10Request" of type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Pkcs10Request                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificates is a complexType.
///
/// @note struct _tds__LoadCertificates operations:
/// - _tds__LoadCertificates* soap_new__tds__LoadCertificates(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*) default initialize members
/// - int soap_read__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*) deserialize from a source
/// - int soap_write__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*) serialize to a sink
/// - _tds__LoadCertificates* soap_dup__tds__LoadCertificates(struct soap*, _tds__LoadCertificates* dst, _tds__LoadCertificates *src) returns deep copy of _tds__LoadCertificates src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__LoadCertificates(_tds__LoadCertificates*) deep deletes _tds__LoadCertificates data members, use only on dst after soap_dup__tds__LoadCertificates(NULL, _tds__LoadCertificates *dst, _tds__LoadCertificates *src) (use soapcpp2 -Ed)
struct _tds__LoadCertificates
{
/// <PRE><BLOCKQUOTE>
///   Optional id and base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Certificate* is 1..unbounded.
  $ int                                  __sizeNVTCertificate           1;
/// Array struct tt__Certificate* of size 1..unbounded.
    struct tt__Certificate*              NVTCertificate                 1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse is a complexType.
///
/// @note struct _tds__LoadCertificatesResponse operations:
/// - _tds__LoadCertificatesResponse* soap_new__tds__LoadCertificatesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*) default initialize members
/// - int soap_read__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*) deserialize from a source
/// - int soap_write__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*) serialize to a sink
/// - _tds__LoadCertificatesResponse* soap_dup__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse* dst, _tds__LoadCertificatesResponse *src) returns deep copy of _tds__LoadCertificatesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__LoadCertificatesResponse(_tds__LoadCertificatesResponse*) deep deletes _tds__LoadCertificatesResponse data members, use only on dst after soap_dup__tds__LoadCertificatesResponse(NULL, _tds__LoadCertificatesResponse *dst, _tds__LoadCertificatesResponse *src) (use soapcpp2 -Ed)
struct _tds__LoadCertificatesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode is a complexType.
///
/// @note struct _tds__GetClientCertificateMode operations:
/// - _tds__GetClientCertificateMode* soap_new__tds__GetClientCertificateMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*) default initialize members
/// - int soap_read__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*) deserialize from a source
/// - int soap_write__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*) serialize to a sink
/// - _tds__GetClientCertificateMode* soap_dup__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode* dst, _tds__GetClientCertificateMode *src) returns deep copy of _tds__GetClientCertificateMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetClientCertificateMode(_tds__GetClientCertificateMode*) deep deletes _tds__GetClientCertificateMode data members, use only on dst after soap_dup__tds__GetClientCertificateMode(NULL, _tds__GetClientCertificateMode *dst, _tds__GetClientCertificateMode *src) (use soapcpp2 -Ed)
struct _tds__GetClientCertificateMode
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse is a complexType.
///
/// @note struct _tds__GetClientCertificateModeResponse operations:
/// - _tds__GetClientCertificateModeResponse* soap_new__tds__GetClientCertificateModeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*) default initialize members
/// - int soap_read__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*) deserialize from a source
/// - int soap_write__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*) serialize to a sink
/// - _tds__GetClientCertificateModeResponse* soap_dup__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse* dst, _tds__GetClientCertificateModeResponse *src) returns deep copy of _tds__GetClientCertificateModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetClientCertificateModeResponse(_tds__GetClientCertificateModeResponse*) deep deletes _tds__GetClientCertificateModeResponse data members, use only on dst after soap_dup__tds__GetClientCertificateModeResponse(NULL, _tds__GetClientCertificateModeResponse *dst, _tds__GetClientCertificateModeResponse *src) (use soapcpp2 -Ed)
struct _tds__GetClientCertificateModeResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode is a complexType.
///
/// @note struct _tds__SetClientCertificateMode operations:
/// - _tds__SetClientCertificateMode* soap_new__tds__SetClientCertificateMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*) default initialize members
/// - int soap_read__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*) deserialize from a source
/// - int soap_write__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*) serialize to a sink
/// - _tds__SetClientCertificateMode* soap_dup__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode* dst, _tds__SetClientCertificateMode *src) returns deep copy of _tds__SetClientCertificateMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetClientCertificateMode(_tds__SetClientCertificateMode*) deep deletes _tds__SetClientCertificateMode data members, use only on dst after soap_dup__tds__SetClientCertificateMode(NULL, _tds__SetClientCertificateMode *dst, _tds__SetClientCertificateMode *src) (use soapcpp2 -Ed)
struct _tds__SetClientCertificateMode
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse is a complexType.
///
/// @note struct _tds__SetClientCertificateModeResponse operations:
/// - _tds__SetClientCertificateModeResponse* soap_new__tds__SetClientCertificateModeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*) default initialize members
/// - int soap_read__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*) deserialize from a source
/// - int soap_write__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*) serialize to a sink
/// - _tds__SetClientCertificateModeResponse* soap_dup__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse* dst, _tds__SetClientCertificateModeResponse *src) returns deep copy of _tds__SetClientCertificateModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetClientCertificateModeResponse(_tds__SetClientCertificateModeResponse*) deep deletes _tds__SetClientCertificateModeResponse data members, use only on dst after soap_dup__tds__SetClientCertificateModeResponse(NULL, _tds__SetClientCertificateModeResponse *dst, _tds__SetClientCertificateModeResponse *src) (use soapcpp2 -Ed)
struct _tds__SetClientCertificateModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificates is a complexType.
///
/// @note struct _tds__GetCACertificates operations:
/// - _tds__GetCACertificates* soap_new__tds__GetCACertificates(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*) default initialize members
/// - int soap_read__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*) deserialize from a source
/// - int soap_write__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*) serialize to a sink
/// - _tds__GetCACertificates* soap_dup__tds__GetCACertificates(struct soap*, _tds__GetCACertificates* dst, _tds__GetCACertificates *src) returns deep copy of _tds__GetCACertificates src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCACertificates(_tds__GetCACertificates*) deep deletes _tds__GetCACertificates data members, use only on dst after soap_dup__tds__GetCACertificates(NULL, _tds__GetCACertificates *dst, _tds__GetCACertificates *src) (use soapcpp2 -Ed)
struct _tds__GetCACertificates
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse is a complexType.
///
/// @note struct _tds__GetCACertificatesResponse operations:
/// - _tds__GetCACertificatesResponse* soap_new__tds__GetCACertificatesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*) default initialize members
/// - int soap_read__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*) deserialize from a source
/// - int soap_write__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*) serialize to a sink
/// - _tds__GetCACertificatesResponse* soap_dup__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse* dst, _tds__GetCACertificatesResponse *src) returns deep copy of _tds__GetCACertificatesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCACertificatesResponse(_tds__GetCACertificatesResponse*) deep deletes _tds__GetCACertificatesResponse data members, use only on dst after soap_dup__tds__GetCACertificatesResponse(NULL, _tds__GetCACertificatesResponse *dst, _tds__GetCACertificatesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetCACertificatesResponse
{
/// Size of array of struct tt__Certificate* is 0..unbounded.
  $ int                                  __sizeCACertificate            0;
/// Array struct tt__Certificate* of size 0..unbounded.
    struct tt__Certificate*              CACertificate                  0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey is a complexType.
///
/// @note struct _tds__LoadCertificateWithPrivateKey operations:
/// - _tds__LoadCertificateWithPrivateKey* soap_new__tds__LoadCertificateWithPrivateKey(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*) default initialize members
/// - int soap_read__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*) deserialize from a source
/// - int soap_write__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*) serialize to a sink
/// - _tds__LoadCertificateWithPrivateKey* soap_dup__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey* dst, _tds__LoadCertificateWithPrivateKey *src) returns deep copy of _tds__LoadCertificateWithPrivateKey src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__LoadCertificateWithPrivateKey(_tds__LoadCertificateWithPrivateKey*) deep deletes _tds__LoadCertificateWithPrivateKey data members, use only on dst after soap_dup__tds__LoadCertificateWithPrivateKey(NULL, _tds__LoadCertificateWithPrivateKey *dst, _tds__LoadCertificateWithPrivateKey *src) (use soapcpp2 -Ed)
struct _tds__LoadCertificateWithPrivateKey
{
/// Size of array of struct tt__CertificateWithPrivateKey* is 1..unbounded.
  $ int                                  __sizeCertificateWithPrivateKey 1;
/// Array struct tt__CertificateWithPrivateKey* of size 1..unbounded.
    struct tt__CertificateWithPrivateKey*  CertificateWithPrivateKey      1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse is a complexType.
///
/// @note struct _tds__LoadCertificateWithPrivateKeyResponse operations:
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_new__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*) default initialize members
/// - int soap_read__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*) deserialize from a source
/// - int soap_write__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*) serialize to a sink
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_dup__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse* dst, _tds__LoadCertificateWithPrivateKeyResponse *src) returns deep copy of _tds__LoadCertificateWithPrivateKeyResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__LoadCertificateWithPrivateKeyResponse(_tds__LoadCertificateWithPrivateKeyResponse*) deep deletes _tds__LoadCertificateWithPrivateKeyResponse data members, use only on dst after soap_dup__tds__LoadCertificateWithPrivateKeyResponse(NULL, _tds__LoadCertificateWithPrivateKeyResponse *dst, _tds__LoadCertificateWithPrivateKeyResponse *src) (use soapcpp2 -Ed)
struct _tds__LoadCertificateWithPrivateKeyResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation is a complexType.
///
/// @note struct _tds__GetCertificateInformation operations:
/// - _tds__GetCertificateInformation* soap_new__tds__GetCertificateInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*) default initialize members
/// - int soap_read__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*) deserialize from a source
/// - int soap_write__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*) serialize to a sink
/// - _tds__GetCertificateInformation* soap_dup__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation* dst, _tds__GetCertificateInformation *src) returns deep copy of _tds__GetCertificateInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCertificateInformation(_tds__GetCertificateInformation*) deep deletes _tds__GetCertificateInformation data members, use only on dst after soap_dup__tds__GetCertificateInformation(NULL, _tds__GetCertificateInformation *dst, _tds__GetCertificateInformation *src) (use soapcpp2 -Ed)
struct _tds__GetCertificateInformation
{
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse is a complexType.
///
/// @note struct _tds__GetCertificateInformationResponse operations:
/// - _tds__GetCertificateInformationResponse* soap_new__tds__GetCertificateInformationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*) default initialize members
/// - int soap_read__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*) deserialize from a source
/// - int soap_write__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*) serialize to a sink
/// - _tds__GetCertificateInformationResponse* soap_dup__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse* dst, _tds__GetCertificateInformationResponse *src) returns deep copy of _tds__GetCertificateInformationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCertificateInformationResponse(_tds__GetCertificateInformationResponse*) deep deletes _tds__GetCertificateInformationResponse data members, use only on dst after soap_dup__tds__GetCertificateInformationResponse(NULL, _tds__GetCertificateInformationResponse *dst, _tds__GetCertificateInformationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetCertificateInformationResponse
{
/// Element "CertificateInformation" of type "http://www.onvif.org/ver10/schema":CertificateInformation.
    struct tt__CertificateInformation*   CertificateInformation         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates is a complexType.
///
/// @note struct _tds__LoadCACertificates operations:
/// - _tds__LoadCACertificates* soap_new__tds__LoadCACertificates(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*) default initialize members
/// - int soap_read__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*) deserialize from a source
/// - int soap_write__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*) serialize to a sink
/// - _tds__LoadCACertificates* soap_dup__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates* dst, _tds__LoadCACertificates *src) returns deep copy of _tds__LoadCACertificates src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__LoadCACertificates(_tds__LoadCACertificates*) deep deletes _tds__LoadCACertificates data members, use only on dst after soap_dup__tds__LoadCACertificates(NULL, _tds__LoadCACertificates *dst, _tds__LoadCACertificates *src) (use soapcpp2 -Ed)
struct _tds__LoadCACertificates
{
/// Size of array of struct tt__Certificate* is 1..unbounded.
  $ int                                  __sizeCACertificate            1;
/// Array struct tt__Certificate* of size 1..unbounded.
    struct tt__Certificate*              CACertificate                  1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse is a complexType.
///
/// @note struct _tds__LoadCACertificatesResponse operations:
/// - _tds__LoadCACertificatesResponse* soap_new__tds__LoadCACertificatesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*) default initialize members
/// - int soap_read__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*) deserialize from a source
/// - int soap_write__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*) serialize to a sink
/// - _tds__LoadCACertificatesResponse* soap_dup__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse* dst, _tds__LoadCACertificatesResponse *src) returns deep copy of _tds__LoadCACertificatesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__LoadCACertificatesResponse(_tds__LoadCACertificatesResponse*) deep deletes _tds__LoadCACertificatesResponse data members, use only on dst after soap_dup__tds__LoadCACertificatesResponse(NULL, _tds__LoadCACertificatesResponse *dst, _tds__LoadCACertificatesResponse *src) (use soapcpp2 -Ed)
struct _tds__LoadCACertificatesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration is a complexType.
///
/// @note struct _tds__CreateDot1XConfiguration operations:
/// - _tds__CreateDot1XConfiguration* soap_new__tds__CreateDot1XConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*) default initialize members
/// - int soap_read__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*) deserialize from a source
/// - int soap_write__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*) serialize to a sink
/// - _tds__CreateDot1XConfiguration* soap_dup__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration* dst, _tds__CreateDot1XConfiguration *src) returns deep copy of _tds__CreateDot1XConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateDot1XConfiguration(_tds__CreateDot1XConfiguration*) deep deletes _tds__CreateDot1XConfiguration data members, use only on dst after soap_dup__tds__CreateDot1XConfiguration(NULL, _tds__CreateDot1XConfiguration *dst, _tds__CreateDot1XConfiguration *src) (use soapcpp2 -Ed)
struct _tds__CreateDot1XConfiguration
{
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse is a complexType.
///
/// @note struct _tds__CreateDot1XConfigurationResponse operations:
/// - _tds__CreateDot1XConfigurationResponse* soap_new__tds__CreateDot1XConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*) default initialize members
/// - int soap_read__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*) serialize to a sink
/// - _tds__CreateDot1XConfigurationResponse* soap_dup__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse* dst, _tds__CreateDot1XConfigurationResponse *src) returns deep copy of _tds__CreateDot1XConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateDot1XConfigurationResponse(_tds__CreateDot1XConfigurationResponse*) deep deletes _tds__CreateDot1XConfigurationResponse data members, use only on dst after soap_dup__tds__CreateDot1XConfigurationResponse(NULL, _tds__CreateDot1XConfigurationResponse *dst, _tds__CreateDot1XConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__CreateDot1XConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration is a complexType.
///
/// @note struct _tds__SetDot1XConfiguration operations:
/// - _tds__SetDot1XConfiguration* soap_new__tds__SetDot1XConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*) default initialize members
/// - int soap_read__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*) deserialize from a source
/// - int soap_write__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*) serialize to a sink
/// - _tds__SetDot1XConfiguration* soap_dup__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration* dst, _tds__SetDot1XConfiguration *src) returns deep copy of _tds__SetDot1XConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDot1XConfiguration(_tds__SetDot1XConfiguration*) deep deletes _tds__SetDot1XConfiguration data members, use only on dst after soap_dup__tds__SetDot1XConfiguration(NULL, _tds__SetDot1XConfiguration *dst, _tds__SetDot1XConfiguration *src) (use soapcpp2 -Ed)
struct _tds__SetDot1XConfiguration
{
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse is a complexType.
///
/// @note struct _tds__SetDot1XConfigurationResponse operations:
/// - _tds__SetDot1XConfigurationResponse* soap_new__tds__SetDot1XConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*) default initialize members
/// - int soap_read__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*) serialize to a sink
/// - _tds__SetDot1XConfigurationResponse* soap_dup__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse* dst, _tds__SetDot1XConfigurationResponse *src) returns deep copy of _tds__SetDot1XConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDot1XConfigurationResponse(_tds__SetDot1XConfigurationResponse*) deep deletes _tds__SetDot1XConfigurationResponse data members, use only on dst after soap_dup__tds__SetDot1XConfigurationResponse(NULL, _tds__SetDot1XConfigurationResponse *dst, _tds__SetDot1XConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__SetDot1XConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration is a complexType.
///
/// @note struct _tds__GetDot1XConfiguration operations:
/// - _tds__GetDot1XConfiguration* soap_new__tds__GetDot1XConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*) default initialize members
/// - int soap_read__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*) deserialize from a source
/// - int soap_write__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*) serialize to a sink
/// - _tds__GetDot1XConfiguration* soap_dup__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration* dst, _tds__GetDot1XConfiguration *src) returns deep copy of _tds__GetDot1XConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot1XConfiguration(_tds__GetDot1XConfiguration*) deep deletes _tds__GetDot1XConfiguration data members, use only on dst after soap_dup__tds__GetDot1XConfiguration(NULL, _tds__GetDot1XConfiguration *dst, _tds__GetDot1XConfiguration *src) (use soapcpp2 -Ed)
struct _tds__GetDot1XConfiguration
{
/// Element "Dot1XConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse is a complexType.
///
/// @note struct _tds__GetDot1XConfigurationResponse operations:
/// - _tds__GetDot1XConfigurationResponse* soap_new__tds__GetDot1XConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*) serialize to a sink
/// - _tds__GetDot1XConfigurationResponse* soap_dup__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse* dst, _tds__GetDot1XConfigurationResponse *src) returns deep copy of _tds__GetDot1XConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot1XConfigurationResponse(_tds__GetDot1XConfigurationResponse*) deep deletes _tds__GetDot1XConfigurationResponse data members, use only on dst after soap_dup__tds__GetDot1XConfigurationResponse(NULL, _tds__GetDot1XConfigurationResponse *dst, _tds__GetDot1XConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDot1XConfigurationResponse
{
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations is a complexType.
///
/// @note struct _tds__GetDot1XConfigurations operations:
/// - _tds__GetDot1XConfigurations* soap_new__tds__GetDot1XConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*) deserialize from a source
/// - int soap_write__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*) serialize to a sink
/// - _tds__GetDot1XConfigurations* soap_dup__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations* dst, _tds__GetDot1XConfigurations *src) returns deep copy of _tds__GetDot1XConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot1XConfigurations(_tds__GetDot1XConfigurations*) deep deletes _tds__GetDot1XConfigurations data members, use only on dst after soap_dup__tds__GetDot1XConfigurations(NULL, _tds__GetDot1XConfigurations *dst, _tds__GetDot1XConfigurations *src) (use soapcpp2 -Ed)
struct _tds__GetDot1XConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse is a complexType.
///
/// @note struct _tds__GetDot1XConfigurationsResponse operations:
/// - _tds__GetDot1XConfigurationsResponse* soap_new__tds__GetDot1XConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*) deserialize from a source
/// - int soap_write__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*) serialize to a sink
/// - _tds__GetDot1XConfigurationsResponse* soap_dup__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse* dst, _tds__GetDot1XConfigurationsResponse *src) returns deep copy of _tds__GetDot1XConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot1XConfigurationsResponse(_tds__GetDot1XConfigurationsResponse*) deep deletes _tds__GetDot1XConfigurationsResponse data members, use only on dst after soap_dup__tds__GetDot1XConfigurationsResponse(NULL, _tds__GetDot1XConfigurationsResponse *dst, _tds__GetDot1XConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDot1XConfigurationsResponse
{
/// Size of array of struct tt__Dot1XConfiguration* is 0..unbounded.
  $ int                                  __sizeDot1XConfiguration       0;
/// Array struct tt__Dot1XConfiguration* of size 0..unbounded.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration is a complexType.
///
/// @note struct _tds__DeleteDot1XConfiguration operations:
/// - _tds__DeleteDot1XConfiguration* soap_new__tds__DeleteDot1XConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*) default initialize members
/// - int soap_read__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*) deserialize from a source
/// - int soap_write__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*) serialize to a sink
/// - _tds__DeleteDot1XConfiguration* soap_dup__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration* dst, _tds__DeleteDot1XConfiguration *src) returns deep copy of _tds__DeleteDot1XConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteDot1XConfiguration(_tds__DeleteDot1XConfiguration*) deep deletes _tds__DeleteDot1XConfiguration data members, use only on dst after soap_dup__tds__DeleteDot1XConfiguration(NULL, _tds__DeleteDot1XConfiguration *dst, _tds__DeleteDot1XConfiguration *src) (use soapcpp2 -Ed)
struct _tds__DeleteDot1XConfiguration
{
/// Size of array of tt__ReferenceToken* is 0..unbounded.
  $ int                                  __sizeDot1XConfigurationToken  0;
/// Array tt__ReferenceToken* of size 0..unbounded.
    tt__ReferenceToken*                  Dot1XConfigurationToken        0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse is a complexType.
///
/// @note struct _tds__DeleteDot1XConfigurationResponse operations:
/// - _tds__DeleteDot1XConfigurationResponse* soap_new__tds__DeleteDot1XConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*) default initialize members
/// - int soap_read__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*) serialize to a sink
/// - _tds__DeleteDot1XConfigurationResponse* soap_dup__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse* dst, _tds__DeleteDot1XConfigurationResponse *src) returns deep copy of _tds__DeleteDot1XConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteDot1XConfigurationResponse(_tds__DeleteDot1XConfigurationResponse*) deep deletes _tds__DeleteDot1XConfigurationResponse data members, use only on dst after soap_dup__tds__DeleteDot1XConfigurationResponse(NULL, _tds__DeleteDot1XConfigurationResponse *dst, _tds__DeleteDot1XConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__DeleteDot1XConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs is a complexType.
///
/// @note struct _tds__GetRelayOutputs operations:
/// - _tds__GetRelayOutputs* soap_new__tds__GetRelayOutputs(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*) default initialize members
/// - int soap_read__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*) deserialize from a source
/// - int soap_write__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*) serialize to a sink
/// - _tds__GetRelayOutputs* soap_dup__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs* dst, _tds__GetRelayOutputs *src) returns deep copy of _tds__GetRelayOutputs src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetRelayOutputs(_tds__GetRelayOutputs*) deep deletes _tds__GetRelayOutputs data members, use only on dst after soap_dup__tds__GetRelayOutputs(NULL, _tds__GetRelayOutputs *dst, _tds__GetRelayOutputs *src) (use soapcpp2 -Ed)
struct _tds__GetRelayOutputs
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse is a complexType.
///
/// @note struct _tds__GetRelayOutputsResponse operations:
/// - _tds__GetRelayOutputsResponse* soap_new__tds__GetRelayOutputsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*) default initialize members
/// - int soap_read__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*) deserialize from a source
/// - int soap_write__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*) serialize to a sink
/// - _tds__GetRelayOutputsResponse* soap_dup__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse* dst, _tds__GetRelayOutputsResponse *src) returns deep copy of _tds__GetRelayOutputsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetRelayOutputsResponse(_tds__GetRelayOutputsResponse*) deep deletes _tds__GetRelayOutputsResponse data members, use only on dst after soap_dup__tds__GetRelayOutputsResponse(NULL, _tds__GetRelayOutputsResponse *dst, _tds__GetRelayOutputsResponse *src) (use soapcpp2 -Ed)
struct _tds__GetRelayOutputsResponse
{
/// Size of array of struct tt__RelayOutput* is 0..unbounded.
  $ int                                  __sizeRelayOutputs             0;
/// Array struct tt__RelayOutput* of size 0..unbounded.
    struct tt__RelayOutput*              RelayOutputs                   0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings is a complexType.
///
/// @note struct _tds__SetRelayOutputSettings operations:
/// - _tds__SetRelayOutputSettings* soap_new__tds__SetRelayOutputSettings(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*) default initialize members
/// - int soap_read__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*) deserialize from a source
/// - int soap_write__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*) serialize to a sink
/// - _tds__SetRelayOutputSettings* soap_dup__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings* dst, _tds__SetRelayOutputSettings *src) returns deep copy of _tds__SetRelayOutputSettings src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRelayOutputSettings(_tds__SetRelayOutputSettings*) deep deletes _tds__SetRelayOutputSettings data members, use only on dst after soap_dup__tds__SetRelayOutputSettings(NULL, _tds__SetRelayOutputSettings *dst, _tds__SetRelayOutputSettings *src) (use soapcpp2 -Ed)
struct _tds__SetRelayOutputSettings
{
/// Element "RelayOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "Properties" of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    struct tt__RelayOutputSettings*      Properties                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse is a complexType.
///
/// @note struct _tds__SetRelayOutputSettingsResponse operations:
/// - _tds__SetRelayOutputSettingsResponse* soap_new__tds__SetRelayOutputSettingsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*) default initialize members
/// - int soap_read__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*) deserialize from a source
/// - int soap_write__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*) serialize to a sink
/// - _tds__SetRelayOutputSettingsResponse* soap_dup__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse* dst, _tds__SetRelayOutputSettingsResponse *src) returns deep copy of _tds__SetRelayOutputSettingsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRelayOutputSettingsResponse(_tds__SetRelayOutputSettingsResponse*) deep deletes _tds__SetRelayOutputSettingsResponse data members, use only on dst after soap_dup__tds__SetRelayOutputSettingsResponse(NULL, _tds__SetRelayOutputSettingsResponse *dst, _tds__SetRelayOutputSettingsResponse *src) (use soapcpp2 -Ed)
struct _tds__SetRelayOutputSettingsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState is a complexType.
///
/// @note struct _tds__SetRelayOutputState operations:
/// - _tds__SetRelayOutputState* soap_new__tds__SetRelayOutputState(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*) default initialize members
/// - int soap_read__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*) deserialize from a source
/// - int soap_write__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*) serialize to a sink
/// - _tds__SetRelayOutputState* soap_dup__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState* dst, _tds__SetRelayOutputState *src) returns deep copy of _tds__SetRelayOutputState src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRelayOutputState(_tds__SetRelayOutputState*) deep deletes _tds__SetRelayOutputState data members, use only on dst after soap_dup__tds__SetRelayOutputState(NULL, _tds__SetRelayOutputState *dst, _tds__SetRelayOutputState *src) (use soapcpp2 -Ed)
struct _tds__SetRelayOutputState
{
/// Element "RelayOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "LogicalState" of type "http://www.onvif.org/ver10/schema":RelayLogicalState.
    enum tt__RelayLogicalState           LogicalState                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse is a complexType.
///
/// @note struct _tds__SetRelayOutputStateResponse operations:
/// - _tds__SetRelayOutputStateResponse* soap_new__tds__SetRelayOutputStateResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*) default initialize members
/// - int soap_read__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*) deserialize from a source
/// - int soap_write__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*) serialize to a sink
/// - _tds__SetRelayOutputStateResponse* soap_dup__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse* dst, _tds__SetRelayOutputStateResponse *src) returns deep copy of _tds__SetRelayOutputStateResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRelayOutputStateResponse(_tds__SetRelayOutputStateResponse*) deep deletes _tds__SetRelayOutputStateResponse data members, use only on dst after soap_dup__tds__SetRelayOutputStateResponse(NULL, _tds__SetRelayOutputStateResponse *dst, _tds__SetRelayOutputStateResponse *src) (use soapcpp2 -Ed)
struct _tds__SetRelayOutputStateResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand is a complexType.
///
/// @note struct _tds__SendAuxiliaryCommand operations:
/// - _tds__SendAuxiliaryCommand* soap_new__tds__SendAuxiliaryCommand(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*) default initialize members
/// - int soap_read__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*) deserialize from a source
/// - int soap_write__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*) serialize to a sink
/// - _tds__SendAuxiliaryCommand* soap_dup__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand* dst, _tds__SendAuxiliaryCommand *src) returns deep copy of _tds__SendAuxiliaryCommand src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SendAuxiliaryCommand(_tds__SendAuxiliaryCommand*) deep deletes _tds__SendAuxiliaryCommand data members, use only on dst after soap_dup__tds__SendAuxiliaryCommand(NULL, _tds__SendAuxiliaryCommand *dst, _tds__SendAuxiliaryCommand *src) (use soapcpp2 -Ed)
struct _tds__SendAuxiliaryCommand
{
/// Element "AuxiliaryCommand" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommand               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
/// @note struct _tds__SendAuxiliaryCommandResponse operations:
/// - _tds__SendAuxiliaryCommandResponse* soap_new__tds__SendAuxiliaryCommandResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*) default initialize members
/// - int soap_read__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*) deserialize from a source
/// - int soap_write__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*) serialize to a sink
/// - _tds__SendAuxiliaryCommandResponse* soap_dup__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse* dst, _tds__SendAuxiliaryCommandResponse *src) returns deep copy of _tds__SendAuxiliaryCommandResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SendAuxiliaryCommandResponse(_tds__SendAuxiliaryCommandResponse*) deep deletes _tds__SendAuxiliaryCommandResponse data members, use only on dst after soap_dup__tds__SendAuxiliaryCommandResponse(NULL, _tds__SendAuxiliaryCommandResponse *dst, _tds__SendAuxiliaryCommandResponse *src) (use soapcpp2 -Ed)
struct _tds__SendAuxiliaryCommandResponse
{
/// Element "AuxiliaryCommandResponse" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommandResponse       0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities is a complexType.
///
/// @note struct _tds__GetDot11Capabilities operations:
/// - _tds__GetDot11Capabilities* soap_new__tds__GetDot11Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*) default initialize members
/// - int soap_read__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*) deserialize from a source
/// - int soap_write__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*) serialize to a sink
/// - _tds__GetDot11Capabilities* soap_dup__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities* dst, _tds__GetDot11Capabilities *src) returns deep copy of _tds__GetDot11Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot11Capabilities(_tds__GetDot11Capabilities*) deep deletes _tds__GetDot11Capabilities data members, use only on dst after soap_dup__tds__GetDot11Capabilities(NULL, _tds__GetDot11Capabilities *dst, _tds__GetDot11Capabilities *src) (use soapcpp2 -Ed)
struct _tds__GetDot11Capabilities
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse is a complexType.
///
/// @note struct _tds__GetDot11CapabilitiesResponse operations:
/// - _tds__GetDot11CapabilitiesResponse* soap_new__tds__GetDot11CapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*) default initialize members
/// - int soap_read__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*) deserialize from a source
/// - int soap_write__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*) serialize to a sink
/// - _tds__GetDot11CapabilitiesResponse* soap_dup__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse* dst, _tds__GetDot11CapabilitiesResponse *src) returns deep copy of _tds__GetDot11CapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot11CapabilitiesResponse(_tds__GetDot11CapabilitiesResponse*) deep deletes _tds__GetDot11CapabilitiesResponse data members, use only on dst after soap_dup__tds__GetDot11CapabilitiesResponse(NULL, _tds__GetDot11CapabilitiesResponse *dst, _tds__GetDot11CapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDot11CapabilitiesResponse
{
/// Element "Capabilities" of type "http://www.onvif.org/ver10/schema":Dot11Capabilities.
    struct tt__Dot11Capabilities*        Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Status
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Status is a complexType.
///
/// @note struct _tds__GetDot11Status operations:
/// - _tds__GetDot11Status* soap_new__tds__GetDot11Status(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*) default initialize members
/// - int soap_read__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*) deserialize from a source
/// - int soap_write__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*) serialize to a sink
/// - _tds__GetDot11Status* soap_dup__tds__GetDot11Status(struct soap*, _tds__GetDot11Status* dst, _tds__GetDot11Status *src) returns deep copy of _tds__GetDot11Status src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot11Status(_tds__GetDot11Status*) deep deletes _tds__GetDot11Status data members, use only on dst after soap_dup__tds__GetDot11Status(NULL, _tds__GetDot11Status *dst, _tds__GetDot11Status *src) (use soapcpp2 -Ed)
struct _tds__GetDot11Status
{
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse is a complexType.
///
/// @note struct _tds__GetDot11StatusResponse operations:
/// - _tds__GetDot11StatusResponse* soap_new__tds__GetDot11StatusResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*) default initialize members
/// - int soap_read__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*) deserialize from a source
/// - int soap_write__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*) serialize to a sink
/// - _tds__GetDot11StatusResponse* soap_dup__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse* dst, _tds__GetDot11StatusResponse *src) returns deep copy of _tds__GetDot11StatusResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot11StatusResponse(_tds__GetDot11StatusResponse*) deep deletes _tds__GetDot11StatusResponse data members, use only on dst after soap_dup__tds__GetDot11StatusResponse(NULL, _tds__GetDot11StatusResponse *dst, _tds__GetDot11StatusResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDot11StatusResponse
{
/// Element "Status" of type "http://www.onvif.org/ver10/schema":Dot11Status.
    struct tt__Dot11Status*              Status                         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks is a complexType.
///
/// @note struct _tds__ScanAvailableDot11Networks operations:
/// - _tds__ScanAvailableDot11Networks* soap_new__tds__ScanAvailableDot11Networks(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*) default initialize members
/// - int soap_read__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*) deserialize from a source
/// - int soap_write__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*) serialize to a sink
/// - _tds__ScanAvailableDot11Networks* soap_dup__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks* dst, _tds__ScanAvailableDot11Networks *src) returns deep copy of _tds__ScanAvailableDot11Networks src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__ScanAvailableDot11Networks(_tds__ScanAvailableDot11Networks*) deep deletes _tds__ScanAvailableDot11Networks data members, use only on dst after soap_dup__tds__ScanAvailableDot11Networks(NULL, _tds__ScanAvailableDot11Networks *dst, _tds__ScanAvailableDot11Networks *src) (use soapcpp2 -Ed)
struct _tds__ScanAvailableDot11Networks
{
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse is a complexType.
///
/// @note struct _tds__ScanAvailableDot11NetworksResponse operations:
/// - _tds__ScanAvailableDot11NetworksResponse* soap_new__tds__ScanAvailableDot11NetworksResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*) default initialize members
/// - int soap_read__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*) deserialize from a source
/// - int soap_write__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*) serialize to a sink
/// - _tds__ScanAvailableDot11NetworksResponse* soap_dup__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse* dst, _tds__ScanAvailableDot11NetworksResponse *src) returns deep copy of _tds__ScanAvailableDot11NetworksResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__ScanAvailableDot11NetworksResponse(_tds__ScanAvailableDot11NetworksResponse*) deep deletes _tds__ScanAvailableDot11NetworksResponse data members, use only on dst after soap_dup__tds__ScanAvailableDot11NetworksResponse(NULL, _tds__ScanAvailableDot11NetworksResponse *dst, _tds__ScanAvailableDot11NetworksResponse *src) (use soapcpp2 -Ed)
struct _tds__ScanAvailableDot11NetworksResponse
{
/// Size of array of struct tt__Dot11AvailableNetworks* is 0..unbounded.
  $ int                                  __sizeNetworks                 0;
/// Array struct tt__Dot11AvailableNetworks* of size 0..unbounded.
    struct tt__Dot11AvailableNetworks*   Networks                       0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUris
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUris is a complexType.
///
/// @note struct _tds__GetSystemUris operations:
/// - _tds__GetSystemUris* soap_new__tds__GetSystemUris(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*) default initialize members
/// - int soap_read__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*) deserialize from a source
/// - int soap_write__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*) serialize to a sink
/// - _tds__GetSystemUris* soap_dup__tds__GetSystemUris(struct soap*, _tds__GetSystemUris* dst, _tds__GetSystemUris *src) returns deep copy of _tds__GetSystemUris src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemUris(_tds__GetSystemUris*) deep deletes _tds__GetSystemUris data members, use only on dst after soap_dup__tds__GetSystemUris(NULL, _tds__GetSystemUris *dst, _tds__GetSystemUris *src) (use soapcpp2 -Ed)
struct _tds__GetSystemUris
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse is a complexType.
///
/// @note struct _tds__GetSystemUrisResponse operations:
/// - _tds__GetSystemUrisResponse* soap_new__tds__GetSystemUrisResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*) default initialize members
/// - int soap_read__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*) deserialize from a source
/// - int soap_write__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*) serialize to a sink
/// - _tds__GetSystemUrisResponse* soap_dup__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse* dst, _tds__GetSystemUrisResponse *src) returns deep copy of _tds__GetSystemUrisResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemUrisResponse(_tds__GetSystemUrisResponse*) deep deletes _tds__GetSystemUrisResponse data members, use only on dst after soap_dup__tds__GetSystemUrisResponse(NULL, _tds__GetSystemUrisResponse *dst, _tds__GetSystemUrisResponse *src) (use soapcpp2 -Ed)
struct _tds__GetSystemUrisResponse
{
/// Element "SystemLogUris" of type "http://www.onvif.org/ver10/schema":SystemLogUriList.
    struct tt__SystemLogUriList*         SystemLogUris                  0;	///< Optional element.
/// Element "SupportInfoUri" of type xs:anyURI.
    xsd__anyURI                          SupportInfoUri                 0;	///< Optional element.
/// Element "SystemBackupUri" of type xs:anyURI.
    xsd__anyURI                          SystemBackupUri                0;	///< Optional element.
/// @note struct _tds__GetSystemUrisResponse_Extension operations:
/// - _tds__GetSystemUrisResponse_Extension* soap_new__tds__GetSystemUrisResponse_Extension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension*) default initialize members
/// - int soap_read__tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension*) deserialize from a source
/// - int soap_write__tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension*) serialize to a sink
/// - _tds__GetSystemUrisResponse_Extension* soap_dup__tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension* dst, _tds__GetSystemUrisResponse_Extension *src) returns deep copy of _tds__GetSystemUrisResponse_Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemUrisResponse_Extension(_tds__GetSystemUrisResponse_Extension*) deep deletes _tds__GetSystemUrisResponse_Extension data members, use only on dst after soap_dup__tds__GetSystemUrisResponse_Extension(NULL, _tds__GetSystemUrisResponse_Extension *dst, _tds__GetSystemUrisResponse_Extension *src) (use soapcpp2 -Ed)
    struct _tds__GetSystemUrisResponse_Extension
    {
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Extension                      0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade is a complexType.
///
/// @note struct _tds__StartFirmwareUpgrade operations:
/// - _tds__StartFirmwareUpgrade* soap_new__tds__StartFirmwareUpgrade(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*) default initialize members
/// - int soap_read__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*) deserialize from a source
/// - int soap_write__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*) serialize to a sink
/// - _tds__StartFirmwareUpgrade* soap_dup__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade* dst, _tds__StartFirmwareUpgrade *src) returns deep copy of _tds__StartFirmwareUpgrade src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__StartFirmwareUpgrade(_tds__StartFirmwareUpgrade*) deep deletes _tds__StartFirmwareUpgrade data members, use only on dst after soap_dup__tds__StartFirmwareUpgrade(NULL, _tds__StartFirmwareUpgrade *dst, _tds__StartFirmwareUpgrade *src) (use soapcpp2 -Ed)
struct _tds__StartFirmwareUpgrade
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse is a complexType.
///
/// @note struct _tds__StartFirmwareUpgradeResponse operations:
/// - _tds__StartFirmwareUpgradeResponse* soap_new__tds__StartFirmwareUpgradeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*) default initialize members
/// - int soap_read__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*) deserialize from a source
/// - int soap_write__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*) serialize to a sink
/// - _tds__StartFirmwareUpgradeResponse* soap_dup__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse* dst, _tds__StartFirmwareUpgradeResponse *src) returns deep copy of _tds__StartFirmwareUpgradeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__StartFirmwareUpgradeResponse(_tds__StartFirmwareUpgradeResponse*) deep deletes _tds__StartFirmwareUpgradeResponse data members, use only on dst after soap_dup__tds__StartFirmwareUpgradeResponse(NULL, _tds__StartFirmwareUpgradeResponse *dst, _tds__StartFirmwareUpgradeResponse *src) (use soapcpp2 -Ed)
struct _tds__StartFirmwareUpgradeResponse
{
/// Element "UploadUri" of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "UploadDelay" of type xs:duration.
    xsd__duration                        UploadDelay                    1;	///< Required element.
/// Element "ExpectedDownTime" of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore is a complexType.
///
/// @note struct _tds__StartSystemRestore operations:
/// - _tds__StartSystemRestore* soap_new__tds__StartSystemRestore(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*) default initialize members
/// - int soap_read__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*) deserialize from a source
/// - int soap_write__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*) serialize to a sink
/// - _tds__StartSystemRestore* soap_dup__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore* dst, _tds__StartSystemRestore *src) returns deep copy of _tds__StartSystemRestore src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__StartSystemRestore(_tds__StartSystemRestore*) deep deletes _tds__StartSystemRestore data members, use only on dst after soap_dup__tds__StartSystemRestore(NULL, _tds__StartSystemRestore *dst, _tds__StartSystemRestore *src) (use soapcpp2 -Ed)
struct _tds__StartSystemRestore
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse is a complexType.
///
/// @note struct _tds__StartSystemRestoreResponse operations:
/// - _tds__StartSystemRestoreResponse* soap_new__tds__StartSystemRestoreResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*) default initialize members
/// - int soap_read__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*) deserialize from a source
/// - int soap_write__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*) serialize to a sink
/// - _tds__StartSystemRestoreResponse* soap_dup__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse* dst, _tds__StartSystemRestoreResponse *src) returns deep copy of _tds__StartSystemRestoreResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__StartSystemRestoreResponse(_tds__StartSystemRestoreResponse*) deep deletes _tds__StartSystemRestoreResponse data members, use only on dst after soap_dup__tds__StartSystemRestoreResponse(NULL, _tds__StartSystemRestoreResponse *dst, _tds__StartSystemRestoreResponse *src) (use soapcpp2 -Ed)
struct _tds__StartSystemRestoreResponse
{
/// Element "UploadUri" of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "ExpectedDownTime" of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations is a complexType.
///
/// @note struct _tds__GetStorageConfigurations operations:
/// - _tds__GetStorageConfigurations* soap_new__tds__GetStorageConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations*) default initialize members
/// - int soap_read__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations*) deserialize from a source
/// - int soap_write__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations*) serialize to a sink
/// - _tds__GetStorageConfigurations* soap_dup__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations* dst, _tds__GetStorageConfigurations *src) returns deep copy of _tds__GetStorageConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetStorageConfigurations(_tds__GetStorageConfigurations*) deep deletes _tds__GetStorageConfigurations data members, use only on dst after soap_dup__tds__GetStorageConfigurations(NULL, _tds__GetStorageConfigurations *dst, _tds__GetStorageConfigurations *src) (use soapcpp2 -Ed)
struct _tds__GetStorageConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse is a complexType.
///
/// @note struct _tds__GetStorageConfigurationsResponse operations:
/// - _tds__GetStorageConfigurationsResponse* soap_new__tds__GetStorageConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse*) default initialize members
/// - int soap_read__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse*) deserialize from a source
/// - int soap_write__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse*) serialize to a sink
/// - _tds__GetStorageConfigurationsResponse* soap_dup__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse* dst, _tds__GetStorageConfigurationsResponse *src) returns deep copy of _tds__GetStorageConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetStorageConfigurationsResponse(_tds__GetStorageConfigurationsResponse*) deep deletes _tds__GetStorageConfigurationsResponse data members, use only on dst after soap_dup__tds__GetStorageConfigurationsResponse(NULL, _tds__GetStorageConfigurationsResponse *dst, _tds__GetStorageConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tds__GetStorageConfigurationsResponse
{
/// Size of array of struct tds__StorageConfiguration* is 0..unbounded.
  $ int                                  __sizeStorageConfigurations    0;
/// Array struct tds__StorageConfiguration* of size 0..unbounded.
    struct tds__StorageConfiguration*    StorageConfigurations          0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration is a complexType.
///
/// @note struct _tds__CreateStorageConfiguration operations:
/// - _tds__CreateStorageConfiguration* soap_new__tds__CreateStorageConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration*) default initialize members
/// - int soap_read__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration*) deserialize from a source
/// - int soap_write__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration*) serialize to a sink
/// - _tds__CreateStorageConfiguration* soap_dup__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration* dst, _tds__CreateStorageConfiguration *src) returns deep copy of _tds__CreateStorageConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateStorageConfiguration(_tds__CreateStorageConfiguration*) deep deletes _tds__CreateStorageConfiguration data members, use only on dst after soap_dup__tds__CreateStorageConfiguration(NULL, _tds__CreateStorageConfiguration *dst, _tds__CreateStorageConfiguration *src) (use soapcpp2 -Ed)
struct _tds__CreateStorageConfiguration
{
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    struct tds__StorageConfigurationData*  StorageConfiguration           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse is a complexType.
///
/// @note struct _tds__CreateStorageConfigurationResponse operations:
/// - _tds__CreateStorageConfigurationResponse* soap_new__tds__CreateStorageConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse*) default initialize members
/// - int soap_read__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse*) serialize to a sink
/// - _tds__CreateStorageConfigurationResponse* soap_dup__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse* dst, _tds__CreateStorageConfigurationResponse *src) returns deep copy of _tds__CreateStorageConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateStorageConfigurationResponse(_tds__CreateStorageConfigurationResponse*) deep deletes _tds__CreateStorageConfigurationResponse data members, use only on dst after soap_dup__tds__CreateStorageConfigurationResponse(NULL, _tds__CreateStorageConfigurationResponse *dst, _tds__CreateStorageConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__CreateStorageConfigurationResponse
{
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration is a complexType.
///
/// @note struct _tds__GetStorageConfiguration operations:
/// - _tds__GetStorageConfiguration* soap_new__tds__GetStorageConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration*) default initialize members
/// - int soap_read__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration*) deserialize from a source
/// - int soap_write__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration*) serialize to a sink
/// - _tds__GetStorageConfiguration* soap_dup__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration* dst, _tds__GetStorageConfiguration *src) returns deep copy of _tds__GetStorageConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetStorageConfiguration(_tds__GetStorageConfiguration*) deep deletes _tds__GetStorageConfiguration data members, use only on dst after soap_dup__tds__GetStorageConfiguration(NULL, _tds__GetStorageConfiguration *dst, _tds__GetStorageConfiguration *src) (use soapcpp2 -Ed)
struct _tds__GetStorageConfiguration
{
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse is a complexType.
///
/// @note struct _tds__GetStorageConfigurationResponse operations:
/// - _tds__GetStorageConfigurationResponse* soap_new__tds__GetStorageConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse*) default initialize members
/// - int soap_read__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse*) serialize to a sink
/// - _tds__GetStorageConfigurationResponse* soap_dup__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse* dst, _tds__GetStorageConfigurationResponse *src) returns deep copy of _tds__GetStorageConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetStorageConfigurationResponse(_tds__GetStorageConfigurationResponse*) deep deletes _tds__GetStorageConfigurationResponse data members, use only on dst after soap_dup__tds__GetStorageConfigurationResponse(NULL, _tds__GetStorageConfigurationResponse *dst, _tds__GetStorageConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetStorageConfigurationResponse
{
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    struct tds__StorageConfiguration*    StorageConfiguration           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration is a complexType.
///
/// @note struct _tds__SetStorageConfiguration operations:
/// - _tds__SetStorageConfiguration* soap_new__tds__SetStorageConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration*) default initialize members
/// - int soap_read__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration*) deserialize from a source
/// - int soap_write__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration*) serialize to a sink
/// - _tds__SetStorageConfiguration* soap_dup__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration* dst, _tds__SetStorageConfiguration *src) returns deep copy of _tds__SetStorageConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetStorageConfiguration(_tds__SetStorageConfiguration*) deep deletes _tds__SetStorageConfiguration data members, use only on dst after soap_dup__tds__SetStorageConfiguration(NULL, _tds__SetStorageConfiguration *dst, _tds__SetStorageConfiguration *src) (use soapcpp2 -Ed)
struct _tds__SetStorageConfiguration
{
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    struct tds__StorageConfiguration*    StorageConfiguration           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse is a complexType.
///
/// @note struct _tds__SetStorageConfigurationResponse operations:
/// - _tds__SetStorageConfigurationResponse* soap_new__tds__SetStorageConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse*) default initialize members
/// - int soap_read__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse*) serialize to a sink
/// - _tds__SetStorageConfigurationResponse* soap_dup__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse* dst, _tds__SetStorageConfigurationResponse *src) returns deep copy of _tds__SetStorageConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetStorageConfigurationResponse(_tds__SetStorageConfigurationResponse*) deep deletes _tds__SetStorageConfigurationResponse data members, use only on dst after soap_dup__tds__SetStorageConfigurationResponse(NULL, _tds__SetStorageConfigurationResponse *dst, _tds__SetStorageConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__SetStorageConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration is a complexType.
///
/// @note struct _tds__DeleteStorageConfiguration operations:
/// - _tds__DeleteStorageConfiguration* soap_new__tds__DeleteStorageConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration*) default initialize members
/// - int soap_read__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration*) deserialize from a source
/// - int soap_write__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration*) serialize to a sink
/// - _tds__DeleteStorageConfiguration* soap_dup__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration* dst, _tds__DeleteStorageConfiguration *src) returns deep copy of _tds__DeleteStorageConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteStorageConfiguration(_tds__DeleteStorageConfiguration*) deep deletes _tds__DeleteStorageConfiguration data members, use only on dst after soap_dup__tds__DeleteStorageConfiguration(NULL, _tds__DeleteStorageConfiguration *dst, _tds__DeleteStorageConfiguration *src) (use soapcpp2 -Ed)
struct _tds__DeleteStorageConfiguration
{
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse is a complexType.
///
/// @note struct _tds__DeleteStorageConfigurationResponse operations:
/// - _tds__DeleteStorageConfigurationResponse* soap_new__tds__DeleteStorageConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse*) default initialize members
/// - int soap_read__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse*) serialize to a sink
/// - _tds__DeleteStorageConfigurationResponse* soap_dup__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse* dst, _tds__DeleteStorageConfigurationResponse *src) returns deep copy of _tds__DeleteStorageConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteStorageConfigurationResponse(_tds__DeleteStorageConfigurationResponse*) deep deletes _tds__DeleteStorageConfigurationResponse data members, use only on dst after soap_dup__tds__DeleteStorageConfigurationResponse(NULL, _tds__DeleteStorageConfigurationResponse *dst, _tds__DeleteStorageConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__DeleteStorageConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetGeoLocation is a complexType.
///
/// @note struct _tds__GetGeoLocation operations:
/// - _tds__GetGeoLocation* soap_new__tds__GetGeoLocation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation*) default initialize members
/// - int soap_read__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation*) deserialize from a source
/// - int soap_write__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation*) serialize to a sink
/// - _tds__GetGeoLocation* soap_dup__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation* dst, _tds__GetGeoLocation *src) returns deep copy of _tds__GetGeoLocation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetGeoLocation(_tds__GetGeoLocation*) deep deletes _tds__GetGeoLocation data members, use only on dst after soap_dup__tds__GetGeoLocation(NULL, _tds__GetGeoLocation *dst, _tds__GetGeoLocation *src) (use soapcpp2 -Ed)
struct _tds__GetGeoLocation
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetGeoLocationResponse is a complexType.
///
/// @note struct _tds__GetGeoLocationResponse operations:
/// - _tds__GetGeoLocationResponse* soap_new__tds__GetGeoLocationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse*) default initialize members
/// - int soap_read__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse*) deserialize from a source
/// - int soap_write__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse*) serialize to a sink
/// - _tds__GetGeoLocationResponse* soap_dup__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse* dst, _tds__GetGeoLocationResponse *src) returns deep copy of _tds__GetGeoLocationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetGeoLocationResponse(_tds__GetGeoLocationResponse*) deep deletes _tds__GetGeoLocationResponse data members, use only on dst after soap_dup__tds__GetGeoLocationResponse(NULL, _tds__GetGeoLocationResponse *dst, _tds__GetGeoLocationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetGeoLocationResponse
{
/// Size of array of struct tt__LocationEntity* is 0..unbounded.
  $ int                                  __sizeLocation                 0;
/// Array struct tt__LocationEntity* of size 0..unbounded.
    struct tt__LocationEntity*           Location                       0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetGeoLocation is a complexType.
///
/// @note struct _tds__SetGeoLocation operations:
/// - _tds__SetGeoLocation* soap_new__tds__SetGeoLocation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation*) default initialize members
/// - int soap_read__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation*) deserialize from a source
/// - int soap_write__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation*) serialize to a sink
/// - _tds__SetGeoLocation* soap_dup__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation* dst, _tds__SetGeoLocation *src) returns deep copy of _tds__SetGeoLocation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetGeoLocation(_tds__SetGeoLocation*) deep deletes _tds__SetGeoLocation data members, use only on dst after soap_dup__tds__SetGeoLocation(NULL, _tds__SetGeoLocation *dst, _tds__SetGeoLocation *src) (use soapcpp2 -Ed)
struct _tds__SetGeoLocation
{
/// Size of array of struct tt__LocationEntity* is 1..unbounded.
  $ int                                  __sizeLocation                 1;
/// Array struct tt__LocationEntity* of size 1..unbounded.
    struct tt__LocationEntity*           Location                       1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetGeoLocationResponse is a complexType.
///
/// @note struct _tds__SetGeoLocationResponse operations:
/// - _tds__SetGeoLocationResponse* soap_new__tds__SetGeoLocationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse*) default initialize members
/// - int soap_read__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse*) deserialize from a source
/// - int soap_write__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse*) serialize to a sink
/// - _tds__SetGeoLocationResponse* soap_dup__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse* dst, _tds__SetGeoLocationResponse *src) returns deep copy of _tds__SetGeoLocationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetGeoLocationResponse(_tds__SetGeoLocationResponse*) deep deletes _tds__SetGeoLocationResponse data members, use only on dst after soap_dup__tds__SetGeoLocationResponse(NULL, _tds__SetGeoLocationResponse *dst, _tds__SetGeoLocationResponse *src) (use soapcpp2 -Ed)
struct _tds__SetGeoLocationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocation is a complexType.
///
/// @note struct _tds__DeleteGeoLocation operations:
/// - _tds__DeleteGeoLocation* soap_new__tds__DeleteGeoLocation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation*) default initialize members
/// - int soap_read__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation*) deserialize from a source
/// - int soap_write__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation*) serialize to a sink
/// - _tds__DeleteGeoLocation* soap_dup__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation* dst, _tds__DeleteGeoLocation *src) returns deep copy of _tds__DeleteGeoLocation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteGeoLocation(_tds__DeleteGeoLocation*) deep deletes _tds__DeleteGeoLocation data members, use only on dst after soap_dup__tds__DeleteGeoLocation(NULL, _tds__DeleteGeoLocation *dst, _tds__DeleteGeoLocation *src) (use soapcpp2 -Ed)
struct _tds__DeleteGeoLocation
{
/// Size of array of struct tt__LocationEntity* is 1..unbounded.
  $ int                                  __sizeLocation                 1;
/// Array struct tt__LocationEntity* of size 1..unbounded.
    struct tt__LocationEntity*           Location                       1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocationResponse is a complexType.
///
/// @note struct _tds__DeleteGeoLocationResponse operations:
/// - _tds__DeleteGeoLocationResponse* soap_new__tds__DeleteGeoLocationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse*) default initialize members
/// - int soap_read__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse*) deserialize from a source
/// - int soap_write__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse*) serialize to a sink
/// - _tds__DeleteGeoLocationResponse* soap_dup__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse* dst, _tds__DeleteGeoLocationResponse *src) returns deep copy of _tds__DeleteGeoLocationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteGeoLocationResponse(_tds__DeleteGeoLocationResponse*) deep deletes _tds__DeleteGeoLocationResponse data members, use only on dst after soap_dup__tds__DeleteGeoLocationResponse(NULL, _tds__DeleteGeoLocationResponse *dst, _tds__DeleteGeoLocationResponse *src) (use soapcpp2 -Ed)
struct _tds__DeleteGeoLocationResponse
{
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base class for physical entities like inputs and outputs.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration as struct tds__StorageConfiguration
/// - "http://www.onvif.org/ver10/schema":VideoSource as struct tt__VideoSource
/// - "http://www.onvif.org/ver10/schema":AudioSource as struct tt__AudioSource
/// - "http://www.onvif.org/ver10/schema":VideoOutput as struct tt__VideoOutput
/// - "http://www.onvif.org/ver10/schema":AudioOutput as struct tt__AudioOutput
/// - "http://www.onvif.org/ver10/schema":NetworkInterface as struct tt__NetworkInterface
/// - "http://www.onvif.org/ver10/schema":RelayOutput as struct tt__RelayOutput
/// - "http://www.onvif.org/ver10/schema":DigitalInput as struct tt__DigitalInput
/// - "http://www.onvif.org/ver10/schema":PTZNode as struct tt__PTZNode
/// - "http://www.onvif.org/ver10/schema":OSDConfiguration as struct tt__OSDConfiguration
/// - "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPort as struct tmd__SerialPort
///
/// @note struct tt__DeviceEntity operations:
/// - tt__DeviceEntity* soap_new_tt__DeviceEntity(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DeviceEntity(struct soap*, tt__DeviceEntity*) default initialize members
/// - int soap_read_tt__DeviceEntity(struct soap*, tt__DeviceEntity*) deserialize from a source
/// - int soap_write_tt__DeviceEntity(struct soap*, tt__DeviceEntity*) serialize to a sink
/// - tt__DeviceEntity* soap_dup_tt__DeviceEntity(struct soap*, tt__DeviceEntity* dst, tt__DeviceEntity *src) returns deep copy of tt__DeviceEntity src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DeviceEntity(tt__DeviceEntity*) deep deletes tt__DeviceEntity data members, use only on dst after soap_dup_tt__DeviceEntity(NULL, tt__DeviceEntity *dst, tt__DeviceEntity *src) (use soapcpp2 -Ed)
struct tt__DeviceEntity
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangle is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Rectangle defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__IntRectangle operations:
/// - tt__IntRectangle* soap_new_tt__IntRectangle(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IntRectangle(struct soap*, tt__IntRectangle*) default initialize members
/// - int soap_read_tt__IntRectangle(struct soap*, tt__IntRectangle*) deserialize from a source
/// - int soap_write_tt__IntRectangle(struct soap*, tt__IntRectangle*) serialize to a sink
/// - tt__IntRectangle* soap_dup_tt__IntRectangle(struct soap*, tt__IntRectangle* dst, tt__IntRectangle *src) returns deep copy of tt__IntRectangle src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IntRectangle(tt__IntRectangle*) deep deletes tt__IntRectangle data members, use only on dst after soap_dup_tt__IntRectangle(NULL, tt__IntRectangle *dst, tt__IntRectangle *src) (use soapcpp2 -Ed)
struct tt__IntRectangle
{
/// Attribute "x" of type xs:int.
  @ int                                  x                              1;	///< Required attribute.
/// Attribute "y" of type xs:int.
  @ int                                  y                              1;	///< Required attribute.
/// Attribute "width" of type xs:int.
  @ int                                  width                          1;	///< Required attribute.
/// Attribute "height" of type xs:int.
  @ int                                  height                         1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangleRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__IntRectangleRange operations:
/// - tt__IntRectangleRange* soap_new_tt__IntRectangleRange(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IntRectangleRange(struct soap*, tt__IntRectangleRange*) default initialize members
/// - int soap_read_tt__IntRectangleRange(struct soap*, tt__IntRectangleRange*) deserialize from a source
/// - int soap_write_tt__IntRectangleRange(struct soap*, tt__IntRectangleRange*) serialize to a sink
/// - tt__IntRectangleRange* soap_dup_tt__IntRectangleRange(struct soap*, tt__IntRectangleRange* dst, tt__IntRectangleRange *src) returns deep copy of tt__IntRectangleRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IntRectangleRange(tt__IntRectangleRange*) deep deletes tt__IntRectangleRange data members, use only on dst after soap_dup_tt__IntRectangleRange(NULL, tt__IntRectangleRange *dst, tt__IntRectangleRange *src) (use soapcpp2 -Ed)
struct tt__IntRectangleRange
{
/// <PRE><BLOCKQUOTE>
///   Range of X-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of Y-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "YRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 YRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of width.
/// </BLOCKQUOTE></PRE>
///
/// Element "WidthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 WidthRange                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of height.
/// </BLOCKQUOTE></PRE>
///
/// Element "HeightRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 HeightRange                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__FloatRange operations:
/// - tt__FloatRange* soap_new_tt__FloatRange(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FloatRange(struct soap*, tt__FloatRange*) default initialize members
/// - int soap_read_tt__FloatRange(struct soap*, tt__FloatRange*) deserialize from a source
/// - int soap_write_tt__FloatRange(struct soap*, tt__FloatRange*) serialize to a sink
/// - tt__FloatRange* soap_dup_tt__FloatRange(struct soap*, tt__FloatRange* dst, tt__FloatRange *src) returns deep copy of tt__FloatRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FloatRange(tt__FloatRange*) deep deletes tt__FloatRange data members, use only on dst after soap_dup_tt__FloatRange(NULL, tt__FloatRange *dst, tt__FloatRange *src) (use soapcpp2 -Ed)
struct tt__FloatRange
{
/// Element "Min" of type xs:float.
    float                                Min                            1;	///< Required element.
/// Element "Max" of type xs:float.
    float                                Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of duration greater equal Min duration and less equal Max duration.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__DurationRange operations:
/// - tt__DurationRange* soap_new_tt__DurationRange(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DurationRange(struct soap*, tt__DurationRange*) default initialize members
/// - int soap_read_tt__DurationRange(struct soap*, tt__DurationRange*) deserialize from a source
/// - int soap_write_tt__DurationRange(struct soap*, tt__DurationRange*) serialize to a sink
/// - tt__DurationRange* soap_dup_tt__DurationRange(struct soap*, tt__DurationRange* dst, tt__DurationRange *src) returns deep copy of tt__DurationRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DurationRange(tt__DurationRange*) deep deletes tt__DurationRange data members, use only on dst after soap_dup_tt__DurationRange(NULL, tt__DurationRange *dst, tt__DurationRange *src) (use soapcpp2 -Ed)
struct tt__DurationRange
{
/// Element "Min" of type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element "Max" of type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IntItems is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of values.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__IntItems operations:
/// - tt__IntItems* soap_new_tt__IntItems(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IntItems(struct soap*, tt__IntItems*) default initialize members
/// - int soap_read_tt__IntItems(struct soap*, tt__IntItems*) deserialize from a source
/// - int soap_write_tt__IntItems(struct soap*, tt__IntItems*) serialize to a sink
/// - tt__IntItems* soap_dup_tt__IntItems(struct soap*, tt__IntItems* dst, tt__IntItems *src) returns deep copy of tt__IntItems src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IntItems(tt__IntItems*) deep deletes tt__IntItems data members, use only on dst after soap_dup_tt__IntItems(NULL, tt__IntItems *dst, tt__IntItems *src) (use soapcpp2 -Ed)
struct tt__IntItems
{
/// Size of array of int* is 0..unbounded.
  $ int                                  __sizeItems                    0;
/// Array int* of size 0..unbounded.
    int*                                 Items                          0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":FloatItems is a complexType.
///
/// @note struct tt__FloatItems operations:
/// - tt__FloatItems* soap_new_tt__FloatItems(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FloatItems(struct soap*, tt__FloatItems*) default initialize members
/// - int soap_read_tt__FloatItems(struct soap*, tt__FloatItems*) deserialize from a source
/// - int soap_write_tt__FloatItems(struct soap*, tt__FloatItems*) serialize to a sink
/// - tt__FloatItems* soap_dup_tt__FloatItems(struct soap*, tt__FloatItems* dst, tt__FloatItems *src) returns deep copy of tt__FloatItems src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FloatItems(tt__FloatItems*) deep deletes tt__FloatItems data members, use only on dst after soap_dup_tt__FloatItems(NULL, tt__FloatItems *dst, tt__FloatItems *src) (use soapcpp2 -Ed)
struct tt__FloatItems
{
/// Size of array of float* is 0..unbounded.
  $ int                                  __sizeItems                    0;
/// Array float* of size 0..unbounded.
    float*                               Items                          0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":AnyHolder is a complexType.
///
/// @note struct tt__AnyHolder operations:
/// - tt__AnyHolder* soap_new_tt__AnyHolder(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnyHolder(struct soap*, tt__AnyHolder*) default initialize members
/// - int soap_read_tt__AnyHolder(struct soap*, tt__AnyHolder*) deserialize from a source
/// - int soap_write_tt__AnyHolder(struct soap*, tt__AnyHolder*) serialize to a sink
/// - tt__AnyHolder* soap_dup_tt__AnyHolder(struct soap*, tt__AnyHolder* dst, tt__AnyHolder *src) returns deep copy of tt__AnyHolder src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnyHolder(tt__AnyHolder*) deep deletes tt__AnyHolder data members, use only on dst after soap_dup_tt__AnyHolder(NULL, tt__AnyHolder *dst, tt__AnyHolder *src) (use soapcpp2 -Ed)
struct tt__AnyHolder
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension is a complexType.
///
/// @note struct tt__VideoSourceExtension operations:
/// - tt__VideoSourceExtension* soap_new_tt__VideoSourceExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoSourceExtension(struct soap*, tt__VideoSourceExtension*) default initialize members
/// - int soap_read_tt__VideoSourceExtension(struct soap*, tt__VideoSourceExtension*) deserialize from a source
/// - int soap_write_tt__VideoSourceExtension(struct soap*, tt__VideoSourceExtension*) serialize to a sink
/// - tt__VideoSourceExtension* soap_dup_tt__VideoSourceExtension(struct soap*, tt__VideoSourceExtension* dst, tt__VideoSourceExtension *src) returns deep copy of tt__VideoSourceExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceExtension(tt__VideoSourceExtension*) deep deletes tt__VideoSourceExtension data members, use only on dst after soap_dup_tt__VideoSourceExtension(NULL, tt__VideoSourceExtension *dst, tt__VideoSourceExtension *src) (use soapcpp2 -Ed)
struct tt__VideoSourceExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor. To be used if imaging service 2.00 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "Imaging" of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    struct tt__ImagingSettings20*        Imaging                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceExtension2.
    struct tt__VideoSourceExtension2*    Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is a complexType.
///
/// @note struct tt__VideoSourceExtension2 operations:
/// - tt__VideoSourceExtension2* soap_new_tt__VideoSourceExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoSourceExtension2(struct soap*, tt__VideoSourceExtension2*) default initialize members
/// - int soap_read_tt__VideoSourceExtension2(struct soap*, tt__VideoSourceExtension2*) deserialize from a source
/// - int soap_write_tt__VideoSourceExtension2(struct soap*, tt__VideoSourceExtension2*) serialize to a sink
/// - tt__VideoSourceExtension2* soap_dup_tt__VideoSourceExtension2(struct soap*, tt__VideoSourceExtension2* dst, tt__VideoSourceExtension2 *src) returns deep copy of tt__VideoSourceExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceExtension2(tt__VideoSourceExtension2*) deep deletes tt__VideoSourceExtension2 data members, use only on dst after soap_dup_tt__VideoSourceExtension2(NULL, tt__VideoSourceExtension2 *dst, tt__VideoSourceExtension2 *src) (use soapcpp2 -Ed)
struct tt__VideoSourceExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Profile is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A media profile consists of a set of media configurations. Media profiles are used by a client
///   to configure properties of a media stream from an NVT.<br/>
///   An NVT shall provide at least one media profile at boot. An NVT should provide ready to use
///   profiles for the most common media configurations that the device offers.<br/>
///   A profile consists of a set of interconnected configuration entities. Configurations are provided
///   by the NVT and can be either static or created dynamically by the NVT. For example, the
///   dynamic configurations can be created by the NVT depending on current available encoding
///   resources.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__Profile operations:
/// - tt__Profile* soap_new_tt__Profile(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Profile(struct soap*, tt__Profile*) default initialize members
/// - int soap_read_tt__Profile(struct soap*, tt__Profile*) deserialize from a source
/// - int soap_write_tt__Profile(struct soap*, tt__Profile*) serialize to a sink
/// - tt__Profile* soap_dup_tt__Profile(struct soap*, tt__Profile* dst, tt__Profile *src) returns deep copy of tt__Profile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Profile(tt__Profile*) deep deletes tt__Profile data members, use only on dst after soap_dup_tt__Profile(NULL, tt__Profile *dst, tt__Profile *src) (use soapcpp2 -Ed)
struct tt__Profile
{
/// <PRE><BLOCKQUOTE>
///   User readable name of the profile.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video input.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceConfiguration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  VideoSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio input.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSourceConfiguration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  AudioSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video encoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoEncoderConfiguration" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  VideoEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio encoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioEncoderConfiguration" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    struct tt__AudioEncoderConfiguration*  AudioEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the video analytics module and rule engine.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoAnalyticsConfiguration" of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  VideoAnalyticsConfiguration    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the pan tilt zoom unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfiguration" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    struct tt__PTZConfiguration*         PTZConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the metadata stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "MetadataConfiguration" of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    struct tt__MetadataConfiguration*    MetadataConfiguration          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Extensions defined in ONVIF 2.0
/// </BLOCKQUOTE></PRE>
///
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ProfileExtension.
    struct tt__ProfileExtension*         Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the profile.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A value of true signals that the profile cannot be deleted. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "fixed" of type xs:boolean.
  @ enum xsd__boolean*                   fixed                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension is a complexType.
///
/// @note struct tt__ProfileExtension operations:
/// - tt__ProfileExtension* soap_new_tt__ProfileExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ProfileExtension(struct soap*, tt__ProfileExtension*) default initialize members
/// - int soap_read_tt__ProfileExtension(struct soap*, tt__ProfileExtension*) deserialize from a source
/// - int soap_write_tt__ProfileExtension(struct soap*, tt__ProfileExtension*) serialize to a sink
/// - tt__ProfileExtension* soap_dup_tt__ProfileExtension(struct soap*, tt__ProfileExtension* dst, tt__ProfileExtension *src) returns deep copy of tt__ProfileExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ProfileExtension(tt__ProfileExtension*) deep deletes tt__ProfileExtension data members, use only on dst after soap_dup_tt__ProfileExtension(NULL, tt__ProfileExtension *dst, tt__ProfileExtension *src) (use soapcpp2 -Ed)
struct tt__ProfileExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutputConfiguration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  AudioOutputConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio decoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioDecoderConfiguration" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    struct tt__AudioDecoderConfiguration*  AudioDecoderConfiguration      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ProfileExtension2.
    struct tt__ProfileExtension2*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension2 is a complexType.
///
/// @note struct tt__ProfileExtension2 operations:
/// - tt__ProfileExtension2* soap_new_tt__ProfileExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ProfileExtension2(struct soap*, tt__ProfileExtension2*) default initialize members
/// - int soap_read_tt__ProfileExtension2(struct soap*, tt__ProfileExtension2*) deserialize from a source
/// - int soap_write_tt__ProfileExtension2(struct soap*, tt__ProfileExtension2*) serialize to a sink
/// - tt__ProfileExtension2* soap_dup_tt__ProfileExtension2(struct soap*, tt__ProfileExtension2* dst, tt__ProfileExtension2 *src) returns deep copy of tt__ProfileExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ProfileExtension2(tt__ProfileExtension2*) deep deletes tt__ProfileExtension2 data members, use only on dst after soap_dup_tt__ProfileExtension2(NULL, tt__ProfileExtension2 *dst, tt__ProfileExtension2 *src) (use soapcpp2 -Ed)
struct tt__ProfileExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base type defining the common properties of a configuration.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":VideoSourceConfiguration as struct tt__VideoSourceConfiguration
/// - "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration as struct tt__VideoEncoderConfiguration
/// - "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration as struct tt__VideoEncoder2Configuration
/// - "http://www.onvif.org/ver10/schema":AudioSourceConfiguration as struct tt__AudioSourceConfiguration
/// - "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration as struct tt__AudioEncoderConfiguration
/// - "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration as struct tt__AudioEncoder2Configuration
/// - "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration as struct tt__VideoAnalyticsConfiguration
/// - "http://www.onvif.org/ver10/schema":MetadataConfiguration as struct tt__MetadataConfiguration
/// - "http://www.onvif.org/ver10/schema":VideoOutputConfiguration as struct tt__VideoOutputConfiguration
/// - "http://www.onvif.org/ver10/schema":AudioOutputConfiguration as struct tt__AudioOutputConfiguration
/// - "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration as struct tt__AudioDecoderConfiguration
/// - "http://www.onvif.org/ver10/schema":PTZConfiguration as struct tt__PTZConfiguration
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngine as struct tt__AnalyticsEngine
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngineInput as struct tt__AnalyticsEngineInput
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngineControl as struct tt__AnalyticsEngineControl
///
/// @note struct tt__ConfigurationEntity operations:
/// - tt__ConfigurationEntity* soap_new_tt__ConfigurationEntity(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ConfigurationEntity(struct soap*, tt__ConfigurationEntity*) default initialize members
/// - int soap_read_tt__ConfigurationEntity(struct soap*, tt__ConfigurationEntity*) deserialize from a source
/// - int soap_write_tt__ConfigurationEntity(struct soap*, tt__ConfigurationEntity*) serialize to a sink
/// - tt__ConfigurationEntity* soap_dup_tt__ConfigurationEntity(struct soap*, tt__ConfigurationEntity* dst, tt__ConfigurationEntity *src) returns deep copy of tt__ConfigurationEntity src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ConfigurationEntity(tt__ConfigurationEntity*) deep deletes tt__ConfigurationEntity data members, use only on dst after soap_dup_tt__ConfigurationEntity(NULL, tt__ConfigurationEntity *dst, tt__ConfigurationEntity *src) (use soapcpp2 -Ed)
struct tt__ConfigurationEntity
{
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension is a complexType.
///
/// @note struct tt__VideoSourceConfigurationExtension operations:
/// - tt__VideoSourceConfigurationExtension* soap_new_tt__VideoSourceConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoSourceConfigurationExtension(struct soap*, tt__VideoSourceConfigurationExtension*) default initialize members
/// - int soap_read_tt__VideoSourceConfigurationExtension(struct soap*, tt__VideoSourceConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__VideoSourceConfigurationExtension(struct soap*, tt__VideoSourceConfigurationExtension*) serialize to a sink
/// - tt__VideoSourceConfigurationExtension* soap_dup_tt__VideoSourceConfigurationExtension(struct soap*, tt__VideoSourceConfigurationExtension* dst, tt__VideoSourceConfigurationExtension *src) returns deep copy of tt__VideoSourceConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceConfigurationExtension(tt__VideoSourceConfigurationExtension*) deep deletes tt__VideoSourceConfigurationExtension data members, use only on dst after soap_dup_tt__VideoSourceConfigurationExtension(NULL, tt__VideoSourceConfigurationExtension *dst, tt__VideoSourceConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__VideoSourceConfigurationExtension
{
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rotation of captured image.
///   What resolutions a device supports shall be unaffected by the Rotate parameters.<br/>
///   If a device is configured with Rotate=AUTO, the device shall take control over the Degree parameter and automatically update it so that a client can query current rotation.<br/>
///   The device shall automatically apply the same rotation to its pan/tilt control direction depending on the following condition: if Reverse=AUTO in PTControlDirection or if the device doesnt support Reverse in PTControlDirection
/// </BLOCKQUOTE></PRE>
///
/// Element "Rotate" of type "http://www.onvif.org/ver10/schema":Rotate.
    struct tt__Rotate*                   Rotate                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2.
    struct tt__VideoSourceConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2 is a complexType.
///
/// @note struct tt__VideoSourceConfigurationExtension2 operations:
/// - tt__VideoSourceConfigurationExtension2* soap_new_tt__VideoSourceConfigurationExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoSourceConfigurationExtension2(struct soap*, tt__VideoSourceConfigurationExtension2*) default initialize members
/// - int soap_read_tt__VideoSourceConfigurationExtension2(struct soap*, tt__VideoSourceConfigurationExtension2*) deserialize from a source
/// - int soap_write_tt__VideoSourceConfigurationExtension2(struct soap*, tt__VideoSourceConfigurationExtension2*) serialize to a sink
/// - tt__VideoSourceConfigurationExtension2* soap_dup_tt__VideoSourceConfigurationExtension2(struct soap*, tt__VideoSourceConfigurationExtension2* dst, tt__VideoSourceConfigurationExtension2 *src) returns deep copy of tt__VideoSourceConfigurationExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceConfigurationExtension2(tt__VideoSourceConfigurationExtension2*) deep deletes tt__VideoSourceConfigurationExtension2 data members, use only on dst after soap_dup_tt__VideoSourceConfigurationExtension2(NULL, tt__VideoSourceConfigurationExtension2 *dst, tt__VideoSourceConfigurationExtension2 *src) (use soapcpp2 -Ed)
struct tt__VideoSourceConfigurationExtension2
{
/// <PRE><BLOCKQUOTE>
///   Optional element describing the geometric lens distortion. Multiple instances for future variable lens support.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__LensDescription* is 0..unbounded.
  $ int                                  __sizeLensDescription          0;
/// Array struct tt__LensDescription* of size 0..unbounded.
    struct tt__LensDescription*          LensDescription                0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Optional element describing the scene orientation in the cameras field of view.
/// </BLOCKQUOTE></PRE>
///
/// Element "SceneOrientation" of type "http://www.onvif.org/ver10/schema":SceneOrientation.
    struct tt__SceneOrientation*         SceneOrientation               0;	///< Optional element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Rotate is a complexType.
///
/// @note struct tt__Rotate operations:
/// - tt__Rotate* soap_new_tt__Rotate(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Rotate(struct soap*, tt__Rotate*) default initialize members
/// - int soap_read_tt__Rotate(struct soap*, tt__Rotate*) deserialize from a source
/// - int soap_write_tt__Rotate(struct soap*, tt__Rotate*) serialize to a sink
/// - tt__Rotate* soap_dup_tt__Rotate(struct soap*, tt__Rotate* dst, tt__Rotate *src) returns deep copy of tt__Rotate src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Rotate(tt__Rotate*) deep deletes tt__Rotate data members, use only on dst after soap_dup_tt__Rotate(NULL, tt__Rotate *dst, tt__Rotate *src) (use soapcpp2 -Ed)
struct tt__Rotate
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Rotation feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":RotateMode.
    enum tt__RotateMode                  Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure how much degree of clockwise rotation of image for On mode. Omitting this parameter for On mode means 180 degree rotation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Degree" of type xs:int.
    int*                                 Degree                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RotateExtension.
    struct tt__RotateExtension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RotateExtension is a complexType.
///
/// @note struct tt__RotateExtension operations:
/// - tt__RotateExtension* soap_new_tt__RotateExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RotateExtension(struct soap*, tt__RotateExtension*) default initialize members
/// - int soap_read_tt__RotateExtension(struct soap*, tt__RotateExtension*) deserialize from a source
/// - int soap_write_tt__RotateExtension(struct soap*, tt__RotateExtension*) serialize to a sink
/// - tt__RotateExtension* soap_dup_tt__RotateExtension(struct soap*, tt__RotateExtension* dst, tt__RotateExtension *src) returns deep copy of tt__RotateExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RotateExtension(tt__RotateExtension*) deep deletes tt__RotateExtension data members, use only on dst after soap_dup_tt__RotateExtension(NULL, tt__RotateExtension *dst, tt__RotateExtension *src) (use soapcpp2 -Ed)
struct tt__RotateExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":LensProjection is a complexType.
///
/// @note struct tt__LensProjection operations:
/// - tt__LensProjection* soap_new_tt__LensProjection(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__LensProjection(struct soap*, tt__LensProjection*) default initialize members
/// - int soap_read_tt__LensProjection(struct soap*, tt__LensProjection*) deserialize from a source
/// - int soap_write_tt__LensProjection(struct soap*, tt__LensProjection*) serialize to a sink
/// - tt__LensProjection* soap_dup_tt__LensProjection(struct soap*, tt__LensProjection* dst, tt__LensProjection *src) returns deep copy of tt__LensProjection src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LensProjection(tt__LensProjection*) deep deletes tt__LensProjection data members, use only on dst after soap_dup_tt__LensProjection(NULL, tt__LensProjection *dst, tt__LensProjection *src) (use soapcpp2 -Ed)
struct tt__LensProjection
{
/// <PRE><BLOCKQUOTE>
///   Angle of incidence.
/// </BLOCKQUOTE></PRE>
///
/// Element "Angle" of type xs:float.
    float                                Angle                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mapping radius as a consequence of the emergent angle.
/// </BLOCKQUOTE></PRE>
///
/// Element "Radius" of type xs:float.
    float                                Radius                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional ray absorption at the given angle due to vignetting. A value of one means no absorption.
/// </BLOCKQUOTE></PRE>
///
/// Element "Transmittance" of type xs:float.
    float*                               Transmittance                  0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":LensOffset is a complexType.
///
/// @note struct tt__LensOffset operations:
/// - tt__LensOffset* soap_new_tt__LensOffset(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__LensOffset(struct soap*, tt__LensOffset*) default initialize members
/// - int soap_read_tt__LensOffset(struct soap*, tt__LensOffset*) deserialize from a source
/// - int soap_write_tt__LensOffset(struct soap*, tt__LensOffset*) serialize to a sink
/// - tt__LensOffset* soap_dup_tt__LensOffset(struct soap*, tt__LensOffset* dst, tt__LensOffset *src) returns deep copy of tt__LensOffset src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LensOffset(tt__LensOffset*) deep deletes tt__LensOffset data members, use only on dst after soap_dup_tt__LensOffset(NULL, tt__LensOffset *dst, tt__LensOffset *src) (use soapcpp2 -Ed)
struct tt__LensOffset
{
/// <PRE><BLOCKQUOTE>
///   Optional horizontal offset of the lens center in normalized coordinates.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "x" of type xs:float.
  @ float*                               x                              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional vertical offset of the lens center in normalized coordinates.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "y" of type xs:float.
  @ float*                               y                              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":LensDescription is a complexType.
///
/// @note struct tt__LensDescription operations:
/// - tt__LensDescription* soap_new_tt__LensDescription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__LensDescription(struct soap*, tt__LensDescription*) default initialize members
/// - int soap_read_tt__LensDescription(struct soap*, tt__LensDescription*) deserialize from a source
/// - int soap_write_tt__LensDescription(struct soap*, tt__LensDescription*) serialize to a sink
/// - tt__LensDescription* soap_dup_tt__LensDescription(struct soap*, tt__LensDescription* dst, tt__LensDescription *src) returns deep copy of tt__LensDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LensDescription(tt__LensDescription*) deep deletes tt__LensDescription data members, use only on dst after soap_dup_tt__LensDescription(NULL, tt__LensDescription *dst, tt__LensDescription *src) (use soapcpp2 -Ed)
struct tt__LensDescription
{
/// <PRE><BLOCKQUOTE>
///   Offset of the lens center to the imager center in normalized coordinates.
/// </BLOCKQUOTE></PRE>
///
/// Element "Offset" of type "http://www.onvif.org/ver10/schema":LensOffset.
    struct tt__LensOffset*               Offset                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Radial description of the projection characteristics. The resulting curve is defined by the B-Spline interpolation over the given elements. The element for Radius zero shall not be provided. The projection points shall be ordered with ascending Radius. Items outside the last projection Radius shall be assumed to be invisible (black).
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__LensProjection* is 1..unbounded.
  $ int                                  __sizeProjection               1;
/// Array struct tt__LensProjection* of size 1..unbounded.
    struct tt__LensProjection*           Projection                     1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Compensation of the x coordinate needed for the ONVIF normalized coordinate system.
/// </BLOCKQUOTE></PRE>
///
/// Element "XFactor" of type xs:float.
    float                                XFactor                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional focal length of the optical system.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FocalLength" of type xs:float.
  @ float*                               FocalLength                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is a complexType.
///
/// @note struct tt__VideoSourceConfigurationOptions operations:
/// - tt__VideoSourceConfigurationOptions* soap_new_tt__VideoSourceConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoSourceConfigurationOptions(struct soap*, tt__VideoSourceConfigurationOptions*) default initialize members
/// - int soap_read_tt__VideoSourceConfigurationOptions(struct soap*, tt__VideoSourceConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__VideoSourceConfigurationOptions(struct soap*, tt__VideoSourceConfigurationOptions*) serialize to a sink
/// - tt__VideoSourceConfigurationOptions* soap_dup_tt__VideoSourceConfigurationOptions(struct soap*, tt__VideoSourceConfigurationOptions* dst, tt__VideoSourceConfigurationOptions *src) returns deep copy of tt__VideoSourceConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceConfigurationOptions(tt__VideoSourceConfigurationOptions*) deep deletes tt__VideoSourceConfigurationOptions data members, use only on dst after soap_dup_tt__VideoSourceConfigurationOptions(NULL, tt__VideoSourceConfigurationOptions *dst, tt__VideoSourceConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__VideoSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported range for the capturing area.
///   Device that does not support cropped streaming shall express BoundsRange option as mentioned below
///   BoundsRange->XRange and BoundsRange->YRange with same Min/Max values HeightRange and WidthRange Min/Max values same as VideoSource Height and Width Limits.
/// </BLOCKQUOTE></PRE>
///
/// Element "BoundsRange" of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
    struct tt__IntRectangleRange*        BoundsRange                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of physical inputs.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__ReferenceToken* is 1..unbounded.
  $ int                                  __sizeVideoSourceTokensAvailable 1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  VideoSourceTokensAvailable     1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension.
    struct tt__VideoSourceConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaximumNumberOfProfiles" of type xs:int.
  @ int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is a complexType.
///
/// @note struct tt__VideoSourceConfigurationOptionsExtension operations:
/// - tt__VideoSourceConfigurationOptionsExtension* soap_new_tt__VideoSourceConfigurationOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoSourceConfigurationOptionsExtension(struct soap*, tt__VideoSourceConfigurationOptionsExtension*) default initialize members
/// - int soap_read_tt__VideoSourceConfigurationOptionsExtension(struct soap*, tt__VideoSourceConfigurationOptionsExtension*) deserialize from a source
/// - int soap_write_tt__VideoSourceConfigurationOptionsExtension(struct soap*, tt__VideoSourceConfigurationOptionsExtension*) serialize to a sink
/// - tt__VideoSourceConfigurationOptionsExtension* soap_dup_tt__VideoSourceConfigurationOptionsExtension(struct soap*, tt__VideoSourceConfigurationOptionsExtension* dst, tt__VideoSourceConfigurationOptionsExtension *src) returns deep copy of tt__VideoSourceConfigurationOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceConfigurationOptionsExtension(tt__VideoSourceConfigurationOptionsExtension*) deep deletes tt__VideoSourceConfigurationOptionsExtension data members, use only on dst after soap_dup_tt__VideoSourceConfigurationOptionsExtension(NULL, tt__VideoSourceConfigurationOptionsExtension *dst, tt__VideoSourceConfigurationOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__VideoSourceConfigurationOptionsExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Rotation feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Rotate" of type "http://www.onvif.org/ver10/schema":RotateOptions.
    struct tt__RotateOptions*            Rotate                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2.
    struct tt__VideoSourceConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2 is a complexType.
///
/// @note struct tt__VideoSourceConfigurationOptionsExtension2 operations:
/// - tt__VideoSourceConfigurationOptionsExtension2* soap_new_tt__VideoSourceConfigurationOptionsExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoSourceConfigurationOptionsExtension2(struct soap*, tt__VideoSourceConfigurationOptionsExtension2*) default initialize members
/// - int soap_read_tt__VideoSourceConfigurationOptionsExtension2(struct soap*, tt__VideoSourceConfigurationOptionsExtension2*) deserialize from a source
/// - int soap_write_tt__VideoSourceConfigurationOptionsExtension2(struct soap*, tt__VideoSourceConfigurationOptionsExtension2*) serialize to a sink
/// - tt__VideoSourceConfigurationOptionsExtension2* soap_dup_tt__VideoSourceConfigurationOptionsExtension2(struct soap*, tt__VideoSourceConfigurationOptionsExtension2* dst, tt__VideoSourceConfigurationOptionsExtension2 *src) returns deep copy of tt__VideoSourceConfigurationOptionsExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceConfigurationOptionsExtension2(tt__VideoSourceConfigurationOptionsExtension2*) deep deletes tt__VideoSourceConfigurationOptionsExtension2 data members, use only on dst after soap_dup_tt__VideoSourceConfigurationOptionsExtension2(NULL, tt__VideoSourceConfigurationOptionsExtension2 *dst, tt__VideoSourceConfigurationOptionsExtension2 *src) (use soapcpp2 -Ed)
struct tt__VideoSourceConfigurationOptionsExtension2
{
/// <PRE><BLOCKQUOTE>
///   Scene orientation modes supported by the device for this configuration.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__SceneOrientationMode* is 0..unbounded.
  $ int                                  __sizeSceneOrientationMode     0;
/// Array enum tt__SceneOrientationMode* of size 0..unbounded.
    enum tt__SceneOrientationMode*       SceneOrientationMode           0;	///< Multiple elements.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":RotateOptions is a complexType.
///
/// @note struct tt__RotateOptions operations:
/// - tt__RotateOptions* soap_new_tt__RotateOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RotateOptions(struct soap*, tt__RotateOptions*) default initialize members
/// - int soap_read_tt__RotateOptions(struct soap*, tt__RotateOptions*) deserialize from a source
/// - int soap_write_tt__RotateOptions(struct soap*, tt__RotateOptions*) serialize to a sink
/// - tt__RotateOptions* soap_dup_tt__RotateOptions(struct soap*, tt__RotateOptions* dst, tt__RotateOptions *src) returns deep copy of tt__RotateOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RotateOptions(tt__RotateOptions*) deep deletes tt__RotateOptions data members, use only on dst after soap_dup_tt__RotateOptions(NULL, tt__RotateOptions *dst, tt__RotateOptions *src) (use soapcpp2 -Ed)
struct tt__RotateOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options of Rotate mode parameter.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__RotateMode* is 1..unbounded.
  $ int                                  __sizeMode                     1;
/// Array enum tt__RotateMode* of size 1..unbounded.
    enum tt__RotateMode*                 Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of supported degree value for rotation.
/// </BLOCKQUOTE></PRE>
///
/// Element "DegreeList" of type "http://www.onvif.org/ver10/schema":IntItems.
    struct tt__IntItems*                 DegreeList                     0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RotateOptionsExtension.
    struct tt__RotateOptionsExtension*   Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   After setting the rotation, if a device starts to reboot this value is true.
///   If a device can handle rotation setting without rebooting this value is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Reboot" of type xs:boolean.
  @ enum xsd__boolean*                   Reboot                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RotateOptionsExtension is a complexType.
///
/// @note struct tt__RotateOptionsExtension operations:
/// - tt__RotateOptionsExtension* soap_new_tt__RotateOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RotateOptionsExtension(struct soap*, tt__RotateOptionsExtension*) default initialize members
/// - int soap_read_tt__RotateOptionsExtension(struct soap*, tt__RotateOptionsExtension*) deserialize from a source
/// - int soap_write_tt__RotateOptionsExtension(struct soap*, tt__RotateOptionsExtension*) serialize to a sink
/// - tt__RotateOptionsExtension* soap_dup_tt__RotateOptionsExtension(struct soap*, tt__RotateOptionsExtension* dst, tt__RotateOptionsExtension *src) returns deep copy of tt__RotateOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RotateOptionsExtension(tt__RotateOptionsExtension*) deep deletes tt__RotateOptionsExtension data members, use only on dst after soap_dup_tt__RotateOptionsExtension(NULL, tt__RotateOptionsExtension *dst, tt__RotateOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__RotateOptionsExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":SceneOrientation is a complexType.
///
/// @note struct tt__SceneOrientation operations:
/// - tt__SceneOrientation* soap_new_tt__SceneOrientation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SceneOrientation(struct soap*, tt__SceneOrientation*) default initialize members
/// - int soap_read_tt__SceneOrientation(struct soap*, tt__SceneOrientation*) deserialize from a source
/// - int soap_write_tt__SceneOrientation(struct soap*, tt__SceneOrientation*) serialize to a sink
/// - tt__SceneOrientation* soap_dup_tt__SceneOrientation(struct soap*, tt__SceneOrientation* dst, tt__SceneOrientation *src) returns deep copy of tt__SceneOrientation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SceneOrientation(tt__SceneOrientation*) deep deletes tt__SceneOrientation data members, use only on dst after soap_dup_tt__SceneOrientation(NULL, tt__SceneOrientation *dst, tt__SceneOrientation *src) (use soapcpp2 -Ed)
struct tt__SceneOrientation
{
/// <PRE><BLOCKQUOTE>
///   Parameter to assign the way the camera determines the scene orientation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":SceneOrientationMode.
    enum tt__SceneOrientationMode        Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Assigned or determined scene orientation based on the Mode. When assigning the Mode to AUTO, this field is optional and will be ignored by the device. When assigning the Mode to MANUAL, this field is required and the device will return an InvalidArgs fault if missing.
/// </BLOCKQUOTE></PRE>
///
/// Element "Orientation" of type xs:string.
    char*                                Orientation                    0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoResolution is a complexType.
///
/// @note struct tt__VideoResolution operations:
/// - tt__VideoResolution* soap_new_tt__VideoResolution(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoResolution(struct soap*, tt__VideoResolution*) default initialize members
/// - int soap_read_tt__VideoResolution(struct soap*, tt__VideoResolution*) deserialize from a source
/// - int soap_write_tt__VideoResolution(struct soap*, tt__VideoResolution*) serialize to a sink
/// - tt__VideoResolution* soap_dup_tt__VideoResolution(struct soap*, tt__VideoResolution* dst, tt__VideoResolution *src) returns deep copy of tt__VideoResolution src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoResolution(tt__VideoResolution*) deep deletes tt__VideoResolution data members, use only on dst after soap_dup_tt__VideoResolution(NULL, tt__VideoResolution *dst, tt__VideoResolution *src) (use soapcpp2 -Ed)
struct tt__VideoResolution
{
/// <PRE><BLOCKQUOTE>
///   Number of the columns of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Width" of type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of the lines of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Height" of type xs:int.
    int                                  Height                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoRateControl is a complexType.
///
/// @note struct tt__VideoRateControl operations:
/// - tt__VideoRateControl* soap_new_tt__VideoRateControl(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoRateControl(struct soap*, tt__VideoRateControl*) default initialize members
/// - int soap_read_tt__VideoRateControl(struct soap*, tt__VideoRateControl*) deserialize from a source
/// - int soap_write_tt__VideoRateControl(struct soap*, tt__VideoRateControl*) serialize to a sink
/// - tt__VideoRateControl* soap_dup_tt__VideoRateControl(struct soap*, tt__VideoRateControl* dst, tt__VideoRateControl *src) returns deep copy of tt__VideoRateControl src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoRateControl(tt__VideoRateControl*) deep deletes tt__VideoRateControl data members, use only on dst after soap_dup_tt__VideoRateControl(NULL, tt__VideoRateControl *dst, tt__VideoRateControl *src) (use soapcpp2 -Ed)
struct tt__VideoRateControl
{
/// <PRE><BLOCKQUOTE>
///   Maximum output framerate in fps. If an EncodingInterval is provided the resulting encoded framerate will be reduced by the given factor.
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateLimit" of type xs:int.
    int                                  FrameRateLimit                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Interval at which images are encoded and transmitted. (A value of 1 means that every frame is encoded, a value of 2 means that every 2nd frame is encoded ...)
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingInterval" of type xs:int.
    int                                  EncodingInterval               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the maximum output bitrate in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateLimit" of type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Configuration is a complexType.
///
/// @note struct tt__Mpeg4Configuration operations:
/// - tt__Mpeg4Configuration* soap_new_tt__Mpeg4Configuration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration*) default initialize members
/// - int soap_read_tt__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration*) deserialize from a source
/// - int soap_write_tt__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration*) serialize to a sink
/// - tt__Mpeg4Configuration* soap_dup_tt__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration* dst, tt__Mpeg4Configuration *src) returns deep copy of tt__Mpeg4Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Mpeg4Configuration(tt__Mpeg4Configuration*) deep deletes tt__Mpeg4Configuration data members, use only on dst after soap_dup_tt__Mpeg4Configuration(NULL, tt__Mpeg4Configuration *dst, tt__Mpeg4Configuration *src) (use soapcpp2 -Ed)
struct tt__Mpeg4Configuration
{
/// <PRE><BLOCKQUOTE>
///   Determines the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLength" of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the Mpeg4 profile, either simple profile (SP) or advanced simple profile (ASP)
/// </BLOCKQUOTE></PRE>
///
/// Element "Mpeg4Profile" of type "http://www.onvif.org/ver10/schema":Mpeg4Profile.
    enum tt__Mpeg4Profile                Mpeg4Profile                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":H264Configuration is a complexType.
///
/// @note struct tt__H264Configuration operations:
/// - tt__H264Configuration* soap_new_tt__H264Configuration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__H264Configuration(struct soap*, tt__H264Configuration*) default initialize members
/// - int soap_read_tt__H264Configuration(struct soap*, tt__H264Configuration*) deserialize from a source
/// - int soap_write_tt__H264Configuration(struct soap*, tt__H264Configuration*) serialize to a sink
/// - tt__H264Configuration* soap_dup_tt__H264Configuration(struct soap*, tt__H264Configuration* dst, tt__H264Configuration *src) returns deep copy of tt__H264Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__H264Configuration(tt__H264Configuration*) deep deletes tt__H264Configuration data members, use only on dst after soap_dup_tt__H264Configuration(NULL, tt__H264Configuration *dst, tt__H264Configuration *src) (use soapcpp2 -Ed)
struct tt__H264Configuration
{
/// <PRE><BLOCKQUOTE>
///   Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLength" of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the H.264 profile, either baseline, main, extended or high
/// </BLOCKQUOTE></PRE>
///
/// Element "H264Profile" of type "http://www.onvif.org/ver10/schema":H264Profile.
    enum tt__H264Profile                 H264Profile                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is a complexType.
///
/// @note struct tt__VideoEncoderConfigurationOptions operations:
/// - tt__VideoEncoderConfigurationOptions* soap_new_tt__VideoEncoderConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoEncoderConfigurationOptions(struct soap*, tt__VideoEncoderConfigurationOptions*) default initialize members
/// - int soap_read_tt__VideoEncoderConfigurationOptions(struct soap*, tt__VideoEncoderConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__VideoEncoderConfigurationOptions(struct soap*, tt__VideoEncoderConfigurationOptions*) serialize to a sink
/// - tt__VideoEncoderConfigurationOptions* soap_dup_tt__VideoEncoderConfigurationOptions(struct soap*, tt__VideoEncoderConfigurationOptions* dst, tt__VideoEncoderConfigurationOptions *src) returns deep copy of tt__VideoEncoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoderConfigurationOptions(tt__VideoEncoderConfigurationOptions*) deep deletes tt__VideoEncoderConfigurationOptions data members, use only on dst after soap_dup_tt__VideoEncoderConfigurationOptions(NULL, tt__VideoEncoderConfigurationOptions *dst, tt__VideoEncoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__VideoEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Range of the quality values. A high value means higher quality.
/// </BLOCKQUOTE></PRE>
///
/// Element "QualityRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 QualityRange                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
///
/// Element "JPEG" of type "http://www.onvif.org/ver10/schema":JpegOptions.
    struct tt__JpegOptions*              JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type "http://www.onvif.org/ver10/schema":Mpeg4Options.
    struct tt__Mpeg4Options*             MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type "http://www.onvif.org/ver10/schema":H264Options.
    struct tt__H264Options*              H264                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension.
    struct tt__VideoEncoderOptionsExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for the GuaranteedFrameRate attribute on the VideoEncoderConfiguration element.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GuaranteedFrameRateSupported" of type xs:boolean.
  @ enum xsd__boolean*                   GuaranteedFrameRateSupported   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is a complexType.
///
/// @note struct tt__VideoEncoderOptionsExtension operations:
/// - tt__VideoEncoderOptionsExtension* soap_new_tt__VideoEncoderOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension*) default initialize members
/// - int soap_read_tt__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension*) deserialize from a source
/// - int soap_write_tt__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension*) serialize to a sink
/// - tt__VideoEncoderOptionsExtension* soap_dup_tt__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension* dst, tt__VideoEncoderOptionsExtension *src) returns deep copy of tt__VideoEncoderOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoderOptionsExtension(tt__VideoEncoderOptionsExtension*) deep deletes tt__VideoEncoderOptionsExtension data members, use only on dst after soap_dup_tt__VideoEncoderOptionsExtension(NULL, tt__VideoEncoderOptionsExtension *dst, tt__VideoEncoderOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__VideoEncoderOptionsExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges.
/// </BLOCKQUOTE></PRE>
///
/// Element "JPEG" of type "http://www.onvif.org/ver10/schema":JpegOptions2.
    struct tt__JpegOptions2*             JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type "http://www.onvif.org/ver10/schema":Mpeg4Options2.
    struct tt__Mpeg4Options2*            MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type "http://www.onvif.org/ver10/schema":H264Options2.
    struct tt__H264Options2*             H264                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2.
    struct tt__VideoEncoderOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is a complexType.
///
/// @note struct tt__VideoEncoderOptionsExtension2 operations:
/// - tt__VideoEncoderOptionsExtension2* soap_new_tt__VideoEncoderOptionsExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2*) default initialize members
/// - int soap_read_tt__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2*) deserialize from a source
/// - int soap_write_tt__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2*) serialize to a sink
/// - tt__VideoEncoderOptionsExtension2* soap_dup_tt__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2* dst, tt__VideoEncoderOptionsExtension2 *src) returns deep copy of tt__VideoEncoderOptionsExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoderOptionsExtension2(tt__VideoEncoderOptionsExtension2*) deep deletes tt__VideoEncoderOptionsExtension2 data members, use only on dst after soap_dup_tt__VideoEncoderOptionsExtension2(NULL, tt__VideoEncoderOptionsExtension2 *dst, tt__VideoEncoderOptionsExtension2 *src) (use soapcpp2 -Ed)
struct tt__VideoEncoderOptionsExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":JpegOptions2 as struct tt__JpegOptions2
///
/// @note struct tt__JpegOptions operations:
/// - tt__JpegOptions* soap_new_tt__JpegOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__JpegOptions(struct soap*, tt__JpegOptions*) default initialize members
/// - int soap_read_tt__JpegOptions(struct soap*, tt__JpegOptions*) deserialize from a source
/// - int soap_write_tt__JpegOptions(struct soap*, tt__JpegOptions*) serialize to a sink
/// - tt__JpegOptions* soap_dup_tt__JpegOptions(struct soap*, tt__JpegOptions* dst, tt__JpegOptions *src) returns deep copy of tt__JpegOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__JpegOptions(tt__JpegOptions*) deep deletes tt__JpegOptions data members, use only on dst after soap_dup_tt__JpegOptions(NULL, tt__JpegOptions *dst, tt__JpegOptions *src) (use soapcpp2 -Ed)
struct tt__JpegOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":Mpeg4Options2 as struct tt__Mpeg4Options2
///
/// @note struct tt__Mpeg4Options operations:
/// - tt__Mpeg4Options* soap_new_tt__Mpeg4Options(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Mpeg4Options(struct soap*, tt__Mpeg4Options*) default initialize members
/// - int soap_read_tt__Mpeg4Options(struct soap*, tt__Mpeg4Options*) deserialize from a source
/// - int soap_write_tt__Mpeg4Options(struct soap*, tt__Mpeg4Options*) serialize to a sink
/// - tt__Mpeg4Options* soap_dup_tt__Mpeg4Options(struct soap*, tt__Mpeg4Options* dst, tt__Mpeg4Options *src) returns deep copy of tt__Mpeg4Options src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Mpeg4Options(tt__Mpeg4Options*) deep deletes tt__Mpeg4Options data members, use only on dst after soap_dup_tt__Mpeg4Options(NULL, tt__Mpeg4Options *dst, tt__Mpeg4Options *src) (use soapcpp2 -Ed)
struct tt__Mpeg4Options
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__Mpeg4Profile* is 1..unbounded.
  $ int                                  __sizeMpeg4ProfilesSupported   1;
/// Array enum tt__Mpeg4Profile* of size 1..unbounded.
    enum tt__Mpeg4Profile*               Mpeg4ProfilesSupported         1;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":H264Options2 as struct tt__H264Options2
///
/// @note struct tt__H264Options operations:
/// - tt__H264Options* soap_new_tt__H264Options(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__H264Options(struct soap*, tt__H264Options*) default initialize members
/// - int soap_read_tt__H264Options(struct soap*, tt__H264Options*) deserialize from a source
/// - int soap_write_tt__H264Options(struct soap*, tt__H264Options*) serialize to a sink
/// - tt__H264Options* soap_dup_tt__H264Options(struct soap*, tt__H264Options* dst, tt__H264Options *src) returns deep copy of tt__H264Options src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__H264Options(tt__H264Options*) deep deletes tt__H264Options data members, use only on dst after soap_dup_tt__H264Options(NULL, tt__H264Options *dst, tt__H264Options *src) (use soapcpp2 -Ed)
struct tt__H264Options
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__H264Profile* is 1..unbounded.
  $ int                                  __sizeH264ProfilesSupported    1;
/// Array enum tt__H264Profile* of size 1..unbounded.
    enum tt__H264Profile*                H264ProfilesSupported          1;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoResolution2 is a complexType.
///
/// @note struct tt__VideoResolution2 operations:
/// - tt__VideoResolution2* soap_new_tt__VideoResolution2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoResolution2(struct soap*, tt__VideoResolution2*) default initialize members
/// - int soap_read_tt__VideoResolution2(struct soap*, tt__VideoResolution2*) deserialize from a source
/// - int soap_write_tt__VideoResolution2(struct soap*, tt__VideoResolution2*) serialize to a sink
/// - tt__VideoResolution2* soap_dup_tt__VideoResolution2(struct soap*, tt__VideoResolution2* dst, tt__VideoResolution2 *src) returns deep copy of tt__VideoResolution2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoResolution2(tt__VideoResolution2*) deep deletes tt__VideoResolution2 data members, use only on dst after soap_dup_tt__VideoResolution2(NULL, tt__VideoResolution2 *dst, tt__VideoResolution2 *src) (use soapcpp2 -Ed)
struct tt__VideoResolution2
{
/// <PRE><BLOCKQUOTE>
///   Number of the columns of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Width" of type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of the lines of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Height" of type xs:int.
    int                                  Height                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoRateControl2 is a complexType.
///
/// @note struct tt__VideoRateControl2 operations:
/// - tt__VideoRateControl2* soap_new_tt__VideoRateControl2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoRateControl2(struct soap*, tt__VideoRateControl2*) default initialize members
/// - int soap_read_tt__VideoRateControl2(struct soap*, tt__VideoRateControl2*) deserialize from a source
/// - int soap_write_tt__VideoRateControl2(struct soap*, tt__VideoRateControl2*) serialize to a sink
/// - tt__VideoRateControl2* soap_dup_tt__VideoRateControl2(struct soap*, tt__VideoRateControl2* dst, tt__VideoRateControl2 *src) returns deep copy of tt__VideoRateControl2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoRateControl2(tt__VideoRateControl2*) deep deletes tt__VideoRateControl2 data members, use only on dst after soap_dup_tt__VideoRateControl2(NULL, tt__VideoRateControl2 *dst, tt__VideoRateControl2 *src) (use soapcpp2 -Ed)
struct tt__VideoRateControl2
{
/// <PRE><BLOCKQUOTE>
///   Desired frame rate in fps. The actual rate may be lower due to e.g. performance limitations.
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateLimit" of type xs:float.
    float                                FrameRateLimit                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the maximum output bitrate in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateLimit" of type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Enforce constant bitrate.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ConstantBitRate" of type xs:boolean.
  @ enum xsd__boolean*                   ConstantBitRate                0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoder2ConfigurationOptions is a complexType.
///
/// @note struct tt__VideoEncoder2ConfigurationOptions operations:
/// - tt__VideoEncoder2ConfigurationOptions* soap_new_tt__VideoEncoder2ConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoEncoder2ConfigurationOptions(struct soap*, tt__VideoEncoder2ConfigurationOptions*) default initialize members
/// - int soap_read_tt__VideoEncoder2ConfigurationOptions(struct soap*, tt__VideoEncoder2ConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__VideoEncoder2ConfigurationOptions(struct soap*, tt__VideoEncoder2ConfigurationOptions*) serialize to a sink
/// - tt__VideoEncoder2ConfigurationOptions* soap_dup_tt__VideoEncoder2ConfigurationOptions(struct soap*, tt__VideoEncoder2ConfigurationOptions* dst, tt__VideoEncoder2ConfigurationOptions *src) returns deep copy of tt__VideoEncoder2ConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoder2ConfigurationOptions(tt__VideoEncoder2ConfigurationOptions*) deep deletes tt__VideoEncoder2ConfigurationOptions data members, use only on dst after soap_dup_tt__VideoEncoder2ConfigurationOptions(NULL, tt__VideoEncoder2ConfigurationOptions *dst, tt__VideoEncoder2ConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__VideoEncoder2ConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Video Media Subtype for the video format. For definitions see tt:VideoEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type xs:string.
    char*                                Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of the quality values. A high value means higher quality.
/// </BLOCKQUOTE></PRE>
///
/// Element "QualityRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               QualityRange                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution2* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution2* of size 1..unbounded.
    struct tt__VideoResolution2*         ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Exactly two values, which define the Lower and Upper bounds for the supported group of Video frames length. These values typically correspond to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntAttrList.
  @ tt__IntAttrList                      GovLengthRange                 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   List of supported target frame rates in fps (frames per second). The list shall be sorted with highest values first.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FrameRatesSupported" of type "http://www.onvif.org/ver10/schema":FloatAttrList.
  @ tt__FloatAttrList                    FrameRatesSupported            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   List of supported encoder profiles as defined in tt::VideoEncodingProfiles.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ProfilesSupported" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   ProfilesSupported              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Signal whether enforcing constant bitrate is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ConstantBitRateSupported" of type xs:boolean.
  @ enum xsd__boolean*                   ConstantBitRateSupported       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for the GuaranteedFrameRate attribute on the VideoEncoder2Configuration element.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GuaranteedFrameRateSupported" of type xs:boolean.
  @ enum xsd__boolean*                   GuaranteedFrameRateSupported   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is a complexType.
///
/// @note struct tt__AudioSourceConfigurationOptions operations:
/// - tt__AudioSourceConfigurationOptions* soap_new_tt__AudioSourceConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioSourceConfigurationOptions(struct soap*, tt__AudioSourceConfigurationOptions*) default initialize members
/// - int soap_read_tt__AudioSourceConfigurationOptions(struct soap*, tt__AudioSourceConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__AudioSourceConfigurationOptions(struct soap*, tt__AudioSourceConfigurationOptions*) serialize to a sink
/// - tt__AudioSourceConfigurationOptions* soap_dup_tt__AudioSourceConfigurationOptions(struct soap*, tt__AudioSourceConfigurationOptions* dst, tt__AudioSourceConfigurationOptions *src) returns deep copy of tt__AudioSourceConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioSourceConfigurationOptions(tt__AudioSourceConfigurationOptions*) deep deletes tt__AudioSourceConfigurationOptions data members, use only on dst after soap_dup_tt__AudioSourceConfigurationOptions(NULL, tt__AudioSourceConfigurationOptions *dst, tt__AudioSourceConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__AudioSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Tokens of the audio source the configuration can be used for.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__ReferenceToken* is 1..unbounded.
  $ int                                  __sizeInputTokensAvailable     1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  InputTokensAvailable           1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension.
    struct tt__AudioSourceOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is a complexType.
///
/// @note struct tt__AudioSourceOptionsExtension operations:
/// - tt__AudioSourceOptionsExtension* soap_new_tt__AudioSourceOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioSourceOptionsExtension(struct soap*, tt__AudioSourceOptionsExtension*) default initialize members
/// - int soap_read_tt__AudioSourceOptionsExtension(struct soap*, tt__AudioSourceOptionsExtension*) deserialize from a source
/// - int soap_write_tt__AudioSourceOptionsExtension(struct soap*, tt__AudioSourceOptionsExtension*) serialize to a sink
/// - tt__AudioSourceOptionsExtension* soap_dup_tt__AudioSourceOptionsExtension(struct soap*, tt__AudioSourceOptionsExtension* dst, tt__AudioSourceOptionsExtension *src) returns deep copy of tt__AudioSourceOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioSourceOptionsExtension(tt__AudioSourceOptionsExtension*) deep deletes tt__AudioSourceOptionsExtension data members, use only on dst after soap_dup_tt__AudioSourceOptionsExtension(NULL, tt__AudioSourceOptionsExtension *dst, tt__AudioSourceOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__AudioSourceOptionsExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is a complexType.
///
/// @note struct tt__AudioEncoderConfigurationOptions operations:
/// - tt__AudioEncoderConfigurationOptions* soap_new_tt__AudioEncoderConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioEncoderConfigurationOptions(struct soap*, tt__AudioEncoderConfigurationOptions*) default initialize members
/// - int soap_read_tt__AudioEncoderConfigurationOptions(struct soap*, tt__AudioEncoderConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__AudioEncoderConfigurationOptions(struct soap*, tt__AudioEncoderConfigurationOptions*) serialize to a sink
/// - tt__AudioEncoderConfigurationOptions* soap_dup_tt__AudioEncoderConfigurationOptions(struct soap*, tt__AudioEncoderConfigurationOptions* dst, tt__AudioEncoderConfigurationOptions *src) returns deep copy of tt__AudioEncoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioEncoderConfigurationOptions(tt__AudioEncoderConfigurationOptions*) deep deletes tt__AudioEncoderConfigurationOptions data members, use only on dst after soap_dup_tt__AudioEncoderConfigurationOptions(NULL, tt__AudioEncoderConfigurationOptions *dst, tt__AudioEncoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__AudioEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   list of supported AudioEncoderConfigurations
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioEncoderConfigurationOption* is 0..unbounded.
  $ int                                  __sizeOptions                  0;
/// Array struct tt__AudioEncoderConfigurationOption* of size 0..unbounded.
    struct tt__AudioEncoderConfigurationOption*  Options                        0;	///< Multiple elements.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is a complexType.
///
/// @note struct tt__AudioEncoderConfigurationOption operations:
/// - tt__AudioEncoderConfigurationOption* soap_new_tt__AudioEncoderConfigurationOption(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioEncoderConfigurationOption(struct soap*, tt__AudioEncoderConfigurationOption*) default initialize members
/// - int soap_read_tt__AudioEncoderConfigurationOption(struct soap*, tt__AudioEncoderConfigurationOption*) deserialize from a source
/// - int soap_write_tt__AudioEncoderConfigurationOption(struct soap*, tt__AudioEncoderConfigurationOption*) serialize to a sink
/// - tt__AudioEncoderConfigurationOption* soap_dup_tt__AudioEncoderConfigurationOption(struct soap*, tt__AudioEncoderConfigurationOption* dst, tt__AudioEncoderConfigurationOption *src) returns deep copy of tt__AudioEncoderConfigurationOption src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioEncoderConfigurationOption(tt__AudioEncoderConfigurationOption*) deep deletes tt__AudioEncoderConfigurationOption data members, use only on dst after soap_dup_tt__AudioEncoderConfigurationOption(NULL, tt__AudioEncoderConfigurationOption *dst, tt__AudioEncoderConfigurationOption *src) (use soapcpp2 -Ed)
struct tt__AudioEncoderConfigurationOption
{
/// <PRE><BLOCKQUOTE>
///   The enoding used for audio data (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps for the specified Encoding
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateList" of type "http://www.onvif.org/ver10/schema":IntItems.
    struct tt__IntItems*                 BitrateList                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported Sample Rates in kHz for the specified Encoding
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRateList" of type "http://www.onvif.org/ver10/schema":IntItems.
    struct tt__IntItems*                 SampleRateList                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoder2ConfigurationOptions is a complexType.
///
/// @note struct tt__AudioEncoder2ConfigurationOptions operations:
/// - tt__AudioEncoder2ConfigurationOptions* soap_new_tt__AudioEncoder2ConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioEncoder2ConfigurationOptions(struct soap*, tt__AudioEncoder2ConfigurationOptions*) default initialize members
/// - int soap_read_tt__AudioEncoder2ConfigurationOptions(struct soap*, tt__AudioEncoder2ConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__AudioEncoder2ConfigurationOptions(struct soap*, tt__AudioEncoder2ConfigurationOptions*) serialize to a sink
/// - tt__AudioEncoder2ConfigurationOptions* soap_dup_tt__AudioEncoder2ConfigurationOptions(struct soap*, tt__AudioEncoder2ConfigurationOptions* dst, tt__AudioEncoder2ConfigurationOptions *src) returns deep copy of tt__AudioEncoder2ConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioEncoder2ConfigurationOptions(tt__AudioEncoder2ConfigurationOptions*) deep deletes tt__AudioEncoder2ConfigurationOptions data members, use only on dst after soap_dup_tt__AudioEncoder2ConfigurationOptions(NULL, tt__AudioEncoder2ConfigurationOptions *dst, tt__AudioEncoder2ConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__AudioEncoder2ConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Audio Media Subtype for the audio format. For definitions see tt:AudioEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#audio"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type xs:string.
    char*                                Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps for the specified Encoding
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateList" of type "http://www.onvif.org/ver10/schema":IntItems.
    struct tt__IntItems*                 BitrateList                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported Sample Rates in kHz for the specified Encoding
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRateList" of type "http://www.onvif.org/ver10/schema":IntItems.
    struct tt__IntItems*                 SampleRateList                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension is a complexType.
///
/// @note struct tt__MetadataConfigurationExtension operations:
/// - tt__MetadataConfigurationExtension* soap_new_tt__MetadataConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MetadataConfigurationExtension(struct soap*, tt__MetadataConfigurationExtension*) default initialize members
/// - int soap_read_tt__MetadataConfigurationExtension(struct soap*, tt__MetadataConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__MetadataConfigurationExtension(struct soap*, tt__MetadataConfigurationExtension*) serialize to a sink
/// - tt__MetadataConfigurationExtension* soap_dup_tt__MetadataConfigurationExtension(struct soap*, tt__MetadataConfigurationExtension* dst, tt__MetadataConfigurationExtension *src) returns deep copy of tt__MetadataConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataConfigurationExtension(tt__MetadataConfigurationExtension*) deep deletes tt__MetadataConfigurationExtension data members, use only on dst after soap_dup_tt__MetadataConfigurationExtension(NULL, tt__MetadataConfigurationExtension *dst, tt__MetadataConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__MetadataConfigurationExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZFilter is a complexType.
///
/// @note struct tt__PTZFilter operations:
/// - tt__PTZFilter* soap_new_tt__PTZFilter(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZFilter(struct soap*, tt__PTZFilter*) default initialize members
/// - int soap_read_tt__PTZFilter(struct soap*, tt__PTZFilter*) deserialize from a source
/// - int soap_write_tt__PTZFilter(struct soap*, tt__PTZFilter*) serialize to a sink
/// - tt__PTZFilter* soap_dup_tt__PTZFilter(struct soap*, tt__PTZFilter* dst, tt__PTZFilter *src) returns deep copy of tt__PTZFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZFilter(tt__PTZFilter*) deep deletes tt__PTZFilter data members, use only on dst after soap_dup_tt__PTZFilter(NULL, tt__PTZFilter *dst, tt__PTZFilter *src) (use soapcpp2 -Ed)
struct tt__PTZFilter
{
/// <PRE><BLOCKQUOTE>
///   True if the metadata stream shall contain the PTZ status (IDLE, MOVING or UNKNOWN)
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type xs:boolean.
    enum xsd__boolean                    Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if the metadata stream shall contain the PTZ position
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type xs:boolean.
    enum xsd__boolean                    Position                       1;	///< Required element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":EventSubscription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Subcription handling in the same way as base notification subscription.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__EventSubscription operations:
/// - tt__EventSubscription* soap_new_tt__EventSubscription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__EventSubscription(struct soap*, tt__EventSubscription*) default initialize members
/// - int soap_read_tt__EventSubscription(struct soap*, tt__EventSubscription*) deserialize from a source
/// - int soap_write_tt__EventSubscription(struct soap*, tt__EventSubscription*) serialize to a sink
/// - tt__EventSubscription* soap_dup_tt__EventSubscription(struct soap*, tt__EventSubscription* dst, tt__EventSubscription *src) returns deep copy of tt__EventSubscription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EventSubscription(tt__EventSubscription*) deep deletes tt__EventSubscription data members, use only on dst after soap_dup_tt__EventSubscription(NULL, tt__EventSubscription *dst, tt__EventSubscription *src) (use soapcpp2 -Ed)
struct tt__EventSubscription
{
/// Element "Filter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// @note struct _tt__EventSubscription_SubscriptionPolicy operations:
/// - _tt__EventSubscription_SubscriptionPolicy* soap_new__tt__EventSubscription_SubscriptionPolicy(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tt__EventSubscription_SubscriptionPolicy(struct soap*, _tt__EventSubscription_SubscriptionPolicy*) default initialize members
/// - int soap_read__tt__EventSubscription_SubscriptionPolicy(struct soap*, _tt__EventSubscription_SubscriptionPolicy*) deserialize from a source
/// - int soap_write__tt__EventSubscription_SubscriptionPolicy(struct soap*, _tt__EventSubscription_SubscriptionPolicy*) serialize to a sink
/// - _tt__EventSubscription_SubscriptionPolicy* soap_dup__tt__EventSubscription_SubscriptionPolicy(struct soap*, _tt__EventSubscription_SubscriptionPolicy* dst, _tt__EventSubscription_SubscriptionPolicy *src) returns deep copy of _tt__EventSubscription_SubscriptionPolicy src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__EventSubscription_SubscriptionPolicy(_tt__EventSubscription_SubscriptionPolicy*) deep deletes _tt__EventSubscription_SubscriptionPolicy data members, use only on dst after soap_dup__tt__EventSubscription_SubscriptionPolicy(NULL, _tt__EventSubscription_SubscriptionPolicy *dst, _tt__EventSubscription_SubscriptionPolicy *src) (use soapcpp2 -Ed)
    struct _tt__EventSubscription_SubscriptionPolicy
    {
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is a complexType.
///
/// @note struct tt__MetadataConfigurationOptions operations:
/// - tt__MetadataConfigurationOptions* soap_new_tt__MetadataConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MetadataConfigurationOptions(struct soap*, tt__MetadataConfigurationOptions*) default initialize members
/// - int soap_read_tt__MetadataConfigurationOptions(struct soap*, tt__MetadataConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__MetadataConfigurationOptions(struct soap*, tt__MetadataConfigurationOptions*) serialize to a sink
/// - tt__MetadataConfigurationOptions* soap_dup_tt__MetadataConfigurationOptions(struct soap*, tt__MetadataConfigurationOptions* dst, tt__MetadataConfigurationOptions *src) returns deep copy of tt__MetadataConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataConfigurationOptions(tt__MetadataConfigurationOptions*) deep deletes tt__MetadataConfigurationOptions data members, use only on dst after soap_dup_tt__MetadataConfigurationOptions(NULL, tt__MetadataConfigurationOptions *dst, tt__MetadataConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__MetadataConfigurationOptions
{
/// Element "PTZStatusFilterOptions" of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions.
    struct tt__PTZStatusFilterOptions*   PTZStatusFilterOptions         1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension.
    struct tt__MetadataConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream the Geo Located positions of each target.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoLocation" of type xs:boolean.
  @ enum xsd__boolean*                   GeoLocation                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension is a complexType.
///
/// @note struct tt__MetadataConfigurationOptionsExtension operations:
/// - tt__MetadataConfigurationOptionsExtension* soap_new_tt__MetadataConfigurationOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MetadataConfigurationOptionsExtension(struct soap*, tt__MetadataConfigurationOptionsExtension*) default initialize members
/// - int soap_read_tt__MetadataConfigurationOptionsExtension(struct soap*, tt__MetadataConfigurationOptionsExtension*) deserialize from a source
/// - int soap_write_tt__MetadataConfigurationOptionsExtension(struct soap*, tt__MetadataConfigurationOptionsExtension*) serialize to a sink
/// - tt__MetadataConfigurationOptionsExtension* soap_dup_tt__MetadataConfigurationOptionsExtension(struct soap*, tt__MetadataConfigurationOptionsExtension* dst, tt__MetadataConfigurationOptionsExtension *src) returns deep copy of tt__MetadataConfigurationOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataConfigurationOptionsExtension(tt__MetadataConfigurationOptionsExtension*) deep deletes tt__MetadataConfigurationOptionsExtension data members, use only on dst after soap_dup_tt__MetadataConfigurationOptionsExtension(NULL, tt__MetadataConfigurationOptionsExtension *dst, tt__MetadataConfigurationOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__MetadataConfigurationOptionsExtension
{
/// <PRE><BLOCKQUOTE>
///   List of supported metadata compression type. Its options shall be chosen from tt:MetadataCompressionType.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char** is 0..unbounded.
  $ int                                  __sizeCompressionType          0;
/// Array char** of size 0..unbounded.
    char**                               CompressionType                0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2.
    struct tt__MetadataConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2 is a complexType.
///
/// @note struct tt__MetadataConfigurationOptionsExtension2 operations:
/// - tt__MetadataConfigurationOptionsExtension2* soap_new_tt__MetadataConfigurationOptionsExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MetadataConfigurationOptionsExtension2(struct soap*, tt__MetadataConfigurationOptionsExtension2*) default initialize members
/// - int soap_read_tt__MetadataConfigurationOptionsExtension2(struct soap*, tt__MetadataConfigurationOptionsExtension2*) deserialize from a source
/// - int soap_write_tt__MetadataConfigurationOptionsExtension2(struct soap*, tt__MetadataConfigurationOptionsExtension2*) serialize to a sink
/// - tt__MetadataConfigurationOptionsExtension2* soap_dup_tt__MetadataConfigurationOptionsExtension2(struct soap*, tt__MetadataConfigurationOptionsExtension2* dst, tt__MetadataConfigurationOptionsExtension2 *src) returns deep copy of tt__MetadataConfigurationOptionsExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataConfigurationOptionsExtension2(tt__MetadataConfigurationOptionsExtension2*) deep deletes tt__MetadataConfigurationOptionsExtension2 data members, use only on dst after soap_dup_tt__MetadataConfigurationOptionsExtension2(NULL, tt__MetadataConfigurationOptionsExtension2 *dst, tt__MetadataConfigurationOptionsExtension2 *src) (use soapcpp2 -Ed)
struct tt__MetadataConfigurationOptionsExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is a complexType.
///
/// @note struct tt__PTZStatusFilterOptions operations:
/// - tt__PTZStatusFilterOptions* soap_new_tt__PTZStatusFilterOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZStatusFilterOptions(struct soap*, tt__PTZStatusFilterOptions*) default initialize members
/// - int soap_read_tt__PTZStatusFilterOptions(struct soap*, tt__PTZStatusFilterOptions*) deserialize from a source
/// - int soap_write_tt__PTZStatusFilterOptions(struct soap*, tt__PTZStatusFilterOptions*) serialize to a sink
/// - tt__PTZStatusFilterOptions* soap_dup_tt__PTZStatusFilterOptions(struct soap*, tt__PTZStatusFilterOptions* dst, tt__PTZStatusFilterOptions *src) returns deep copy of tt__PTZStatusFilterOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZStatusFilterOptions(tt__PTZStatusFilterOptions*) deep deletes tt__PTZStatusFilterOptions data members, use only on dst after soap_dup_tt__PTZStatusFilterOptions(NULL, tt__PTZStatusFilterOptions *dst, tt__PTZStatusFilterOptions *src) (use soapcpp2 -Ed)
struct tt__PTZStatusFilterOptions
{
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream pan or tilt status information.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTiltStatusSupported" of type xs:boolean.
    enum xsd__boolean                    PanTiltStatusSupported         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream zoom status inforamtion.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZoomStatusSupported" of type xs:boolean.
    enum xsd__boolean                    ZoomStatusSupported            1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream the pan or tilt position.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTiltPositionSupported" of type xs:boolean.
    enum xsd__boolean*                   PanTiltPositionSupported       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream zoom position information.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZoomPositionSupported" of type xs:boolean.
    enum xsd__boolean*                   ZoomPositionSupported          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension.
    struct tt__PTZStatusFilterOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension is a complexType.
///
/// @note struct tt__PTZStatusFilterOptionsExtension operations:
/// - tt__PTZStatusFilterOptionsExtension* soap_new_tt__PTZStatusFilterOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZStatusFilterOptionsExtension(struct soap*, tt__PTZStatusFilterOptionsExtension*) default initialize members
/// - int soap_read_tt__PTZStatusFilterOptionsExtension(struct soap*, tt__PTZStatusFilterOptionsExtension*) deserialize from a source
/// - int soap_write_tt__PTZStatusFilterOptionsExtension(struct soap*, tt__PTZStatusFilterOptionsExtension*) serialize to a sink
/// - tt__PTZStatusFilterOptionsExtension* soap_dup_tt__PTZStatusFilterOptionsExtension(struct soap*, tt__PTZStatusFilterOptionsExtension* dst, tt__PTZStatusFilterOptionsExtension *src) returns deep copy of tt__PTZStatusFilterOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZStatusFilterOptionsExtension(tt__PTZStatusFilterOptionsExtension*) deep deletes tt__PTZStatusFilterOptionsExtension data members, use only on dst after soap_dup_tt__PTZStatusFilterOptionsExtension(NULL, tt__PTZStatusFilterOptionsExtension *dst, tt__PTZStatusFilterOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__PTZStatusFilterOptionsExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputExtension is a complexType.
///
/// @note struct tt__VideoOutputExtension operations:
/// - tt__VideoOutputExtension* soap_new_tt__VideoOutputExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoOutputExtension(struct soap*, tt__VideoOutputExtension*) default initialize members
/// - int soap_read_tt__VideoOutputExtension(struct soap*, tt__VideoOutputExtension*) deserialize from a source
/// - int soap_write_tt__VideoOutputExtension(struct soap*, tt__VideoOutputExtension*) serialize to a sink
/// - tt__VideoOutputExtension* soap_dup_tt__VideoOutputExtension(struct soap*, tt__VideoOutputExtension* dst, tt__VideoOutputExtension *src) returns deep copy of tt__VideoOutputExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoOutputExtension(tt__VideoOutputExtension*) deep deletes tt__VideoOutputExtension data members, use only on dst after soap_dup_tt__VideoOutputExtension(NULL, tt__VideoOutputExtension *dst, tt__VideoOutputExtension *src) (use soapcpp2 -Ed)
struct tt__VideoOutputExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions is a complexType.
///
/// @note struct tt__VideoOutputConfigurationOptions operations:
/// - tt__VideoOutputConfigurationOptions* soap_new_tt__VideoOutputConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoOutputConfigurationOptions(struct soap*, tt__VideoOutputConfigurationOptions*) default initialize members
/// - int soap_read_tt__VideoOutputConfigurationOptions(struct soap*, tt__VideoOutputConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__VideoOutputConfigurationOptions(struct soap*, tt__VideoOutputConfigurationOptions*) serialize to a sink
/// - tt__VideoOutputConfigurationOptions* soap_dup_tt__VideoOutputConfigurationOptions(struct soap*, tt__VideoOutputConfigurationOptions* dst, tt__VideoOutputConfigurationOptions *src) returns deep copy of tt__VideoOutputConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoOutputConfigurationOptions(tt__VideoOutputConfigurationOptions*) deep deletes tt__VideoOutputConfigurationOptions data members, use only on dst after soap_dup_tt__VideoOutputConfigurationOptions(NULL, tt__VideoOutputConfigurationOptions *dst, tt__VideoOutputConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__VideoOutputConfigurationOptions
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions is a complexType.
///
/// @note struct tt__VideoDecoderConfigurationOptions operations:
/// - tt__VideoDecoderConfigurationOptions* soap_new_tt__VideoDecoderConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoDecoderConfigurationOptions(struct soap*, tt__VideoDecoderConfigurationOptions*) default initialize members
/// - int soap_read_tt__VideoDecoderConfigurationOptions(struct soap*, tt__VideoDecoderConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__VideoDecoderConfigurationOptions(struct soap*, tt__VideoDecoderConfigurationOptions*) serialize to a sink
/// - tt__VideoDecoderConfigurationOptions* soap_dup_tt__VideoDecoderConfigurationOptions(struct soap*, tt__VideoDecoderConfigurationOptions* dst, tt__VideoDecoderConfigurationOptions *src) returns deep copy of tt__VideoDecoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoDecoderConfigurationOptions(tt__VideoDecoderConfigurationOptions*) deep deletes tt__VideoDecoderConfigurationOptions data members, use only on dst after soap_dup_tt__VideoDecoderConfigurationOptions(NULL, tt__VideoDecoderConfigurationOptions *dst, tt__VideoDecoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__VideoDecoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode Jpeg streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "JpegDecOptions" of type "http://www.onvif.org/ver10/schema":JpegDecOptions.
    struct tt__JpegDecOptions*           JpegDecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode H.264 streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "H264DecOptions" of type "http://www.onvif.org/ver10/schema":H264DecOptions.
    struct tt__H264DecOptions*           H264DecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode Mpeg4 streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "Mpeg4DecOptions" of type "http://www.onvif.org/ver10/schema":Mpeg4DecOptions.
    struct tt__Mpeg4DecOptions*          Mpeg4DecOptions                0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension.
    struct tt__VideoDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":H264DecOptions is a complexType.
///
/// @note struct tt__H264DecOptions operations:
/// - tt__H264DecOptions* soap_new_tt__H264DecOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__H264DecOptions(struct soap*, tt__H264DecOptions*) default initialize members
/// - int soap_read_tt__H264DecOptions(struct soap*, tt__H264DecOptions*) deserialize from a source
/// - int soap_write_tt__H264DecOptions(struct soap*, tt__H264DecOptions*) serialize to a sink
/// - tt__H264DecOptions* soap_dup_tt__H264DecOptions(struct soap*, tt__H264DecOptions* dst, tt__H264DecOptions *src) returns deep copy of tt__H264DecOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__H264DecOptions(tt__H264DecOptions*) deep deletes tt__H264DecOptions data members, use only on dst after soap_dup_tt__H264DecOptions(NULL, tt__H264DecOptions *dst, tt__H264DecOptions *src) (use soapcpp2 -Ed)
struct tt__H264DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 Video Resolutions
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of supported H264 Profiles (either baseline, main, extended or high)
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__H264Profile* is 1..unbounded.
  $ int                                  __sizeSupportedH264Profiles    1;
/// Array enum tt__H264Profile* of size 1..unbounded.
    enum tt__H264Profile*                SupportedH264Profiles          1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported H.264 bitrate range in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedInputBitrate" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported H.264 framerate range in fps
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedFrameRate" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedFrameRate             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":JpegDecOptions is a complexType.
///
/// @note struct tt__JpegDecOptions operations:
/// - tt__JpegDecOptions* soap_new_tt__JpegDecOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__JpegDecOptions(struct soap*, tt__JpegDecOptions*) default initialize members
/// - int soap_read_tt__JpegDecOptions(struct soap*, tt__JpegDecOptions*) deserialize from a source
/// - int soap_write_tt__JpegDecOptions(struct soap*, tt__JpegDecOptions*) serialize to a sink
/// - tt__JpegDecOptions* soap_dup_tt__JpegDecOptions(struct soap*, tt__JpegDecOptions* dst, tt__JpegDecOptions *src) returns deep copy of tt__JpegDecOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__JpegDecOptions(tt__JpegDecOptions*) deep deletes tt__JpegDecOptions data members, use only on dst after soap_dup_tt__JpegDecOptions(NULL, tt__JpegDecOptions *dst, tt__JpegDecOptions *src) (use soapcpp2 -Ed)
struct tt__JpegDecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported Jpeg Video Resolutions
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported Jpeg bitrate range in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedInputBitrate" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported Jpeg framerate range in fps
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedFrameRate" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedFrameRate             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4DecOptions is a complexType.
///
/// @note struct tt__Mpeg4DecOptions operations:
/// - tt__Mpeg4DecOptions* soap_new_tt__Mpeg4DecOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Mpeg4DecOptions(struct soap*, tt__Mpeg4DecOptions*) default initialize members
/// - int soap_read_tt__Mpeg4DecOptions(struct soap*, tt__Mpeg4DecOptions*) deserialize from a source
/// - int soap_write_tt__Mpeg4DecOptions(struct soap*, tt__Mpeg4DecOptions*) serialize to a sink
/// - tt__Mpeg4DecOptions* soap_dup_tt__Mpeg4DecOptions(struct soap*, tt__Mpeg4DecOptions* dst, tt__Mpeg4DecOptions *src) returns deep copy of tt__Mpeg4DecOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Mpeg4DecOptions(tt__Mpeg4DecOptions*) deep deletes tt__Mpeg4DecOptions data members, use only on dst after soap_dup_tt__Mpeg4DecOptions(NULL, tt__Mpeg4DecOptions *dst, tt__Mpeg4DecOptions *src) (use soapcpp2 -Ed)
struct tt__Mpeg4DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported Mpeg4 Video Resolutions
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of supported Mpeg4 Profiles (either SP or ASP)
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__Mpeg4Profile* is 1..unbounded.
  $ int                                  __sizeSupportedMpeg4Profiles   1;
/// Array enum tt__Mpeg4Profile* of size 1..unbounded.
    enum tt__Mpeg4Profile*               SupportedMpeg4Profiles         1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported Mpeg4 bitrate range in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedInputBitrate" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported Mpeg4 framerate range in fps
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedFrameRate" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedFrameRate             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension is a complexType.
///
/// @note struct tt__VideoDecoderConfigurationOptionsExtension operations:
/// - tt__VideoDecoderConfigurationOptionsExtension* soap_new_tt__VideoDecoderConfigurationOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoDecoderConfigurationOptionsExtension(struct soap*, tt__VideoDecoderConfigurationOptionsExtension*) default initialize members
/// - int soap_read_tt__VideoDecoderConfigurationOptionsExtension(struct soap*, tt__VideoDecoderConfigurationOptionsExtension*) deserialize from a source
/// - int soap_write_tt__VideoDecoderConfigurationOptionsExtension(struct soap*, tt__VideoDecoderConfigurationOptionsExtension*) serialize to a sink
/// - tt__VideoDecoderConfigurationOptionsExtension* soap_dup_tt__VideoDecoderConfigurationOptionsExtension(struct soap*, tt__VideoDecoderConfigurationOptionsExtension* dst, tt__VideoDecoderConfigurationOptionsExtension *src) returns deep copy of tt__VideoDecoderConfigurationOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoDecoderConfigurationOptionsExtension(tt__VideoDecoderConfigurationOptionsExtension*) deep deletes tt__VideoDecoderConfigurationOptionsExtension data members, use only on dst after soap_dup_tt__VideoDecoderConfigurationOptionsExtension(NULL, tt__VideoDecoderConfigurationOptionsExtension *dst, tt__VideoDecoderConfigurationOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__VideoDecoderConfigurationOptionsExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions is a complexType.
///
/// @note struct tt__AudioOutputConfigurationOptions operations:
/// - tt__AudioOutputConfigurationOptions* soap_new_tt__AudioOutputConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioOutputConfigurationOptions(struct soap*, tt__AudioOutputConfigurationOptions*) default initialize members
/// - int soap_read_tt__AudioOutputConfigurationOptions(struct soap*, tt__AudioOutputConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__AudioOutputConfigurationOptions(struct soap*, tt__AudioOutputConfigurationOptions*) serialize to a sink
/// - tt__AudioOutputConfigurationOptions* soap_dup_tt__AudioOutputConfigurationOptions(struct soap*, tt__AudioOutputConfigurationOptions* dst, tt__AudioOutputConfigurationOptions *src) returns deep copy of tt__AudioOutputConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioOutputConfigurationOptions(tt__AudioOutputConfigurationOptions*) deep deletes tt__AudioOutputConfigurationOptions data members, use only on dst after soap_dup_tt__AudioOutputConfigurationOptions(NULL, tt__AudioOutputConfigurationOptions *dst, tt__AudioOutputConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__AudioOutputConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Tokens of the physical Audio outputs (typically one).
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__ReferenceToken* is 1..unbounded.
  $ int                                  __sizeOutputTokensAvailable    1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  OutputTokensAvailable          1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   An <b>audio</b> channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 0..unbounded.
  $ int                                  __sizeSendPrimacyOptions       0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         SendPrimacyOptions             0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Minimum and maximum level range supported for this Output.
/// </BLOCKQUOTE></PRE>
///
/// Element "OutputLevelRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 OutputLevelRange               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions is a complexType.
///
/// @note struct tt__AudioDecoderConfigurationOptions operations:
/// - tt__AudioDecoderConfigurationOptions* soap_new_tt__AudioDecoderConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioDecoderConfigurationOptions(struct soap*, tt__AudioDecoderConfigurationOptions*) default initialize members
/// - int soap_read_tt__AudioDecoderConfigurationOptions(struct soap*, tt__AudioDecoderConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__AudioDecoderConfigurationOptions(struct soap*, tt__AudioDecoderConfigurationOptions*) serialize to a sink
/// - tt__AudioDecoderConfigurationOptions* soap_dup_tt__AudioDecoderConfigurationOptions(struct soap*, tt__AudioDecoderConfigurationOptions* dst, tt__AudioDecoderConfigurationOptions *src) returns deep copy of tt__AudioDecoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioDecoderConfigurationOptions(tt__AudioDecoderConfigurationOptions*) deep deletes tt__AudioDecoderConfigurationOptions data members, use only on dst after soap_dup_tt__AudioDecoderConfigurationOptions(NULL, tt__AudioDecoderConfigurationOptions *dst, tt__AudioDecoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__AudioDecoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode AAC encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "AACDecOptions" of type "http://www.onvif.org/ver10/schema":AACDecOptions.
    struct tt__AACDecOptions*            AACDecOptions                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode G711 encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "G711DecOptions" of type "http://www.onvif.org/ver10/schema":G711DecOptions.
    struct tt__G711DecOptions*           G711DecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode G726 encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "G726DecOptions" of type "http://www.onvif.org/ver10/schema":G726DecOptions.
    struct tt__G726DecOptions*           G726DecOptions                 0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension.
    struct tt__AudioDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":G711DecOptions is a complexType.
///
/// @note struct tt__G711DecOptions operations:
/// - tt__G711DecOptions* soap_new_tt__G711DecOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__G711DecOptions(struct soap*, tt__G711DecOptions*) default initialize members
/// - int soap_read_tt__G711DecOptions(struct soap*, tt__G711DecOptions*) deserialize from a source
/// - int soap_write_tt__G711DecOptions(struct soap*, tt__G711DecOptions*) serialize to a sink
/// - tt__G711DecOptions* soap_dup_tt__G711DecOptions(struct soap*, tt__G711DecOptions* dst, tt__G711DecOptions *src) returns deep copy of tt__G711DecOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__G711DecOptions(tt__G711DecOptions*) deep deletes tt__G711DecOptions data members, use only on dst after soap_dup_tt__G711DecOptions(NULL, tt__G711DecOptions *dst, tt__G711DecOptions *src) (use soapcpp2 -Ed)
struct tt__G711DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type "http://www.onvif.org/ver10/schema":IntItems.
    struct tt__IntItems*                 Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRateRange" of type "http://www.onvif.org/ver10/schema":IntItems.
    struct tt__IntItems*                 SampleRateRange                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AACDecOptions is a complexType.
///
/// @note struct tt__AACDecOptions operations:
/// - tt__AACDecOptions* soap_new_tt__AACDecOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AACDecOptions(struct soap*, tt__AACDecOptions*) default initialize members
/// - int soap_read_tt__AACDecOptions(struct soap*, tt__AACDecOptions*) deserialize from a source
/// - int soap_write_tt__AACDecOptions(struct soap*, tt__AACDecOptions*) serialize to a sink
/// - tt__AACDecOptions* soap_dup_tt__AACDecOptions(struct soap*, tt__AACDecOptions* dst, tt__AACDecOptions *src) returns deep copy of tt__AACDecOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AACDecOptions(tt__AACDecOptions*) deep deletes tt__AACDecOptions data members, use only on dst after soap_dup_tt__AACDecOptions(NULL, tt__AACDecOptions *dst, tt__AACDecOptions *src) (use soapcpp2 -Ed)
struct tt__AACDecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type "http://www.onvif.org/ver10/schema":IntItems.
    struct tt__IntItems*                 Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRateRange" of type "http://www.onvif.org/ver10/schema":IntItems.
    struct tt__IntItems*                 SampleRateRange                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":G726DecOptions is a complexType.
///
/// @note struct tt__G726DecOptions operations:
/// - tt__G726DecOptions* soap_new_tt__G726DecOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__G726DecOptions(struct soap*, tt__G726DecOptions*) default initialize members
/// - int soap_read_tt__G726DecOptions(struct soap*, tt__G726DecOptions*) deserialize from a source
/// - int soap_write_tt__G726DecOptions(struct soap*, tt__G726DecOptions*) serialize to a sink
/// - tt__G726DecOptions* soap_dup_tt__G726DecOptions(struct soap*, tt__G726DecOptions* dst, tt__G726DecOptions *src) returns deep copy of tt__G726DecOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__G726DecOptions(tt__G726DecOptions*) deep deletes tt__G726DecOptions data members, use only on dst after soap_dup_tt__G726DecOptions(NULL, tt__G726DecOptions *dst, tt__G726DecOptions *src) (use soapcpp2 -Ed)
struct tt__G726DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type "http://www.onvif.org/ver10/schema":IntItems.
    struct tt__IntItems*                 Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRateRange" of type "http://www.onvif.org/ver10/schema":IntItems.
    struct tt__IntItems*                 SampleRateRange                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension is a complexType.
///
/// @note struct tt__AudioDecoderConfigurationOptionsExtension operations:
/// - tt__AudioDecoderConfigurationOptionsExtension* soap_new_tt__AudioDecoderConfigurationOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioDecoderConfigurationOptionsExtension(struct soap*, tt__AudioDecoderConfigurationOptionsExtension*) default initialize members
/// - int soap_read_tt__AudioDecoderConfigurationOptionsExtension(struct soap*, tt__AudioDecoderConfigurationOptionsExtension*) deserialize from a source
/// - int soap_write_tt__AudioDecoderConfigurationOptionsExtension(struct soap*, tt__AudioDecoderConfigurationOptionsExtension*) serialize to a sink
/// - tt__AudioDecoderConfigurationOptionsExtension* soap_dup_tt__AudioDecoderConfigurationOptionsExtension(struct soap*, tt__AudioDecoderConfigurationOptionsExtension* dst, tt__AudioDecoderConfigurationOptionsExtension *src) returns deep copy of tt__AudioDecoderConfigurationOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioDecoderConfigurationOptionsExtension(tt__AudioDecoderConfigurationOptionsExtension*) deep deletes tt__AudioDecoderConfigurationOptionsExtension data members, use only on dst after soap_dup_tt__AudioDecoderConfigurationOptionsExtension(NULL, tt__AudioDecoderConfigurationOptionsExtension *dst, tt__AudioDecoderConfigurationOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__AudioDecoderConfigurationOptionsExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":MulticastConfiguration is a complexType.
///
/// @note struct tt__MulticastConfiguration operations:
/// - tt__MulticastConfiguration* soap_new_tt__MulticastConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MulticastConfiguration(struct soap*, tt__MulticastConfiguration*) default initialize members
/// - int soap_read_tt__MulticastConfiguration(struct soap*, tt__MulticastConfiguration*) deserialize from a source
/// - int soap_write_tt__MulticastConfiguration(struct soap*, tt__MulticastConfiguration*) serialize to a sink
/// - tt__MulticastConfiguration* soap_dup_tt__MulticastConfiguration(struct soap*, tt__MulticastConfiguration* dst, tt__MulticastConfiguration *src) returns deep copy of tt__MulticastConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MulticastConfiguration(tt__MulticastConfiguration*) deep deletes tt__MulticastConfiguration data members, use only on dst after soap_dup_tt__MulticastConfiguration(NULL, tt__MulticastConfiguration *dst, tt__MulticastConfiguration *src) (use soapcpp2 -Ed)
struct tt__MulticastConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The multicast address (if this address is set to 0 no multicast streaming is enaled)
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.onvif.org/ver10/schema":IPAddress.
    struct tt__IPAddress*                Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The RTP mutlicast destination port. A device may support RTCP. In this case the port value shall be even to allow the corresponding RTCP stream to be mapped to the next higher (odd) destination port number as defined in the RTSP specification.
/// </BLOCKQUOTE></PRE>
///
/// Element "Port" of type xs:int.
    int                                  Port                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   In case of IPv6 the TTL value is assumed as the hop limit. Note that for IPV6 and administratively scoped IPv4 multicast the primary use for hop limit / TTL is to prevent packets from (endlessly) circulating and not limiting scope. In these cases the address contains the scope.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:int.
    int                                  TTL                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Read only property signalling that streaming is persistant. Use the methods StartMulticastStreaming and StopMulticastStreaming to switch its state.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoStart" of type xs:boolean.
    enum xsd__boolean                    AutoStart                      1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":StreamSetup is a complexType.
///
/// @note struct tt__StreamSetup operations:
/// - tt__StreamSetup* soap_new_tt__StreamSetup(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__StreamSetup(struct soap*, tt__StreamSetup*) default initialize members
/// - int soap_read_tt__StreamSetup(struct soap*, tt__StreamSetup*) deserialize from a source
/// - int soap_write_tt__StreamSetup(struct soap*, tt__StreamSetup*) serialize to a sink
/// - tt__StreamSetup* soap_dup_tt__StreamSetup(struct soap*, tt__StreamSetup* dst, tt__StreamSetup *src) returns deep copy of tt__StreamSetup src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__StreamSetup(tt__StreamSetup*) deep deletes tt__StreamSetup data members, use only on dst after soap_dup_tt__StreamSetup(NULL, tt__StreamSetup *dst, tt__StreamSetup *src) (use soapcpp2 -Ed)
struct tt__StreamSetup
{
/// <PRE><BLOCKQUOTE>
///   Defines if a multicast or unicast stream is requested
/// </BLOCKQUOTE></PRE>
///
/// Element "Stream" of type "http://www.onvif.org/ver10/schema":StreamType.
    enum tt__StreamType                  Stream                         1;	///< Required element.
/// Element "Transport" of type "http://www.onvif.org/ver10/schema":Transport.
    struct tt__Transport*                Transport                      1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Transport is a complexType.
///
/// @note struct tt__Transport operations:
/// - tt__Transport* soap_new_tt__Transport(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Transport(struct soap*, tt__Transport*) default initialize members
/// - int soap_read_tt__Transport(struct soap*, tt__Transport*) deserialize from a source
/// - int soap_write_tt__Transport(struct soap*, tt__Transport*) serialize to a sink
/// - tt__Transport* soap_dup_tt__Transport(struct soap*, tt__Transport* dst, tt__Transport *src) returns deep copy of tt__Transport src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Transport(tt__Transport*) deep deletes tt__Transport data members, use only on dst after soap_dup_tt__Transport(NULL, tt__Transport *dst, tt__Transport *src) (use soapcpp2 -Ed)
struct tt__Transport
{
/// <PRE><BLOCKQUOTE>
///   Defines the network protocol for streaming, either UDP=RTP/UDP, RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP
/// </BLOCKQUOTE></PRE>
///
/// Element "Protocol" of type "http://www.onvif.org/ver10/schema":TransportProtocol.
    enum tt__TransportProtocol           Protocol                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to describe further tunnel options. This element is normally not needed
/// </BLOCKQUOTE></PRE>
///
/// Element "Tunnel" of type "http://www.onvif.org/ver10/schema":Transport.
    struct tt__Transport*                Tunnel                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaUri is a complexType.
///
/// @note struct tt__MediaUri operations:
/// - tt__MediaUri* soap_new_tt__MediaUri(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MediaUri(struct soap*, tt__MediaUri*) default initialize members
/// - int soap_read_tt__MediaUri(struct soap*, tt__MediaUri*) deserialize from a source
/// - int soap_write_tt__MediaUri(struct soap*, tt__MediaUri*) serialize to a sink
/// - tt__MediaUri* soap_dup_tt__MediaUri(struct soap*, tt__MediaUri* dst, tt__MediaUri *src) returns deep copy of tt__MediaUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MediaUri(tt__MediaUri*) deep deletes tt__MediaUri data members, use only on dst after soap_dup_tt__MediaUri(NULL, tt__MediaUri *dst, tt__MediaUri *src) (use soapcpp2 -Ed)
struct tt__MediaUri
{
/// <PRE><BLOCKQUOTE>
///   Stable Uri to be used for requesting the media stream
/// </BLOCKQUOTE></PRE>
///
/// Element "Uri" of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is only valid until the connection is established. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
///
/// Element "InvalidAfterConnect" of type xs:boolean.
    enum xsd__boolean                    InvalidAfterConnect            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is invalid after a reboot of the device. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
///
/// Element "InvalidAfterReboot" of type xs:boolean.
    enum xsd__boolean                    InvalidAfterReboot             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duration how long the Uri is valid. This parameter shall be set to PT0S to indicate that this stream URI is indefinitely valid even if the profile changes
/// </BLOCKQUOTE></PRE>
///
/// Element "Timeout" of type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Scope is a complexType.
///
/// @note struct tt__Scope operations:
/// - tt__Scope* soap_new_tt__Scope(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Scope(struct soap*, tt__Scope*) default initialize members
/// - int soap_read_tt__Scope(struct soap*, tt__Scope*) deserialize from a source
/// - int soap_write_tt__Scope(struct soap*, tt__Scope*) serialize to a sink
/// - tt__Scope* soap_dup_tt__Scope(struct soap*, tt__Scope* dst, tt__Scope *src) returns deep copy of tt__Scope src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Scope(tt__Scope*) deep deletes tt__Scope data members, use only on dst after soap_dup_tt__Scope(NULL, tt__Scope *dst, tt__Scope *src) (use soapcpp2 -Ed)
struct tt__Scope
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the scope is fixed or configurable.
/// </BLOCKQUOTE></PRE>
///
/// Element "ScopeDef" of type "http://www.onvif.org/ver10/schema":ScopeDefinition.
    enum tt__ScopeDefinition             ScopeDef                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Scope item URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "ScopeItem" of type xs:anyURI.
    xsd__anyURI                          ScopeItem                      1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is a complexType.
///
/// @note struct tt__NetworkInterfaceExtension operations:
/// - tt__NetworkInterfaceExtension* soap_new_tt__NetworkInterfaceExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension*) default initialize members
/// - int soap_read_tt__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension*) serialize to a sink
/// - tt__NetworkInterfaceExtension* soap_dup_tt__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension* dst, tt__NetworkInterfaceExtension *src) returns deep copy of tt__NetworkInterfaceExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceExtension(tt__NetworkInterfaceExtension*) deep deletes tt__NetworkInterfaceExtension data members, use only on dst after soap_dup_tt__NetworkInterfaceExtension(NULL, tt__NetworkInterfaceExtension *dst, tt__NetworkInterfaceExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "InterfaceType" of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Extension point prepared for future 802.3 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Dot3Configuration* is 0..unbounded.
  $ int                                  __sizeDot3                     0;
/// Array struct tt__Dot3Configuration* of size 0..unbounded.
    struct tt__Dot3Configuration*        Dot3                           0;	///< Multiple elements.
/// Size of array of struct tt__Dot11Configuration* is 0..unbounded.
  $ int                                  __sizeDot11                    0;
/// Array struct tt__Dot11Configuration* of size 0..unbounded.
    struct tt__Dot11Configuration*       Dot11                          0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2.
    struct tt__NetworkInterfaceExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot3Configuration is a complexType.
///
/// @note struct tt__Dot3Configuration operations:
/// - tt__Dot3Configuration* soap_new_tt__Dot3Configuration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot3Configuration(struct soap*, tt__Dot3Configuration*) default initialize members
/// - int soap_read_tt__Dot3Configuration(struct soap*, tt__Dot3Configuration*) deserialize from a source
/// - int soap_write_tt__Dot3Configuration(struct soap*, tt__Dot3Configuration*) serialize to a sink
/// - tt__Dot3Configuration* soap_dup_tt__Dot3Configuration(struct soap*, tt__Dot3Configuration* dst, tt__Dot3Configuration *src) returns deep copy of tt__Dot3Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot3Configuration(tt__Dot3Configuration*) deep deletes tt__Dot3Configuration data members, use only on dst after soap_dup_tt__Dot3Configuration(NULL, tt__Dot3Configuration *dst, tt__Dot3Configuration *src) (use soapcpp2 -Ed)
struct tt__Dot3Configuration
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2 is a complexType.
///
/// @note struct tt__NetworkInterfaceExtension2 operations:
/// - tt__NetworkInterfaceExtension2* soap_new_tt__NetworkInterfaceExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2*) default initialize members
/// - int soap_read_tt__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2*) serialize to a sink
/// - tt__NetworkInterfaceExtension2* soap_dup_tt__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2* dst, tt__NetworkInterfaceExtension2 *src) returns deep copy of tt__NetworkInterfaceExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceExtension2(tt__NetworkInterfaceExtension2*) deep deletes tt__NetworkInterfaceExtension2 data members, use only on dst after soap_dup_tt__NetworkInterfaceExtension2(NULL, tt__NetworkInterfaceExtension2 *dst, tt__NetworkInterfaceExtension2 *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is a complexType.
///
/// @note struct tt__NetworkInterfaceLink operations:
/// - tt__NetworkInterfaceLink* soap_new_tt__NetworkInterfaceLink(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink*) default initialize members
/// - int soap_read_tt__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink*) serialize to a sink
/// - tt__NetworkInterfaceLink* soap_dup_tt__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink* dst, tt__NetworkInterfaceLink *src) returns deep copy of tt__NetworkInterfaceLink src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceLink(tt__NetworkInterfaceLink*) deep deletes tt__NetworkInterfaceLink data members, use only on dst after soap_dup_tt__NetworkInterfaceLink(NULL, tt__NetworkInterfaceLink *dst, tt__NetworkInterfaceLink *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceLink
{
/// <PRE><BLOCKQUOTE>
///   Configured link settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "AdminSettings" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  AdminSettings                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current active link settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "OperSettings" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  OperSettings                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Integer indicating interface type, for example: 6 is ethernet.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceType" of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is a complexType.
///
/// @note struct tt__NetworkInterfaceConnectionSetting operations:
/// - tt__NetworkInterfaceConnectionSetting* soap_new_tt__NetworkInterfaceConnectionSetting(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting*) default initialize members
/// - int soap_read_tt__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting*) serialize to a sink
/// - tt__NetworkInterfaceConnectionSetting* soap_dup_tt__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting* dst, tt__NetworkInterfaceConnectionSetting *src) returns deep copy of tt__NetworkInterfaceConnectionSetting src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceConnectionSetting(tt__NetworkInterfaceConnectionSetting*) deep deletes tt__NetworkInterfaceConnectionSetting data members, use only on dst after soap_dup_tt__NetworkInterfaceConnectionSetting(NULL, tt__NetworkInterfaceConnectionSetting *dst, tt__NetworkInterfaceConnectionSetting *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceConnectionSetting
{
/// <PRE><BLOCKQUOTE>
///   Auto negotiation on/off.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoNegotiation" of type xs:boolean.
    enum xsd__boolean                    AutoNegotiation                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type xs:int.
    int                                  Speed                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duplex type, Half or Full.
/// </BLOCKQUOTE></PRE>
///
/// Element "Duplex" of type "http://www.onvif.org/ver10/schema":Duplex.
    enum tt__Duplex                      Duplex                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is a complexType.
///
/// @note struct tt__NetworkInterfaceInfo operations:
/// - tt__NetworkInterfaceInfo* soap_new_tt__NetworkInterfaceInfo(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo*) default initialize members
/// - int soap_read_tt__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo*) serialize to a sink
/// - tt__NetworkInterfaceInfo* soap_dup_tt__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo* dst, tt__NetworkInterfaceInfo *src) returns deep copy of tt__NetworkInterfaceInfo src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceInfo(tt__NetworkInterfaceInfo*) deep deletes tt__NetworkInterfaceInfo data members, use only on dst after soap_dup_tt__NetworkInterfaceInfo(NULL, tt__NetworkInterfaceInfo *dst, tt__NetworkInterfaceInfo *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceInfo
{
/// <PRE><BLOCKQUOTE>
///   Network interface name, for example eth0.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:string.
    char*                                Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Network interface MAC address.
/// </BLOCKQUOTE></PRE>
///
/// Element "HwAddress" of type "http://www.onvif.org/ver10/schema":HwAddress.
    tt__HwAddress                        HwAddress                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "MTU" of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is a complexType.
///
/// @note struct tt__IPv6NetworkInterface operations:
/// - tt__IPv6NetworkInterface* soap_new_tt__IPv6NetworkInterface(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface*) default initialize members
/// - int soap_read_tt__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface*) deserialize from a source
/// - int soap_write_tt__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface*) serialize to a sink
/// - tt__IPv6NetworkInterface* soap_dup_tt__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface* dst, tt__IPv6NetworkInterface *src) returns deep copy of tt__IPv6NetworkInterface src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv6NetworkInterface(tt__IPv6NetworkInterface*) deep deletes tt__IPv6NetworkInterface data members, use only on dst after soap_dup_tt__IPv6NetworkInterface(NULL, tt__IPv6NetworkInterface *dst, tt__IPv6NetworkInterface *src) (use soapcpp2 -Ed)
struct tt__IPv6NetworkInterface
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv6 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Config" of type "http://www.onvif.org/ver10/schema":IPv6Configuration.
    struct tt__IPv6Configuration*        Config                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is a complexType.
///
/// @note struct tt__IPv4NetworkInterface operations:
/// - tt__IPv4NetworkInterface* soap_new_tt__IPv4NetworkInterface(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface*) default initialize members
/// - int soap_read_tt__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface*) deserialize from a source
/// - int soap_write_tt__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface*) serialize to a sink
/// - tt__IPv4NetworkInterface* soap_dup_tt__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface* dst, tt__IPv4NetworkInterface *src) returns deep copy of tt__IPv4NetworkInterface src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv4NetworkInterface(tt__IPv4NetworkInterface*) deep deletes tt__IPv4NetworkInterface data members, use only on dst after soap_dup_tt__IPv4NetworkInterface(NULL, tt__IPv4NetworkInterface *dst, tt__IPv4NetworkInterface *src) (use soapcpp2 -Ed)
struct tt__IPv4NetworkInterface
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Config" of type "http://www.onvif.org/ver10/schema":IPv4Configuration.
    struct tt__IPv4Configuration*        Config                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Configuration is a complexType.
///
/// @note struct tt__IPv4Configuration operations:
/// - tt__IPv4Configuration* soap_new_tt__IPv4Configuration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPv4Configuration(struct soap*, tt__IPv4Configuration*) default initialize members
/// - int soap_read_tt__IPv4Configuration(struct soap*, tt__IPv4Configuration*) deserialize from a source
/// - int soap_write_tt__IPv4Configuration(struct soap*, tt__IPv4Configuration*) serialize to a sink
/// - tt__IPv4Configuration* soap_dup_tt__IPv4Configuration(struct soap*, tt__IPv4Configuration* dst, tt__IPv4Configuration *src) returns deep copy of tt__IPv4Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv4Configuration(tt__IPv4Configuration*) deep deletes tt__IPv4Configuration data members, use only on dst after soap_dup_tt__IPv4Configuration(NULL, tt__IPv4Configuration *dst, tt__IPv4Configuration *src) (use soapcpp2 -Ed)
struct tt__IPv4Configuration
{
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
  $ int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Link local address.
/// </BLOCKQUOTE></PRE>
///
/// Element "LinkLocal" of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    struct tt__PrefixedIPv4Address*      LinkLocal                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address configured by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    struct tt__PrefixedIPv4Address*      FromDHCP                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type xs:boolean.
    enum xsd__boolean                    DHCP                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6Configuration is a complexType.
///
/// @note struct tt__IPv6Configuration operations:
/// - tt__IPv6Configuration* soap_new_tt__IPv6Configuration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPv6Configuration(struct soap*, tt__IPv6Configuration*) default initialize members
/// - int soap_read_tt__IPv6Configuration(struct soap*, tt__IPv6Configuration*) deserialize from a source
/// - int soap_write_tt__IPv6Configuration(struct soap*, tt__IPv6Configuration*) serialize to a sink
/// - tt__IPv6Configuration* soap_dup_tt__IPv6Configuration(struct soap*, tt__IPv6Configuration* dst, tt__IPv6Configuration *src) returns deep copy of tt__IPv6Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv6Configuration(tt__IPv6Configuration*) deep deletes tt__IPv6Configuration data members, use only on dst after soap_dup_tt__IPv6Configuration(NULL, tt__IPv6Configuration *dst, tt__IPv6Configuration *src) (use soapcpp2 -Ed)
struct tt__IPv6Configuration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "AcceptRouterAdvert" of type xs:boolean.
    enum xsd__boolean*                   AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration       DHCP                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of manually entered IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of link local IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeLinkLocal                0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      LinkLocal                      0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeFromDHCP                 0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      FromDHCP                       0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using router advertisment.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeFromRA                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      FromRA                         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension.
    struct tt__IPv6ConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is a complexType.
///
/// @note struct tt__IPv6ConfigurationExtension operations:
/// - tt__IPv6ConfigurationExtension* soap_new_tt__IPv6ConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension*) default initialize members
/// - int soap_read_tt__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension*) serialize to a sink
/// - tt__IPv6ConfigurationExtension* soap_dup_tt__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension* dst, tt__IPv6ConfigurationExtension *src) returns deep copy of tt__IPv6ConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv6ConfigurationExtension(tt__IPv6ConfigurationExtension*) deep deletes tt__IPv6ConfigurationExtension data members, use only on dst after soap_dup_tt__IPv6ConfigurationExtension(NULL, tt__IPv6ConfigurationExtension *dst, tt__IPv6ConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__IPv6ConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocol is a complexType.
///
/// @note struct tt__NetworkProtocol operations:
/// - tt__NetworkProtocol* soap_new_tt__NetworkProtocol(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkProtocol(struct soap*, tt__NetworkProtocol*) default initialize members
/// - int soap_read_tt__NetworkProtocol(struct soap*, tt__NetworkProtocol*) deserialize from a source
/// - int soap_write_tt__NetworkProtocol(struct soap*, tt__NetworkProtocol*) serialize to a sink
/// - tt__NetworkProtocol* soap_dup_tt__NetworkProtocol(struct soap*, tt__NetworkProtocol* dst, tt__NetworkProtocol *src) returns deep copy of tt__NetworkProtocol src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkProtocol(tt__NetworkProtocol*) deep deletes tt__NetworkProtocol data members, use only on dst after soap_dup_tt__NetworkProtocol(NULL, tt__NetworkProtocol *dst, tt__NetworkProtocol *src) (use soapcpp2 -Ed)
struct tt__NetworkProtocol
{
/// <PRE><BLOCKQUOTE>
///   Network protocol type string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":NetworkProtocolType.
    enum tt__NetworkProtocolType         Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the protocol is enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The port that is used by the protocol.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of int* is 1..unbounded.
  $ int                                  __sizePort                     1;
/// Array int* of size 1..unbounded.
    int*                                 Port                           1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkProtocolExtension.
    struct tt__NetworkProtocolExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is a complexType.
///
/// @note struct tt__NetworkProtocolExtension operations:
/// - tt__NetworkProtocolExtension* soap_new_tt__NetworkProtocolExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension*) default initialize members
/// - int soap_read_tt__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension*) deserialize from a source
/// - int soap_write_tt__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension*) serialize to a sink
/// - tt__NetworkProtocolExtension* soap_dup_tt__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension* dst, tt__NetworkProtocolExtension *src) returns deep copy of tt__NetworkProtocolExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkProtocolExtension(tt__NetworkProtocolExtension*) deep deletes tt__NetworkProtocolExtension data members, use only on dst after soap_dup_tt__NetworkProtocolExtension(NULL, tt__NetworkProtocolExtension *dst, tt__NetworkProtocolExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkProtocolExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHost is a complexType.
///
/// @note struct tt__NetworkHost operations:
/// - tt__NetworkHost* soap_new_tt__NetworkHost(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkHost(struct soap*, tt__NetworkHost*) default initialize members
/// - int soap_read_tt__NetworkHost(struct soap*, tt__NetworkHost*) deserialize from a source
/// - int soap_write_tt__NetworkHost(struct soap*, tt__NetworkHost*) serialize to a sink
/// - tt__NetworkHost* soap_dup_tt__NetworkHost(struct soap*, tt__NetworkHost* dst, tt__NetworkHost *src) returns deep copy of tt__NetworkHost src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkHost(tt__NetworkHost*) deep deletes tt__NetworkHost data members, use only on dst after soap_dup_tt__NetworkHost(NULL, tt__NetworkHost *dst, tt__NetworkHost *src) (use soapcpp2 -Ed)
struct tt__NetworkHost
{
/// <PRE><BLOCKQUOTE>
///   Network host type: IPv4, IPv6 or DNS.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":NetworkHostType.
    enum tt__NetworkHostType             Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      IPv6Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "DNSname" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          DNSname                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkHostExtension.
    struct tt__NetworkHostExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostExtension is a complexType.
///
/// @note struct tt__NetworkHostExtension operations:
/// - tt__NetworkHostExtension* soap_new_tt__NetworkHostExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkHostExtension(struct soap*, tt__NetworkHostExtension*) default initialize members
/// - int soap_read_tt__NetworkHostExtension(struct soap*, tt__NetworkHostExtension*) deserialize from a source
/// - int soap_write_tt__NetworkHostExtension(struct soap*, tt__NetworkHostExtension*) serialize to a sink
/// - tt__NetworkHostExtension* soap_dup_tt__NetworkHostExtension(struct soap*, tt__NetworkHostExtension* dst, tt__NetworkHostExtension *src) returns deep copy of tt__NetworkHostExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkHostExtension(tt__NetworkHostExtension*) deep deletes tt__NetworkHostExtension data members, use only on dst after soap_dup_tt__NetworkHostExtension(NULL, tt__NetworkHostExtension *dst, tt__NetworkHostExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkHostExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
///
/// @note struct tt__IPAddress operations:
/// - tt__IPAddress* soap_new_tt__IPAddress(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPAddress(struct soap*, tt__IPAddress*) default initialize members
/// - int soap_read_tt__IPAddress(struct soap*, tt__IPAddress*) deserialize from a source
/// - int soap_write_tt__IPAddress(struct soap*, tt__IPAddress*) serialize to a sink
/// - tt__IPAddress* soap_dup_tt__IPAddress(struct soap*, tt__IPAddress* dst, tt__IPAddress *src) returns deep copy of tt__IPAddress src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPAddress(tt__IPAddress*) deep deletes tt__IPAddress data members, use only on dst after soap_dup_tt__IPAddress(NULL, tt__IPAddress *dst, tt__IPAddress *src) (use soapcpp2 -Ed)
struct tt__IPAddress
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the address is an IPv4 or IPv6 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":IPType.
    enum tt__IPType                      Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      IPv6Address                    0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is a complexType.
///
/// @note struct tt__PrefixedIPv4Address operations:
/// - tt__PrefixedIPv4Address* soap_new_tt__PrefixedIPv4Address(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address*) default initialize members
/// - int soap_read_tt__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address*) deserialize from a source
/// - int soap_write_tt__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address*) serialize to a sink
/// - tt__PrefixedIPv4Address* soap_dup_tt__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address* dst, tt__PrefixedIPv4Address *src) returns deep copy of tt__PrefixedIPv4Address src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PrefixedIPv4Address(tt__PrefixedIPv4Address*) deep deletes tt__PrefixedIPv4Address data members, use only on dst after soap_dup_tt__PrefixedIPv4Address(NULL, tt__PrefixedIPv4Address *dst, tt__PrefixedIPv4Address *src) (use soapcpp2 -Ed)
struct tt__PrefixedIPv4Address
{
/// <PRE><BLOCKQUOTE>
///   IPv4 address
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
///
/// Element "PrefixLength" of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is a complexType.
///
/// @note struct tt__PrefixedIPv6Address operations:
/// - tt__PrefixedIPv6Address* soap_new_tt__PrefixedIPv6Address(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address*) default initialize members
/// - int soap_read_tt__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address*) deserialize from a source
/// - int soap_write_tt__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address*) serialize to a sink
/// - tt__PrefixedIPv6Address* soap_dup_tt__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address* dst, tt__PrefixedIPv6Address *src) returns deep copy of tt__PrefixedIPv6Address src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PrefixedIPv6Address(tt__PrefixedIPv6Address*) deep deletes tt__PrefixedIPv6Address data members, use only on dst after soap_dup_tt__PrefixedIPv6Address(NULL, tt__PrefixedIPv6Address *dst, tt__PrefixedIPv6Address *src) (use soapcpp2 -Ed)
struct tt__PrefixedIPv6Address
{
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
///
/// Element "PrefixLength" of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformation is a complexType.
///
/// @note struct tt__HostnameInformation operations:
/// - tt__HostnameInformation* soap_new_tt__HostnameInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__HostnameInformation(struct soap*, tt__HostnameInformation*) default initialize members
/// - int soap_read_tt__HostnameInformation(struct soap*, tt__HostnameInformation*) deserialize from a source
/// - int soap_write_tt__HostnameInformation(struct soap*, tt__HostnameInformation*) serialize to a sink
/// - tt__HostnameInformation* soap_dup_tt__HostnameInformation(struct soap*, tt__HostnameInformation* dst, tt__HostnameInformation *src) returns deep copy of tt__HostnameInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__HostnameInformation(tt__HostnameInformation*) deep deletes tt__HostnameInformation data members, use only on dst after soap_dup_tt__HostnameInformation(NULL, tt__HostnameInformation *dst, tt__HostnameInformation *src) (use soapcpp2 -Ed)
struct tt__HostnameInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether the hostname is obtained from DHCP or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the hostname.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:token.
    xsd__token                           Name                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":HostnameInformationExtension.
    struct tt__HostnameInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformationExtension is a complexType.
///
/// @note struct tt__HostnameInformationExtension operations:
/// - tt__HostnameInformationExtension* soap_new_tt__HostnameInformationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension*) default initialize members
/// - int soap_read_tt__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension*) deserialize from a source
/// - int soap_write_tt__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension*) serialize to a sink
/// - tt__HostnameInformationExtension* soap_dup_tt__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension* dst, tt__HostnameInformationExtension *src) returns deep copy of tt__HostnameInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__HostnameInformationExtension(tt__HostnameInformationExtension*) deep deletes tt__HostnameInformationExtension data members, use only on dst after soap_dup_tt__HostnameInformationExtension(NULL, tt__HostnameInformationExtension *dst, tt__HostnameInformationExtension *src) (use soapcpp2 -Ed)
struct tt__HostnameInformationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformation is a complexType.
///
/// @note struct tt__DNSInformation operations:
/// - tt__DNSInformation* soap_new_tt__DNSInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DNSInformation(struct soap*, tt__DNSInformation*) default initialize members
/// - int soap_read_tt__DNSInformation(struct soap*, tt__DNSInformation*) deserialize from a source
/// - int soap_write_tt__DNSInformation(struct soap*, tt__DNSInformation*) serialize to a sink
/// - tt__DNSInformation* soap_dup_tt__DNSInformation(struct soap*, tt__DNSInformation* dst, tt__DNSInformation *src) returns deep copy of tt__DNSInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DNSInformation(tt__DNSInformation*) deep deletes tt__DNSInformation data members, use only on dst after soap_dup_tt__DNSInformation(NULL, tt__DNSInformation *dst, tt__DNSInformation *src) (use soapcpp2 -Ed)
struct tt__DNSInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DNS information is retrieved from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Search domain.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__token* is 0..unbounded.
  $ int                                  __sizeSearchDomain             0;
/// Array xsd__token* of size 0..unbounded.
    xsd__token*                          SearchDomain                   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of DNS addresses received from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__IPAddress* is 0..unbounded.
  $ int                                  __sizeDNSFromDHCP              0;
/// Array struct tt__IPAddress* of size 0..unbounded.
    struct tt__IPAddress*                DNSFromDHCP                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of manually entered DNS addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__IPAddress* is 0..unbounded.
  $ int                                  __sizeDNSManual                0;
/// Array struct tt__IPAddress* of size 0..unbounded.
    struct tt__IPAddress*                DNSManual                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DNSInformationExtension.
    struct tt__DNSInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformationExtension is a complexType.
///
/// @note struct tt__DNSInformationExtension operations:
/// - tt__DNSInformationExtension* soap_new_tt__DNSInformationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DNSInformationExtension(struct soap*, tt__DNSInformationExtension*) default initialize members
/// - int soap_read_tt__DNSInformationExtension(struct soap*, tt__DNSInformationExtension*) deserialize from a source
/// - int soap_write_tt__DNSInformationExtension(struct soap*, tt__DNSInformationExtension*) serialize to a sink
/// - tt__DNSInformationExtension* soap_dup_tt__DNSInformationExtension(struct soap*, tt__DNSInformationExtension* dst, tt__DNSInformationExtension *src) returns deep copy of tt__DNSInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DNSInformationExtension(tt__DNSInformationExtension*) deep deletes tt__DNSInformationExtension data members, use only on dst after soap_dup_tt__DNSInformationExtension(NULL, tt__DNSInformationExtension *dst, tt__DNSInformationExtension *src) (use soapcpp2 -Ed)
struct tt__DNSInformationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformation is a complexType.
///
/// @note struct tt__NTPInformation operations:
/// - tt__NTPInformation* soap_new_tt__NTPInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NTPInformation(struct soap*, tt__NTPInformation*) default initialize members
/// - int soap_read_tt__NTPInformation(struct soap*, tt__NTPInformation*) deserialize from a source
/// - int soap_write_tt__NTPInformation(struct soap*, tt__NTPInformation*) serialize to a sink
/// - tt__NTPInformation* soap_dup_tt__NTPInformation(struct soap*, tt__NTPInformation* dst, tt__NTPInformation *src) returns deep copy of tt__NTPInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NTPInformation(tt__NTPInformation*) deep deletes tt__NTPInformation data members, use only on dst after soap_dup_tt__NTPInformation(NULL, tt__NTPInformation *dst, tt__NTPInformation *src) (use soapcpp2 -Ed)
struct tt__NTPInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates if NTP information is to be retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of NTP addresses retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeNTPFromDHCP              0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              NTPFromDHCP                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of manually entered NTP addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeNTPManual                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              NTPManual                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NTPInformationExtension.
    struct tt__NTPInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformationExtension is a complexType.
///
/// @note struct tt__NTPInformationExtension operations:
/// - tt__NTPInformationExtension* soap_new_tt__NTPInformationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NTPInformationExtension(struct soap*, tt__NTPInformationExtension*) default initialize members
/// - int soap_read_tt__NTPInformationExtension(struct soap*, tt__NTPInformationExtension*) deserialize from a source
/// - int soap_write_tt__NTPInformationExtension(struct soap*, tt__NTPInformationExtension*) serialize to a sink
/// - tt__NTPInformationExtension* soap_dup_tt__NTPInformationExtension(struct soap*, tt__NTPInformationExtension* dst, tt__NTPInformationExtension *src) returns deep copy of tt__NTPInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NTPInformationExtension(tt__NTPInformationExtension*) deep deletes tt__NTPInformationExtension data members, use only on dst after soap_dup_tt__NTPInformationExtension(NULL, tt__NTPInformationExtension *dst, tt__NTPInformationExtension *src) (use soapcpp2 -Ed)
struct tt__NTPInformationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformation is a complexType.
///
/// @note struct tt__DynamicDNSInformation operations:
/// - tt__DynamicDNSInformation* soap_new_tt__DynamicDNSInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation*) default initialize members
/// - int soap_read_tt__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation*) deserialize from a source
/// - int soap_write_tt__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation*) serialize to a sink
/// - tt__DynamicDNSInformation* soap_dup_tt__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation* dst, tt__DynamicDNSInformation *src) returns deep copy of tt__DynamicDNSInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DynamicDNSInformation(tt__DynamicDNSInformation*) deep deletes tt__DynamicDNSInformation data members, use only on dst after soap_dup_tt__DynamicDNSInformation(NULL, tt__DynamicDNSInformation *dst, tt__DynamicDNSInformation *src) (use soapcpp2 -Ed)
struct tt__DynamicDNSInformation
{
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Time to live.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:duration.
    xsd__duration                        TTL                            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension.
    struct tt__DynamicDNSInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is a complexType.
///
/// @note struct tt__DynamicDNSInformationExtension operations:
/// - tt__DynamicDNSInformationExtension* soap_new_tt__DynamicDNSInformationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension*) default initialize members
/// - int soap_read_tt__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension*) deserialize from a source
/// - int soap_write_tt__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension*) serialize to a sink
/// - tt__DynamicDNSInformationExtension* soap_dup_tt__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension* dst, tt__DynamicDNSInformationExtension *src) returns deep copy of tt__DynamicDNSInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DynamicDNSInformationExtension(tt__DynamicDNSInformationExtension*) deep deletes tt__DynamicDNSInformationExtension data members, use only on dst after soap_dup_tt__DynamicDNSInformationExtension(NULL, tt__DynamicDNSInformationExtension *dst, tt__DynamicDNSInformationExtension *src) (use soapcpp2 -Ed)
struct tt__DynamicDNSInformationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is a complexType.
///
/// @note struct tt__NetworkInterfaceSetConfiguration operations:
/// - tt__NetworkInterfaceSetConfiguration* soap_new_tt__NetworkInterfaceSetConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration*) default initialize members
/// - int soap_read_tt__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration*) serialize to a sink
/// - tt__NetworkInterfaceSetConfiguration* soap_dup_tt__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration* dst, tt__NetworkInterfaceSetConfiguration *src) returns deep copy of tt__NetworkInterfaceSetConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceSetConfiguration(tt__NetworkInterfaceSetConfiguration*) deep deletes tt__NetworkInterfaceSetConfiguration data members, use only on dst after soap_dup_tt__NetworkInterfaceSetConfiguration(NULL, tt__NetworkInterfaceSetConfiguration *dst, tt__NetworkInterfaceSetConfiguration *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Link" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "MTU" of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4" of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration.
    struct tt__IPv4NetworkInterfaceSetConfiguration*  IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6" of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration.
    struct tt__IPv6NetworkInterfaceSetConfiguration*  IPv6                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension.
    struct tt__NetworkInterfaceSetConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is a complexType.
///
/// @note struct tt__NetworkInterfaceSetConfigurationExtension operations:
/// - tt__NetworkInterfaceSetConfigurationExtension* soap_new_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension*) default initialize members
/// - int soap_read_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension*) serialize to a sink
/// - tt__NetworkInterfaceSetConfigurationExtension* soap_dup_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension* dst, tt__NetworkInterfaceSetConfigurationExtension *src) returns deep copy of tt__NetworkInterfaceSetConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceSetConfigurationExtension(tt__NetworkInterfaceSetConfigurationExtension*) deep deletes tt__NetworkInterfaceSetConfigurationExtension data members, use only on dst after soap_dup_tt__NetworkInterfaceSetConfigurationExtension(NULL, tt__NetworkInterfaceSetConfigurationExtension *dst, tt__NetworkInterfaceSetConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceSetConfigurationExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of array of struct tt__Dot3Configuration* is 0..unbounded.
  $ int                                  __sizeDot3                     0;
/// Array struct tt__Dot3Configuration* of size 0..unbounded.
    struct tt__Dot3Configuration*        Dot3                           0;	///< Multiple elements.
/// Size of array of struct tt__Dot11Configuration* is 0..unbounded.
  $ int                                  __sizeDot11                    0;
/// Array struct tt__Dot11Configuration* of size 0..unbounded.
    struct tt__Dot11Configuration*       Dot11                          0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2.
    struct tt__NetworkInterfaceSetConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is a complexType.
///
/// @note struct tt__IPv6NetworkInterfaceSetConfiguration operations:
/// - tt__IPv6NetworkInterfaceSetConfiguration* soap_new_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration*) default initialize members
/// - int soap_read_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration*) deserialize from a source
/// - int soap_write_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration*) serialize to a sink
/// - tt__IPv6NetworkInterfaceSetConfiguration* soap_dup_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration* dst, tt__IPv6NetworkInterfaceSetConfiguration *src) returns deep copy of tt__IPv6NetworkInterfaceSetConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv6NetworkInterfaceSetConfiguration(tt__IPv6NetworkInterfaceSetConfiguration*) deep deletes tt__IPv6NetworkInterfaceSetConfiguration data members, use only on dst after soap_dup_tt__IPv6NetworkInterfaceSetConfiguration(NULL, tt__IPv6NetworkInterfaceSetConfiguration *dst, tt__IPv6NetworkInterfaceSetConfiguration *src) (use soapcpp2 -Ed)
struct tt__IPv6NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "AcceptRouterAdvert" of type xs:boolean.
    enum xsd__boolean*                   AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration*      DHCP                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is a complexType.
///
/// @note struct tt__IPv4NetworkInterfaceSetConfiguration operations:
/// - tt__IPv4NetworkInterfaceSetConfiguration* soap_new_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration*) default initialize members
/// - int soap_read_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration*) deserialize from a source
/// - int soap_write_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration*) serialize to a sink
/// - tt__IPv4NetworkInterfaceSetConfiguration* soap_dup_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration* dst, tt__IPv4NetworkInterfaceSetConfiguration *src) returns deep copy of tt__IPv4NetworkInterfaceSetConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv4NetworkInterfaceSetConfiguration(tt__IPv4NetworkInterfaceSetConfiguration*) deep deletes tt__IPv4NetworkInterfaceSetConfiguration data members, use only on dst after soap_dup_tt__IPv4NetworkInterfaceSetConfiguration(NULL, tt__IPv4NetworkInterfaceSetConfiguration *dst, tt__IPv4NetworkInterfaceSetConfiguration *src) (use soapcpp2 -Ed)
struct tt__IPv4NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
  $ int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type xs:boolean.
    enum xsd__boolean*                   DHCP                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkGateway is a complexType.
///
/// @note struct tt__NetworkGateway operations:
/// - tt__NetworkGateway* soap_new_tt__NetworkGateway(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkGateway(struct soap*, tt__NetworkGateway*) default initialize members
/// - int soap_read_tt__NetworkGateway(struct soap*, tt__NetworkGateway*) deserialize from a source
/// - int soap_write_tt__NetworkGateway(struct soap*, tt__NetworkGateway*) serialize to a sink
/// - tt__NetworkGateway* soap_dup_tt__NetworkGateway(struct soap*, tt__NetworkGateway* dst, tt__NetworkGateway *src) returns deep copy of tt__NetworkGateway src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkGateway(tt__NetworkGateway*) deep deletes tt__NetworkGateway data members, use only on dst after soap_dup_tt__NetworkGateway(NULL, tt__NetworkGateway *dst, tt__NetworkGateway *src) (use soapcpp2 -Ed)
struct tt__NetworkGateway
{
/// <PRE><BLOCKQUOTE>
///   IPv4 address string.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv4Address* is 0..unbounded.
  $ int                                  __sizeIPv4Address              0;
/// Array tt__IPv4Address* of size 0..unbounded.
    tt__IPv4Address*                     IPv4Address                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   IPv6 address string.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv6Address* is 0..unbounded.
  $ int                                  __sizeIPv6Address              0;
/// Array tt__IPv6Address* of size 0..unbounded.
    tt__IPv6Address*                     IPv6Address                    0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is a complexType.
///
/// @note struct tt__NetworkZeroConfiguration operations:
/// - tt__NetworkZeroConfiguration* soap_new_tt__NetworkZeroConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration*) default initialize members
/// - int soap_read_tt__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration*) deserialize from a source
/// - int soap_write_tt__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration*) serialize to a sink
/// - tt__NetworkZeroConfiguration* soap_dup_tt__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration* dst, tt__NetworkZeroConfiguration *src) returns deep copy of tt__NetworkZeroConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkZeroConfiguration(tt__NetworkZeroConfiguration*) deep deletes tt__NetworkZeroConfiguration data members, use only on dst after soap_dup_tt__NetworkZeroConfiguration(NULL, tt__NetworkZeroConfiguration *dst, tt__NetworkZeroConfiguration *src) (use soapcpp2 -Ed)
struct tt__NetworkZeroConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier of network interface.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the zero-configuration is enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The zero-configuration IPv4 address(es)
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv4Address* is 0..unbounded.
  $ int                                  __sizeAddresses                0;
/// Array tt__IPv4Address* of size 0..unbounded.
    tt__IPv4Address*                     Addresses                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension.
    struct tt__NetworkZeroConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is a complexType.
///
/// @note struct tt__NetworkZeroConfigurationExtension operations:
/// - tt__NetworkZeroConfigurationExtension* soap_new_tt__NetworkZeroConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension*) default initialize members
/// - int soap_read_tt__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension*) serialize to a sink
/// - tt__NetworkZeroConfigurationExtension* soap_dup_tt__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension* dst, tt__NetworkZeroConfigurationExtension *src) returns deep copy of tt__NetworkZeroConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkZeroConfigurationExtension(tt__NetworkZeroConfigurationExtension*) deep deletes tt__NetworkZeroConfigurationExtension data members, use only on dst after soap_dup_tt__NetworkZeroConfigurationExtension(NULL, tt__NetworkZeroConfigurationExtension *dst, tt__NetworkZeroConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkZeroConfigurationExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional array holding the configuration for the second and possibly further interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__NetworkZeroConfiguration* is 0..unbounded.
  $ int                                  __sizeAdditional               0;
/// Array struct tt__NetworkZeroConfiguration* of size 0..unbounded.
    struct tt__NetworkZeroConfiguration*  Additional                     0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2.
    struct tt__NetworkZeroConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2 is a complexType.
///
/// @note struct tt__NetworkZeroConfigurationExtension2 operations:
/// - tt__NetworkZeroConfigurationExtension2* soap_new_tt__NetworkZeroConfigurationExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2*) default initialize members
/// - int soap_read_tt__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2*) deserialize from a source
/// - int soap_write_tt__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2*) serialize to a sink
/// - tt__NetworkZeroConfigurationExtension2* soap_dup_tt__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2* dst, tt__NetworkZeroConfigurationExtension2 *src) returns deep copy of tt__NetworkZeroConfigurationExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkZeroConfigurationExtension2(tt__NetworkZeroConfigurationExtension2*) deep deletes tt__NetworkZeroConfigurationExtension2 data members, use only on dst after soap_dup_tt__NetworkZeroConfigurationExtension2(NULL, tt__NetworkZeroConfigurationExtension2 *dst, tt__NetworkZeroConfigurationExtension2 *src) (use soapcpp2 -Ed)
struct tt__NetworkZeroConfigurationExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilter is a complexType.
///
/// @note struct tt__IPAddressFilter operations:
/// - tt__IPAddressFilter* soap_new_tt__IPAddressFilter(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPAddressFilter(struct soap*, tt__IPAddressFilter*) default initialize members
/// - int soap_read_tt__IPAddressFilter(struct soap*, tt__IPAddressFilter*) deserialize from a source
/// - int soap_write_tt__IPAddressFilter(struct soap*, tt__IPAddressFilter*) serialize to a sink
/// - tt__IPAddressFilter* soap_dup_tt__IPAddressFilter(struct soap*, tt__IPAddressFilter* dst, tt__IPAddressFilter *src) returns deep copy of tt__IPAddressFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPAddressFilter(tt__IPAddressFilter*) deep deletes tt__IPAddressFilter data members, use only on dst after soap_dup_tt__IPAddressFilter(NULL, tt__IPAddressFilter *dst, tt__IPAddressFilter *src) (use soapcpp2 -Ed)
struct tt__IPAddressFilter
{
/// Element "Type" of type "http://www.onvif.org/ver10/schema":IPAddressFilterType.
    enum tt__IPAddressFilterType         Type                           1;	///< Required element.
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
  $ int                                  __sizeIPv4Address              0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      IPv4Address                    0;	///< Multiple elements.
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeIPv6Address              0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      IPv6Address                    0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IPAddressFilterExtension.
    struct tt__IPAddressFilterExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is a complexType.
///
/// @note struct tt__IPAddressFilterExtension operations:
/// - tt__IPAddressFilterExtension* soap_new_tt__IPAddressFilterExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension*) default initialize members
/// - int soap_read_tt__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension*) deserialize from a source
/// - int soap_write_tt__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension*) serialize to a sink
/// - tt__IPAddressFilterExtension* soap_dup_tt__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension* dst, tt__IPAddressFilterExtension *src) returns deep copy of tt__IPAddressFilterExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPAddressFilterExtension(tt__IPAddressFilterExtension*) deep deletes tt__IPAddressFilterExtension data members, use only on dst after soap_dup_tt__IPAddressFilterExtension(NULL, tt__IPAddressFilterExtension *dst, tt__IPAddressFilterExtension *src) (use soapcpp2 -Ed)
struct tt__IPAddressFilterExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Configuration is a complexType.
///
/// @note struct tt__Dot11Configuration operations:
/// - tt__Dot11Configuration* soap_new_tt__Dot11Configuration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11Configuration(struct soap*, tt__Dot11Configuration*) default initialize members
/// - int soap_read_tt__Dot11Configuration(struct soap*, tt__Dot11Configuration*) deserialize from a source
/// - int soap_write_tt__Dot11Configuration(struct soap*, tt__Dot11Configuration*) serialize to a sink
/// - tt__Dot11Configuration* soap_dup_tt__Dot11Configuration(struct soap*, tt__Dot11Configuration* dst, tt__Dot11Configuration *src) returns deep copy of tt__Dot11Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11Configuration(tt__Dot11Configuration*) deep deletes tt__Dot11Configuration data members, use only on dst after soap_dup_tt__Dot11Configuration(NULL, tt__Dot11Configuration *dst, tt__Dot11Configuration *src) (use soapcpp2 -Ed)
struct tt__Dot11Configuration
{
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":Dot11StationMode.
    enum tt__Dot11StationMode            Mode                           1;	///< Required element.
/// Element "Alias" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Alias                          1;	///< Required element.
/// Element "Priority" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority.
    tt__NetworkInterfaceConfigPriority   Priority                       1;	///< Required element.
/// Element "Security" of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration.
    struct tt__Dot11SecurityConfiguration*  Security                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration is a complexType.
///
/// @note struct tt__Dot11SecurityConfiguration operations:
/// - tt__Dot11SecurityConfiguration* soap_new_tt__Dot11SecurityConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration*) default initialize members
/// - int soap_read_tt__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration*) deserialize from a source
/// - int soap_write_tt__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration*) serialize to a sink
/// - tt__Dot11SecurityConfiguration* soap_dup_tt__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration* dst, tt__Dot11SecurityConfiguration *src) returns deep copy of tt__Dot11SecurityConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11SecurityConfiguration(tt__Dot11SecurityConfiguration*) deep deletes tt__Dot11SecurityConfiguration data members, use only on dst after soap_dup_tt__Dot11SecurityConfiguration(NULL, tt__Dot11SecurityConfiguration *dst, tt__Dot11SecurityConfiguration *src) (use soapcpp2 -Ed)
struct tt__Dot11SecurityConfiguration
{
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":Dot11SecurityMode.
    enum tt__Dot11SecurityMode           Mode                           1;	///< Required element.
/// Element "Algorithm" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                Algorithm                      0;	///< Optional element.
/// Element "PSK" of type "http://www.onvif.org/ver10/schema":Dot11PSKSet.
    struct tt__Dot11PSKSet*              PSK                            0;	///< Optional element.
/// Element "Dot1X" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1X                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension.
    struct tt__Dot11SecurityConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension is a complexType.
///
/// @note struct tt__Dot11SecurityConfigurationExtension operations:
/// - tt__Dot11SecurityConfigurationExtension* soap_new_tt__Dot11SecurityConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension*) default initialize members
/// - int soap_read_tt__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension*) serialize to a sink
/// - tt__Dot11SecurityConfigurationExtension* soap_dup_tt__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension* dst, tt__Dot11SecurityConfigurationExtension *src) returns deep copy of tt__Dot11SecurityConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11SecurityConfigurationExtension(tt__Dot11SecurityConfigurationExtension*) deep deletes tt__Dot11SecurityConfigurationExtension data members, use only on dst after soap_dup_tt__Dot11SecurityConfigurationExtension(NULL, tt__Dot11SecurityConfigurationExtension *dst, tt__Dot11SecurityConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__Dot11SecurityConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSet is a complexType.
///
/// @note struct tt__Dot11PSKSet operations:
/// - tt__Dot11PSKSet* soap_new_tt__Dot11PSKSet(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11PSKSet(struct soap*, tt__Dot11PSKSet*) default initialize members
/// - int soap_read_tt__Dot11PSKSet(struct soap*, tt__Dot11PSKSet*) deserialize from a source
/// - int soap_write_tt__Dot11PSKSet(struct soap*, tt__Dot11PSKSet*) serialize to a sink
/// - tt__Dot11PSKSet* soap_dup_tt__Dot11PSKSet(struct soap*, tt__Dot11PSKSet* dst, tt__Dot11PSKSet *src) returns deep copy of tt__Dot11PSKSet src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11PSKSet(tt__Dot11PSKSet*) deep deletes tt__Dot11PSKSet data members, use only on dst after soap_dup_tt__Dot11PSKSet(NULL, tt__Dot11PSKSet *dst, tt__Dot11PSKSet *src) (use soapcpp2 -Ed)
struct tt__Dot11PSKSet
{
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of 256 bits, or 64 octets when represented in hex<br/>
///   Either Key or Passphrase shall be given, if both are supplied Key shall be used by the device and Passphrase ignored.
/// </BLOCKQUOTE></PRE>
///
/// Element "Key" of type "http://www.onvif.org/ver10/schema":Dot11PSK.
    tt__Dot11PSK                         Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence of between 8 and 63 ASCII-encoded characters and
///   each character in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive.<br/>
///   If only Passpharse is supplied the Key shall be derived using the algorithm described in IEEE802.11-2007 section H.4
/// </BLOCKQUOTE></PRE>
///
/// Element "Passphrase" of type "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase.
    tt__Dot11PSKPassphrase               Passphrase                     0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension.
    struct tt__Dot11PSKSetExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension is a complexType.
///
/// @note struct tt__Dot11PSKSetExtension operations:
/// - tt__Dot11PSKSetExtension* soap_new_tt__Dot11PSKSetExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension*) default initialize members
/// - int soap_read_tt__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension*) deserialize from a source
/// - int soap_write_tt__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension*) serialize to a sink
/// - tt__Dot11PSKSetExtension* soap_dup_tt__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension* dst, tt__Dot11PSKSetExtension *src) returns deep copy of tt__Dot11PSKSetExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11PSKSetExtension(tt__Dot11PSKSetExtension*) deep deletes tt__Dot11PSKSetExtension data members, use only on dst after soap_dup_tt__Dot11PSKSetExtension(NULL, tt__Dot11PSKSetExtension *dst, tt__Dot11PSKSetExtension *src) (use soapcpp2 -Ed)
struct tt__Dot11PSKSetExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2 is a complexType.
///
/// @note struct tt__NetworkInterfaceSetConfigurationExtension2 operations:
/// - tt__NetworkInterfaceSetConfigurationExtension2* soap_new_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2*) default initialize members
/// - int soap_read_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2*) serialize to a sink
/// - tt__NetworkInterfaceSetConfigurationExtension2* soap_dup_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2* dst, tt__NetworkInterfaceSetConfigurationExtension2 *src) returns deep copy of tt__NetworkInterfaceSetConfigurationExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceSetConfigurationExtension2(tt__NetworkInterfaceSetConfigurationExtension2*) deep deletes tt__NetworkInterfaceSetConfigurationExtension2 data members, use only on dst after soap_dup_tt__NetworkInterfaceSetConfigurationExtension2(NULL, tt__NetworkInterfaceSetConfigurationExtension2 *dst, tt__NetworkInterfaceSetConfigurationExtension2 *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceSetConfigurationExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Capabilities is a complexType.
///
/// @note struct tt__Dot11Capabilities operations:
/// - tt__Dot11Capabilities* soap_new_tt__Dot11Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11Capabilities(struct soap*, tt__Dot11Capabilities*) default initialize members
/// - int soap_read_tt__Dot11Capabilities(struct soap*, tt__Dot11Capabilities*) deserialize from a source
/// - int soap_write_tt__Dot11Capabilities(struct soap*, tt__Dot11Capabilities*) serialize to a sink
/// - tt__Dot11Capabilities* soap_dup_tt__Dot11Capabilities(struct soap*, tt__Dot11Capabilities* dst, tt__Dot11Capabilities *src) returns deep copy of tt__Dot11Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11Capabilities(tt__Dot11Capabilities*) deep deletes tt__Dot11Capabilities data members, use only on dst after soap_dup_tt__Dot11Capabilities(NULL, tt__Dot11Capabilities *dst, tt__Dot11Capabilities *src) (use soapcpp2 -Ed)
struct tt__Dot11Capabilities
{
/// Element "TKIP" of type xs:boolean.
    enum xsd__boolean                    TKIP                           1;	///< Required element.
/// Element "ScanAvailableNetworks" of type xs:boolean.
    enum xsd__boolean                    ScanAvailableNetworks          1;	///< Required element.
/// Element "MultipleConfiguration" of type xs:boolean.
    enum xsd__boolean                    MultipleConfiguration          1;	///< Required element.
/// Element "AdHocStationMode" of type xs:boolean.
    enum xsd__boolean                    AdHocStationMode               1;	///< Required element.
/// Element "WEP" of type xs:boolean.
    enum xsd__boolean                    WEP                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Status is a complexType.
///
/// @note struct tt__Dot11Status operations:
/// - tt__Dot11Status* soap_new_tt__Dot11Status(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11Status(struct soap*, tt__Dot11Status*) default initialize members
/// - int soap_read_tt__Dot11Status(struct soap*, tt__Dot11Status*) deserialize from a source
/// - int soap_write_tt__Dot11Status(struct soap*, tt__Dot11Status*) serialize to a sink
/// - tt__Dot11Status* soap_dup_tt__Dot11Status(struct soap*, tt__Dot11Status* dst, tt__Dot11Status *src) returns deep copy of tt__Dot11Status src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11Status(tt__Dot11Status*) deep deletes tt__Dot11Status data members, use only on dst after soap_dup_tt__Dot11Status(NULL, tt__Dot11Status *dst, tt__Dot11Status *src) (use soapcpp2 -Ed)
struct tt__Dot11Status
{
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of type xs:string.
    char*                                BSSID                          0;	///< Optional element.
/// Element "PairCipher" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                PairCipher                     0;	///< Optional element.
/// Element "GroupCipher" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                GroupCipher                    0;	///< Optional element.
/// Element "SignalStrength" of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "ActiveConfigAlias" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ActiveConfigAlias              1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworks is a complexType.
///
/// @note struct tt__Dot11AvailableNetworks operations:
/// - tt__Dot11AvailableNetworks* soap_new_tt__Dot11AvailableNetworks(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks*) default initialize members
/// - int soap_read_tt__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks*) deserialize from a source
/// - int soap_write_tt__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks*) serialize to a sink
/// - tt__Dot11AvailableNetworks* soap_dup_tt__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks* dst, tt__Dot11AvailableNetworks *src) returns deep copy of tt__Dot11AvailableNetworks src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11AvailableNetworks(tt__Dot11AvailableNetworks*) deep deletes tt__Dot11AvailableNetworks data members, use only on dst after soap_dup_tt__Dot11AvailableNetworks(NULL, tt__Dot11AvailableNetworks *dst, tt__Dot11AvailableNetworks *src) (use soapcpp2 -Ed)
struct tt__Dot11AvailableNetworks
{
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of type xs:string.
    char*                                BSSID                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   See IEEE802.11 7.3.2.25.2 for details.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__Dot11AuthAndMangementSuite* is 0..unbounded.
  $ int                                  __sizeAuthAndMangementSuite    0;
/// Array enum tt__Dot11AuthAndMangementSuite* of size 0..unbounded.
    enum tt__Dot11AuthAndMangementSuite*  AuthAndMangementSuite          0;	///< Multiple elements.
/// Size of array of enum tt__Dot11Cipher* is 0..unbounded.
  $ int                                  __sizePairCipher               0;
/// Array enum tt__Dot11Cipher* of size 0..unbounded.
    enum tt__Dot11Cipher*                PairCipher                     0;	///< Multiple elements.
/// Size of array of enum tt__Dot11Cipher* is 0..unbounded.
  $ int                                  __sizeGroupCipher              0;
/// Array enum tt__Dot11Cipher* of size 0..unbounded.
    enum tt__Dot11Cipher*                GroupCipher                    0;	///< Multiple elements.
/// Element "SignalStrength" of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension.
    struct tt__Dot11AvailableNetworksExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension is a complexType.
///
/// @note struct tt__Dot11AvailableNetworksExtension operations:
/// - tt__Dot11AvailableNetworksExtension* soap_new_tt__Dot11AvailableNetworksExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension*) default initialize members
/// - int soap_read_tt__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension*) deserialize from a source
/// - int soap_write_tt__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension*) serialize to a sink
/// - tt__Dot11AvailableNetworksExtension* soap_dup_tt__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension* dst, tt__Dot11AvailableNetworksExtension *src) returns deep copy of tt__Dot11AvailableNetworksExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11AvailableNetworksExtension(tt__Dot11AvailableNetworksExtension*) deep deletes tt__Dot11AvailableNetworksExtension data members, use only on dst after soap_dup_tt__Dot11AvailableNetworksExtension(NULL, tt__Dot11AvailableNetworksExtension *dst, tt__Dot11AvailableNetworksExtension *src) (use soapcpp2 -Ed)
struct tt__Dot11AvailableNetworksExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
///
/// @note struct tt__Capabilities operations:
/// - tt__Capabilities* soap_new_tt__Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Capabilities(struct soap*, tt__Capabilities*) default initialize members
/// - int soap_read_tt__Capabilities(struct soap*, tt__Capabilities*) deserialize from a source
/// - int soap_write_tt__Capabilities(struct soap*, tt__Capabilities*) serialize to a sink
/// - tt__Capabilities* soap_dup_tt__Capabilities(struct soap*, tt__Capabilities* dst, tt__Capabilities *src) returns deep copy of tt__Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Capabilities(tt__Capabilities*) deep deletes tt__Capabilities data members, use only on dst after soap_dup_tt__Capabilities(NULL, tt__Capabilities *dst, tt__Capabilities *src) (use soapcpp2 -Ed)
struct tt__Capabilities
{
/// <PRE><BLOCKQUOTE>
///   Analytics capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Analytics" of type "http://www.onvif.org/ver10/schema":AnalyticsCapabilities.
    struct tt__AnalyticsCapabilities*    Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Device capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Device" of type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    struct tt__DeviceCapabilities*       Device                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Event capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Events" of type "http://www.onvif.org/ver10/schema":EventCapabilities.
    struct tt__EventCapabilities*        Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Imaging capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Imaging" of type "http://www.onvif.org/ver10/schema":ImagingCapabilities.
    struct tt__ImagingCapabilities*      Imaging                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Media capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Media" of type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    struct tt__MediaCapabilities*        Media                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   PTZ capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZ" of type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    struct tt__PTZCapabilities*          PTZ                            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension.
    struct tt__CapabilitiesExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension is a complexType.
///
/// @note struct tt__CapabilitiesExtension operations:
/// - tt__CapabilitiesExtension* soap_new_tt__CapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension*) default initialize members
/// - int soap_read_tt__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension*) serialize to a sink
/// - tt__CapabilitiesExtension* soap_dup_tt__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension* dst, tt__CapabilitiesExtension *src) returns deep copy of tt__CapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CapabilitiesExtension(tt__CapabilitiesExtension*) deep deletes tt__CapabilitiesExtension data members, use only on dst after soap_dup_tt__CapabilitiesExtension(NULL, tt__CapabilitiesExtension *dst, tt__CapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__CapabilitiesExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "DeviceIO" of type "http://www.onvif.org/ver10/schema":DeviceIOCapabilities.
    struct tt__DeviceIOCapabilities*     DeviceIO                       0;	///< Optional element.
/// Element "Display" of type "http://www.onvif.org/ver10/schema":DisplayCapabilities.
    struct tt__DisplayCapabilities*      Display                        0;	///< Optional element.
/// Element "Recording" of type "http://www.onvif.org/ver10/schema":RecordingCapabilities.
    struct tt__RecordingCapabilities*    Recording                      0;	///< Optional element.
/// Element "Search" of type "http://www.onvif.org/ver10/schema":SearchCapabilities.
    struct tt__SearchCapabilities*       Search                         0;	///< Optional element.
/// Element "Replay" of type "http://www.onvif.org/ver10/schema":ReplayCapabilities.
    struct tt__ReplayCapabilities*       Replay                         0;	///< Optional element.
/// Element "Receiver" of type "http://www.onvif.org/ver10/schema":ReceiverCapabilities.
    struct tt__ReceiverCapabilities*     Receiver                       0;	///< Optional element.
/// Element "AnalyticsDevice" of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities.
    struct tt__AnalyticsDeviceCapabilities*  AnalyticsDevice                0;	///< Optional element.
/// Element "Extensions" of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension2.
    struct tt__CapabilitiesExtension2*   Extensions                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension2 is a complexType.
///
/// @note struct tt__CapabilitiesExtension2 operations:
/// - tt__CapabilitiesExtension2* soap_new_tt__CapabilitiesExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2*) default initialize members
/// - int soap_read_tt__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2*) serialize to a sink
/// - tt__CapabilitiesExtension2* soap_dup_tt__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2* dst, tt__CapabilitiesExtension2 *src) returns deep copy of tt__CapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CapabilitiesExtension2(tt__CapabilitiesExtension2*) deep deletes tt__CapabilitiesExtension2 data members, use only on dst after soap_dup_tt__CapabilitiesExtension2(NULL, tt__CapabilitiesExtension2 *dst, tt__CapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__CapabilitiesExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is a complexType.
///
/// @note struct tt__AnalyticsCapabilities operations:
/// - tt__AnalyticsCapabilities* soap_new_tt__AnalyticsCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities*) default initialize members
/// - int soap_read_tt__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities*) deserialize from a source
/// - int soap_write_tt__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities*) serialize to a sink
/// - tt__AnalyticsCapabilities* soap_dup_tt__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities* dst, tt__AnalyticsCapabilities *src) returns deep copy of tt__AnalyticsCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsCapabilities(tt__AnalyticsCapabilities*) deep deletes tt__AnalyticsCapabilities data members, use only on dst after soap_dup_tt__AnalyticsCapabilities(NULL, tt__AnalyticsCapabilities *dst, tt__AnalyticsCapabilities *src) (use soapcpp2 -Ed)
struct tt__AnalyticsCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Analytics service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not rules are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RuleSupport" of type xs:boolean.
    enum xsd__boolean                    RuleSupport                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not modules are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "AnalyticsModuleSupport" of type xs:boolean.
    enum xsd__boolean                    AnalyticsModuleSupport         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
///
/// @note struct tt__DeviceCapabilities operations:
/// - tt__DeviceCapabilities* soap_new_tt__DeviceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DeviceCapabilities(struct soap*, tt__DeviceCapabilities*) default initialize members
/// - int soap_read_tt__DeviceCapabilities(struct soap*, tt__DeviceCapabilities*) deserialize from a source
/// - int soap_write_tt__DeviceCapabilities(struct soap*, tt__DeviceCapabilities*) serialize to a sink
/// - tt__DeviceCapabilities* soap_dup_tt__DeviceCapabilities(struct soap*, tt__DeviceCapabilities* dst, tt__DeviceCapabilities *src) returns deep copy of tt__DeviceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DeviceCapabilities(tt__DeviceCapabilities*) deep deletes tt__DeviceCapabilities data members, use only on dst after soap_dup_tt__DeviceCapabilities(NULL, tt__DeviceCapabilities *dst, tt__DeviceCapabilities *src) (use soapcpp2 -Ed)
struct tt__DeviceCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Device service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Network" of type "http://www.onvif.org/ver10/schema":NetworkCapabilities.
    struct tt__NetworkCapabilities*      Network                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "System" of type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    struct tt__SystemCapabilities*       System                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   I/O capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "IO" of type "http://www.onvif.org/ver10/schema":IOCapabilities.
    struct tt__IOCapabilities*           IO                             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Security" of type "http://www.onvif.org/ver10/schema":SecurityCapabilities.
    struct tt__SecurityCapabilities*     Security                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension.
    struct tt__DeviceCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is a complexType.
///
/// @note struct tt__DeviceCapabilitiesExtension operations:
/// - tt__DeviceCapabilitiesExtension* soap_new_tt__DeviceCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension*) serialize to a sink
/// - tt__DeviceCapabilitiesExtension* soap_dup_tt__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension* dst, tt__DeviceCapabilitiesExtension *src) returns deep copy of tt__DeviceCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DeviceCapabilitiesExtension(tt__DeviceCapabilitiesExtension*) deep deletes tt__DeviceCapabilitiesExtension data members, use only on dst after soap_dup_tt__DeviceCapabilitiesExtension(NULL, tt__DeviceCapabilitiesExtension *dst, tt__DeviceCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__DeviceCapabilitiesExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
///
/// @note struct tt__EventCapabilities operations:
/// - tt__EventCapabilities* soap_new_tt__EventCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__EventCapabilities(struct soap*, tt__EventCapabilities*) default initialize members
/// - int soap_read_tt__EventCapabilities(struct soap*, tt__EventCapabilities*) deserialize from a source
/// - int soap_write_tt__EventCapabilities(struct soap*, tt__EventCapabilities*) serialize to a sink
/// - tt__EventCapabilities* soap_dup_tt__EventCapabilities(struct soap*, tt__EventCapabilities* dst, tt__EventCapabilities *src) returns deep copy of tt__EventCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EventCapabilities(tt__EventCapabilities*) deep deletes tt__EventCapabilities data members, use only on dst after soap_dup_tt__EventCapabilities(NULL, tt__EventCapabilities *dst, tt__EventCapabilities *src) (use soapcpp2 -Ed)
struct tt__EventCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Event service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSSubscriptionPolicySupport" of type xs:boolean.
    enum xsd__boolean                    WSSubscriptionPolicySupport    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSPullPointSupport" of type xs:boolean.
    enum xsd__boolean                    WSPullPointSupport             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSPausableSubscriptionManagerInterfaceSupport" of type xs:boolean.
    enum xsd__boolean                    WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilities is a complexType.
///
/// @note struct tt__IOCapabilities operations:
/// - tt__IOCapabilities* soap_new_tt__IOCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IOCapabilities(struct soap*, tt__IOCapabilities*) default initialize members
/// - int soap_read_tt__IOCapabilities(struct soap*, tt__IOCapabilities*) deserialize from a source
/// - int soap_write_tt__IOCapabilities(struct soap*, tt__IOCapabilities*) serialize to a sink
/// - tt__IOCapabilities* soap_dup_tt__IOCapabilities(struct soap*, tt__IOCapabilities* dst, tt__IOCapabilities *src) returns deep copy of tt__IOCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IOCapabilities(tt__IOCapabilities*) deep deletes tt__IOCapabilities data members, use only on dst after soap_dup_tt__IOCapabilities(NULL, tt__IOCapabilities *dst, tt__IOCapabilities *src) (use soapcpp2 -Ed)
struct tt__IOCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Number of input connectors.
/// </BLOCKQUOTE></PRE>
///
/// Element "InputConnectors" of type xs:int.
    int*                                 InputConnectors                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Number of relay outputs.
/// </BLOCKQUOTE></PRE>
///
/// Element "RelayOutputs" of type xs:int.
    int*                                 RelayOutputs                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension.
    struct tt__IOCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is a complexType.
///
/// @note struct tt__IOCapabilitiesExtension operations:
/// - tt__IOCapabilitiesExtension* soap_new_tt__IOCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension*) serialize to a sink
/// - tt__IOCapabilitiesExtension* soap_dup_tt__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension* dst, tt__IOCapabilitiesExtension *src) returns deep copy of tt__IOCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IOCapabilitiesExtension(tt__IOCapabilitiesExtension*) deep deletes tt__IOCapabilitiesExtension data members, use only on dst after soap_dup_tt__IOCapabilitiesExtension(NULL, tt__IOCapabilitiesExtension *dst, tt__IOCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__IOCapabilitiesExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Auxiliary" of type xs:boolean.
    enum xsd__boolean*                   Auxiliary                      0;	///< Optional element.
/// Size of array of tt__AuxiliaryData* is 0..unbounded.
  $ int                                  __sizeAuxiliaryCommands        0;
/// Array tt__AuxiliaryData* of size 0..unbounded.
    tt__AuxiliaryData*                   AuxiliaryCommands              0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2.
    struct tt__IOCapabilitiesExtension2*  Extension                      1;	///< Required element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2 is a complexType.
///
/// @note struct tt__IOCapabilitiesExtension2 operations:
/// - tt__IOCapabilitiesExtension2* soap_new_tt__IOCapabilitiesExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2*) default initialize members
/// - int soap_read_tt__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2*) serialize to a sink
/// - tt__IOCapabilitiesExtension2* soap_dup_tt__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2* dst, tt__IOCapabilitiesExtension2 *src) returns deep copy of tt__IOCapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IOCapabilitiesExtension2(tt__IOCapabilitiesExtension2*) deep deletes tt__IOCapabilitiesExtension2 data members, use only on dst after soap_dup_tt__IOCapabilitiesExtension2(NULL, tt__IOCapabilitiesExtension2 *dst, tt__IOCapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__IOCapabilitiesExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
///
/// @note struct tt__MediaCapabilities operations:
/// - tt__MediaCapabilities* soap_new_tt__MediaCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MediaCapabilities(struct soap*, tt__MediaCapabilities*) default initialize members
/// - int soap_read_tt__MediaCapabilities(struct soap*, tt__MediaCapabilities*) deserialize from a source
/// - int soap_write_tt__MediaCapabilities(struct soap*, tt__MediaCapabilities*) serialize to a sink
/// - tt__MediaCapabilities* soap_dup_tt__MediaCapabilities(struct soap*, tt__MediaCapabilities* dst, tt__MediaCapabilities *src) returns deep copy of tt__MediaCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MediaCapabilities(tt__MediaCapabilities*) deep deletes tt__MediaCapabilities data members, use only on dst after soap_dup_tt__MediaCapabilities(NULL, tt__MediaCapabilities *dst, tt__MediaCapabilities *src) (use soapcpp2 -Ed)
struct tt__MediaCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Media service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamingCapabilities" of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    struct tt__RealTimeStreamingCapabilities*  StreamingCapabilities          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    struct tt__MediaCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
///
/// @note struct tt__MediaCapabilitiesExtension operations:
/// - tt__MediaCapabilitiesExtension* soap_new_tt__MediaCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension*) serialize to a sink
/// - tt__MediaCapabilitiesExtension* soap_dup_tt__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension* dst, tt__MediaCapabilitiesExtension *src) returns deep copy of tt__MediaCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MediaCapabilitiesExtension(tt__MediaCapabilitiesExtension*) deep deletes tt__MediaCapabilitiesExtension data members, use only on dst after soap_dup_tt__MediaCapabilitiesExtension(NULL, tt__MediaCapabilitiesExtension *dst, tt__MediaCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__MediaCapabilitiesExtension
{
/// Element "ProfileCapabilities" of type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    struct tt__ProfileCapabilities*      ProfileCapabilities            1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
///
/// @note struct tt__RealTimeStreamingCapabilities operations:
/// - tt__RealTimeStreamingCapabilities* soap_new_tt__RealTimeStreamingCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities*) default initialize members
/// - int soap_read_tt__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities*) deserialize from a source
/// - int soap_write_tt__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities*) serialize to a sink
/// - tt__RealTimeStreamingCapabilities* soap_dup_tt__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities* dst, tt__RealTimeStreamingCapabilities *src) returns deep copy of tt__RealTimeStreamingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RealTimeStreamingCapabilities(tt__RealTimeStreamingCapabilities*) deep deletes tt__RealTimeStreamingCapabilities data members, use only on dst after soap_dup_tt__RealTimeStreamingCapabilities(NULL, tt__RealTimeStreamingCapabilities *dst, tt__RealTimeStreamingCapabilities *src) (use soapcpp2 -Ed)
struct tt__RealTimeStreamingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP multicast is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTPMulticast" of type xs:boolean.
    enum xsd__boolean*                   RTPMulticast                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP over TCP is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_TCP" of type xs:boolean.
    enum xsd__boolean*                   RTP_USCORETCP                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP/RTSP/TCP is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_RTSP_TCP" of type xs:boolean.
    enum xsd__boolean*                   RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension.
    struct tt__RealTimeStreamingCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is a complexType.
///
/// @note struct tt__RealTimeStreamingCapabilitiesExtension operations:
/// - tt__RealTimeStreamingCapabilitiesExtension* soap_new_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension*) serialize to a sink
/// - tt__RealTimeStreamingCapabilitiesExtension* soap_dup_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension* dst, tt__RealTimeStreamingCapabilitiesExtension *src) returns deep copy of tt__RealTimeStreamingCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RealTimeStreamingCapabilitiesExtension(tt__RealTimeStreamingCapabilitiesExtension*) deep deletes tt__RealTimeStreamingCapabilitiesExtension data members, use only on dst after soap_dup_tt__RealTimeStreamingCapabilitiesExtension(NULL, tt__RealTimeStreamingCapabilitiesExtension *dst, tt__RealTimeStreamingCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__RealTimeStreamingCapabilitiesExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
///
/// @note struct tt__ProfileCapabilities operations:
/// - tt__ProfileCapabilities* soap_new_tt__ProfileCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ProfileCapabilities(struct soap*, tt__ProfileCapabilities*) default initialize members
/// - int soap_read_tt__ProfileCapabilities(struct soap*, tt__ProfileCapabilities*) deserialize from a source
/// - int soap_write_tt__ProfileCapabilities(struct soap*, tt__ProfileCapabilities*) serialize to a sink
/// - tt__ProfileCapabilities* soap_dup_tt__ProfileCapabilities(struct soap*, tt__ProfileCapabilities* dst, tt__ProfileCapabilities *src) returns deep copy of tt__ProfileCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ProfileCapabilities(tt__ProfileCapabilities*) deep deletes tt__ProfileCapabilities data members, use only on dst after soap_dup_tt__ProfileCapabilities(NULL, tt__ProfileCapabilities *dst, tt__ProfileCapabilities *src) (use soapcpp2 -Ed)
struct tt__ProfileCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfProfiles" of type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilities is a complexType.
///
/// @note struct tt__NetworkCapabilities operations:
/// - tt__NetworkCapabilities* soap_new_tt__NetworkCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkCapabilities(struct soap*, tt__NetworkCapabilities*) default initialize members
/// - int soap_read_tt__NetworkCapabilities(struct soap*, tt__NetworkCapabilities*) deserialize from a source
/// - int soap_write_tt__NetworkCapabilities(struct soap*, tt__NetworkCapabilities*) serialize to a sink
/// - tt__NetworkCapabilities* soap_dup_tt__NetworkCapabilities(struct soap*, tt__NetworkCapabilities* dst, tt__NetworkCapabilities *src) returns deep copy of tt__NetworkCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkCapabilities(tt__NetworkCapabilities*) deep deletes tt__NetworkCapabilities data members, use only on dst after soap_dup_tt__NetworkCapabilities(NULL, tt__NetworkCapabilities *dst, tt__NetworkCapabilities *src) (use soapcpp2 -Ed)
struct tt__NetworkCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IP filtering is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPFilter" of type xs:boolean.
    enum xsd__boolean*                   IPFilter                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not zeroconf is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZeroConfiguration" of type xs:boolean.
    enum xsd__boolean*                   ZeroConfiguration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPVersion6" of type xs:boolean.
    enum xsd__boolean*                   IPVersion6                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DynDNS" of type xs:boolean.
    enum xsd__boolean*                   DynDNS                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension.
    struct tt__NetworkCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is a complexType.
///
/// @note struct tt__NetworkCapabilitiesExtension operations:
/// - tt__NetworkCapabilitiesExtension* soap_new_tt__NetworkCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension*) serialize to a sink
/// - tt__NetworkCapabilitiesExtension* soap_dup_tt__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension* dst, tt__NetworkCapabilitiesExtension *src) returns deep copy of tt__NetworkCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkCapabilitiesExtension(tt__NetworkCapabilitiesExtension*) deep deletes tt__NetworkCapabilitiesExtension data members, use only on dst after soap_dup_tt__NetworkCapabilitiesExtension(NULL, tt__NetworkCapabilitiesExtension *dst, tt__NetworkCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkCapabilitiesExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Dot11Configuration" of type xs:boolean.
    enum xsd__boolean*                   Dot11Configuration             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2.
    struct tt__NetworkCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2 is a complexType.
///
/// @note struct tt__NetworkCapabilitiesExtension2 operations:
/// - tt__NetworkCapabilitiesExtension2* soap_new_tt__NetworkCapabilitiesExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2*) default initialize members
/// - int soap_read_tt__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2*) serialize to a sink
/// - tt__NetworkCapabilitiesExtension2* soap_dup_tt__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2* dst, tt__NetworkCapabilitiesExtension2 *src) returns deep copy of tt__NetworkCapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkCapabilitiesExtension2(tt__NetworkCapabilitiesExtension2*) deep deletes tt__NetworkCapabilitiesExtension2 data members, use only on dst after soap_dup_tt__NetworkCapabilitiesExtension2(NULL, tt__NetworkCapabilitiesExtension2 *dst, tt__NetworkCapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__NetworkCapabilitiesExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilities is a complexType.
///
/// @note struct tt__SecurityCapabilities operations:
/// - tt__SecurityCapabilities* soap_new_tt__SecurityCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SecurityCapabilities(struct soap*, tt__SecurityCapabilities*) default initialize members
/// - int soap_read_tt__SecurityCapabilities(struct soap*, tt__SecurityCapabilities*) deserialize from a source
/// - int soap_write_tt__SecurityCapabilities(struct soap*, tt__SecurityCapabilities*) serialize to a sink
/// - tt__SecurityCapabilities* soap_dup_tt__SecurityCapabilities(struct soap*, tt__SecurityCapabilities* dst, tt__SecurityCapabilities *src) returns deep copy of tt__SecurityCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SecurityCapabilities(tt__SecurityCapabilities*) deep deletes tt__SecurityCapabilities data members, use only on dst after soap_dup_tt__SecurityCapabilities(NULL, tt__SecurityCapabilities *dst, tt__SecurityCapabilities *src) (use soapcpp2 -Ed)
struct tt__SecurityCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.1 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLS1.1" of type xs:boolean.
    enum xsd__boolean                    TLS1_x002e1                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.2 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLS1.2" of type xs:boolean.
    enum xsd__boolean                    TLS1_x002e2                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not onboard key generation is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "OnboardKeyGeneration" of type xs:boolean.
    enum xsd__boolean                    OnboardKeyGeneration           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not access policy configuration is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "AccessPolicyConfig" of type xs:boolean.
    enum xsd__boolean                    AccessPolicyConfig             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security X.509 token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "X.509Token" of type xs:boolean.
    enum xsd__boolean                    X_x002e509Token                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security SAML token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SAMLToken" of type xs:boolean.
    enum xsd__boolean                    SAMLToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security Kerberos token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "KerberosToken" of type xs:boolean.
    enum xsd__boolean                    KerberosToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security REL token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RELToken" of type xs:boolean.
    enum xsd__boolean                    RELToken                       1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension.
    struct tt__SecurityCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is a complexType.
///
/// @note struct tt__SecurityCapabilitiesExtension operations:
/// - tt__SecurityCapabilitiesExtension* soap_new_tt__SecurityCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension*) serialize to a sink
/// - tt__SecurityCapabilitiesExtension* soap_dup_tt__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension* dst, tt__SecurityCapabilitiesExtension *src) returns deep copy of tt__SecurityCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SecurityCapabilitiesExtension(tt__SecurityCapabilitiesExtension*) deep deletes tt__SecurityCapabilitiesExtension data members, use only on dst after soap_dup_tt__SecurityCapabilitiesExtension(NULL, tt__SecurityCapabilitiesExtension *dst, tt__SecurityCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__SecurityCapabilitiesExtension
{
/// Element "TLS1.0" of type xs:boolean.
    enum xsd__boolean                    TLS1_x002e0                    1;	///< Required element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2.
    struct tt__SecurityCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2 is a complexType.
///
/// @note struct tt__SecurityCapabilitiesExtension2 operations:
/// - tt__SecurityCapabilitiesExtension2* soap_new_tt__SecurityCapabilitiesExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2*) default initialize members
/// - int soap_read_tt__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2*) serialize to a sink
/// - tt__SecurityCapabilitiesExtension2* soap_dup_tt__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2* dst, tt__SecurityCapabilitiesExtension2 *src) returns deep copy of tt__SecurityCapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SecurityCapabilitiesExtension2(tt__SecurityCapabilitiesExtension2*) deep deletes tt__SecurityCapabilitiesExtension2 data members, use only on dst after soap_dup_tt__SecurityCapabilitiesExtension2(NULL, tt__SecurityCapabilitiesExtension2 *dst, tt__SecurityCapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__SecurityCapabilitiesExtension2
{
/// Element "Dot1X" of type xs:boolean.
    enum xsd__boolean                    Dot1X                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of int* is 0..unbounded.
  $ int                                  __sizeSupportedEAPMethod       0;
/// Array int* of size 0..unbounded.
    int*                                 SupportedEAPMethod             0;	///< Multiple elements.
/// Element "RemoteUserHandling" of type xs:boolean.
    enum xsd__boolean                    RemoteUserHandling             1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
///
/// @note struct tt__SystemCapabilities operations:
/// - tt__SystemCapabilities* soap_new_tt__SystemCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemCapabilities(struct soap*, tt__SystemCapabilities*) default initialize members
/// - int soap_read_tt__SystemCapabilities(struct soap*, tt__SystemCapabilities*) deserialize from a source
/// - int soap_write_tt__SystemCapabilities(struct soap*, tt__SystemCapabilities*) serialize to a sink
/// - tt__SystemCapabilities* soap_dup_tt__SystemCapabilities(struct soap*, tt__SystemCapabilities* dst, tt__SystemCapabilities *src) returns deep copy of tt__SystemCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemCapabilities(tt__SystemCapabilities*) deep deletes tt__SystemCapabilities data members, use only on dst after soap_dup_tt__SystemCapabilities(NULL, tt__SystemCapabilities *dst, tt__SystemCapabilities *src) (use soapcpp2 -Ed)
struct tt__SystemCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Discovery resolve requests are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryResolve" of type xs:boolean.
    enum xsd__boolean                    DiscoveryResolve               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Discovery Bye is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryBye" of type xs:boolean.
    enum xsd__boolean                    DiscoveryBye                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not remote discovery is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscovery" of type xs:boolean.
    enum xsd__boolean                    RemoteDiscovery                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system backup is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemBackup" of type xs:boolean.
    enum xsd__boolean                    SystemBackup                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system logging is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemLogging" of type xs:boolean.
    enum xsd__boolean                    SystemLogging                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not firmware upgrade is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "FirmwareUpgrade" of type xs:boolean.
    enum xsd__boolean                    FirmwareUpgrade                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates supported ONVIF version(s).
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__OnvifVersion* is 1..unbounded.
  $ int                                  __sizeSupportedVersions        1;
/// Array struct tt__OnvifVersion* of size 1..unbounded.
    struct tt__OnvifVersion*             SupportedVersions              1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension.
    struct tt__SystemCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is a complexType.
///
/// @note struct tt__SystemCapabilitiesExtension operations:
/// - tt__SystemCapabilitiesExtension* soap_new_tt__SystemCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension*) serialize to a sink
/// - tt__SystemCapabilitiesExtension* soap_dup_tt__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension* dst, tt__SystemCapabilitiesExtension *src) returns deep copy of tt__SystemCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemCapabilitiesExtension(tt__SystemCapabilitiesExtension*) deep deletes tt__SystemCapabilitiesExtension data members, use only on dst after soap_dup_tt__SystemCapabilitiesExtension(NULL, tt__SystemCapabilitiesExtension *dst, tt__SystemCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__SystemCapabilitiesExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "HttpFirmwareUpgrade" of type xs:boolean.
    enum xsd__boolean*                   HttpFirmwareUpgrade            0;	///< Optional element.
/// Element "HttpSystemBackup" of type xs:boolean.
    enum xsd__boolean*                   HttpSystemBackup               0;	///< Optional element.
/// Element "HttpSystemLogging" of type xs:boolean.
    enum xsd__boolean*                   HttpSystemLogging              0;	///< Optional element.
/// Element "HttpSupportInformation" of type xs:boolean.
    enum xsd__boolean*                   HttpSupportInformation         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2.
    struct tt__SystemCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2 is a complexType.
///
/// @note struct tt__SystemCapabilitiesExtension2 operations:
/// - tt__SystemCapabilitiesExtension2* soap_new_tt__SystemCapabilitiesExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2*) default initialize members
/// - int soap_read_tt__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2*) serialize to a sink
/// - tt__SystemCapabilitiesExtension2* soap_dup_tt__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2* dst, tt__SystemCapabilitiesExtension2 *src) returns deep copy of tt__SystemCapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemCapabilitiesExtension2(tt__SystemCapabilitiesExtension2*) deep deletes tt__SystemCapabilitiesExtension2 data members, use only on dst after soap_dup_tt__SystemCapabilitiesExtension2(NULL, tt__SystemCapabilitiesExtension2 *dst, tt__SystemCapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__SystemCapabilitiesExtension2
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
///
/// @note struct tt__OnvifVersion operations:
/// - tt__OnvifVersion* soap_new_tt__OnvifVersion(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OnvifVersion(struct soap*, tt__OnvifVersion*) default initialize members
/// - int soap_read_tt__OnvifVersion(struct soap*, tt__OnvifVersion*) deserialize from a source
/// - int soap_write_tt__OnvifVersion(struct soap*, tt__OnvifVersion*) serialize to a sink
/// - tt__OnvifVersion* soap_dup_tt__OnvifVersion(struct soap*, tt__OnvifVersion* dst, tt__OnvifVersion *src) returns deep copy of tt__OnvifVersion src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OnvifVersion(tt__OnvifVersion*) deep deletes tt__OnvifVersion data members, use only on dst after soap_dup_tt__OnvifVersion(NULL, tt__OnvifVersion *dst, tt__OnvifVersion *src) (use soapcpp2 -Ed)
struct tt__OnvifVersion
{
/// <PRE><BLOCKQUOTE>
///   Major version number.
/// </BLOCKQUOTE></PRE>
///
/// Element "Major" of type xs:int.
    int                                  Major                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Two digit minor version number.
///   If major version number is less than "16", X.0.1 maps to "01" and X.2.1 maps to "21" where X stands for Major version number.
///   Otherwise, minor number is month of release, such as "06" for June.
/// </BLOCKQUOTE></PRE>
///
/// Element "Minor" of type xs:int.
    int                                  Minor                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingCapabilities is a complexType.
///
/// @note struct tt__ImagingCapabilities operations:
/// - tt__ImagingCapabilities* soap_new_tt__ImagingCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingCapabilities(struct soap*, tt__ImagingCapabilities*) default initialize members
/// - int soap_read_tt__ImagingCapabilities(struct soap*, tt__ImagingCapabilities*) deserialize from a source
/// - int soap_write_tt__ImagingCapabilities(struct soap*, tt__ImagingCapabilities*) serialize to a sink
/// - tt__ImagingCapabilities* soap_dup_tt__ImagingCapabilities(struct soap*, tt__ImagingCapabilities* dst, tt__ImagingCapabilities *src) returns deep copy of tt__ImagingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingCapabilities(tt__ImagingCapabilities*) deep deletes tt__ImagingCapabilities data members, use only on dst after soap_dup_tt__ImagingCapabilities(NULL, tt__ImagingCapabilities *dst, tt__ImagingCapabilities *src) (use soapcpp2 -Ed)
struct tt__ImagingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Imaging service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
///
/// @note struct tt__PTZCapabilities operations:
/// - tt__PTZCapabilities* soap_new_tt__PTZCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZCapabilities(struct soap*, tt__PTZCapabilities*) default initialize members
/// - int soap_read_tt__PTZCapabilities(struct soap*, tt__PTZCapabilities*) deserialize from a source
/// - int soap_write_tt__PTZCapabilities(struct soap*, tt__PTZCapabilities*) serialize to a sink
/// - tt__PTZCapabilities* soap_dup_tt__PTZCapabilities(struct soap*, tt__PTZCapabilities* dst, tt__PTZCapabilities *src) returns deep copy of tt__PTZCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZCapabilities(tt__PTZCapabilities*) deep deletes tt__PTZCapabilities data members, use only on dst after soap_dup_tt__PTZCapabilities(NULL, tt__PTZCapabilities *dst, tt__PTZCapabilities *src) (use soapcpp2 -Ed)
struct tt__PTZCapabilities
{
/// <PRE><BLOCKQUOTE>
///   PTZ service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceIOCapabilities is a complexType.
///
/// @note struct tt__DeviceIOCapabilities operations:
/// - tt__DeviceIOCapabilities* soap_new_tt__DeviceIOCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities*) default initialize members
/// - int soap_read_tt__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities*) deserialize from a source
/// - int soap_write_tt__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities*) serialize to a sink
/// - tt__DeviceIOCapabilities* soap_dup_tt__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities* dst, tt__DeviceIOCapabilities *src) returns deep copy of tt__DeviceIOCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DeviceIOCapabilities(tt__DeviceIOCapabilities*) deep deletes tt__DeviceIOCapabilities data members, use only on dst after soap_dup_tt__DeviceIOCapabilities(NULL, tt__DeviceIOCapabilities *dst, tt__DeviceIOCapabilities *src) (use soapcpp2 -Ed)
struct tt__DeviceIOCapabilities
{
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "VideoSources" of type xs:int.
    int                                  VideoSources                   1;	///< Required element.
/// Element "VideoOutputs" of type xs:int.
    int                                  VideoOutputs                   1;	///< Required element.
/// Element "AudioSources" of type xs:int.
    int                                  AudioSources                   1;	///< Required element.
/// Element "AudioOutputs" of type xs:int.
    int                                  AudioOutputs                   1;	///< Required element.
/// Element "RelayOutputs" of type xs:int.
    int                                  RelayOutputs                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DisplayCapabilities is a complexType.
///
/// @note struct tt__DisplayCapabilities operations:
/// - tt__DisplayCapabilities* soap_new_tt__DisplayCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DisplayCapabilities(struct soap*, tt__DisplayCapabilities*) default initialize members
/// - int soap_read_tt__DisplayCapabilities(struct soap*, tt__DisplayCapabilities*) deserialize from a source
/// - int soap_write_tt__DisplayCapabilities(struct soap*, tt__DisplayCapabilities*) serialize to a sink
/// - tt__DisplayCapabilities* soap_dup_tt__DisplayCapabilities(struct soap*, tt__DisplayCapabilities* dst, tt__DisplayCapabilities *src) returns deep copy of tt__DisplayCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DisplayCapabilities(tt__DisplayCapabilities*) deep deletes tt__DisplayCapabilities data members, use only on dst after soap_dup_tt__DisplayCapabilities(NULL, tt__DisplayCapabilities *dst, tt__DisplayCapabilities *src) (use soapcpp2 -Ed)
struct tt__DisplayCapabilities
{
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication that the SetLayout command supports only predefined layouts.
/// </BLOCKQUOTE></PRE>
///
/// Element "FixedLayout" of type xs:boolean.
    enum xsd__boolean                    FixedLayout                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingCapabilities is a complexType.
///
/// @note struct tt__RecordingCapabilities operations:
/// - tt__RecordingCapabilities* soap_new_tt__RecordingCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingCapabilities(struct soap*, tt__RecordingCapabilities*) default initialize members
/// - int soap_read_tt__RecordingCapabilities(struct soap*, tt__RecordingCapabilities*) deserialize from a source
/// - int soap_write_tt__RecordingCapabilities(struct soap*, tt__RecordingCapabilities*) serialize to a sink
/// - tt__RecordingCapabilities* soap_dup_tt__RecordingCapabilities(struct soap*, tt__RecordingCapabilities* dst, tt__RecordingCapabilities *src) returns deep copy of tt__RecordingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingCapabilities(tt__RecordingCapabilities*) deep deletes tt__RecordingCapabilities data members, use only on dst after soap_dup_tt__RecordingCapabilities(NULL, tt__RecordingCapabilities *dst, tt__RecordingCapabilities *src) (use soapcpp2 -Ed)
struct tt__RecordingCapabilities
{
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "ReceiverSource" of type xs:boolean.
    enum xsd__boolean                    ReceiverSource                 1;	///< Required element.
/// Element "MediaProfileSource" of type xs:boolean.
    enum xsd__boolean                    MediaProfileSource             1;	///< Required element.
/// Element "DynamicRecordings" of type xs:boolean.
    enum xsd__boolean                    DynamicRecordings              1;	///< Required element.
/// Element "DynamicTracks" of type xs:boolean.
    enum xsd__boolean                    DynamicTracks                  1;	///< Required element.
/// Element "MaxStringLength" of type xs:int.
    int                                  MaxStringLength                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SearchCapabilities is a complexType.
///
/// @note struct tt__SearchCapabilities operations:
/// - tt__SearchCapabilities* soap_new_tt__SearchCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SearchCapabilities(struct soap*, tt__SearchCapabilities*) default initialize members
/// - int soap_read_tt__SearchCapabilities(struct soap*, tt__SearchCapabilities*) deserialize from a source
/// - int soap_write_tt__SearchCapabilities(struct soap*, tt__SearchCapabilities*) serialize to a sink
/// - tt__SearchCapabilities* soap_dup_tt__SearchCapabilities(struct soap*, tt__SearchCapabilities* dst, tt__SearchCapabilities *src) returns deep copy of tt__SearchCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SearchCapabilities(tt__SearchCapabilities*) deep deletes tt__SearchCapabilities data members, use only on dst after soap_dup_tt__SearchCapabilities(NULL, tt__SearchCapabilities *dst, tt__SearchCapabilities *src) (use soapcpp2 -Ed)
struct tt__SearchCapabilities
{
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "MetadataSearch" of type xs:boolean.
    enum xsd__boolean                    MetadataSearch                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayCapabilities is a complexType.
///
/// @note struct tt__ReplayCapabilities operations:
/// - tt__ReplayCapabilities* soap_new_tt__ReplayCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ReplayCapabilities(struct soap*, tt__ReplayCapabilities*) default initialize members
/// - int soap_read_tt__ReplayCapabilities(struct soap*, tt__ReplayCapabilities*) deserialize from a source
/// - int soap_write_tt__ReplayCapabilities(struct soap*, tt__ReplayCapabilities*) serialize to a sink
/// - tt__ReplayCapabilities* soap_dup_tt__ReplayCapabilities(struct soap*, tt__ReplayCapabilities* dst, tt__ReplayCapabilities *src) returns deep copy of tt__ReplayCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReplayCapabilities(tt__ReplayCapabilities*) deep deletes tt__ReplayCapabilities data members, use only on dst after soap_dup_tt__ReplayCapabilities(NULL, tt__ReplayCapabilities *dst, tt__ReplayCapabilities *src) (use soapcpp2 -Ed)
struct tt__ReplayCapabilities
{
/// <PRE><BLOCKQUOTE>
///   The address of the replay service.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverCapabilities is a complexType.
///
/// @note struct tt__ReceiverCapabilities operations:
/// - tt__ReceiverCapabilities* soap_new_tt__ReceiverCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities*) default initialize members
/// - int soap_read_tt__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities*) deserialize from a source
/// - int soap_write_tt__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities*) serialize to a sink
/// - tt__ReceiverCapabilities* soap_dup_tt__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities* dst, tt__ReceiverCapabilities *src) returns deep copy of tt__ReceiverCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReceiverCapabilities(tt__ReceiverCapabilities*) deep deletes tt__ReceiverCapabilities data members, use only on dst after soap_dup_tt__ReceiverCapabilities(NULL, tt__ReceiverCapabilities *dst, tt__ReceiverCapabilities *src) (use soapcpp2 -Ed)
struct tt__ReceiverCapabilities
{
/// <PRE><BLOCKQUOTE>
///   The address of the receiver service.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP multicast streams.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_Multicast" of type xs:boolean.
    enum xsd__boolean                    RTP_USCOREMulticast            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/TCP streams
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_TCP" of type xs:boolean.
    enum xsd__boolean                    RTP_USCORETCP                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/RTSP/TCP streams.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_RTSP_TCP" of type xs:boolean.
    enum xsd__boolean                    RTP_USCORERTSP_USCORETCP       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of receivers supported by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedReceivers" of type xs:int.
    int                                  SupportedReceivers             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum allowed length for RTSP URIs.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumRTSPURILength" of type xs:int.
    int                                  MaximumRTSPURILength           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities is a complexType.
///
/// @note struct tt__AnalyticsDeviceCapabilities operations:
/// - tt__AnalyticsDeviceCapabilities* soap_new_tt__AnalyticsDeviceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities*) default initialize members
/// - int soap_read_tt__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities*) deserialize from a source
/// - int soap_write_tt__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities*) serialize to a sink
/// - tt__AnalyticsDeviceCapabilities* soap_dup_tt__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities* dst, tt__AnalyticsDeviceCapabilities *src) returns deep copy of tt__AnalyticsDeviceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsDeviceCapabilities(tt__AnalyticsDeviceCapabilities*) deep deletes tt__AnalyticsDeviceCapabilities data members, use only on dst after soap_dup_tt__AnalyticsDeviceCapabilities(NULL, tt__AnalyticsDeviceCapabilities *dst, tt__AnalyticsDeviceCapabilities *src) (use soapcpp2 -Ed)
struct tt__AnalyticsDeviceCapabilities
{
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Obsolete property.
/// </BLOCKQUOTE></PRE>
///
/// Element "RuleSupport" of type xs:boolean.
    enum xsd__boolean*                   RuleSupport                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension.
    struct tt__AnalyticsDeviceExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension is a complexType.
///
/// @note struct tt__AnalyticsDeviceExtension operations:
/// - tt__AnalyticsDeviceExtension* soap_new_tt__AnalyticsDeviceExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension*) default initialize members
/// - int soap_read_tt__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension*) deserialize from a source
/// - int soap_write_tt__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension*) serialize to a sink
/// - tt__AnalyticsDeviceExtension* soap_dup_tt__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension* dst, tt__AnalyticsDeviceExtension *src) returns deep copy of tt__AnalyticsDeviceExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsDeviceExtension(tt__AnalyticsDeviceExtension*) deep deletes tt__AnalyticsDeviceExtension data members, use only on dst after soap_dup_tt__AnalyticsDeviceExtension(NULL, tt__AnalyticsDeviceExtension *dst, tt__AnalyticsDeviceExtension *src) (use soapcpp2 -Ed)
struct tt__AnalyticsDeviceExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLog is a complexType.
///
/// @note struct tt__SystemLog operations:
/// - tt__SystemLog* soap_new_tt__SystemLog(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemLog(struct soap*, tt__SystemLog*) default initialize members
/// - int soap_read_tt__SystemLog(struct soap*, tt__SystemLog*) deserialize from a source
/// - int soap_write_tt__SystemLog(struct soap*, tt__SystemLog*) serialize to a sink
/// - tt__SystemLog* soap_dup_tt__SystemLog(struct soap*, tt__SystemLog* dst, tt__SystemLog *src) returns deep copy of tt__SystemLog src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemLog(tt__SystemLog*) deep deletes tt__SystemLog data members, use only on dst after soap_dup_tt__SystemLog(NULL, tt__SystemLog *dst, tt__SystemLog *src) (use soapcpp2 -Ed)
struct tt__SystemLog
{
/// <PRE><BLOCKQUOTE>
///   The log information as attachment data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Binary" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The log information as character data.
/// </BLOCKQUOTE></PRE>
///
/// Element "String" of type xs:string.
    char*                                String                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportInformation is a complexType.
///
/// @note struct tt__SupportInformation operations:
/// - tt__SupportInformation* soap_new_tt__SupportInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SupportInformation(struct soap*, tt__SupportInformation*) default initialize members
/// - int soap_read_tt__SupportInformation(struct soap*, tt__SupportInformation*) deserialize from a source
/// - int soap_write_tt__SupportInformation(struct soap*, tt__SupportInformation*) serialize to a sink
/// - tt__SupportInformation* soap_dup_tt__SupportInformation(struct soap*, tt__SupportInformation* dst, tt__SupportInformation *src) returns deep copy of tt__SupportInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SupportInformation(tt__SupportInformation*) deep deletes tt__SupportInformation data members, use only on dst after soap_dup_tt__SupportInformation(NULL, tt__SupportInformation *dst, tt__SupportInformation *src) (use soapcpp2 -Ed)
struct tt__SupportInformation
{
/// <PRE><BLOCKQUOTE>
///   The support information as attachment data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Binary" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The support information as character data.
/// </BLOCKQUOTE></PRE>
///
/// Element "String" of type xs:string.
    char*                                String                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BinaryData is a complexType.
///
/// @note struct tt__BinaryData operations:
/// - tt__BinaryData* soap_new_tt__BinaryData(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__BinaryData(struct soap*, tt__BinaryData*) default initialize members
/// - int soap_read_tt__BinaryData(struct soap*, tt__BinaryData*) deserialize from a source
/// - int soap_write_tt__BinaryData(struct soap*, tt__BinaryData*) serialize to a sink
/// - tt__BinaryData* soap_dup_tt__BinaryData(struct soap*, tt__BinaryData* dst, tt__BinaryData *src) returns deep copy of tt__BinaryData src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BinaryData(tt__BinaryData*) deep deletes tt__BinaryData data members, use only on dst after soap_dup_tt__BinaryData(NULL, tt__BinaryData *dst, tt__BinaryData *src) (use soapcpp2 -Ed)
struct tt__BinaryData
{
/// <PRE><BLOCKQUOTE>
///   base64 encoded binary data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Data" of type xs:base64Binary.
    struct xsd__base64Binary             Data                           1;	///< Required element.
/// Imported attribute reference xmime:contentType.
  @ char*                                xmime__contentType             0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":AttachmentData is a complexType.
///
/// @note struct tt__AttachmentData operations:
/// - tt__AttachmentData* soap_new_tt__AttachmentData(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AttachmentData(struct soap*, tt__AttachmentData*) default initialize members
/// - int soap_read_tt__AttachmentData(struct soap*, tt__AttachmentData*) deserialize from a source
/// - int soap_write_tt__AttachmentData(struct soap*, tt__AttachmentData*) serialize to a sink
/// - tt__AttachmentData* soap_dup_tt__AttachmentData(struct soap*, tt__AttachmentData* dst, tt__AttachmentData *src) returns deep copy of tt__AttachmentData src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AttachmentData(tt__AttachmentData*) deep deletes tt__AttachmentData data members, use only on dst after soap_dup_tt__AttachmentData(NULL, tt__AttachmentData *dst, tt__AttachmentData *src) (use soapcpp2 -Ed)
struct tt__AttachmentData
{
/// Imported element reference "http://www.w3.org/2004/08/xop/include":Include.
    _xop__Include                        xop__Include                   1;	///< Required element.
/// Imported attribute reference xmime:contentType.
  @ char*                                xmime__contentType             0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":BackupFile is a complexType.
///
/// @note struct tt__BackupFile operations:
/// - tt__BackupFile* soap_new_tt__BackupFile(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__BackupFile(struct soap*, tt__BackupFile*) default initialize members
/// - int soap_read_tt__BackupFile(struct soap*, tt__BackupFile*) deserialize from a source
/// - int soap_write_tt__BackupFile(struct soap*, tt__BackupFile*) serialize to a sink
/// - tt__BackupFile* soap_dup_tt__BackupFile(struct soap*, tt__BackupFile* dst, tt__BackupFile *src) returns deep copy of tt__BackupFile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BackupFile(tt__BackupFile*) deep deletes tt__BackupFile data members, use only on dst after soap_dup_tt__BackupFile(NULL, tt__BackupFile *dst, tt__BackupFile *src) (use soapcpp2 -Ed)
struct tt__BackupFile
{
/// Element "Name" of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element "Data" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Data                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUriList is a complexType.
///
/// @note struct tt__SystemLogUriList operations:
/// - tt__SystemLogUriList* soap_new_tt__SystemLogUriList(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemLogUriList(struct soap*, tt__SystemLogUriList*) default initialize members
/// - int soap_read_tt__SystemLogUriList(struct soap*, tt__SystemLogUriList*) deserialize from a source
/// - int soap_write_tt__SystemLogUriList(struct soap*, tt__SystemLogUriList*) serialize to a sink
/// - tt__SystemLogUriList* soap_dup_tt__SystemLogUriList(struct soap*, tt__SystemLogUriList* dst, tt__SystemLogUriList *src) returns deep copy of tt__SystemLogUriList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemLogUriList(tt__SystemLogUriList*) deep deletes tt__SystemLogUriList data members, use only on dst after soap_dup_tt__SystemLogUriList(NULL, tt__SystemLogUriList *dst, tt__SystemLogUriList *src) (use soapcpp2 -Ed)
struct tt__SystemLogUriList
{
/// Size of array of struct tt__SystemLogUri* is 0..unbounded.
  $ int                                  __sizeSystemLog                0;
/// Array struct tt__SystemLogUri* of size 0..unbounded.
    struct tt__SystemLogUri*             SystemLog                      0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUri is a complexType.
///
/// @note struct tt__SystemLogUri operations:
/// - tt__SystemLogUri* soap_new_tt__SystemLogUri(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemLogUri(struct soap*, tt__SystemLogUri*) default initialize members
/// - int soap_read_tt__SystemLogUri(struct soap*, tt__SystemLogUri*) deserialize from a source
/// - int soap_write_tt__SystemLogUri(struct soap*, tt__SystemLogUri*) serialize to a sink
/// - tt__SystemLogUri* soap_dup_tt__SystemLogUri(struct soap*, tt__SystemLogUri* dst, tt__SystemLogUri *src) returns deep copy of tt__SystemLogUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemLogUri(tt__SystemLogUri*) deep deletes tt__SystemLogUri data members, use only on dst after soap_dup_tt__SystemLogUri(NULL, tt__SystemLogUri *dst, tt__SystemLogUri *src) (use soapcpp2 -Ed)
struct tt__SystemLogUri
{
/// Element "Type" of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               Type                           1;	///< Required element.
/// Element "Uri" of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTime is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   General date time inforamtion returned by the GetSystemDateTime method.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__SystemDateTime operations:
/// - tt__SystemDateTime* soap_new_tt__SystemDateTime(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemDateTime(struct soap*, tt__SystemDateTime*) default initialize members
/// - int soap_read_tt__SystemDateTime(struct soap*, tt__SystemDateTime*) deserialize from a source
/// - int soap_write_tt__SystemDateTime(struct soap*, tt__SystemDateTime*) serialize to a sink
/// - tt__SystemDateTime* soap_dup_tt__SystemDateTime(struct soap*, tt__SystemDateTime* dst, tt__SystemDateTime *src) returns deep copy of tt__SystemDateTime src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemDateTime(tt__SystemDateTime*) deep deletes tt__SystemDateTime data members, use only on dst after soap_dup_tt__SystemDateTime(NULL, tt__SystemDateTime *dst, tt__SystemDateTime *src) (use soapcpp2 -Ed)
struct tt__SystemDateTime
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the time is set manully or through NTP.
/// </BLOCKQUOTE></PRE>
///
/// Element "DateTimeType" of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative indicator whether daylight savings is currently on/off.
/// </BLOCKQUOTE></PRE>
///
/// Element "DaylightSavings" of type xs:boolean.
    enum xsd__boolean                    DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Timezone information in Posix format.
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeZone" of type "http://www.onvif.org/ver10/schema":TimeZone.
    struct tt__TimeZone*                 TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Current system date and time in UTC format. This field is mandatory since version 2.0.
/// </BLOCKQUOTE></PRE>
///
/// Element "UTCDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    struct tt__DateTime*                 UTCDateTime                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in local format.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    struct tt__DateTime*                 LocalDateTime                  0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemDateTimeExtension.
    struct tt__SystemDateTimeExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is a complexType.
///
/// @note struct tt__SystemDateTimeExtension operations:
/// - tt__SystemDateTimeExtension* soap_new_tt__SystemDateTimeExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension*) default initialize members
/// - int soap_read_tt__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension*) deserialize from a source
/// - int soap_write_tt__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension*) serialize to a sink
/// - tt__SystemDateTimeExtension* soap_dup_tt__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension* dst, tt__SystemDateTimeExtension *src) returns deep copy of tt__SystemDateTimeExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemDateTimeExtension(tt__SystemDateTimeExtension*) deep deletes tt__SystemDateTimeExtension data members, use only on dst after soap_dup_tt__SystemDateTimeExtension(NULL, tt__SystemDateTimeExtension *dst, tt__SystemDateTimeExtension *src) (use soapcpp2 -Ed)
struct tt__SystemDateTimeExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":DateTime is a complexType.
///
/// @note struct tt__DateTime operations:
/// - tt__DateTime* soap_new_tt__DateTime(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DateTime(struct soap*, tt__DateTime*) default initialize members
/// - int soap_read_tt__DateTime(struct soap*, tt__DateTime*) deserialize from a source
/// - int soap_write_tt__DateTime(struct soap*, tt__DateTime*) serialize to a sink
/// - tt__DateTime* soap_dup_tt__DateTime(struct soap*, tt__DateTime* dst, tt__DateTime *src) returns deep copy of tt__DateTime src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DateTime(tt__DateTime*) deep deletes tt__DateTime data members, use only on dst after soap_dup_tt__DateTime(NULL, tt__DateTime *dst, tt__DateTime *src) (use soapcpp2 -Ed)
struct tt__DateTime
{
/// Element "Time" of type "http://www.onvif.org/ver10/schema":Time.
    struct tt__Time*                     Time                           1;	///< Required element.
/// Element "Date" of type "http://www.onvif.org/ver10/schema":Date.
    struct tt__Date*                     Date                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Date is a complexType.
///
/// @note struct tt__Date operations:
/// - tt__Date* soap_new_tt__Date(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Date(struct soap*, tt__Date*) default initialize members
/// - int soap_read_tt__Date(struct soap*, tt__Date*) deserialize from a source
/// - int soap_write_tt__Date(struct soap*, tt__Date*) serialize to a sink
/// - tt__Date* soap_dup_tt__Date(struct soap*, tt__Date* dst, tt__Date *src) returns deep copy of tt__Date src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Date(tt__Date*) deep deletes tt__Date data members, use only on dst after soap_dup_tt__Date(NULL, tt__Date *dst, tt__Date *src) (use soapcpp2 -Ed)
struct tt__Date
{
/// Element "Year" of type xs:int.
    int                                  Year                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 12.
/// </BLOCKQUOTE></PRE>
///
/// Element "Month" of type xs:int.
    int                                  Month                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 31.
/// </BLOCKQUOTE></PRE>
///
/// Element "Day" of type xs:int.
    int                                  Day                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Time is a complexType.
///
/// @note struct tt__Time operations:
/// - tt__Time* soap_new_tt__Time(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Time(struct soap*, tt__Time*) default initialize members
/// - int soap_read_tt__Time(struct soap*, tt__Time*) deserialize from a source
/// - int soap_write_tt__Time(struct soap*, tt__Time*) serialize to a sink
/// - tt__Time* soap_dup_tt__Time(struct soap*, tt__Time* dst, tt__Time *src) returns deep copy of tt__Time src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Time(tt__Time*) deep deletes tt__Time data members, use only on dst after soap_dup_tt__Time(NULL, tt__Time *dst, tt__Time *src) (use soapcpp2 -Ed)
struct tt__Time
{
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 23.
/// </BLOCKQUOTE></PRE>
///
/// Element "Hour" of type xs:int.
    int                                  Hour                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 59.
/// </BLOCKQUOTE></PRE>
///
/// Element "Minute" of type xs:int.
    int                                  Minute                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 61 (typically 59).
/// </BLOCKQUOTE></PRE>
///
/// Element "Second" of type xs:int.
    int                                  Second                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":TimeZone is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3<br/>
///   Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3<br/>
///   CET = designation for standard time when daylight saving is not in force<br/>
///   -1 = offset in hours = negative so 1 hour east of Greenwich meridian<br/>
///   CEST = designation when daylight saving is in force ("Central European Summer Time")<br/>
///   , = no offset number between code and comma, so default to one hour ahead for daylight saving<br/>
///   M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)<br/>
///   /2, = the local time when the switch occurs = 2 a.m. in this case<br/>
///   M10.5.0 = when daylight saving ends = the last Sunday in October.<br/>
///   /3, = the local time when the switch occurs = 3 a.m. in this case<br/>
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__TimeZone operations:
/// - tt__TimeZone* soap_new_tt__TimeZone(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__TimeZone(struct soap*, tt__TimeZone*) default initialize members
/// - int soap_read_tt__TimeZone(struct soap*, tt__TimeZone*) deserialize from a source
/// - int soap_write_tt__TimeZone(struct soap*, tt__TimeZone*) serialize to a sink
/// - tt__TimeZone* soap_dup_tt__TimeZone(struct soap*, tt__TimeZone* dst, tt__TimeZone *src) returns deep copy of tt__TimeZone src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TimeZone(tt__TimeZone*) deep deletes tt__TimeZone data members, use only on dst after soap_dup_tt__TimeZone(NULL, tt__TimeZone *dst, tt__TimeZone *src) (use soapcpp2 -Ed)
struct tt__TimeZone
{
/// <PRE><BLOCKQUOTE>
///   Posix timezone string.
/// </BLOCKQUOTE></PRE>
///
/// Element "TZ" of type xs:token.
    xsd__token                           TZ                             1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":RemoteUser is a complexType.
///
/// @note struct tt__RemoteUser operations:
/// - tt__RemoteUser* soap_new_tt__RemoteUser(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RemoteUser(struct soap*, tt__RemoteUser*) default initialize members
/// - int soap_read_tt__RemoteUser(struct soap*, tt__RemoteUser*) deserialize from a source
/// - int soap_write_tt__RemoteUser(struct soap*, tt__RemoteUser*) serialize to a sink
/// - tt__RemoteUser* soap_dup_tt__RemoteUser(struct soap*, tt__RemoteUser* dst, tt__RemoteUser *src) returns deep copy of tt__RemoteUser src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RemoteUser(tt__RemoteUser*) deep deletes tt__RemoteUser data members, use only on dst after soap_dup_tt__RemoteUser(NULL, tt__RemoteUser *dst, tt__RemoteUser *src) (use soapcpp2 -Ed)
struct tt__RemoteUser
{
/// Element "Username" of type xs:string.
    char*                                Username                       1;	///< Required element.
/// Element "Password" of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element "UseDerivedPassword" of type xs:boolean.
    enum xsd__boolean                    UseDerivedPassword             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":User is a complexType.
///
/// @note struct tt__User operations:
/// - tt__User* soap_new_tt__User(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__User(struct soap*, tt__User*) default initialize members
/// - int soap_read_tt__User(struct soap*, tt__User*) deserialize from a source
/// - int soap_write_tt__User(struct soap*, tt__User*) serialize to a sink
/// - tt__User* soap_dup_tt__User(struct soap*, tt__User* dst, tt__User *src) returns deep copy of tt__User src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__User(tt__User*) deep deletes tt__User data members, use only on dst after soap_dup_tt__User(NULL, tt__User *dst, tt__User *src) (use soapcpp2 -Ed)
struct tt__User
{
/// <PRE><BLOCKQUOTE>
///   Username string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Username" of type xs:string.
    char*                                Username                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Password string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User level string.
/// </BLOCKQUOTE></PRE>
///
/// Element "UserLevel" of type "http://www.onvif.org/ver10/schema":UserLevel.
    enum tt__UserLevel                   UserLevel                      1;	///< Required element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":UserExtension.
    struct tt__UserExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":UserExtension is a complexType.
///
/// @note struct tt__UserExtension operations:
/// - tt__UserExtension* soap_new_tt__UserExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__UserExtension(struct soap*, tt__UserExtension*) default initialize members
/// - int soap_read_tt__UserExtension(struct soap*, tt__UserExtension*) deserialize from a source
/// - int soap_write_tt__UserExtension(struct soap*, tt__UserExtension*) serialize to a sink
/// - tt__UserExtension* soap_dup_tt__UserExtension(struct soap*, tt__UserExtension* dst, tt__UserExtension *src) returns deep copy of tt__UserExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__UserExtension(tt__UserExtension*) deep deletes tt__UserExtension data members, use only on dst after soap_dup_tt__UserExtension(NULL, tt__UserExtension *dst, tt__UserExtension *src) (use soapcpp2 -Ed)
struct tt__UserExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is a complexType.
///
/// @note struct tt__CertificateGenerationParameters operations:
/// - tt__CertificateGenerationParameters* soap_new_tt__CertificateGenerationParameters(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CertificateGenerationParameters(struct soap*, tt__CertificateGenerationParameters*) default initialize members
/// - int soap_read_tt__CertificateGenerationParameters(struct soap*, tt__CertificateGenerationParameters*) deserialize from a source
/// - int soap_write_tt__CertificateGenerationParameters(struct soap*, tt__CertificateGenerationParameters*) serialize to a sink
/// - tt__CertificateGenerationParameters* soap_dup_tt__CertificateGenerationParameters(struct soap*, tt__CertificateGenerationParameters* dst, tt__CertificateGenerationParameters *src) returns deep copy of tt__CertificateGenerationParameters src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateGenerationParameters(tt__CertificateGenerationParameters*) deep deletes tt__CertificateGenerationParameters data members, use only on dst after soap_dup_tt__CertificateGenerationParameters(NULL, tt__CertificateGenerationParameters *dst, tt__CertificateGenerationParameters *src) (use soapcpp2 -Ed)
struct tt__CertificateGenerationParameters
{
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// Element "Subject" of type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// Element "ValidNotBefore" of type xs:token.
    xsd__token                           ValidNotBefore                 0;	///< Optional element.
/// Element "ValidNotAfter" of type xs:token.
    xsd__token                           ValidNotAfter                  0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension.
    struct tt__CertificateGenerationParametersExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is a complexType.
///
/// @note struct tt__CertificateGenerationParametersExtension operations:
/// - tt__CertificateGenerationParametersExtension* soap_new_tt__CertificateGenerationParametersExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CertificateGenerationParametersExtension(struct soap*, tt__CertificateGenerationParametersExtension*) default initialize members
/// - int soap_read_tt__CertificateGenerationParametersExtension(struct soap*, tt__CertificateGenerationParametersExtension*) deserialize from a source
/// - int soap_write_tt__CertificateGenerationParametersExtension(struct soap*, tt__CertificateGenerationParametersExtension*) serialize to a sink
/// - tt__CertificateGenerationParametersExtension* soap_dup_tt__CertificateGenerationParametersExtension(struct soap*, tt__CertificateGenerationParametersExtension* dst, tt__CertificateGenerationParametersExtension *src) returns deep copy of tt__CertificateGenerationParametersExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateGenerationParametersExtension(tt__CertificateGenerationParametersExtension*) deep deletes tt__CertificateGenerationParametersExtension data members, use only on dst after soap_dup_tt__CertificateGenerationParametersExtension(NULL, tt__CertificateGenerationParametersExtension *dst, tt__CertificateGenerationParametersExtension *src) (use soapcpp2 -Ed)
struct tt__CertificateGenerationParametersExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Certificate is a complexType.
///
/// @note struct tt__Certificate operations:
/// - tt__Certificate* soap_new_tt__Certificate(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Certificate(struct soap*, tt__Certificate*) default initialize members
/// - int soap_read_tt__Certificate(struct soap*, tt__Certificate*) deserialize from a source
/// - int soap_write_tt__Certificate(struct soap*, tt__Certificate*) serialize to a sink
/// - tt__Certificate* soap_dup_tt__Certificate(struct soap*, tt__Certificate* dst, tt__Certificate *src) returns deep copy of tt__Certificate src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Certificate(tt__Certificate*) deep deletes tt__Certificate data members, use only on dst after soap_dup_tt__Certificate(NULL, tt__Certificate *dst, tt__Certificate *src) (use soapcpp2 -Ed)
struct tt__Certificate
{
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "Certificate" of type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Certificate                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateStatus is a complexType.
///
/// @note struct tt__CertificateStatus operations:
/// - tt__CertificateStatus* soap_new_tt__CertificateStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CertificateStatus(struct soap*, tt__CertificateStatus*) default initialize members
/// - int soap_read_tt__CertificateStatus(struct soap*, tt__CertificateStatus*) deserialize from a source
/// - int soap_write_tt__CertificateStatus(struct soap*, tt__CertificateStatus*) serialize to a sink
/// - tt__CertificateStatus* soap_dup_tt__CertificateStatus(struct soap*, tt__CertificateStatus* dst, tt__CertificateStatus *src) returns deep copy of tt__CertificateStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateStatus(tt__CertificateStatus*) deep deletes tt__CertificateStatus data members, use only on dst after soap_dup_tt__CertificateStatus(NULL, tt__CertificateStatus *dst, tt__CertificateStatus *src) (use soapcpp2 -Ed)
struct tt__CertificateStatus
{
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a certificate is used in a HTTPS configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type xs:boolean.
    enum xsd__boolean                    Status                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateWithPrivateKey is a complexType.
///
/// @note struct tt__CertificateWithPrivateKey operations:
/// - tt__CertificateWithPrivateKey* soap_new_tt__CertificateWithPrivateKey(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey*) default initialize members
/// - int soap_read_tt__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey*) deserialize from a source
/// - int soap_write_tt__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey*) serialize to a sink
/// - tt__CertificateWithPrivateKey* soap_dup_tt__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey* dst, tt__CertificateWithPrivateKey *src) returns deep copy of tt__CertificateWithPrivateKey src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateWithPrivateKey(tt__CertificateWithPrivateKey*) deep deletes tt__CertificateWithPrivateKey data members, use only on dst after soap_dup_tt__CertificateWithPrivateKey(NULL, tt__CertificateWithPrivateKey *dst, tt__CertificateWithPrivateKey *src) (use soapcpp2 -Ed)
struct tt__CertificateWithPrivateKey
{
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// Element "Certificate" of type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Certificate                    1;	///< Required element.
/// Element "PrivateKey" of type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               PrivateKey                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformation is a complexType.
///
/// @note struct tt__CertificateInformation operations:
/// - tt__CertificateInformation* soap_new_tt__CertificateInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CertificateInformation(struct soap*, tt__CertificateInformation*) default initialize members
/// - int soap_read_tt__CertificateInformation(struct soap*, tt__CertificateInformation*) deserialize from a source
/// - int soap_write_tt__CertificateInformation(struct soap*, tt__CertificateInformation*) serialize to a sink
/// - tt__CertificateInformation* soap_dup_tt__CertificateInformation(struct soap*, tt__CertificateInformation* dst, tt__CertificateInformation *src) returns deep copy of tt__CertificateInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateInformation(tt__CertificateInformation*) deep deletes tt__CertificateInformation data members, use only on dst after soap_dup_tt__CertificateInformation(NULL, tt__CertificateInformation *dst, tt__CertificateInformation *src) (use soapcpp2 -Ed)
struct tt__CertificateInformation
{
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element "IssuerDN" of type xs:string.
    char*                                IssuerDN                       0;	///< Optional element.
/// Element "SubjectDN" of type xs:string.
    char*                                SubjectDN                      0;	///< Optional element.
/// Element "KeyUsage" of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    struct tt__CertificateUsage*         KeyUsage                       0;	///< Optional element.
/// Element "ExtendedKeyUsage" of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    struct tt__CertificateUsage*         ExtendedKeyUsage               0;	///< Optional element.
/// Element "KeyLength" of type xs:int.
    int*                                 KeyLength                      0;	///< Optional element.
/// Element "Version" of type xs:string.
    char*                                Version                        0;	///< Optional element.
/// Element "SerialNum" of type xs:string.
    char*                                SerialNum                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Validity Range is from "NotBefore" to "NotAfter"; the corresponding DateTimeRange is from "From" to "Until"
/// </BLOCKQUOTE></PRE>
///
/// Element "SignatureAlgorithm" of type xs:string.
    char*                                SignatureAlgorithm             0;	///< Optional element.
/// Element "Validity" of type "http://www.onvif.org/ver10/schema":DateTimeRange.
    struct tt__DateTimeRange*            Validity                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":CertificateInformationExtension.
    struct tt__CertificateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformationExtension is a complexType.
///
/// @note struct tt__CertificateInformationExtension operations:
/// - tt__CertificateInformationExtension* soap_new_tt__CertificateInformationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension*) default initialize members
/// - int soap_read_tt__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension*) deserialize from a source
/// - int soap_write_tt__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension*) serialize to a sink
/// - tt__CertificateInformationExtension* soap_dup_tt__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension* dst, tt__CertificateInformationExtension *src) returns deep copy of tt__CertificateInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateInformationExtension(tt__CertificateInformationExtension*) deep deletes tt__CertificateInformationExtension data members, use only on dst after soap_dup_tt__CertificateInformationExtension(NULL, tt__CertificateInformationExtension *dst, tt__CertificateInformationExtension *src) (use soapcpp2 -Ed)
struct tt__CertificateInformationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfiguration is a complexType.
///
/// @note struct tt__Dot1XConfiguration operations:
/// - tt__Dot1XConfiguration* soap_new_tt__Dot1XConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration*) default initialize members
/// - int soap_read_tt__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration*) deserialize from a source
/// - int soap_write_tt__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration*) serialize to a sink
/// - tt__Dot1XConfiguration* soap_dup_tt__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration* dst, tt__Dot1XConfiguration *src) returns deep copy of tt__Dot1XConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot1XConfiguration(tt__Dot1XConfiguration*) deep deletes tt__Dot1XConfiguration data members, use only on dst after soap_dup_tt__Dot1XConfiguration(NULL, tt__Dot1XConfiguration *dst, tt__Dot1XConfiguration *src) (use soapcpp2 -Ed)
struct tt__Dot1XConfiguration
{
/// Element "Dot1XConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Element "Identity" of type xs:string.
    char*                                Identity                       1;	///< Required element.
/// Element "AnonymousID" of type xs:string.
    char*                                AnonymousID                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   EAP Method type as defined in <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "EAPMethod" of type xs:int.
    int                                  EAPMethod                      1;	///< Required element.
/// Size of array of xsd__token* is 0..unbounded.
  $ int                                  __sizeCACertificateID          0;
/// Array xsd__token* of size 0..unbounded.
    xsd__token*                          CACertificateID                0;	///< Multiple elements.
/// Element "EAPMethodConfiguration" of type "http://www.onvif.org/ver10/schema":EAPMethodConfiguration.
    struct tt__EAPMethodConfiguration*   EAPMethodConfiguration         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension.
    struct tt__Dot1XConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension is a complexType.
///
/// @note struct tt__Dot1XConfigurationExtension operations:
/// - tt__Dot1XConfigurationExtension* soap_new_tt__Dot1XConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension*) default initialize members
/// - int soap_read_tt__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension*) serialize to a sink
/// - tt__Dot1XConfigurationExtension* soap_dup_tt__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension* dst, tt__Dot1XConfigurationExtension *src) returns deep copy of tt__Dot1XConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot1XConfigurationExtension(tt__Dot1XConfigurationExtension*) deep deletes tt__Dot1XConfigurationExtension data members, use only on dst after soap_dup_tt__Dot1XConfigurationExtension(NULL, tt__Dot1XConfigurationExtension *dst, tt__Dot1XConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__Dot1XConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":EAPMethodConfiguration is a complexType.
///
/// @note struct tt__EAPMethodConfiguration operations:
/// - tt__EAPMethodConfiguration* soap_new_tt__EAPMethodConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration*) default initialize members
/// - int soap_read_tt__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration*) deserialize from a source
/// - int soap_write_tt__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration*) serialize to a sink
/// - tt__EAPMethodConfiguration* soap_dup_tt__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration* dst, tt__EAPMethodConfiguration *src) returns deep copy of tt__EAPMethodConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EAPMethodConfiguration(tt__EAPMethodConfiguration*) deep deletes tt__EAPMethodConfiguration data members, use only on dst after soap_dup_tt__EAPMethodConfiguration(NULL, tt__EAPMethodConfiguration *dst, tt__EAPMethodConfiguration *src) (use soapcpp2 -Ed)
struct tt__EAPMethodConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Confgiuration information for TLS Method.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLSConfiguration" of type "http://www.onvif.org/ver10/schema":TLSConfiguration.
    struct tt__TLSConfiguration*         TLSConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Password for those EAP Methods that require a password. The password shall never be returned on a get method.
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":EapMethodExtension.
    struct tt__EapMethodExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":EapMethodExtension is a complexType.
///
/// @note struct tt__EapMethodExtension operations:
/// - tt__EapMethodExtension* soap_new_tt__EapMethodExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__EapMethodExtension(struct soap*, tt__EapMethodExtension*) default initialize members
/// - int soap_read_tt__EapMethodExtension(struct soap*, tt__EapMethodExtension*) deserialize from a source
/// - int soap_write_tt__EapMethodExtension(struct soap*, tt__EapMethodExtension*) serialize to a sink
/// - tt__EapMethodExtension* soap_dup_tt__EapMethodExtension(struct soap*, tt__EapMethodExtension* dst, tt__EapMethodExtension *src) returns deep copy of tt__EapMethodExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EapMethodExtension(tt__EapMethodExtension*) deep deletes tt__EapMethodExtension data members, use only on dst after soap_dup_tt__EapMethodExtension(NULL, tt__EapMethodExtension *dst, tt__EapMethodExtension *src) (use soapcpp2 -Ed)
struct tt__EapMethodExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":TLSConfiguration is a complexType.
///
/// @note struct tt__TLSConfiguration operations:
/// - tt__TLSConfiguration* soap_new_tt__TLSConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__TLSConfiguration(struct soap*, tt__TLSConfiguration*) default initialize members
/// - int soap_read_tt__TLSConfiguration(struct soap*, tt__TLSConfiguration*) deserialize from a source
/// - int soap_write_tt__TLSConfiguration(struct soap*, tt__TLSConfiguration*) serialize to a sink
/// - tt__TLSConfiguration* soap_dup_tt__TLSConfiguration(struct soap*, tt__TLSConfiguration* dst, tt__TLSConfiguration *src) returns deep copy of tt__TLSConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TLSConfiguration(tt__TLSConfiguration*) deep deletes tt__TLSConfiguration data members, use only on dst after soap_dup_tt__TLSConfiguration(NULL, tt__TLSConfiguration *dst, tt__TLSConfiguration *src) (use soapcpp2 -Ed)
struct tt__TLSConfiguration
{
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":GenericEapPwdConfigurationExtension is a complexType.
///
/// @note struct tt__GenericEapPwdConfigurationExtension operations:
/// - tt__GenericEapPwdConfigurationExtension* soap_new_tt__GenericEapPwdConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__GenericEapPwdConfigurationExtension(struct soap*, tt__GenericEapPwdConfigurationExtension*) default initialize members
/// - int soap_read_tt__GenericEapPwdConfigurationExtension(struct soap*, tt__GenericEapPwdConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__GenericEapPwdConfigurationExtension(struct soap*, tt__GenericEapPwdConfigurationExtension*) serialize to a sink
/// - tt__GenericEapPwdConfigurationExtension* soap_dup_tt__GenericEapPwdConfigurationExtension(struct soap*, tt__GenericEapPwdConfigurationExtension* dst, tt__GenericEapPwdConfigurationExtension *src) returns deep copy of tt__GenericEapPwdConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__GenericEapPwdConfigurationExtension(tt__GenericEapPwdConfigurationExtension*) deep deletes tt__GenericEapPwdConfigurationExtension data members, use only on dst after soap_dup_tt__GenericEapPwdConfigurationExtension(NULL, tt__GenericEapPwdConfigurationExtension *dst, tt__GenericEapPwdConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__GenericEapPwdConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutputSettings is a complexType.
///
/// @note struct tt__RelayOutputSettings operations:
/// - tt__RelayOutputSettings* soap_new_tt__RelayOutputSettings(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RelayOutputSettings(struct soap*, tt__RelayOutputSettings*) default initialize members
/// - int soap_read_tt__RelayOutputSettings(struct soap*, tt__RelayOutputSettings*) deserialize from a source
/// - int soap_write_tt__RelayOutputSettings(struct soap*, tt__RelayOutputSettings*) serialize to a sink
/// - tt__RelayOutputSettings* soap_dup_tt__RelayOutputSettings(struct soap*, tt__RelayOutputSettings* dst, tt__RelayOutputSettings *src) returns deep copy of tt__RelayOutputSettings src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RelayOutputSettings(tt__RelayOutputSettings*) deep deletes tt__RelayOutputSettings data members, use only on dst after soap_dup_tt__RelayOutputSettings(NULL, tt__RelayOutputSettings *dst, tt__RelayOutputSettings *src) (use soapcpp2 -Ed)
struct tt__RelayOutputSettings
{
/// <PRE><BLOCKQUOTE>
///   'Bistable' or 'Monostable'
///   <ul>
///   <li>Bistable After setting the state, the relay remains in this state.</li>
///   <li>Monostable After setting the state, the relay returns to its idle state after the specified time.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":RelayMode.
    enum tt__RelayMode                   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.
/// </BLOCKQUOTE></PRE>
///
/// Element "DelayTime" of type xs:duration.
    xsd__duration                        DelayTime                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   'open' or 'closed'
///   <ul>
///   <li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li>
///   <li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "IdleState" of type "http://www.onvif.org/ver10/schema":RelayIdleState.
    enum tt__RelayIdleState              IdleState                      1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension is a complexType.
///
/// @note struct tt__PTZNodeExtension operations:
/// - tt__PTZNodeExtension* soap_new_tt__PTZNodeExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZNodeExtension(struct soap*, tt__PTZNodeExtension*) default initialize members
/// - int soap_read_tt__PTZNodeExtension(struct soap*, tt__PTZNodeExtension*) deserialize from a source
/// - int soap_write_tt__PTZNodeExtension(struct soap*, tt__PTZNodeExtension*) serialize to a sink
/// - tt__PTZNodeExtension* soap_dup_tt__PTZNodeExtension(struct soap*, tt__PTZNodeExtension* dst, tt__PTZNodeExtension *src) returns deep copy of tt__PTZNodeExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZNodeExtension(tt__PTZNodeExtension*) deep deletes tt__PTZNodeExtension data members, use only on dst after soap_dup_tt__PTZNodeExtension(NULL, tt__PTZNodeExtension *dst, tt__PTZNodeExtension *src) (use soapcpp2 -Ed)
struct tt__PTZNodeExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Detail of supported Preset Tour feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedPresetTour" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSupported.
    struct tt__PTZPresetTourSupported*   SupportedPresetTour            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZNodeExtension2.
    struct tt__PTZNodeExtension2*        Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension2 is a complexType.
///
/// @note struct tt__PTZNodeExtension2 operations:
/// - tt__PTZNodeExtension2* soap_new_tt__PTZNodeExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZNodeExtension2(struct soap*, tt__PTZNodeExtension2*) default initialize members
/// - int soap_read_tt__PTZNodeExtension2(struct soap*, tt__PTZNodeExtension2*) deserialize from a source
/// - int soap_write_tt__PTZNodeExtension2(struct soap*, tt__PTZNodeExtension2*) serialize to a sink
/// - tt__PTZNodeExtension2* soap_dup_tt__PTZNodeExtension2(struct soap*, tt__PTZNodeExtension2* dst, tt__PTZNodeExtension2 *src) returns deep copy of tt__PTZNodeExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZNodeExtension2(tt__PTZNodeExtension2*) deep deletes tt__PTZNodeExtension2 data members, use only on dst after soap_dup_tt__PTZNodeExtension2(NULL, tt__PTZNodeExtension2 *dst, tt__PTZNodeExtension2 *src) (use soapcpp2 -Ed)
struct tt__PTZNodeExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupported is a complexType.
///
/// @note struct tt__PTZPresetTourSupported operations:
/// - tt__PTZPresetTourSupported* soap_new_tt__PTZPresetTourSupported(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourSupported(struct soap*, tt__PTZPresetTourSupported*) default initialize members
/// - int soap_read_tt__PTZPresetTourSupported(struct soap*, tt__PTZPresetTourSupported*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourSupported(struct soap*, tt__PTZPresetTourSupported*) serialize to a sink
/// - tt__PTZPresetTourSupported* soap_dup_tt__PTZPresetTourSupported(struct soap*, tt__PTZPresetTourSupported* dst, tt__PTZPresetTourSupported *src) returns deep copy of tt__PTZPresetTourSupported src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourSupported(tt__PTZPresetTourSupported*) deep deletes tt__PTZPresetTourSupported data members, use only on dst after soap_dup_tt__PTZPresetTourSupported(NULL, tt__PTZPresetTourSupported *dst, tt__PTZPresetTourSupported *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourSupported
{
/// <PRE><BLOCKQUOTE>
///   Indicates number of preset tours that can be created. Required preset tour operations shall be available for this PTZ Node if one or more preset tour is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfPresetTours" of type xs:int.
    int                                  MaximumNumberOfPresetTours     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates which preset tour operations are available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__PTZPresetTourOperation* is 0..unbounded.
  $ int                                  __sizePTZPresetTourOperation   0;
/// Array enum tt__PTZPresetTourOperation* of size 0..unbounded.
    enum tt__PTZPresetTourOperation*     PTZPresetTourOperation         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension.
    struct tt__PTZPresetTourSupportedExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension is a complexType.
///
/// @note struct tt__PTZPresetTourSupportedExtension operations:
/// - tt__PTZPresetTourSupportedExtension* soap_new_tt__PTZPresetTourSupportedExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourSupportedExtension(struct soap*, tt__PTZPresetTourSupportedExtension*) default initialize members
/// - int soap_read_tt__PTZPresetTourSupportedExtension(struct soap*, tt__PTZPresetTourSupportedExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourSupportedExtension(struct soap*, tt__PTZPresetTourSupportedExtension*) serialize to a sink
/// - tt__PTZPresetTourSupportedExtension* soap_dup_tt__PTZPresetTourSupportedExtension(struct soap*, tt__PTZPresetTourSupportedExtension* dst, tt__PTZPresetTourSupportedExtension *src) returns deep copy of tt__PTZPresetTourSupportedExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourSupportedExtension(tt__PTZPresetTourSupportedExtension*) deep deletes tt__PTZPresetTourSupportedExtension data members, use only on dst after soap_dup_tt__PTZPresetTourSupportedExtension(NULL, tt__PTZPresetTourSupportedExtension *dst, tt__PTZPresetTourSupportedExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourSupportedExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is a complexType.
///
/// @note struct tt__PTZConfigurationExtension operations:
/// - tt__PTZConfigurationExtension* soap_new_tt__PTZConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZConfigurationExtension(struct soap*, tt__PTZConfigurationExtension*) default initialize members
/// - int soap_read_tt__PTZConfigurationExtension(struct soap*, tt__PTZConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__PTZConfigurationExtension(struct soap*, tt__PTZConfigurationExtension*) serialize to a sink
/// - tt__PTZConfigurationExtension* soap_dup_tt__PTZConfigurationExtension(struct soap*, tt__PTZConfigurationExtension* dst, tt__PTZConfigurationExtension *src) returns deep copy of tt__PTZConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZConfigurationExtension(tt__PTZConfigurationExtension*) deep deletes tt__PTZConfigurationExtension data members, use only on dst after soap_dup_tt__PTZConfigurationExtension(NULL, tt__PTZConfigurationExtension *dst, tt__PTZConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__PTZConfigurationExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure PT Control Direction related features.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTControlDirection" of type "http://www.onvif.org/ver10/schema":PTControlDirection.
    struct tt__PTControlDirection*       PTControlDirection             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2.
    struct tt__PTZConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2 is a complexType.
///
/// @note struct tt__PTZConfigurationExtension2 operations:
/// - tt__PTZConfigurationExtension2* soap_new_tt__PTZConfigurationExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZConfigurationExtension2(struct soap*, tt__PTZConfigurationExtension2*) default initialize members
/// - int soap_read_tt__PTZConfigurationExtension2(struct soap*, tt__PTZConfigurationExtension2*) deserialize from a source
/// - int soap_write_tt__PTZConfigurationExtension2(struct soap*, tt__PTZConfigurationExtension2*) serialize to a sink
/// - tt__PTZConfigurationExtension2* soap_dup_tt__PTZConfigurationExtension2(struct soap*, tt__PTZConfigurationExtension2* dst, tt__PTZConfigurationExtension2 *src) returns deep copy of tt__PTZConfigurationExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZConfigurationExtension2(tt__PTZConfigurationExtension2*) deep deletes tt__PTZConfigurationExtension2 data members, use only on dst after soap_dup_tt__PTZConfigurationExtension2(NULL, tt__PTZConfigurationExtension2 *dst, tt__PTZConfigurationExtension2 *src) (use soapcpp2 -Ed)
struct tt__PTZConfigurationExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirection is a complexType.
///
/// @note struct tt__PTControlDirection operations:
/// - tt__PTControlDirection* soap_new_tt__PTControlDirection(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTControlDirection(struct soap*, tt__PTControlDirection*) default initialize members
/// - int soap_read_tt__PTControlDirection(struct soap*, tt__PTControlDirection*) deserialize from a source
/// - int soap_write_tt__PTControlDirection(struct soap*, tt__PTControlDirection*) serialize to a sink
/// - tt__PTControlDirection* soap_dup_tt__PTControlDirection(struct soap*, tt__PTControlDirection* dst, tt__PTControlDirection *src) returns deep copy of tt__PTControlDirection src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTControlDirection(tt__PTControlDirection*) deep deletes tt__PTControlDirection data members, use only on dst after soap_dup_tt__PTControlDirection(NULL, tt__PTControlDirection *dst, tt__PTControlDirection *src) (use soapcpp2 -Ed)
struct tt__PTControlDirection
{
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for E-Flip.
/// </BLOCKQUOTE></PRE>
///
/// Element "EFlip" of type "http://www.onvif.org/ver10/schema":EFlip.
    struct tt__EFlip*                    EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for reversing of PT Control Direction.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reverse" of type "http://www.onvif.org/ver10/schema":Reverse.
    struct tt__Reverse*                  Reverse                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTControlDirectionExtension.
    struct tt__PTControlDirectionExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionExtension is a complexType.
///
/// @note struct tt__PTControlDirectionExtension operations:
/// - tt__PTControlDirectionExtension* soap_new_tt__PTControlDirectionExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTControlDirectionExtension(struct soap*, tt__PTControlDirectionExtension*) default initialize members
/// - int soap_read_tt__PTControlDirectionExtension(struct soap*, tt__PTControlDirectionExtension*) deserialize from a source
/// - int soap_write_tt__PTControlDirectionExtension(struct soap*, tt__PTControlDirectionExtension*) serialize to a sink
/// - tt__PTControlDirectionExtension* soap_dup_tt__PTControlDirectionExtension(struct soap*, tt__PTControlDirectionExtension* dst, tt__PTControlDirectionExtension *src) returns deep copy of tt__PTControlDirectionExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTControlDirectionExtension(tt__PTControlDirectionExtension*) deep deletes tt__PTControlDirectionExtension data members, use only on dst after soap_dup_tt__PTControlDirectionExtension(NULL, tt__PTControlDirectionExtension *dst, tt__PTControlDirectionExtension *src) (use soapcpp2 -Ed)
struct tt__PTControlDirectionExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":EFlip is a complexType.
///
/// @note struct tt__EFlip operations:
/// - tt__EFlip* soap_new_tt__EFlip(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__EFlip(struct soap*, tt__EFlip*) default initialize members
/// - int soap_read_tt__EFlip(struct soap*, tt__EFlip*) deserialize from a source
/// - int soap_write_tt__EFlip(struct soap*, tt__EFlip*) serialize to a sink
/// - tt__EFlip* soap_dup_tt__EFlip(struct soap*, tt__EFlip* dst, tt__EFlip *src) returns deep copy of tt__EFlip src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EFlip(tt__EFlip*) deep deletes tt__EFlip data members, use only on dst after soap_dup_tt__EFlip(NULL, tt__EFlip *dst, tt__EFlip *src) (use soapcpp2 -Ed)
struct tt__EFlip
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable E-Flip feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":EFlipMode.
    enum tt__EFlipMode                   Mode                           1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Reverse is a complexType.
///
/// @note struct tt__Reverse operations:
/// - tt__Reverse* soap_new_tt__Reverse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Reverse(struct soap*, tt__Reverse*) default initialize members
/// - int soap_read_tt__Reverse(struct soap*, tt__Reverse*) deserialize from a source
/// - int soap_write_tt__Reverse(struct soap*, tt__Reverse*) serialize to a sink
/// - tt__Reverse* soap_dup_tt__Reverse(struct soap*, tt__Reverse* dst, tt__Reverse *src) returns deep copy of tt__Reverse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Reverse(tt__Reverse*) deep deletes tt__Reverse data members, use only on dst after soap_dup_tt__Reverse(NULL, tt__Reverse *dst, tt__Reverse *src) (use soapcpp2 -Ed)
struct tt__Reverse
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Reverse feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ReverseMode.
    enum tt__ReverseMode                 Mode                           1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is a complexType.
///
/// @note struct tt__PTZConfigurationOptions operations:
/// - tt__PTZConfigurationOptions* soap_new_tt__PTZConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZConfigurationOptions(struct soap*, tt__PTZConfigurationOptions*) default initialize members
/// - int soap_read_tt__PTZConfigurationOptions(struct soap*, tt__PTZConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__PTZConfigurationOptions(struct soap*, tt__PTZConfigurationOptions*) serialize to a sink
/// - tt__PTZConfigurationOptions* soap_dup_tt__PTZConfigurationOptions(struct soap*, tt__PTZConfigurationOptions* dst, tt__PTZConfigurationOptions *src) returns deep copy of tt__PTZConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZConfigurationOptions(tt__PTZConfigurationOptions*) deep deletes tt__PTZConfigurationOptions data members, use only on dst after soap_dup_tt__PTZConfigurationOptions(NULL, tt__PTZConfigurationOptions *dst, tt__PTZConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__PTZConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   A list of supported coordinate systems including their range limitations.
/// </BLOCKQUOTE></PRE>
///
/// Element "Spaces" of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    struct tt__PTZSpaces*                Spaces                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A timeout Range within which Timeouts are accepted by the PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZTimeout" of type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            PTZTimeout                     1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Supported options for PT Direction Control.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTControlDirection" of type "http://www.onvif.org/ver10/schema":PTControlDirectionOptions.
    struct tt__PTControlDirectionOptions*  PTControlDirection             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2.
    struct tt__PTZConfigurationOptions2*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The list of acceleration ramps supported by the device. The
///   smallest acceleration value corresponds to the minimal index, the
///   highest acceleration corresponds to the maximum index.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PTZRamps" of type "http://www.onvif.org/ver10/schema":IntAttrList.
  @ tt__IntAttrList                      PTZRamps                       0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2 is a complexType.
///
/// @note struct tt__PTZConfigurationOptions2 operations:
/// - tt__PTZConfigurationOptions2* soap_new_tt__PTZConfigurationOptions2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZConfigurationOptions2(struct soap*, tt__PTZConfigurationOptions2*) default initialize members
/// - int soap_read_tt__PTZConfigurationOptions2(struct soap*, tt__PTZConfigurationOptions2*) deserialize from a source
/// - int soap_write_tt__PTZConfigurationOptions2(struct soap*, tt__PTZConfigurationOptions2*) serialize to a sink
/// - tt__PTZConfigurationOptions2* soap_dup_tt__PTZConfigurationOptions2(struct soap*, tt__PTZConfigurationOptions2* dst, tt__PTZConfigurationOptions2 *src) returns deep copy of tt__PTZConfigurationOptions2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZConfigurationOptions2(tt__PTZConfigurationOptions2*) deep deletes tt__PTZConfigurationOptions2 data members, use only on dst after soap_dup_tt__PTZConfigurationOptions2(NULL, tt__PTZConfigurationOptions2 *dst, tt__PTZConfigurationOptions2 *src) (use soapcpp2 -Ed)
struct tt__PTZConfigurationOptions2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptions is a complexType.
///
/// @note struct tt__PTControlDirectionOptions operations:
/// - tt__PTControlDirectionOptions* soap_new_tt__PTControlDirectionOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTControlDirectionOptions(struct soap*, tt__PTControlDirectionOptions*) default initialize members
/// - int soap_read_tt__PTControlDirectionOptions(struct soap*, tt__PTControlDirectionOptions*) deserialize from a source
/// - int soap_write_tt__PTControlDirectionOptions(struct soap*, tt__PTControlDirectionOptions*) serialize to a sink
/// - tt__PTControlDirectionOptions* soap_dup_tt__PTControlDirectionOptions(struct soap*, tt__PTControlDirectionOptions* dst, tt__PTControlDirectionOptions *src) returns deep copy of tt__PTControlDirectionOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTControlDirectionOptions(tt__PTControlDirectionOptions*) deep deletes tt__PTControlDirectionOptions data members, use only on dst after soap_dup_tt__PTControlDirectionOptions(NULL, tt__PTControlDirectionOptions *dst, tt__PTControlDirectionOptions *src) (use soapcpp2 -Ed)
struct tt__PTControlDirectionOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for EFlip feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "EFlip" of type "http://www.onvif.org/ver10/schema":EFlipOptions.
    struct tt__EFlipOptions*             EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Reverse feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reverse" of type "http://www.onvif.org/ver10/schema":ReverseOptions.
    struct tt__ReverseOptions*           Reverse                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension.
    struct tt__PTControlDirectionOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension is a complexType.
///
/// @note struct tt__PTControlDirectionOptionsExtension operations:
/// - tt__PTControlDirectionOptionsExtension* soap_new_tt__PTControlDirectionOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTControlDirectionOptionsExtension(struct soap*, tt__PTControlDirectionOptionsExtension*) default initialize members
/// - int soap_read_tt__PTControlDirectionOptionsExtension(struct soap*, tt__PTControlDirectionOptionsExtension*) deserialize from a source
/// - int soap_write_tt__PTControlDirectionOptionsExtension(struct soap*, tt__PTControlDirectionOptionsExtension*) serialize to a sink
/// - tt__PTControlDirectionOptionsExtension* soap_dup_tt__PTControlDirectionOptionsExtension(struct soap*, tt__PTControlDirectionOptionsExtension* dst, tt__PTControlDirectionOptionsExtension *src) returns deep copy of tt__PTControlDirectionOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTControlDirectionOptionsExtension(tt__PTControlDirectionOptionsExtension*) deep deletes tt__PTControlDirectionOptionsExtension data members, use only on dst after soap_dup_tt__PTControlDirectionOptionsExtension(NULL, tt__PTControlDirectionOptionsExtension *dst, tt__PTControlDirectionOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__PTControlDirectionOptionsExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptions is a complexType.
///
/// @note struct tt__EFlipOptions operations:
/// - tt__EFlipOptions* soap_new_tt__EFlipOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__EFlipOptions(struct soap*, tt__EFlipOptions*) default initialize members
/// - int soap_read_tt__EFlipOptions(struct soap*, tt__EFlipOptions*) deserialize from a source
/// - int soap_write_tt__EFlipOptions(struct soap*, tt__EFlipOptions*) serialize to a sink
/// - tt__EFlipOptions* soap_dup_tt__EFlipOptions(struct soap*, tt__EFlipOptions* dst, tt__EFlipOptions *src) returns deep copy of tt__EFlipOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EFlipOptions(tt__EFlipOptions*) deep deletes tt__EFlipOptions data members, use only on dst after soap_dup_tt__EFlipOptions(NULL, tt__EFlipOptions *dst, tt__EFlipOptions *src) (use soapcpp2 -Ed)
struct tt__EFlipOptions
{
/// <PRE><BLOCKQUOTE>
///   Options of EFlip mode parameter.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__EFlipMode* is 0..unbounded.
  $ int                                  __sizeMode                     0;
/// Array enum tt__EFlipMode* of size 0..unbounded.
    enum tt__EFlipMode*                  Mode                           0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":EFlipOptionsExtension.
    struct tt__EFlipOptionsExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptionsExtension is a complexType.
///
/// @note struct tt__EFlipOptionsExtension operations:
/// - tt__EFlipOptionsExtension* soap_new_tt__EFlipOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__EFlipOptionsExtension(struct soap*, tt__EFlipOptionsExtension*) default initialize members
/// - int soap_read_tt__EFlipOptionsExtension(struct soap*, tt__EFlipOptionsExtension*) deserialize from a source
/// - int soap_write_tt__EFlipOptionsExtension(struct soap*, tt__EFlipOptionsExtension*) serialize to a sink
/// - tt__EFlipOptionsExtension* soap_dup_tt__EFlipOptionsExtension(struct soap*, tt__EFlipOptionsExtension* dst, tt__EFlipOptionsExtension *src) returns deep copy of tt__EFlipOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EFlipOptionsExtension(tt__EFlipOptionsExtension*) deep deletes tt__EFlipOptionsExtension data members, use only on dst after soap_dup_tt__EFlipOptionsExtension(NULL, tt__EFlipOptionsExtension *dst, tt__EFlipOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__EFlipOptionsExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptions is a complexType.
///
/// @note struct tt__ReverseOptions operations:
/// - tt__ReverseOptions* soap_new_tt__ReverseOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ReverseOptions(struct soap*, tt__ReverseOptions*) default initialize members
/// - int soap_read_tt__ReverseOptions(struct soap*, tt__ReverseOptions*) deserialize from a source
/// - int soap_write_tt__ReverseOptions(struct soap*, tt__ReverseOptions*) serialize to a sink
/// - tt__ReverseOptions* soap_dup_tt__ReverseOptions(struct soap*, tt__ReverseOptions* dst, tt__ReverseOptions *src) returns deep copy of tt__ReverseOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReverseOptions(tt__ReverseOptions*) deep deletes tt__ReverseOptions data members, use only on dst after soap_dup_tt__ReverseOptions(NULL, tt__ReverseOptions *dst, tt__ReverseOptions *src) (use soapcpp2 -Ed)
struct tt__ReverseOptions
{
/// <PRE><BLOCKQUOTE>
///   Options of Reverse mode parameter.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__ReverseMode* is 0..unbounded.
  $ int                                  __sizeMode                     0;
/// Array enum tt__ReverseMode* of size 0..unbounded.
    enum tt__ReverseMode*                Mode                           0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ReverseOptionsExtension.
    struct tt__ReverseOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptionsExtension is a complexType.
///
/// @note struct tt__ReverseOptionsExtension operations:
/// - tt__ReverseOptionsExtension* soap_new_tt__ReverseOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ReverseOptionsExtension(struct soap*, tt__ReverseOptionsExtension*) default initialize members
/// - int soap_read_tt__ReverseOptionsExtension(struct soap*, tt__ReverseOptionsExtension*) deserialize from a source
/// - int soap_write_tt__ReverseOptionsExtension(struct soap*, tt__ReverseOptionsExtension*) serialize to a sink
/// - tt__ReverseOptionsExtension* soap_dup_tt__ReverseOptionsExtension(struct soap*, tt__ReverseOptionsExtension* dst, tt__ReverseOptionsExtension *src) returns deep copy of tt__ReverseOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReverseOptionsExtension(tt__ReverseOptionsExtension*) deep deletes tt__ReverseOptionsExtension data members, use only on dst after soap_dup_tt__ReverseOptionsExtension(NULL, tt__ReverseOptionsExtension *dst, tt__ReverseOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__ReverseOptionsExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PanTiltLimits is a complexType.
///
/// @note struct tt__PanTiltLimits operations:
/// - tt__PanTiltLimits* soap_new_tt__PanTiltLimits(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PanTiltLimits(struct soap*, tt__PanTiltLimits*) default initialize members
/// - int soap_read_tt__PanTiltLimits(struct soap*, tt__PanTiltLimits*) deserialize from a source
/// - int soap_write_tt__PanTiltLimits(struct soap*, tt__PanTiltLimits*) serialize to a sink
/// - tt__PanTiltLimits* soap_dup_tt__PanTiltLimits(struct soap*, tt__PanTiltLimits* dst, tt__PanTiltLimits *src) returns deep copy of tt__PanTiltLimits src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PanTiltLimits(tt__PanTiltLimits*) deep deletes tt__PanTiltLimits data members, use only on dst after soap_dup_tt__PanTiltLimits(NULL, tt__PanTiltLimits *dst, tt__PanTiltLimits *src) (use soapcpp2 -Ed)
struct tt__PanTiltLimits
{
/// <PRE><BLOCKQUOTE>
///   A range of pan tilt limits.
/// </BLOCKQUOTE></PRE>
///
/// Element "Range" of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    struct tt__Space2DDescription*       Range                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ZoomLimits is a complexType.
///
/// @note struct tt__ZoomLimits operations:
/// - tt__ZoomLimits* soap_new_tt__ZoomLimits(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ZoomLimits(struct soap*, tt__ZoomLimits*) default initialize members
/// - int soap_read_tt__ZoomLimits(struct soap*, tt__ZoomLimits*) deserialize from a source
/// - int soap_write_tt__ZoomLimits(struct soap*, tt__ZoomLimits*) serialize to a sink
/// - tt__ZoomLimits* soap_dup_tt__ZoomLimits(struct soap*, tt__ZoomLimits* dst, tt__ZoomLimits *src) returns deep copy of tt__ZoomLimits src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ZoomLimits(tt__ZoomLimits*) deep deletes tt__ZoomLimits data members, use only on dst after soap_dup_tt__ZoomLimits(NULL, tt__ZoomLimits *dst, tt__ZoomLimits *src) (use soapcpp2 -Ed)
struct tt__ZoomLimits
{
/// <PRE><BLOCKQUOTE>
///   A range of zoom limit
/// </BLOCKQUOTE></PRE>
///
/// Element "Range" of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    struct tt__Space1DDescription*       Range                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpaces is a complexType.
///
/// @note struct tt__PTZSpaces operations:
/// - tt__PTZSpaces* soap_new_tt__PTZSpaces(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZSpaces(struct soap*, tt__PTZSpaces*) default initialize members
/// - int soap_read_tt__PTZSpaces(struct soap*, tt__PTZSpaces*) deserialize from a source
/// - int soap_write_tt__PTZSpaces(struct soap*, tt__PTZSpaces*) serialize to a sink
/// - tt__PTZSpaces* soap_dup_tt__PTZSpaces(struct soap*, tt__PTZSpaces* dst, tt__PTZSpaces *src) returns deep copy of tt__PTZSpaces src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZSpaces(tt__PTZSpaces*) deep deletes tt__PTZSpaces data members, use only on dst after soap_dup_tt__PTZSpaces(NULL, tt__PTZSpaces *dst, tt__PTZSpaces *src) (use soapcpp2 -Ed)
struct tt__PTZSpaces
{
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt Position space is provided by every PTZ node that supports absolute Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the PTZ unit normalized to the range -1 to 1 resulting in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Space2DDescription* is 0..unbounded.
  $ int                                  __sizeAbsolutePanTiltPositionSpace 0;
/// Array struct tt__Space2DDescription* of size 0..unbounded.
    struct tt__Space2DDescription*       AbsolutePanTiltPositionSpace   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Position Space is provided by every PTZ node that supports absolute Zoom, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the Zoom normalized to the range 0 (wide) to 1 (tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
  $ int                                  __sizeAbsoluteZoomPositionSpace 0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       AbsoluteZoomPositionSpace      0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt translation space is provided by every PTZ node that supports relative Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full positive and negative translation range of the PTZ unit normalized to the range -1 to 1, where positive translation would mean clockwise rotation or movement in right/up direction resulting in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Space2DDescription* is 0..unbounded.
  $ int                                  __sizeRelativePanTiltTranslationSpace 0;
/// Array struct tt__Space2DDescription* of size 0..unbounded.
    struct tt__Space2DDescription*       RelativePanTiltTranslationSpace 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Translation Space is provided by every PTZ node that supports relative Zoom, since it does not relate to a specific physical range. Instead, the corresponding absolute range should be defined as the full positive and negative translation range of the Zoom normalized to the range -1 to1, where a positive translation maps to a movement in TELE direction. The translation is signed to indicate direction (negative is to wide, positive is to tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension. This results in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
  $ int                                  __sizeRelativeZoomTranslationSpace 0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       RelativeZoomTranslationSpace   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range. Instead, the range should be defined as a range of the PTZ units speed normalized to the range -1 to 1, where a positive velocity would map to clockwise rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Space2DDescription* is 0..unbounded.
  $ int                                  __sizeContinuousPanTiltVelocitySpace 0;
/// Array struct tt__Space2DDescription* of size 0..unbounded.
    struct tt__Space2DDescription*       ContinuousPanTiltVelocitySpace 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1, where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
  $ int                                  __sizeContinuousZoomVelocitySpace 0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       ContinuousZoomVelocitySpace    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt movement is represented by a single non-negative scalar value.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
  $ int                                  __sizePanTiltSpeedSpace        0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       PanTiltSpeedSpace              0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
  $ int                                  __sizeZoomSpeedSpace           0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       ZoomSpeedSpace                 0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZSpacesExtension.
    struct tt__PTZSpacesExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpacesExtension is a complexType.
///
/// @note struct tt__PTZSpacesExtension operations:
/// - tt__PTZSpacesExtension* soap_new_tt__PTZSpacesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZSpacesExtension(struct soap*, tt__PTZSpacesExtension*) default initialize members
/// - int soap_read_tt__PTZSpacesExtension(struct soap*, tt__PTZSpacesExtension*) deserialize from a source
/// - int soap_write_tt__PTZSpacesExtension(struct soap*, tt__PTZSpacesExtension*) serialize to a sink
/// - tt__PTZSpacesExtension* soap_dup_tt__PTZSpacesExtension(struct soap*, tt__PTZSpacesExtension* dst, tt__PTZSpacesExtension *src) returns deep copy of tt__PTZSpacesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZSpacesExtension(tt__PTZSpacesExtension*) deep deletes tt__PTZSpacesExtension data members, use only on dst after soap_dup_tt__PTZSpacesExtension(NULL, tt__PTZSpacesExtension *dst, tt__PTZSpacesExtension *src) (use soapcpp2 -Ed)
struct tt__PTZSpacesExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Space2DDescription is a complexType.
///
/// @note struct tt__Space2DDescription operations:
/// - tt__Space2DDescription* soap_new_tt__Space2DDescription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Space2DDescription(struct soap*, tt__Space2DDescription*) default initialize members
/// - int soap_read_tt__Space2DDescription(struct soap*, tt__Space2DDescription*) deserialize from a source
/// - int soap_write_tt__Space2DDescription(struct soap*, tt__Space2DDescription*) serialize to a sink
/// - tt__Space2DDescription* soap_dup_tt__Space2DDescription(struct soap*, tt__Space2DDescription* dst, tt__Space2DDescription *src) returns deep copy of tt__Space2DDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Space2DDescription(tt__Space2DDescription*) deep deletes tt__Space2DDescription data members, use only on dst after soap_dup_tt__Space2DDescription(NULL, tt__Space2DDescription *dst, tt__Space2DDescription *src) (use soapcpp2 -Ed)
struct tt__Space2DDescription
{
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
///
/// Element "URI" of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of y-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "YRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YRange                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Space1DDescription is a complexType.
///
/// @note struct tt__Space1DDescription operations:
/// - tt__Space1DDescription* soap_new_tt__Space1DDescription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Space1DDescription(struct soap*, tt__Space1DDescription*) default initialize members
/// - int soap_read_tt__Space1DDescription(struct soap*, tt__Space1DDescription*) deserialize from a source
/// - int soap_write_tt__Space1DDescription(struct soap*, tt__Space1DDescription*) serialize to a sink
/// - tt__Space1DDescription* soap_dup_tt__Space1DDescription(struct soap*, tt__Space1DDescription* dst, tt__Space1DDescription *src) returns deep copy of tt__Space1DDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Space1DDescription(tt__Space1DDescription*) deep deletes tt__Space1DDescription data members, use only on dst after soap_dup_tt__Space1DDescription(NULL, tt__Space1DDescription *dst, tt__Space1DDescription *src) (use soapcpp2 -Ed)
struct tt__Space1DDescription
{
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
///
/// Element "URI" of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               XRange                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpeed is a complexType.
///
/// @note struct tt__PTZSpeed operations:
/// - tt__PTZSpeed* soap_new_tt__PTZSpeed(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZSpeed(struct soap*, tt__PTZSpeed*) default initialize members
/// - int soap_read_tt__PTZSpeed(struct soap*, tt__PTZSpeed*) deserialize from a source
/// - int soap_write_tt__PTZSpeed(struct soap*, tt__PTZSpeed*) serialize to a sink
/// - tt__PTZSpeed* soap_dup_tt__PTZSpeed(struct soap*, tt__PTZSpeed* dst, tt__PTZSpeed *src) returns deep copy of tt__PTZSpeed src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZSpeed(tt__PTZSpeed*) deep deletes tt__PTZSpeed data members, use only on dst after soap_dup_tt__PTZSpeed(NULL, tt__PTZSpeed *dst, tt__PTZSpeed *src) (use soapcpp2 -Ed)
struct tt__PTZSpeed
{
/// <PRE><BLOCKQUOTE>
///   Pan and tilt speed. The x component corresponds to pan and the y component to tilt. If omitted in a request, the current (if any) PanTilt movement should not be affected.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":Vector2D.
    struct tt__Vector2D*                 PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom speed. If omitted in a request, the current (if any) Zoom movement should not be affected.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":Vector1D.
    struct tt__Vector1D*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPreset is a complexType.
///
/// @note struct tt__PTZPreset operations:
/// - tt__PTZPreset* soap_new_tt__PTZPreset(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPreset(struct soap*, tt__PTZPreset*) default initialize members
/// - int soap_read_tt__PTZPreset(struct soap*, tt__PTZPreset*) deserialize from a source
/// - int soap_write_tt__PTZPreset(struct soap*, tt__PTZPreset*) serialize to a sink
/// - tt__PTZPreset* soap_dup_tt__PTZPreset(struct soap*, tt__PTZPreset* dst, tt__PTZPreset *src) returns deep copy of tt__PTZPreset src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPreset(tt__PTZPreset*) deep deletes tt__PTZPreset data members, use only on dst after soap_dup_tt__PTZPreset(NULL, tt__PTZPreset *dst, tt__PTZPreset *src) (use soapcpp2 -Ed)
struct tt__PTZPreset
{
/// <PRE><BLOCKQUOTE>
///   A list of preset position name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of preset position.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                PTZPosition                    0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PresetTour is a complexType.
///
/// @note struct tt__PresetTour operations:
/// - tt__PresetTour* soap_new_tt__PresetTour(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PresetTour(struct soap*, tt__PresetTour*) default initialize members
/// - int soap_read_tt__PresetTour(struct soap*, tt__PresetTour*) deserialize from a source
/// - int soap_write_tt__PresetTour(struct soap*, tt__PresetTour*) serialize to a sink
/// - tt__PresetTour* soap_dup_tt__PresetTour(struct soap*, tt__PresetTour* dst, tt__PresetTour *src) returns deep copy of tt__PresetTour src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PresetTour(tt__PresetTour*) deep deletes tt__PresetTour data members, use only on dst after soap_dup_tt__PresetTour(NULL, tt__PresetTour *dst, tt__PresetTour *src) (use soapcpp2 -Ed)
struct tt__PresetTour
{
/// <PRE><BLOCKQUOTE>
///   Readable name of the preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Read only parameters to indicate the status of the preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStatus.
    struct tt__PTZPresetTourStatus*      Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Auto Start flag of the preset tour. True allows the preset tour to be activated always.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoStart" of type xs:boolean.
    enum xsd__boolean                    AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameters to specify the detail behavior of the preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Element "StartingCondition" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition.
    struct tt__PTZPresetTourStartingCondition*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of detail of touring spots including preset positions.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PTZPresetTourSpot* is 0..unbounded.
  $ int                                  __sizeTourSpot                 0;
/// Array struct tt__PTZPresetTourSpot* of size 0..unbounded.
    struct tt__PTZPresetTourSpot*        TourSpot                       0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourExtension.
    struct tt__PTZPresetTourExtension*   Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of this preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourExtension is a complexType.
///
/// @note struct tt__PTZPresetTourExtension operations:
/// - tt__PTZPresetTourExtension* soap_new_tt__PTZPresetTourExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourExtension(struct soap*, tt__PTZPresetTourExtension*) default initialize members
/// - int soap_read_tt__PTZPresetTourExtension(struct soap*, tt__PTZPresetTourExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourExtension(struct soap*, tt__PTZPresetTourExtension*) serialize to a sink
/// - tt__PTZPresetTourExtension* soap_dup_tt__PTZPresetTourExtension(struct soap*, tt__PTZPresetTourExtension* dst, tt__PTZPresetTourExtension *src) returns deep copy of tt__PTZPresetTourExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourExtension(tt__PTZPresetTourExtension*) deep deletes tt__PTZPresetTourExtension data members, use only on dst after soap_dup_tt__PTZPresetTourExtension(NULL, tt__PTZPresetTourExtension *dst, tt__PTZPresetTourExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpot is a complexType.
///
/// @note struct tt__PTZPresetTourSpot operations:
/// - tt__PTZPresetTourSpot* soap_new_tt__PTZPresetTourSpot(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourSpot(struct soap*, tt__PTZPresetTourSpot*) default initialize members
/// - int soap_read_tt__PTZPresetTourSpot(struct soap*, tt__PTZPresetTourSpot*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourSpot(struct soap*, tt__PTZPresetTourSpot*) serialize to a sink
/// - tt__PTZPresetTourSpot* soap_dup_tt__PTZPresetTourSpot(struct soap*, tt__PTZPresetTourSpot* dst, tt__PTZPresetTourSpot *src) returns deep copy of tt__PTZPresetTourSpot src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourSpot(tt__PTZPresetTourSpot*) deep deletes tt__PTZPresetTourSpot data members, use only on dst after soap_dup_tt__PTZPresetTourSpot(NULL, tt__PTZPresetTourSpot *dst, tt__PTZPresetTourSpot *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourSpot
{
/// <PRE><BLOCKQUOTE>
///   Detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetDetail" of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail.
    struct tt__PTZPresetTourPresetDetail*  PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify Pan/Tilt and Zoom speed on moving toward this tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify time duration of staying on this tour sport.
/// </BLOCKQUOTE></PRE>
///
/// Element "StayTime" of type xs:duration.
    xsd__duration                        StayTime                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension.
    struct tt__PTZPresetTourSpotExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension is a complexType.
///
/// @note struct tt__PTZPresetTourSpotExtension operations:
/// - tt__PTZPresetTourSpotExtension* soap_new_tt__PTZPresetTourSpotExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourSpotExtension(struct soap*, tt__PTZPresetTourSpotExtension*) default initialize members
/// - int soap_read_tt__PTZPresetTourSpotExtension(struct soap*, tt__PTZPresetTourSpotExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourSpotExtension(struct soap*, tt__PTZPresetTourSpotExtension*) serialize to a sink
/// - tt__PTZPresetTourSpotExtension* soap_dup_tt__PTZPresetTourSpotExtension(struct soap*, tt__PTZPresetTourSpotExtension* dst, tt__PTZPresetTourSpotExtension *src) returns deep copy of tt__PTZPresetTourSpotExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourSpotExtension(tt__PTZPresetTourSpotExtension*) deep deletes tt__PTZPresetTourSpotExtension data members, use only on dst after soap_dup_tt__PTZPresetTourSpotExtension(NULL, tt__PTZPresetTourSpotExtension *dst, tt__PTZPresetTourSpotExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourSpotExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail is a complexType.
///
/// @note struct tt__PTZPresetTourPresetDetail operations:
/// - tt__PTZPresetTourPresetDetail* soap_new_tt__PTZPresetTourPresetDetail(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourPresetDetail(struct soap*, tt__PTZPresetTourPresetDetail*) default initialize members
/// - int soap_read_tt__PTZPresetTourPresetDetail(struct soap*, tt__PTZPresetTourPresetDetail*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourPresetDetail(struct soap*, tt__PTZPresetTourPresetDetail*) serialize to a sink
/// - tt__PTZPresetTourPresetDetail* soap_dup_tt__PTZPresetTourPresetDetail(struct soap*, tt__PTZPresetTourPresetDetail* dst, tt__PTZPresetTourPresetDetail *src) returns deep copy of tt__PTZPresetTourPresetDetail src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourPresetDetail(tt__PTZPresetTourPresetDetail*) deep deletes tt__PTZPresetTourPresetDetail data members, use only on dst after soap_dup_tt__PTZPresetTourPresetDetail(NULL, tt__PTZPresetTourPresetDetail *dst, tt__PTZPresetTourPresetDetail *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourPresetDetail
{
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_PTZPresetTourPresetDetail;	///< Union _tt__union_PTZPresetTourPresetDetail selector: set to SOAP_UNION__tt__union_PTZPresetTourPresetDetail_<fieldname>
    union _tt__union_PTZPresetTourPresetDetail
    {
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with Preset Token defined in advance.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                   ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with the home position of this PTZ Node. "False" to this parameter shall be treated as an invalid argument.
/// </BLOCKQUOTE></PRE>
///
/// Element "Home" of type xs:boolean.
    enum xsd__boolean                    Home                          ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with vector of PTZ node directly.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                PTZPosition                   ;	///< Choice of element (one of multiple choices).
/// Element "TypeExtension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension.
    struct tt__PTZPresetTourTypeExtension*  TypeExtension                 ;	///< Choice of element (one of multiple choices).
    }                                    union_PTZPresetTourPresetDetail;
//  END OF CHOICE
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension is a complexType.
///
/// @note struct tt__PTZPresetTourTypeExtension operations:
/// - tt__PTZPresetTourTypeExtension* soap_new_tt__PTZPresetTourTypeExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourTypeExtension(struct soap*, tt__PTZPresetTourTypeExtension*) default initialize members
/// - int soap_read_tt__PTZPresetTourTypeExtension(struct soap*, tt__PTZPresetTourTypeExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourTypeExtension(struct soap*, tt__PTZPresetTourTypeExtension*) serialize to a sink
/// - tt__PTZPresetTourTypeExtension* soap_dup_tt__PTZPresetTourTypeExtension(struct soap*, tt__PTZPresetTourTypeExtension* dst, tt__PTZPresetTourTypeExtension *src) returns deep copy of tt__PTZPresetTourTypeExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourTypeExtension(tt__PTZPresetTourTypeExtension*) deep deletes tt__PTZPresetTourTypeExtension data members, use only on dst after soap_dup_tt__PTZPresetTourTypeExtension(NULL, tt__PTZPresetTourTypeExtension *dst, tt__PTZPresetTourTypeExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourTypeExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatus is a complexType.
///
/// @note struct tt__PTZPresetTourStatus operations:
/// - tt__PTZPresetTourStatus* soap_new_tt__PTZPresetTourStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourStatus(struct soap*, tt__PTZPresetTourStatus*) default initialize members
/// - int soap_read_tt__PTZPresetTourStatus(struct soap*, tt__PTZPresetTourStatus*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourStatus(struct soap*, tt__PTZPresetTourStatus*) serialize to a sink
/// - tt__PTZPresetTourStatus* soap_dup_tt__PTZPresetTourStatus(struct soap*, tt__PTZPresetTourStatus* dst, tt__PTZPresetTourStatus *src) returns deep copy of tt__PTZPresetTourStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourStatus(tt__PTZPresetTourStatus*) deep deletes tt__PTZPresetTourStatus data members, use only on dst after soap_dup_tt__PTZPresetTourStatus(NULL, tt__PTZPresetTourStatus *dst, tt__PTZPresetTourStatus *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourStatus
{
/// <PRE><BLOCKQUOTE>
///   Indicates state of this preset tour by Idle/Touring/Paused.
/// </BLOCKQUOTE></PRE>
///
/// Element "State" of type "http://www.onvif.org/ver10/schema":PTZPresetTourState.
    enum tt__PTZPresetTourState          State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates a tour spot currently staying.
/// </BLOCKQUOTE></PRE>
///
/// Element "CurrentTourSpot" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpot.
    struct tt__PTZPresetTourSpot*        CurrentTourSpot                0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension.
    struct tt__PTZPresetTourStatusExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension is a complexType.
///
/// @note struct tt__PTZPresetTourStatusExtension operations:
/// - tt__PTZPresetTourStatusExtension* soap_new_tt__PTZPresetTourStatusExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourStatusExtension(struct soap*, tt__PTZPresetTourStatusExtension*) default initialize members
/// - int soap_read_tt__PTZPresetTourStatusExtension(struct soap*, tt__PTZPresetTourStatusExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourStatusExtension(struct soap*, tt__PTZPresetTourStatusExtension*) serialize to a sink
/// - tt__PTZPresetTourStatusExtension* soap_dup_tt__PTZPresetTourStatusExtension(struct soap*, tt__PTZPresetTourStatusExtension* dst, tt__PTZPresetTourStatusExtension *src) returns deep copy of tt__PTZPresetTourStatusExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourStatusExtension(tt__PTZPresetTourStatusExtension*) deep deletes tt__PTZPresetTourStatusExtension data members, use only on dst after soap_dup_tt__PTZPresetTourStatusExtension(NULL, tt__PTZPresetTourStatusExtension *dst, tt__PTZPresetTourStatusExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourStatusExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition is a complexType.
///
/// @note struct tt__PTZPresetTourStartingCondition operations:
/// - tt__PTZPresetTourStartingCondition* soap_new_tt__PTZPresetTourStartingCondition(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourStartingCondition(struct soap*, tt__PTZPresetTourStartingCondition*) default initialize members
/// - int soap_read_tt__PTZPresetTourStartingCondition(struct soap*, tt__PTZPresetTourStartingCondition*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourStartingCondition(struct soap*, tt__PTZPresetTourStartingCondition*) serialize to a sink
/// - tt__PTZPresetTourStartingCondition* soap_dup_tt__PTZPresetTourStartingCondition(struct soap*, tt__PTZPresetTourStartingCondition* dst, tt__PTZPresetTourStartingCondition *src) returns deep copy of tt__PTZPresetTourStartingCondition src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourStartingCondition(tt__PTZPresetTourStartingCondition*) deep deletes tt__PTZPresetTourStartingCondition data members, use only on dst after soap_dup_tt__PTZPresetTourStartingCondition(NULL, tt__PTZPresetTourStartingCondition *dst, tt__PTZPresetTourStartingCondition *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourStartingCondition
{
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how many times the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringTime" of type xs:int.
    int*                                 RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how long time duration the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringDuration" of type xs:duration.
    xsd__duration                        RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to choose which direction the preset tour goes. Forward shall be chosen in case it is omitted.
/// </BLOCKQUOTE></PRE>
///
/// Element "Direction" of type "http://www.onvif.org/ver10/schema":PTZPresetTourDirection.
    enum tt__PTZPresetTourDirection*     Direction                      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension.
    struct tt__PTZPresetTourStartingConditionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Execute presets in random order. If set to true and Direction is also present, Direction will be ignored and presets of the Tour will be recalled randomly.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RandomPresetOrder" of type xs:boolean.
  @ enum xsd__boolean*                   RandomPresetOrder              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension is a complexType.
///
/// @note struct tt__PTZPresetTourStartingConditionExtension operations:
/// - tt__PTZPresetTourStartingConditionExtension* soap_new_tt__PTZPresetTourStartingConditionExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourStartingConditionExtension(struct soap*, tt__PTZPresetTourStartingConditionExtension*) default initialize members
/// - int soap_read_tt__PTZPresetTourStartingConditionExtension(struct soap*, tt__PTZPresetTourStartingConditionExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourStartingConditionExtension(struct soap*, tt__PTZPresetTourStartingConditionExtension*) serialize to a sink
/// - tt__PTZPresetTourStartingConditionExtension* soap_dup_tt__PTZPresetTourStartingConditionExtension(struct soap*, tt__PTZPresetTourStartingConditionExtension* dst, tt__PTZPresetTourStartingConditionExtension *src) returns deep copy of tt__PTZPresetTourStartingConditionExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourStartingConditionExtension(tt__PTZPresetTourStartingConditionExtension*) deep deletes tt__PTZPresetTourStartingConditionExtension data members, use only on dst after soap_dup_tt__PTZPresetTourStartingConditionExtension(NULL, tt__PTZPresetTourStartingConditionExtension *dst, tt__PTZPresetTourStartingConditionExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourStartingConditionExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOptions is a complexType.
///
/// @note struct tt__PTZPresetTourOptions operations:
/// - tt__PTZPresetTourOptions* soap_new_tt__PTZPresetTourOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourOptions(struct soap*, tt__PTZPresetTourOptions*) default initialize members
/// - int soap_read_tt__PTZPresetTourOptions(struct soap*, tt__PTZPresetTourOptions*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourOptions(struct soap*, tt__PTZPresetTourOptions*) serialize to a sink
/// - tt__PTZPresetTourOptions* soap_dup_tt__PTZPresetTourOptions(struct soap*, tt__PTZPresetTourOptions* dst, tt__PTZPresetTourOptions *src) returns deep copy of tt__PTZPresetTourOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourOptions(tt__PTZPresetTourOptions*) deep deletes tt__PTZPresetTourOptions data members, use only on dst after soap_dup_tt__PTZPresetTourOptions(NULL, tt__PTZPresetTourOptions *dst, tt__PTZPresetTourOptions *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourOptions
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not the AutoStart is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoStart" of type xs:boolean.
    enum xsd__boolean                    AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Starting Condition.
/// </BLOCKQUOTE></PRE>
///
/// Element "StartingCondition" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions.
    struct tt__PTZPresetTourStartingConditionOptions*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "TourSpot" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions.
    struct tt__PTZPresetTourSpotOptions*  TourSpot                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions is a complexType.
///
/// @note struct tt__PTZPresetTourSpotOptions operations:
/// - tt__PTZPresetTourSpotOptions* soap_new_tt__PTZPresetTourSpotOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourSpotOptions(struct soap*, tt__PTZPresetTourSpotOptions*) default initialize members
/// - int soap_read_tt__PTZPresetTourSpotOptions(struct soap*, tt__PTZPresetTourSpotOptions*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourSpotOptions(struct soap*, tt__PTZPresetTourSpotOptions*) serialize to a sink
/// - tt__PTZPresetTourSpotOptions* soap_dup_tt__PTZPresetTourSpotOptions(struct soap*, tt__PTZPresetTourSpotOptions* dst, tt__PTZPresetTourSpotOptions *src) returns deep copy of tt__PTZPresetTourSpotOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourSpotOptions(tt__PTZPresetTourSpotOptions*) deep deletes tt__PTZPresetTourSpotOptions data members, use only on dst after soap_dup_tt__PTZPresetTourSpotOptions(NULL, tt__PTZPresetTourSpotOptions *dst, tt__PTZPresetTourSpotOptions *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourSpotOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetDetail" of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions.
    struct tt__PTZPresetTourPresetDetailOptions*  PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported range of stay time for a tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "StayTime" of type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            StayTime                       1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions is a complexType.
///
/// @note struct tt__PTZPresetTourPresetDetailOptions operations:
/// - tt__PTZPresetTourPresetDetailOptions* soap_new_tt__PTZPresetTourPresetDetailOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourPresetDetailOptions(struct soap*, tt__PTZPresetTourPresetDetailOptions*) default initialize members
/// - int soap_read_tt__PTZPresetTourPresetDetailOptions(struct soap*, tt__PTZPresetTourPresetDetailOptions*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourPresetDetailOptions(struct soap*, tt__PTZPresetTourPresetDetailOptions*) serialize to a sink
/// - tt__PTZPresetTourPresetDetailOptions* soap_dup_tt__PTZPresetTourPresetDetailOptions(struct soap*, tt__PTZPresetTourPresetDetailOptions* dst, tt__PTZPresetTourPresetDetailOptions *src) returns deep copy of tt__PTZPresetTourPresetDetailOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourPresetDetailOptions(tt__PTZPresetTourPresetDetailOptions*) deep deletes tt__PTZPresetTourPresetDetailOptions data members, use only on dst after soap_dup_tt__PTZPresetTourPresetDetailOptions(NULL, tt__PTZPresetTourPresetDetailOptions *dst, tt__PTZPresetTourPresetDetailOptions *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourPresetDetailOptions
{
/// <PRE><BLOCKQUOTE>
///   A list of available Preset Tokens for tour spots.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__ReferenceToken* is 0..unbounded.
  $ int                                  __sizePresetToken              0;
/// Array tt__ReferenceToken* of size 0..unbounded.
    tt__ReferenceToken*                  PresetToken                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   An option to indicate Home postion for tour spots.
/// </BLOCKQUOTE></PRE>
///
/// Element "Home" of type xs:boolean.
    enum xsd__boolean*                   Home                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Pan and Tilt for tour spots.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTiltPositionSpace" of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    struct tt__Space2DDescription*       PanTiltPositionSpace           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Zoom for a tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZoomPositionSpace" of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    struct tt__Space1DDescription*       ZoomPositionSpace              0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension.
    struct tt__PTZPresetTourPresetDetailOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension is a complexType.
///
/// @note struct tt__PTZPresetTourPresetDetailOptionsExtension operations:
/// - tt__PTZPresetTourPresetDetailOptionsExtension* soap_new_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap*, tt__PTZPresetTourPresetDetailOptionsExtension*) default initialize members
/// - int soap_read_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap*, tt__PTZPresetTourPresetDetailOptionsExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap*, tt__PTZPresetTourPresetDetailOptionsExtension*) serialize to a sink
/// - tt__PTZPresetTourPresetDetailOptionsExtension* soap_dup_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap*, tt__PTZPresetTourPresetDetailOptionsExtension* dst, tt__PTZPresetTourPresetDetailOptionsExtension *src) returns deep copy of tt__PTZPresetTourPresetDetailOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourPresetDetailOptionsExtension(tt__PTZPresetTourPresetDetailOptionsExtension*) deep deletes tt__PTZPresetTourPresetDetailOptionsExtension data members, use only on dst after soap_dup_tt__PTZPresetTourPresetDetailOptionsExtension(NULL, tt__PTZPresetTourPresetDetailOptionsExtension *dst, tt__PTZPresetTourPresetDetailOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourPresetDetailOptionsExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions is a complexType.
///
/// @note struct tt__PTZPresetTourStartingConditionOptions operations:
/// - tt__PTZPresetTourStartingConditionOptions* soap_new_tt__PTZPresetTourStartingConditionOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourStartingConditionOptions(struct soap*, tt__PTZPresetTourStartingConditionOptions*) default initialize members
/// - int soap_read_tt__PTZPresetTourStartingConditionOptions(struct soap*, tt__PTZPresetTourStartingConditionOptions*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourStartingConditionOptions(struct soap*, tt__PTZPresetTourStartingConditionOptions*) serialize to a sink
/// - tt__PTZPresetTourStartingConditionOptions* soap_dup_tt__PTZPresetTourStartingConditionOptions(struct soap*, tt__PTZPresetTourStartingConditionOptions* dst, tt__PTZPresetTourStartingConditionOptions *src) returns deep copy of tt__PTZPresetTourStartingConditionOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourStartingConditionOptions(tt__PTZPresetTourStartingConditionOptions*) deep deletes tt__PTZPresetTourStartingConditionOptions data members, use only on dst after soap_dup_tt__PTZPresetTourStartingConditionOptions(NULL, tt__PTZPresetTourStartingConditionOptions *dst, tt__PTZPresetTourStartingConditionOptions *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourStartingConditionOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Time.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringTime" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Duration.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringDuration" of type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Direction of Preset Tour.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__PTZPresetTourDirection* is 0..unbounded.
  $ int                                  __sizeDirection                0;
/// Array enum tt__PTZPresetTourDirection* of size 0..unbounded.
    enum tt__PTZPresetTourDirection*     Direction                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension.
    struct tt__PTZPresetTourStartingConditionOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension is a complexType.
///
/// @note struct tt__PTZPresetTourStartingConditionOptionsExtension operations:
/// - tt__PTZPresetTourStartingConditionOptionsExtension* soap_new_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap*, tt__PTZPresetTourStartingConditionOptionsExtension*) default initialize members
/// - int soap_read_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap*, tt__PTZPresetTourStartingConditionOptionsExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap*, tt__PTZPresetTourStartingConditionOptionsExtension*) serialize to a sink
/// - tt__PTZPresetTourStartingConditionOptionsExtension* soap_dup_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap*, tt__PTZPresetTourStartingConditionOptionsExtension* dst, tt__PTZPresetTourStartingConditionOptionsExtension *src) returns deep copy of tt__PTZPresetTourStartingConditionOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourStartingConditionOptionsExtension(tt__PTZPresetTourStartingConditionOptionsExtension*) deep deletes tt__PTZPresetTourStartingConditionOptionsExtension data members, use only on dst after soap_dup_tt__PTZPresetTourStartingConditionOptionsExtension(NULL, tt__PTZPresetTourStartingConditionOptionsExtension *dst, tt__PTZPresetTourStartingConditionOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourStartingConditionOptionsExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus is a complexType.
///
/// @note struct tt__ImagingStatus operations:
/// - tt__ImagingStatus* soap_new_tt__ImagingStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingStatus(struct soap*, tt__ImagingStatus*) default initialize members
/// - int soap_read_tt__ImagingStatus(struct soap*, tt__ImagingStatus*) deserialize from a source
/// - int soap_write_tt__ImagingStatus(struct soap*, tt__ImagingStatus*) serialize to a sink
/// - tt__ImagingStatus* soap_dup_tt__ImagingStatus(struct soap*, tt__ImagingStatus* dst, tt__ImagingStatus *src) returns deep copy of tt__ImagingStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingStatus(tt__ImagingStatus*) deep deletes tt__ImagingStatus data members, use only on dst after soap_dup_tt__ImagingStatus(NULL, tt__ImagingStatus *dst, tt__ImagingStatus *src) (use soapcpp2 -Ed)
struct tt__ImagingStatus
{
/// Element "FocusStatus" of type "http://www.onvif.org/ver10/schema":FocusStatus.
    struct tt__FocusStatus*              FocusStatus                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus is a complexType.
///
/// @note struct tt__FocusStatus operations:
/// - tt__FocusStatus* soap_new_tt__FocusStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FocusStatus(struct soap*, tt__FocusStatus*) default initialize members
/// - int soap_read_tt__FocusStatus(struct soap*, tt__FocusStatus*) deserialize from a source
/// - int soap_write_tt__FocusStatus(struct soap*, tt__FocusStatus*) serialize to a sink
/// - tt__FocusStatus* soap_dup_tt__FocusStatus(struct soap*, tt__FocusStatus* dst, tt__FocusStatus *src) returns deep copy of tt__FocusStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusStatus(tt__FocusStatus*) deep deletes tt__FocusStatus data members, use only on dst after soap_dup_tt__FocusStatus(NULL, tt__FocusStatus *dst, tt__FocusStatus *src) (use soapcpp2 -Ed)
struct tt__FocusStatus
{
/// <PRE><BLOCKQUOTE>
///   Status of focus position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Status of focus MoveStatus.
/// </BLOCKQUOTE></PRE>
///
/// Element "MoveStatus" of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Error status of focus.
/// </BLOCKQUOTE></PRE>
///
/// Element "Error" of type xs:string.
    char*                                Error                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration is a complexType.
///
/// @note struct tt__FocusConfiguration operations:
/// - tt__FocusConfiguration* soap_new_tt__FocusConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FocusConfiguration(struct soap*, tt__FocusConfiguration*) default initialize members
/// - int soap_read_tt__FocusConfiguration(struct soap*, tt__FocusConfiguration*) deserialize from a source
/// - int soap_write_tt__FocusConfiguration(struct soap*, tt__FocusConfiguration*) serialize to a sink
/// - tt__FocusConfiguration* soap_dup_tt__FocusConfiguration(struct soap*, tt__FocusConfiguration* dst, tt__FocusConfiguration *src) returns deep copy of tt__FocusConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusConfiguration(tt__FocusConfiguration*) deep deletes tt__FocusConfiguration data members, use only on dst after soap_dup_tt__FocusConfiguration(NULL, tt__FocusConfiguration *dst, tt__FocusConfiguration *src) (use soapcpp2 -Ed)
struct tt__FocusConfiguration
{
/// Element "AutoFocusMode" of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element "DefaultSpeed" of type xs:float.
    float                                DefaultSpeed                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus near limit (unit: meter).
/// </BLOCKQUOTE></PRE>
///
/// Element "NearLimit" of type xs:float.
    float                                NearLimit                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus far limit (unit: meter).
///   If set to 0.0, infinity will be used.
/// </BLOCKQUOTE></PRE>
///
/// Element "FarLimit" of type xs:float.
    float                                FarLimit                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettings is a complexType.
///
/// @note struct tt__ImagingSettings operations:
/// - tt__ImagingSettings* soap_new_tt__ImagingSettings(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingSettings(struct soap*, tt__ImagingSettings*) default initialize members
/// - int soap_read_tt__ImagingSettings(struct soap*, tt__ImagingSettings*) deserialize from a source
/// - int soap_write_tt__ImagingSettings(struct soap*, tt__ImagingSettings*) serialize to a sink
/// - tt__ImagingSettings* soap_dup_tt__ImagingSettings(struct soap*, tt__ImagingSettings* dst, tt__ImagingSettings *src) returns deep copy of tt__ImagingSettings src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingSettings(tt__ImagingSettings*) deep deletes tt__ImagingSettings data members, use only on dst after soap_dup_tt__ImagingSettings(NULL, tt__ImagingSettings *dst, tt__ImagingSettings *src) (use soapcpp2 -Ed)
struct tt__ImagingSettings
{
/// <PRE><BLOCKQUOTE>
///   Enabled/disabled BLC mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "BacklightCompensation" of type "http://www.onvif.org/ver10/schema":BacklightCompensation.
    struct tt__BacklightCompensation*    BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image brightness (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Brightness" of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Color saturation of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "ColorSaturation" of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contrast of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Contrast" of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Exposure mode of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Exposure" of type "http://www.onvif.org/ver10/schema":Exposure.
    struct tt__Exposure*                 Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Focus configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Focus" of type "http://www.onvif.org/ver10/schema":FocusConfiguration.
    struct tt__FocusConfiguration*       Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Infrared Cutoff Filter settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "IrCutFilter" of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Sharpness of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Sharpness" of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   WDR settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "WideDynamicRange" of type "http://www.onvif.org/ver10/schema":WideDynamicRange.
    struct tt__WideDynamicRange*         WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   White balance settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "WhiteBalance" of type "http://www.onvif.org/ver10/schema":WhiteBalance.
    struct tt__WhiteBalance*             WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension.
    struct tt__ImagingSettingsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is a complexType.
///
/// @note struct tt__ImagingSettingsExtension operations:
/// - tt__ImagingSettingsExtension* soap_new_tt__ImagingSettingsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingSettingsExtension(struct soap*, tt__ImagingSettingsExtension*) default initialize members
/// - int soap_read_tt__ImagingSettingsExtension(struct soap*, tt__ImagingSettingsExtension*) deserialize from a source
/// - int soap_write_tt__ImagingSettingsExtension(struct soap*, tt__ImagingSettingsExtension*) serialize to a sink
/// - tt__ImagingSettingsExtension* soap_dup_tt__ImagingSettingsExtension(struct soap*, tt__ImagingSettingsExtension* dst, tt__ImagingSettingsExtension *src) returns deep copy of tt__ImagingSettingsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingSettingsExtension(tt__ImagingSettingsExtension*) deep deletes tt__ImagingSettingsExtension data members, use only on dst after soap_dup_tt__ImagingSettingsExtension(NULL, tt__ImagingSettingsExtension *dst, tt__ImagingSettingsExtension *src) (use soapcpp2 -Ed)
struct tt__ImagingSettingsExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Exposure is a complexType.
///
/// @note struct tt__Exposure operations:
/// - tt__Exposure* soap_new_tt__Exposure(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Exposure(struct soap*, tt__Exposure*) default initialize members
/// - int soap_read_tt__Exposure(struct soap*, tt__Exposure*) deserialize from a source
/// - int soap_write_tt__Exposure(struct soap*, tt__Exposure*) serialize to a sink
/// - tt__Exposure* soap_dup_tt__Exposure(struct soap*, tt__Exposure* dst, tt__Exposure *src) returns deep copy of tt__Exposure src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Exposure(tt__Exposure*) deep deletes tt__Exposure data members, use only on dst after soap_dup_tt__Exposure(NULL, tt__Exposure *dst, tt__Exposure *src) (use soapcpp2 -Ed)
struct tt__Exposure
{
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the NVT.</li>
///   <li>Manual Disabled exposure algorithm on the NVT.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
///
/// Element "Priority" of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority            Priority                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangular exposure mask.
/// </BLOCKQUOTE></PRE>
///
/// Element "Window" of type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                Window                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinExposureTime" of type xs:float.
    float                                MinExposureTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxExposureTime" of type xs:float.
    float                                MaxExposureTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinGain" of type xs:float.
    float                                MinGain                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxGain" of type xs:float.
    float                                MaxGain                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinIris" of type xs:float.
    float                                MinIris                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxIris" of type xs:float.
    float                                MaxIris                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed exposure time used by the image sensor (s).
/// </BLOCKQUOTE></PRE>
///
/// Element "ExposureTime" of type xs:float.
    float                                ExposureTime                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed gain used by the image sensor (dB).
/// </BLOCKQUOTE></PRE>
///
/// Element "Gain" of type xs:float.
    float                                Gain                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// </BLOCKQUOTE></PRE>
///
/// Element "Iris" of type xs:float.
    float                                Iris                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRange is a complexType.
///
/// @note struct tt__WideDynamicRange operations:
/// - tt__WideDynamicRange* soap_new_tt__WideDynamicRange(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__WideDynamicRange(struct soap*, tt__WideDynamicRange*) default initialize members
/// - int soap_read_tt__WideDynamicRange(struct soap*, tt__WideDynamicRange*) deserialize from a source
/// - int soap_write_tt__WideDynamicRange(struct soap*, tt__WideDynamicRange*) serialize to a sink
/// - tt__WideDynamicRange* soap_dup_tt__WideDynamicRange(struct soap*, tt__WideDynamicRange* dst, tt__WideDynamicRange *src) returns deep copy of tt__WideDynamicRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WideDynamicRange(tt__WideDynamicRange*) deep deletes tt__WideDynamicRange data members, use only on dst after soap_dup_tt__WideDynamicRange(NULL, tt__WideDynamicRange *dst, tt__WideDynamicRange *src) (use soapcpp2 -Ed)
struct tt__WideDynamicRange
{
/// <PRE><BLOCKQUOTE>
///   White dynamic range (on/off)
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unitless)
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float                                Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensation is a complexType.
///
/// @note struct tt__BacklightCompensation operations:
/// - tt__BacklightCompensation* soap_new_tt__BacklightCompensation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__BacklightCompensation(struct soap*, tt__BacklightCompensation*) default initialize members
/// - int soap_read_tt__BacklightCompensation(struct soap*, tt__BacklightCompensation*) deserialize from a source
/// - int soap_write_tt__BacklightCompensation(struct soap*, tt__BacklightCompensation*) serialize to a sink
/// - tt__BacklightCompensation* soap_dup_tt__BacklightCompensation(struct soap*, tt__BacklightCompensation* dst, tt__BacklightCompensation *src) returns deep copy of tt__BacklightCompensation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BacklightCompensation(tt__BacklightCompensation*) deep deletes tt__BacklightCompensation data members, use only on dst after soap_dup_tt__BacklightCompensation(NULL, tt__BacklightCompensation *dst, tt__BacklightCompensation *src) (use soapcpp2 -Ed)
struct tt__BacklightCompensation
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float                                Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions is a complexType.
///
/// @note struct tt__ImagingOptions operations:
/// - tt__ImagingOptions* soap_new_tt__ImagingOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingOptions(struct soap*, tt__ImagingOptions*) default initialize members
/// - int soap_read_tt__ImagingOptions(struct soap*, tt__ImagingOptions*) deserialize from a source
/// - int soap_write_tt__ImagingOptions(struct soap*, tt__ImagingOptions*) serialize to a sink
/// - tt__ImagingOptions* soap_dup_tt__ImagingOptions(struct soap*, tt__ImagingOptions* dst, tt__ImagingOptions *src) returns deep copy of tt__ImagingOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingOptions(tt__ImagingOptions*) deep deletes tt__ImagingOptions data members, use only on dst after soap_dup_tt__ImagingOptions(NULL, tt__ImagingOptions *dst, tt__ImagingOptions *src) (use soapcpp2 -Ed)
struct tt__ImagingOptions
{
/// Element "BacklightCompensation" of type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions.
    struct tt__BacklightCompensationOptions*  BacklightCompensation          1;	///< Required element.
/// Element "Brightness" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Brightness                     1;	///< Required element.
/// Element "ColorSaturation" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ColorSaturation                1;	///< Required element.
/// Element "Contrast" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Contrast                       1;	///< Required element.
/// Element "Exposure" of type "http://www.onvif.org/ver10/schema":ExposureOptions.
    struct tt__ExposureOptions*          Exposure                       1;	///< Required element.
/// Element "Focus" of type "http://www.onvif.org/ver10/schema":FocusOptions.
    struct tt__FocusOptions*             Focus                          1;	///< Required element.
/// Size of array of enum tt__IrCutFilterMode* is 1..unbounded.
  $ int                                  __sizeIrCutFilterModes         1;
/// Array enum tt__IrCutFilterMode* of size 1..unbounded.
    enum tt__IrCutFilterMode*            IrCutFilterModes               1;	///< Multiple elements.
/// Element "Sharpness" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Sharpness                      1;	///< Required element.
/// Element "WideDynamicRange" of type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions.
    struct tt__WideDynamicRangeOptions*  WideDynamicRange               1;	///< Required element.
/// Element "WhiteBalance" of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions.
    struct tt__WhiteBalanceOptions*      WhiteBalance                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is a complexType.
///
/// @note struct tt__WideDynamicRangeOptions operations:
/// - tt__WideDynamicRangeOptions* soap_new_tt__WideDynamicRangeOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__WideDynamicRangeOptions(struct soap*, tt__WideDynamicRangeOptions*) default initialize members
/// - int soap_read_tt__WideDynamicRangeOptions(struct soap*, tt__WideDynamicRangeOptions*) deserialize from a source
/// - int soap_write_tt__WideDynamicRangeOptions(struct soap*, tt__WideDynamicRangeOptions*) serialize to a sink
/// - tt__WideDynamicRangeOptions* soap_dup_tt__WideDynamicRangeOptions(struct soap*, tt__WideDynamicRangeOptions* dst, tt__WideDynamicRangeOptions *src) returns deep copy of tt__WideDynamicRangeOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WideDynamicRangeOptions(tt__WideDynamicRangeOptions*) deep deletes tt__WideDynamicRangeOptions data members, use only on dst after soap_dup_tt__WideDynamicRangeOptions(NULL, tt__WideDynamicRangeOptions *dst, tt__WideDynamicRangeOptions *src) (use soapcpp2 -Ed)
struct tt__WideDynamicRangeOptions
{
/// Size of array of enum tt__WideDynamicMode* is 1..unbounded.
  $ int                                  __sizeMode                     1;
/// Array enum tt__WideDynamicMode* of size 1..unbounded.
    enum tt__WideDynamicMode*            Mode                           1;	///< Multiple elements.
/// Element "Level" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is a complexType.
///
/// @note struct tt__BacklightCompensationOptions operations:
/// - tt__BacklightCompensationOptions* soap_new_tt__BacklightCompensationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__BacklightCompensationOptions(struct soap*, tt__BacklightCompensationOptions*) default initialize members
/// - int soap_read_tt__BacklightCompensationOptions(struct soap*, tt__BacklightCompensationOptions*) deserialize from a source
/// - int soap_write_tt__BacklightCompensationOptions(struct soap*, tt__BacklightCompensationOptions*) serialize to a sink
/// - tt__BacklightCompensationOptions* soap_dup_tt__BacklightCompensationOptions(struct soap*, tt__BacklightCompensationOptions* dst, tt__BacklightCompensationOptions *src) returns deep copy of tt__BacklightCompensationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BacklightCompensationOptions(tt__BacklightCompensationOptions*) deep deletes tt__BacklightCompensationOptions data members, use only on dst after soap_dup_tt__BacklightCompensationOptions(NULL, tt__BacklightCompensationOptions *dst, tt__BacklightCompensationOptions *src) (use soapcpp2 -Ed)
struct tt__BacklightCompensationOptions
{
/// Size of array of enum tt__WideDynamicMode* is 1..unbounded.
  $ int                                  __sizeMode                     1;
/// Array enum tt__WideDynamicMode* of size 1..unbounded.
    enum tt__WideDynamicMode*            Mode                           1;	///< Multiple elements.
/// Element "Level" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions is a complexType.
///
/// @note struct tt__FocusOptions operations:
/// - tt__FocusOptions* soap_new_tt__FocusOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FocusOptions(struct soap*, tt__FocusOptions*) default initialize members
/// - int soap_read_tt__FocusOptions(struct soap*, tt__FocusOptions*) deserialize from a source
/// - int soap_write_tt__FocusOptions(struct soap*, tt__FocusOptions*) serialize to a sink
/// - tt__FocusOptions* soap_dup_tt__FocusOptions(struct soap*, tt__FocusOptions* dst, tt__FocusOptions *src) returns deep copy of tt__FocusOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusOptions(tt__FocusOptions*) deep deletes tt__FocusOptions data members, use only on dst after soap_dup_tt__FocusOptions(NULL, tt__FocusOptions *dst, tt__FocusOptions *src) (use soapcpp2 -Ed)
struct tt__FocusOptions
{
/// Size of array of enum tt__AutoFocusMode* is 0..unbounded.
  $ int                                  __sizeAutoFocusModes           0;
/// Array enum tt__AutoFocusMode* of size 0..unbounded.
    enum tt__AutoFocusMode*              AutoFocusModes                 0;	///< Multiple elements.
/// Element "DefaultSpeed" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               DefaultSpeed                   1;	///< Required element.
/// Element "NearLimit" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               NearLimit                      1;	///< Required element.
/// Element "FarLimit" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               FarLimit                       1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureOptions is a complexType.
///
/// @note struct tt__ExposureOptions operations:
/// - tt__ExposureOptions* soap_new_tt__ExposureOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ExposureOptions(struct soap*, tt__ExposureOptions*) default initialize members
/// - int soap_read_tt__ExposureOptions(struct soap*, tt__ExposureOptions*) deserialize from a source
/// - int soap_write_tt__ExposureOptions(struct soap*, tt__ExposureOptions*) serialize to a sink
/// - tt__ExposureOptions* soap_dup_tt__ExposureOptions(struct soap*, tt__ExposureOptions* dst, tt__ExposureOptions *src) returns deep copy of tt__ExposureOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ExposureOptions(tt__ExposureOptions*) deep deletes tt__ExposureOptions data members, use only on dst after soap_dup_tt__ExposureOptions(NULL, tt__ExposureOptions *dst, tt__ExposureOptions *src) (use soapcpp2 -Ed)
struct tt__ExposureOptions
{
/// Size of array of enum tt__ExposureMode* is 1..unbounded.
  $ int                                  __sizeMode                     1;
/// Array enum tt__ExposureMode* of size 1..unbounded.
    enum tt__ExposureMode*               Mode                           1;	///< Multiple elements.
/// Size of array of enum tt__ExposurePriority* is 1..unbounded.
  $ int                                  __sizePriority                 1;
/// Array enum tt__ExposurePriority* of size 1..unbounded.
    enum tt__ExposurePriority*           Priority                       1;	///< Multiple elements.
/// Element "MinExposureTime" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinExposureTime                1;	///< Required element.
/// Element "MaxExposureTime" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxExposureTime                1;	///< Required element.
/// Element "MinGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinGain                        1;	///< Required element.
/// Element "MaxGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxGain                        1;	///< Required element.
/// Element "MinIris" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinIris                        1;	///< Required element.
/// Element "MaxIris" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxIris                        1;	///< Required element.
/// Element "ExposureTime" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ExposureTime                   1;	///< Required element.
/// Element "Gain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Gain                           1;	///< Required element.
/// Element "Iris" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Iris                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is a complexType.
///
/// @note struct tt__WhiteBalanceOptions operations:
/// - tt__WhiteBalanceOptions* soap_new_tt__WhiteBalanceOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__WhiteBalanceOptions(struct soap*, tt__WhiteBalanceOptions*) default initialize members
/// - int soap_read_tt__WhiteBalanceOptions(struct soap*, tt__WhiteBalanceOptions*) deserialize from a source
/// - int soap_write_tt__WhiteBalanceOptions(struct soap*, tt__WhiteBalanceOptions*) serialize to a sink
/// - tt__WhiteBalanceOptions* soap_dup_tt__WhiteBalanceOptions(struct soap*, tt__WhiteBalanceOptions* dst, tt__WhiteBalanceOptions *src) returns deep copy of tt__WhiteBalanceOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WhiteBalanceOptions(tt__WhiteBalanceOptions*) deep deletes tt__WhiteBalanceOptions data members, use only on dst after soap_dup_tt__WhiteBalanceOptions(NULL, tt__WhiteBalanceOptions *dst, tt__WhiteBalanceOptions *src) (use soapcpp2 -Ed)
struct tt__WhiteBalanceOptions
{
/// Size of array of enum tt__WhiteBalanceMode* is 1..unbounded.
  $ int                                  __sizeMode                     1;
/// Array enum tt__WhiteBalanceMode* of size 1..unbounded.
    enum tt__WhiteBalanceMode*           Mode                           1;	///< Multiple elements.
/// Element "YrGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YrGain                         1;	///< Required element.
/// Element "YbGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YbGain                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusMove is a complexType.
///
/// @note struct tt__FocusMove operations:
/// - tt__FocusMove* soap_new_tt__FocusMove(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FocusMove(struct soap*, tt__FocusMove*) default initialize members
/// - int soap_read_tt__FocusMove(struct soap*, tt__FocusMove*) deserialize from a source
/// - int soap_write_tt__FocusMove(struct soap*, tt__FocusMove*) serialize to a sink
/// - tt__FocusMove* soap_dup_tt__FocusMove(struct soap*, tt__FocusMove* dst, tt__FocusMove *src) returns deep copy of tt__FocusMove src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusMove(tt__FocusMove*) deep deletes tt__FocusMove data members, use only on dst after soap_dup_tt__FocusMove(NULL, tt__FocusMove *dst, tt__FocusMove *src) (use soapcpp2 -Ed)
struct tt__FocusMove
{
/// <PRE><BLOCKQUOTE>
///   Parameters for the absolute focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Absolute" of type "http://www.onvif.org/ver10/schema":AbsoluteFocus.
    struct tt__AbsoluteFocus*            Absolute                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameters for the relative focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Relative" of type "http://www.onvif.org/ver10/schema":RelativeFocus.
    struct tt__RelativeFocus*            Relative                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter for the continuous focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Continuous" of type "http://www.onvif.org/ver10/schema":ContinuousFocus.
    struct tt__ContinuousFocus*          Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":AbsoluteFocus is a complexType.
///
/// @note struct tt__AbsoluteFocus operations:
/// - tt__AbsoluteFocus* soap_new_tt__AbsoluteFocus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AbsoluteFocus(struct soap*, tt__AbsoluteFocus*) default initialize members
/// - int soap_read_tt__AbsoluteFocus(struct soap*, tt__AbsoluteFocus*) deserialize from a source
/// - int soap_write_tt__AbsoluteFocus(struct soap*, tt__AbsoluteFocus*) serialize to a sink
/// - tt__AbsoluteFocus* soap_dup_tt__AbsoluteFocus(struct soap*, tt__AbsoluteFocus* dst, tt__AbsoluteFocus *src) returns deep copy of tt__AbsoluteFocus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AbsoluteFocus(tt__AbsoluteFocus*) deep deletes tt__AbsoluteFocus data members, use only on dst after soap_dup_tt__AbsoluteFocus(NULL, tt__AbsoluteFocus *dst, tt__AbsoluteFocus *src) (use soapcpp2 -Ed)
struct tt__AbsoluteFocus
{
/// <PRE><BLOCKQUOTE>
///   Position parameter for the absolute focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the absolute focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocus is a complexType.
///
/// @note struct tt__RelativeFocus operations:
/// - tt__RelativeFocus* soap_new_tt__RelativeFocus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RelativeFocus(struct soap*, tt__RelativeFocus*) default initialize members
/// - int soap_read_tt__RelativeFocus(struct soap*, tt__RelativeFocus*) deserialize from a source
/// - int soap_write_tt__RelativeFocus(struct soap*, tt__RelativeFocus*) serialize to a sink
/// - tt__RelativeFocus* soap_dup_tt__RelativeFocus(struct soap*, tt__RelativeFocus* dst, tt__RelativeFocus *src) returns deep copy of tt__RelativeFocus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RelativeFocus(tt__RelativeFocus*) deep deletes tt__RelativeFocus data members, use only on dst after soap_dup_tt__RelativeFocus(NULL, tt__RelativeFocus *dst, tt__RelativeFocus *src) (use soapcpp2 -Ed)
struct tt__RelativeFocus
{
/// <PRE><BLOCKQUOTE>
///   Distance parameter for the relative focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Distance" of type xs:float.
    float                                Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the relative focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ContinuousFocus is a complexType.
///
/// @note struct tt__ContinuousFocus operations:
/// - tt__ContinuousFocus* soap_new_tt__ContinuousFocus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ContinuousFocus(struct soap*, tt__ContinuousFocus*) default initialize members
/// - int soap_read_tt__ContinuousFocus(struct soap*, tt__ContinuousFocus*) deserialize from a source
/// - int soap_write_tt__ContinuousFocus(struct soap*, tt__ContinuousFocus*) serialize to a sink
/// - tt__ContinuousFocus* soap_dup_tt__ContinuousFocus(struct soap*, tt__ContinuousFocus* dst, tt__ContinuousFocus *src) returns deep copy of tt__ContinuousFocus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ContinuousFocus(tt__ContinuousFocus*) deep deletes tt__ContinuousFocus data members, use only on dst after soap_dup_tt__ContinuousFocus(NULL, tt__ContinuousFocus *dst, tt__ContinuousFocus *src) (use soapcpp2 -Ed)
struct tt__ContinuousFocus
{
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the Continuous focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type xs:float.
    float                                Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":MoveOptions is a complexType.
///
/// @note struct tt__MoveOptions operations:
/// - tt__MoveOptions* soap_new_tt__MoveOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MoveOptions(struct soap*, tt__MoveOptions*) default initialize members
/// - int soap_read_tt__MoveOptions(struct soap*, tt__MoveOptions*) deserialize from a source
/// - int soap_write_tt__MoveOptions(struct soap*, tt__MoveOptions*) serialize to a sink
/// - tt__MoveOptions* soap_dup_tt__MoveOptions(struct soap*, tt__MoveOptions* dst, tt__MoveOptions *src) returns deep copy of tt__MoveOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MoveOptions(tt__MoveOptions*) deep deletes tt__MoveOptions data members, use only on dst after soap_dup_tt__MoveOptions(NULL, tt__MoveOptions *dst, tt__MoveOptions *src) (use soapcpp2 -Ed)
struct tt__MoveOptions
{
/// Element "Absolute" of type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    struct tt__AbsoluteFocusOptions*     Absolute                       0;	///< Optional element.
/// Element "Relative" of type "http://www.onvif.org/ver10/schema":RelativeFocusOptions.
    struct tt__RelativeFocusOptions*     Relative                       0;	///< Optional element.
/// Element "Continuous" of type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    struct tt__ContinuousFocusOptions*   Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is a complexType.
///
/// @note struct tt__AbsoluteFocusOptions operations:
/// - tt__AbsoluteFocusOptions* soap_new_tt__AbsoluteFocusOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AbsoluteFocusOptions(struct soap*, tt__AbsoluteFocusOptions*) default initialize members
/// - int soap_read_tt__AbsoluteFocusOptions(struct soap*, tt__AbsoluteFocusOptions*) deserialize from a source
/// - int soap_write_tt__AbsoluteFocusOptions(struct soap*, tt__AbsoluteFocusOptions*) serialize to a sink
/// - tt__AbsoluteFocusOptions* soap_dup_tt__AbsoluteFocusOptions(struct soap*, tt__AbsoluteFocusOptions* dst, tt__AbsoluteFocusOptions *src) returns deep copy of tt__AbsoluteFocusOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AbsoluteFocusOptions(tt__AbsoluteFocusOptions*) deep deletes tt__AbsoluteFocusOptions data members, use only on dst after soap_dup_tt__AbsoluteFocusOptions(NULL, tt__AbsoluteFocusOptions *dst, tt__AbsoluteFocusOptions *src) (use soapcpp2 -Ed)
struct tt__AbsoluteFocusOptions
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocusOptions is a complexType.
///
/// @note struct tt__RelativeFocusOptions operations:
/// - tt__RelativeFocusOptions* soap_new_tt__RelativeFocusOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RelativeFocusOptions(struct soap*, tt__RelativeFocusOptions*) default initialize members
/// - int soap_read_tt__RelativeFocusOptions(struct soap*, tt__RelativeFocusOptions*) deserialize from a source
/// - int soap_write_tt__RelativeFocusOptions(struct soap*, tt__RelativeFocusOptions*) serialize to a sink
/// - tt__RelativeFocusOptions* soap_dup_tt__RelativeFocusOptions(struct soap*, tt__RelativeFocusOptions* dst, tt__RelativeFocusOptions *src) returns deep copy of tt__RelativeFocusOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RelativeFocusOptions(tt__RelativeFocusOptions*) deep deletes tt__RelativeFocusOptions data members, use only on dst after soap_dup_tt__RelativeFocusOptions(NULL, tt__RelativeFocusOptions *dst, tt__RelativeFocusOptions *src) (use soapcpp2 -Ed)
struct tt__RelativeFocusOptions
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "Distance" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is a complexType.
///
/// @note struct tt__ContinuousFocusOptions operations:
/// - tt__ContinuousFocusOptions* soap_new_tt__ContinuousFocusOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ContinuousFocusOptions(struct soap*, tt__ContinuousFocusOptions*) default initialize members
/// - int soap_read_tt__ContinuousFocusOptions(struct soap*, tt__ContinuousFocusOptions*) deserialize from a source
/// - int soap_write_tt__ContinuousFocusOptions(struct soap*, tt__ContinuousFocusOptions*) serialize to a sink
/// - tt__ContinuousFocusOptions* soap_dup_tt__ContinuousFocusOptions(struct soap*, tt__ContinuousFocusOptions* dst, tt__ContinuousFocusOptions *src) returns deep copy of tt__ContinuousFocusOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ContinuousFocusOptions(tt__ContinuousFocusOptions*) deep deletes tt__ContinuousFocusOptions data members, use only on dst after soap_dup_tt__ContinuousFocusOptions(NULL, tt__ContinuousFocusOptions *dst, tt__ContinuousFocusOptions *src) (use soapcpp2 -Ed)
struct tt__ContinuousFocusOptions
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance is a complexType.
///
/// @note struct tt__WhiteBalance operations:
/// - tt__WhiteBalance* soap_new_tt__WhiteBalance(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__WhiteBalance(struct soap*, tt__WhiteBalance*) default initialize members
/// - int soap_read_tt__WhiteBalance(struct soap*, tt__WhiteBalance*) deserialize from a source
/// - int soap_write_tt__WhiteBalance(struct soap*, tt__WhiteBalance*) serialize to a sink
/// - tt__WhiteBalance* soap_dup_tt__WhiteBalance(struct soap*, tt__WhiteBalance* dst, tt__WhiteBalance *src) returns deep copy of tt__WhiteBalance src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WhiteBalance(tt__WhiteBalance*) deep deletes tt__WhiteBalance data members, use only on dst after soap_dup_tt__WhiteBalance(NULL, tt__WhiteBalance *dst, tt__WhiteBalance *src) (use soapcpp2 -Ed)
struct tt__WhiteBalance
{
/// <PRE><BLOCKQUOTE>
///   Auto whitebalancing mode (auto/manual).
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rgain (unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "CrGain" of type xs:float.
    float                                CrGain                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Bgain (unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "CbGain" of type xs:float.
    float                                CbGain                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus20 is a complexType.
///
/// @note struct tt__ImagingStatus20 operations:
/// - tt__ImagingStatus20* soap_new_tt__ImagingStatus20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingStatus20(struct soap*, tt__ImagingStatus20*) default initialize members
/// - int soap_read_tt__ImagingStatus20(struct soap*, tt__ImagingStatus20*) deserialize from a source
/// - int soap_write_tt__ImagingStatus20(struct soap*, tt__ImagingStatus20*) serialize to a sink
/// - tt__ImagingStatus20* soap_dup_tt__ImagingStatus20(struct soap*, tt__ImagingStatus20* dst, tt__ImagingStatus20 *src) returns deep copy of tt__ImagingStatus20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingStatus20(tt__ImagingStatus20*) deep deletes tt__ImagingStatus20 data members, use only on dst after soap_dup_tt__ImagingStatus20(NULL, tt__ImagingStatus20 *dst, tt__ImagingStatus20 *src) (use soapcpp2 -Ed)
struct tt__ImagingStatus20
{
/// <PRE><BLOCKQUOTE>
///   Status of focus.
/// </BLOCKQUOTE></PRE>
///
/// Element "FocusStatus20" of type "http://www.onvif.org/ver10/schema":FocusStatus20.
    struct tt__FocusStatus20*            FocusStatus20                  0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingStatus20Extension.
    struct tt__ImagingStatus20Extension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is a complexType.
///
/// @note struct tt__ImagingStatus20Extension operations:
/// - tt__ImagingStatus20Extension* soap_new_tt__ImagingStatus20Extension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingStatus20Extension(struct soap*, tt__ImagingStatus20Extension*) default initialize members
/// - int soap_read_tt__ImagingStatus20Extension(struct soap*, tt__ImagingStatus20Extension*) deserialize from a source
/// - int soap_write_tt__ImagingStatus20Extension(struct soap*, tt__ImagingStatus20Extension*) serialize to a sink
/// - tt__ImagingStatus20Extension* soap_dup_tt__ImagingStatus20Extension(struct soap*, tt__ImagingStatus20Extension* dst, tt__ImagingStatus20Extension *src) returns deep copy of tt__ImagingStatus20Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingStatus20Extension(tt__ImagingStatus20Extension*) deep deletes tt__ImagingStatus20Extension data members, use only on dst after soap_dup_tt__ImagingStatus20Extension(NULL, tt__ImagingStatus20Extension *dst, tt__ImagingStatus20Extension *src) (use soapcpp2 -Ed)
struct tt__ImagingStatus20Extension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus20 is a complexType.
///
/// @note struct tt__FocusStatus20 operations:
/// - tt__FocusStatus20* soap_new_tt__FocusStatus20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FocusStatus20(struct soap*, tt__FocusStatus20*) default initialize members
/// - int soap_read_tt__FocusStatus20(struct soap*, tt__FocusStatus20*) deserialize from a source
/// - int soap_write_tt__FocusStatus20(struct soap*, tt__FocusStatus20*) serialize to a sink
/// - tt__FocusStatus20* soap_dup_tt__FocusStatus20(struct soap*, tt__FocusStatus20* dst, tt__FocusStatus20 *src) returns deep copy of tt__FocusStatus20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusStatus20(tt__FocusStatus20*) deep deletes tt__FocusStatus20 data members, use only on dst after soap_dup_tt__FocusStatus20(NULL, tt__FocusStatus20 *dst, tt__FocusStatus20 *src) (use soapcpp2 -Ed)
struct tt__FocusStatus20
{
/// <PRE><BLOCKQUOTE>
///   Status of focus position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Status of focus MoveStatus.
/// </BLOCKQUOTE></PRE>
///
/// Element "MoveStatus" of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Error status of focus.
/// </BLOCKQUOTE></PRE>
///
/// Element "Error" of type xs:string.
    char*                                Error                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":FocusStatus20Extension.
    struct tt__FocusStatus20Extension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus20Extension is a complexType.
///
/// @note struct tt__FocusStatus20Extension operations:
/// - tt__FocusStatus20Extension* soap_new_tt__FocusStatus20Extension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FocusStatus20Extension(struct soap*, tt__FocusStatus20Extension*) default initialize members
/// - int soap_read_tt__FocusStatus20Extension(struct soap*, tt__FocusStatus20Extension*) deserialize from a source
/// - int soap_write_tt__FocusStatus20Extension(struct soap*, tt__FocusStatus20Extension*) serialize to a sink
/// - tt__FocusStatus20Extension* soap_dup_tt__FocusStatus20Extension(struct soap*, tt__FocusStatus20Extension* dst, tt__FocusStatus20Extension *src) returns deep copy of tt__FocusStatus20Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusStatus20Extension(tt__FocusStatus20Extension*) deep deletes tt__FocusStatus20Extension data members, use only on dst after soap_dup_tt__FocusStatus20Extension(NULL, tt__FocusStatus20Extension *dst, tt__FocusStatus20Extension *src) (use soapcpp2 -Ed)
struct tt__FocusStatus20Extension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettings20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the ImagingSettings of a VideoSource. The supported options and ranges can be obtained via the GetOptions command.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__ImagingSettings20 operations:
/// - tt__ImagingSettings20* soap_new_tt__ImagingSettings20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingSettings20(struct soap*, tt__ImagingSettings20*) default initialize members
/// - int soap_read_tt__ImagingSettings20(struct soap*, tt__ImagingSettings20*) deserialize from a source
/// - int soap_write_tt__ImagingSettings20(struct soap*, tt__ImagingSettings20*) serialize to a sink
/// - tt__ImagingSettings20* soap_dup_tt__ImagingSettings20(struct soap*, tt__ImagingSettings20* dst, tt__ImagingSettings20 *src) returns deep copy of tt__ImagingSettings20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingSettings20(tt__ImagingSettings20*) deep deletes tt__ImagingSettings20 data members, use only on dst after soap_dup_tt__ImagingSettings20(NULL, tt__ImagingSettings20 *dst, tt__ImagingSettings20 *src) (use soapcpp2 -Ed)
struct tt__ImagingSettings20
{
/// <PRE><BLOCKQUOTE>
///   Enabled/disabled BLC mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "BacklightCompensation" of type "http://www.onvif.org/ver10/schema":BacklightCompensation20.
    struct tt__BacklightCompensation20*  BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image brightness (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Brightness" of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Color saturation of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "ColorSaturation" of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contrast of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Contrast" of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Exposure mode of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Exposure" of type "http://www.onvif.org/ver10/schema":Exposure20.
    struct tt__Exposure20*               Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Focus configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Focus" of type "http://www.onvif.org/ver10/schema":FocusConfiguration20.
    struct tt__FocusConfiguration20*     Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Infrared Cutoff Filter settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "IrCutFilter" of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Sharpness of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Sharpness" of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   WDR settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "WideDynamicRange" of type "http://www.onvif.org/ver10/schema":WideDynamicRange20.
    struct tt__WideDynamicRange20*       WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   White balance settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "WhiteBalance" of type "http://www.onvif.org/ver10/schema":WhiteBalance20.
    struct tt__WhiteBalance20*           WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20.
    struct tt__ImagingSettingsExtension20*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is a complexType.
///
/// @note struct tt__ImagingSettingsExtension20 operations:
/// - tt__ImagingSettingsExtension20* soap_new_tt__ImagingSettingsExtension20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingSettingsExtension20(struct soap*, tt__ImagingSettingsExtension20*) default initialize members
/// - int soap_read_tt__ImagingSettingsExtension20(struct soap*, tt__ImagingSettingsExtension20*) deserialize from a source
/// - int soap_write_tt__ImagingSettingsExtension20(struct soap*, tt__ImagingSettingsExtension20*) serialize to a sink
/// - tt__ImagingSettingsExtension20* soap_dup_tt__ImagingSettingsExtension20(struct soap*, tt__ImagingSettingsExtension20* dst, tt__ImagingSettingsExtension20 *src) returns deep copy of tt__ImagingSettingsExtension20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingSettingsExtension20(tt__ImagingSettingsExtension20*) deep deletes tt__ImagingSettingsExtension20 data members, use only on dst after soap_dup_tt__ImagingSettingsExtension20(NULL, tt__ImagingSettingsExtension20 *dst, tt__ImagingSettingsExtension20 *src) (use soapcpp2 -Ed)
struct tt__ImagingSettingsExtension20
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImageStabilization" of type "http://www.onvif.org/ver10/schema":ImageStabilization.
    struct tt__ImageStabilization*       ImageStabilization             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202.
    struct tt__ImagingSettingsExtension202*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202 is a complexType.
///
/// @note struct tt__ImagingSettingsExtension202 operations:
/// - tt__ImagingSettingsExtension202* soap_new_tt__ImagingSettingsExtension202(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingSettingsExtension202(struct soap*, tt__ImagingSettingsExtension202*) default initialize members
/// - int soap_read_tt__ImagingSettingsExtension202(struct soap*, tt__ImagingSettingsExtension202*) deserialize from a source
/// - int soap_write_tt__ImagingSettingsExtension202(struct soap*, tt__ImagingSettingsExtension202*) serialize to a sink
/// - tt__ImagingSettingsExtension202* soap_dup_tt__ImagingSettingsExtension202(struct soap*, tt__ImagingSettingsExtension202* dst, tt__ImagingSettingsExtension202 *src) returns deep copy of tt__ImagingSettingsExtension202 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingSettingsExtension202(tt__ImagingSettingsExtension202*) deep deletes tt__ImagingSettingsExtension202 data members, use only on dst after soap_dup_tt__ImagingSettingsExtension202(NULL, tt__ImagingSettingsExtension202 *dst, tt__ImagingSettingsExtension202 *src) (use soapcpp2 -Ed)
struct tt__ImagingSettingsExtension202
{
/// <PRE><BLOCKQUOTE>
///   An optional parameter applied to only auto mode to adjust timing of toggling Ir cut filter.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__IrCutFilterAutoAdjustment* is 0..unbounded.
  $ int                                  __sizeIrCutFilterAutoAdjustment 0;
/// Array struct tt__IrCutFilterAutoAdjustment* of size 0..unbounded.
    struct tt__IrCutFilterAutoAdjustment*  IrCutFilterAutoAdjustment      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203.
    struct tt__ImagingSettingsExtension203*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203 is a complexType.
///
/// @note struct tt__ImagingSettingsExtension203 operations:
/// - tt__ImagingSettingsExtension203* soap_new_tt__ImagingSettingsExtension203(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingSettingsExtension203(struct soap*, tt__ImagingSettingsExtension203*) default initialize members
/// - int soap_read_tt__ImagingSettingsExtension203(struct soap*, tt__ImagingSettingsExtension203*) deserialize from a source
/// - int soap_write_tt__ImagingSettingsExtension203(struct soap*, tt__ImagingSettingsExtension203*) serialize to a sink
/// - tt__ImagingSettingsExtension203* soap_dup_tt__ImagingSettingsExtension203(struct soap*, tt__ImagingSettingsExtension203* dst, tt__ImagingSettingsExtension203 *src) returns deep copy of tt__ImagingSettingsExtension203 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingSettingsExtension203(tt__ImagingSettingsExtension203*) deep deletes tt__ImagingSettingsExtension203 data members, use only on dst after soap_dup_tt__ImagingSettingsExtension203(NULL, tt__ImagingSettingsExtension203 *dst, tt__ImagingSettingsExtension203 *src) (use soapcpp2 -Ed)
struct tt__ImagingSettingsExtension203
{
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Contrast Compensation.
/// </BLOCKQUOTE></PRE>
///
/// Element "ToneCompensation" of type "http://www.onvif.org/ver10/schema":ToneCompensation.
    struct tt__ToneCompensation*         ToneCompensation               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Defogging.
/// </BLOCKQUOTE></PRE>
///
/// Element "Defogging" of type "http://www.onvif.org/ver10/schema":Defogging.
    struct tt__Defogging*                Defogging                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Noise Reduction.
/// </BLOCKQUOTE></PRE>
///
/// Element "NoiseReduction" of type "http://www.onvif.org/ver10/schema":NoiseReduction.
    struct tt__NoiseReduction*           NoiseReduction                 0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204.
    struct tt__ImagingSettingsExtension204*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204 is a complexType.
///
/// @note struct tt__ImagingSettingsExtension204 operations:
/// - tt__ImagingSettingsExtension204* soap_new_tt__ImagingSettingsExtension204(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingSettingsExtension204(struct soap*, tt__ImagingSettingsExtension204*) default initialize members
/// - int soap_read_tt__ImagingSettingsExtension204(struct soap*, tt__ImagingSettingsExtension204*) deserialize from a source
/// - int soap_write_tt__ImagingSettingsExtension204(struct soap*, tt__ImagingSettingsExtension204*) serialize to a sink
/// - tt__ImagingSettingsExtension204* soap_dup_tt__ImagingSettingsExtension204(struct soap*, tt__ImagingSettingsExtension204* dst, tt__ImagingSettingsExtension204 *src) returns deep copy of tt__ImagingSettingsExtension204 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingSettingsExtension204(tt__ImagingSettingsExtension204*) deep deletes tt__ImagingSettingsExtension204 data members, use only on dst after soap_dup_tt__ImagingSettingsExtension204(NULL, tt__ImagingSettingsExtension204 *dst, tt__ImagingSettingsExtension204 *src) (use soapcpp2 -Ed)
struct tt__ImagingSettingsExtension204
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilization is a complexType.
///
/// @note struct tt__ImageStabilization operations:
/// - tt__ImageStabilization* soap_new_tt__ImageStabilization(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImageStabilization(struct soap*, tt__ImageStabilization*) default initialize members
/// - int soap_read_tt__ImageStabilization(struct soap*, tt__ImageStabilization*) deserialize from a source
/// - int soap_write_tt__ImageStabilization(struct soap*, tt__ImageStabilization*) serialize to a sink
/// - tt__ImageStabilization* soap_dup_tt__ImageStabilization(struct soap*, tt__ImageStabilization* dst, tt__ImageStabilization *src) returns deep copy of tt__ImageStabilization src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImageStabilization(tt__ImageStabilization*) deep deletes tt__ImageStabilization data members, use only on dst after soap_dup_tt__ImageStabilization(NULL, tt__ImageStabilization *dst, tt__ImageStabilization *src) (use soapcpp2 -Ed)
struct tt__ImageStabilization
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ImageStabilizationMode.
    enum tt__ImageStabilizationMode      Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified)
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImageStabilizationExtension.
    struct tt__ImageStabilizationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationExtension is a complexType.
///
/// @note struct tt__ImageStabilizationExtension operations:
/// - tt__ImageStabilizationExtension* soap_new_tt__ImageStabilizationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImageStabilizationExtension(struct soap*, tt__ImageStabilizationExtension*) default initialize members
/// - int soap_read_tt__ImageStabilizationExtension(struct soap*, tt__ImageStabilizationExtension*) deserialize from a source
/// - int soap_write_tt__ImageStabilizationExtension(struct soap*, tt__ImageStabilizationExtension*) serialize to a sink
/// - tt__ImageStabilizationExtension* soap_dup_tt__ImageStabilizationExtension(struct soap*, tt__ImageStabilizationExtension* dst, tt__ImageStabilizationExtension *src) returns deep copy of tt__ImageStabilizationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImageStabilizationExtension(tt__ImageStabilizationExtension*) deep deletes tt__ImageStabilizationExtension data members, use only on dst after soap_dup_tt__ImageStabilizationExtension(NULL, tt__ImageStabilizationExtension *dst, tt__ImageStabilizationExtension *src) (use soapcpp2 -Ed)
struct tt__ImageStabilizationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustment is a complexType.
///
/// @note struct tt__IrCutFilterAutoAdjustment operations:
/// - tt__IrCutFilterAutoAdjustment* soap_new_tt__IrCutFilterAutoAdjustment(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IrCutFilterAutoAdjustment(struct soap*, tt__IrCutFilterAutoAdjustment*) default initialize members
/// - int soap_read_tt__IrCutFilterAutoAdjustment(struct soap*, tt__IrCutFilterAutoAdjustment*) deserialize from a source
/// - int soap_write_tt__IrCutFilterAutoAdjustment(struct soap*, tt__IrCutFilterAutoAdjustment*) serialize to a sink
/// - tt__IrCutFilterAutoAdjustment* soap_dup_tt__IrCutFilterAutoAdjustment(struct soap*, tt__IrCutFilterAutoAdjustment* dst, tt__IrCutFilterAutoAdjustment *src) returns deep copy of tt__IrCutFilterAutoAdjustment src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IrCutFilterAutoAdjustment(tt__IrCutFilterAutoAdjustment*) deep deletes tt__IrCutFilterAutoAdjustment data members, use only on dst after soap_dup_tt__IrCutFilterAutoAdjustment(NULL, tt__IrCutFilterAutoAdjustment *dst, tt__IrCutFilterAutoAdjustment *src) (use soapcpp2 -Ed)
struct tt__IrCutFilterAutoAdjustment
{
/// <PRE><BLOCKQUOTE>
///   Specifies which boundaries to automatically toggle Ir cut filter following parameters are applied to. Its options shall be chosen from tt:IrCutFilterAutoBoundaryType.
/// </BLOCKQUOTE></PRE>
///
/// Element "BoundaryType" of type xs:string.
    char*                                BoundaryType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Adjusts boundary exposure level for toggling Ir cut filter to on/off specified with unitless normalized value from +1.0 to -1.0. Zero is default and -1.0 is the darkest adjustment (Unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "BoundaryOffset" of type xs:float.
    float*                               BoundaryOffset                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Delay time of toggling Ir cut filter to on/off after crossing of the boundary exposure levels.
/// </BLOCKQUOTE></PRE>
///
/// Element "ResponseTime" of type xs:duration.
    xsd__duration                        ResponseTime                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension.
    struct tt__IrCutFilterAutoAdjustmentExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension is a complexType.
///
/// @note struct tt__IrCutFilterAutoAdjustmentExtension operations:
/// - tt__IrCutFilterAutoAdjustmentExtension* soap_new_tt__IrCutFilterAutoAdjustmentExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IrCutFilterAutoAdjustmentExtension(struct soap*, tt__IrCutFilterAutoAdjustmentExtension*) default initialize members
/// - int soap_read_tt__IrCutFilterAutoAdjustmentExtension(struct soap*, tt__IrCutFilterAutoAdjustmentExtension*) deserialize from a source
/// - int soap_write_tt__IrCutFilterAutoAdjustmentExtension(struct soap*, tt__IrCutFilterAutoAdjustmentExtension*) serialize to a sink
/// - tt__IrCutFilterAutoAdjustmentExtension* soap_dup_tt__IrCutFilterAutoAdjustmentExtension(struct soap*, tt__IrCutFilterAutoAdjustmentExtension* dst, tt__IrCutFilterAutoAdjustmentExtension *src) returns deep copy of tt__IrCutFilterAutoAdjustmentExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IrCutFilterAutoAdjustmentExtension(tt__IrCutFilterAutoAdjustmentExtension*) deep deletes tt__IrCutFilterAutoAdjustmentExtension data members, use only on dst after soap_dup_tt__IrCutFilterAutoAdjustmentExtension(NULL, tt__IrCutFilterAutoAdjustmentExtension *dst, tt__IrCutFilterAutoAdjustmentExtension *src) (use soapcpp2 -Ed)
struct tt__IrCutFilterAutoAdjustmentExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRange20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing whether WDR mode is enabled or disabled (on/off).
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__WideDynamicRange20 operations:
/// - tt__WideDynamicRange20* soap_new_tt__WideDynamicRange20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__WideDynamicRange20(struct soap*, tt__WideDynamicRange20*) default initialize members
/// - int soap_read_tt__WideDynamicRange20(struct soap*, tt__WideDynamicRange20*) deserialize from a source
/// - int soap_write_tt__WideDynamicRange20(struct soap*, tt__WideDynamicRange20*) serialize to a sink
/// - tt__WideDynamicRange20* soap_dup_tt__WideDynamicRange20(struct soap*, tt__WideDynamicRange20* dst, tt__WideDynamicRange20 *src) returns deep copy of tt__WideDynamicRange20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WideDynamicRange20(tt__WideDynamicRange20*) deep deletes tt__WideDynamicRange20 data members, use only on dst after soap_dup_tt__WideDynamicRange20(NULL, tt__WideDynamicRange20 *dst, tt__WideDynamicRange20 *src) (use soapcpp2 -Ed)
struct tt__WideDynamicRange20
{
/// <PRE><BLOCKQUOTE>
///   Wide dynamic range mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensation20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing whether BLC mode is enabled or disabled (on/off).
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__BacklightCompensation20 operations:
/// - tt__BacklightCompensation20* soap_new_tt__BacklightCompensation20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__BacklightCompensation20(struct soap*, tt__BacklightCompensation20*) default initialize members
/// - int soap_read_tt__BacklightCompensation20(struct soap*, tt__BacklightCompensation20*) deserialize from a source
/// - int soap_write_tt__BacklightCompensation20(struct soap*, tt__BacklightCompensation20*) serialize to a sink
/// - tt__BacklightCompensation20* soap_dup_tt__BacklightCompensation20(struct soap*, tt__BacklightCompensation20* dst, tt__BacklightCompensation20 *src) returns deep copy of tt__BacklightCompensation20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BacklightCompensation20(tt__BacklightCompensation20*) deep deletes tt__BacklightCompensation20 data members, use only on dst after soap_dup_tt__BacklightCompensation20(NULL, tt__BacklightCompensation20 *dst, tt__BacklightCompensation20 *src) (use soapcpp2 -Ed)
struct tt__BacklightCompensation20
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":Exposure20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the exposure settings.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__Exposure20 operations:
/// - tt__Exposure20* soap_new_tt__Exposure20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Exposure20(struct soap*, tt__Exposure20*) default initialize members
/// - int soap_read_tt__Exposure20(struct soap*, tt__Exposure20*) deserialize from a source
/// - int soap_write_tt__Exposure20(struct soap*, tt__Exposure20*) serialize to a sink
/// - tt__Exposure20* soap_dup_tt__Exposure20(struct soap*, tt__Exposure20* dst, tt__Exposure20 *src) returns deep copy of tt__Exposure20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Exposure20(tt__Exposure20*) deep deletes tt__Exposure20 data members, use only on dst after soap_dup_tt__Exposure20(NULL, tt__Exposure20 *dst, tt__Exposure20 *src) (use soapcpp2 -Ed)
struct tt__Exposure20
{
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the device.</li>
///   <li>Manual Disabled exposure algorithm on the device.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
///
/// Element "Priority" of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority*           Priority                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Rectangular exposure mask.
/// </BLOCKQUOTE></PRE>
///
/// Element "Window" of type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                Window                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinExposureTime" of type xs:float.
    float*                               MinExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxExposureTime" of type xs:float.
    float*                               MaxExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinGain" of type xs:float.
    float*                               MinGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxGain" of type xs:float.
    float*                               MaxGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the iris range allowed to be used by the algorithm. 0dB maps to a fully opened iris and positive values map to higher attenuation.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinIris" of type xs:float.
    float*                               MinIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the iris range allowed to be used by the algorithm. 0dB maps to a fully opened iris and positive values map to higher attenuation.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxIris" of type xs:float.
    float*                               MaxIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed exposure time used by the image sensor (s).
/// </BLOCKQUOTE></PRE>
///
/// Element "ExposureTime" of type xs:float.
    float*                               ExposureTime                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed gain used by the image sensor (dB).
/// </BLOCKQUOTE></PRE>
///
/// Element "Gain" of type xs:float.
    float*                               Gain                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris and positive values map to higher attenuation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Iris" of type xs:float.
    float*                               Iris                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensation is a complexType.
///
/// @note struct tt__ToneCompensation operations:
/// - tt__ToneCompensation* soap_new_tt__ToneCompensation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ToneCompensation(struct soap*, tt__ToneCompensation*) default initialize members
/// - int soap_read_tt__ToneCompensation(struct soap*, tt__ToneCompensation*) deserialize from a source
/// - int soap_write_tt__ToneCompensation(struct soap*, tt__ToneCompensation*) serialize to a sink
/// - tt__ToneCompensation* soap_dup_tt__ToneCompensation(struct soap*, tt__ToneCompensation* dst, tt__ToneCompensation *src) returns deep copy of tt__ToneCompensation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ToneCompensation(tt__ToneCompensation*) deep deletes tt__ToneCompensation data members, use only on dst after soap_dup_tt__ToneCompensation(NULL, tt__ToneCompensation *dst, tt__ToneCompensation *src) (use soapcpp2 -Ed)
struct tt__ToneCompensation
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable or automatic ToneCompensation feature. Its options shall be chosen from tt:ToneCompensationMode Type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type xs:string.
    char*                                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter specified with unitless normalized value from 0.0 to +1.0.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ToneCompensationExtension.
    struct tt__ToneCompensationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationExtension is a complexType.
///
/// @note struct tt__ToneCompensationExtension operations:
/// - tt__ToneCompensationExtension* soap_new_tt__ToneCompensationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ToneCompensationExtension(struct soap*, tt__ToneCompensationExtension*) default initialize members
/// - int soap_read_tt__ToneCompensationExtension(struct soap*, tt__ToneCompensationExtension*) deserialize from a source
/// - int soap_write_tt__ToneCompensationExtension(struct soap*, tt__ToneCompensationExtension*) serialize to a sink
/// - tt__ToneCompensationExtension* soap_dup_tt__ToneCompensationExtension(struct soap*, tt__ToneCompensationExtension* dst, tt__ToneCompensationExtension *src) returns deep copy of tt__ToneCompensationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ToneCompensationExtension(tt__ToneCompensationExtension*) deep deletes tt__ToneCompensationExtension data members, use only on dst after soap_dup_tt__ToneCompensationExtension(NULL, tt__ToneCompensationExtension *dst, tt__ToneCompensationExtension *src) (use soapcpp2 -Ed)
struct tt__ToneCompensationExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Defogging is a complexType.
///
/// @note struct tt__Defogging operations:
/// - tt__Defogging* soap_new_tt__Defogging(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Defogging(struct soap*, tt__Defogging*) default initialize members
/// - int soap_read_tt__Defogging(struct soap*, tt__Defogging*) deserialize from a source
/// - int soap_write_tt__Defogging(struct soap*, tt__Defogging*) serialize to a sink
/// - tt__Defogging* soap_dup_tt__Defogging(struct soap*, tt__Defogging* dst, tt__Defogging *src) returns deep copy of tt__Defogging src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Defogging(tt__Defogging*) deep deletes tt__Defogging data members, use only on dst after soap_dup_tt__Defogging(NULL, tt__Defogging *dst, tt__Defogging *src) (use soapcpp2 -Ed)
struct tt__Defogging
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable or automatic Defogging feature. Its options shall be chosen from tt:DefoggingMode Type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type xs:string.
    char*                                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter specified with unitless normalized value from 0.0 to +1.0.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DefoggingExtension.
    struct tt__DefoggingExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingExtension is a complexType.
///
/// @note struct tt__DefoggingExtension operations:
/// - tt__DefoggingExtension* soap_new_tt__DefoggingExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DefoggingExtension(struct soap*, tt__DefoggingExtension*) default initialize members
/// - int soap_read_tt__DefoggingExtension(struct soap*, tt__DefoggingExtension*) deserialize from a source
/// - int soap_write_tt__DefoggingExtension(struct soap*, tt__DefoggingExtension*) serialize to a sink
/// - tt__DefoggingExtension* soap_dup_tt__DefoggingExtension(struct soap*, tt__DefoggingExtension* dst, tt__DefoggingExtension *src) returns deep copy of tt__DefoggingExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DefoggingExtension(tt__DefoggingExtension*) deep deletes tt__DefoggingExtension data members, use only on dst after soap_dup_tt__DefoggingExtension(NULL, tt__DefoggingExtension *dst, tt__DefoggingExtension *src) (use soapcpp2 -Ed)
struct tt__DefoggingExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":NoiseReduction is a complexType.
///
/// @note struct tt__NoiseReduction operations:
/// - tt__NoiseReduction* soap_new_tt__NoiseReduction(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NoiseReduction(struct soap*, tt__NoiseReduction*) default initialize members
/// - int soap_read_tt__NoiseReduction(struct soap*, tt__NoiseReduction*) deserialize from a source
/// - int soap_write_tt__NoiseReduction(struct soap*, tt__NoiseReduction*) serialize to a sink
/// - tt__NoiseReduction* soap_dup_tt__NoiseReduction(struct soap*, tt__NoiseReduction* dst, tt__NoiseReduction *src) returns deep copy of tt__NoiseReduction src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NoiseReduction(tt__NoiseReduction*) deep deletes tt__NoiseReduction data members, use only on dst after soap_dup_tt__NoiseReduction(NULL, tt__NoiseReduction *dst, tt__NoiseReduction *src) (use soapcpp2 -Ed)
struct tt__NoiseReduction
{
/// <PRE><BLOCKQUOTE>
///   Level parameter specified with unitless normalized value from 0.0 to +1.0. Level=0 means no noise reduction or minimal noise reduction.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float                                Level                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20 is a complexType.
///
/// @note struct tt__ImagingOptions20 operations:
/// - tt__ImagingOptions20* soap_new_tt__ImagingOptions20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingOptions20(struct soap*, tt__ImagingOptions20*) default initialize members
/// - int soap_read_tt__ImagingOptions20(struct soap*, tt__ImagingOptions20*) deserialize from a source
/// - int soap_write_tt__ImagingOptions20(struct soap*, tt__ImagingOptions20*) serialize to a sink
/// - tt__ImagingOptions20* soap_dup_tt__ImagingOptions20(struct soap*, tt__ImagingOptions20* dst, tt__ImagingOptions20 *src) returns deep copy of tt__ImagingOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingOptions20(tt__ImagingOptions20*) deep deletes tt__ImagingOptions20 data members, use only on dst after soap_dup_tt__ImagingOptions20(NULL, tt__ImagingOptions20 *dst, tt__ImagingOptions20 *src) (use soapcpp2 -Ed)
struct tt__ImagingOptions20
{
/// <PRE><BLOCKQUOTE>
///   Valid range of Backlight Compensation.
/// </BLOCKQUOTE></PRE>
///
/// Element "BacklightCompensation" of type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20.
    struct tt__BacklightCompensationOptions20*  BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Brightness.
/// </BLOCKQUOTE></PRE>
///
/// Element "Brightness" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Color Saturation.
/// </BLOCKQUOTE></PRE>
///
/// Element "ColorSaturation" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Contrast.
/// </BLOCKQUOTE></PRE>
///
/// Element "Contrast" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Exposure.
/// </BLOCKQUOTE></PRE>
///
/// Element "Exposure" of type "http://www.onvif.org/ver10/schema":ExposureOptions20.
    struct tt__ExposureOptions20*        Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Focus.
/// </BLOCKQUOTE></PRE>
///
/// Element "Focus" of type "http://www.onvif.org/ver10/schema":FocusOptions20.
    struct tt__FocusOptions20*           Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of IrCutFilterModes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__IrCutFilterMode* is 0..unbounded.
  $ int                                  __sizeIrCutFilterModes         0;
/// Array enum tt__IrCutFilterMode* of size 0..unbounded.
    enum tt__IrCutFilterMode*            IrCutFilterModes               0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Valid range of Sharpness.
/// </BLOCKQUOTE></PRE>
///
/// Element "Sharpness" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of WideDynamicRange.
/// </BLOCKQUOTE></PRE>
///
/// Element "WideDynamicRange" of type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20.
    struct tt__WideDynamicRangeOptions20*  WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of WhiteBalance.
/// </BLOCKQUOTE></PRE>
///
/// Element "WhiteBalance" of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20.
    struct tt__WhiteBalanceOptions20*    WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension.
    struct tt__ImagingOptions20Extension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is a complexType.
///
/// @note struct tt__ImagingOptions20Extension operations:
/// - tt__ImagingOptions20Extension* soap_new_tt__ImagingOptions20Extension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingOptions20Extension(struct soap*, tt__ImagingOptions20Extension*) default initialize members
/// - int soap_read_tt__ImagingOptions20Extension(struct soap*, tt__ImagingOptions20Extension*) deserialize from a source
/// - int soap_write_tt__ImagingOptions20Extension(struct soap*, tt__ImagingOptions20Extension*) serialize to a sink
/// - tt__ImagingOptions20Extension* soap_dup_tt__ImagingOptions20Extension(struct soap*, tt__ImagingOptions20Extension* dst, tt__ImagingOptions20Extension *src) returns deep copy of tt__ImagingOptions20Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingOptions20Extension(tt__ImagingOptions20Extension*) deep deletes tt__ImagingOptions20Extension data members, use only on dst after soap_dup_tt__ImagingOptions20Extension(NULL, tt__ImagingOptions20Extension *dst, tt__ImagingOptions20Extension *src) (use soapcpp2 -Ed)
struct tt__ImagingOptions20Extension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImageStabilization" of type "http://www.onvif.org/ver10/schema":ImageStabilizationOptions.
    struct tt__ImageStabilizationOptions*  ImageStabilization             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2.
    struct tt__ImagingOptions20Extension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2 is a complexType.
///
/// @note struct tt__ImagingOptions20Extension2 operations:
/// - tt__ImagingOptions20Extension2* soap_new_tt__ImagingOptions20Extension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingOptions20Extension2(struct soap*, tt__ImagingOptions20Extension2*) default initialize members
/// - int soap_read_tt__ImagingOptions20Extension2(struct soap*, tt__ImagingOptions20Extension2*) deserialize from a source
/// - int soap_write_tt__ImagingOptions20Extension2(struct soap*, tt__ImagingOptions20Extension2*) serialize to a sink
/// - tt__ImagingOptions20Extension2* soap_dup_tt__ImagingOptions20Extension2(struct soap*, tt__ImagingOptions20Extension2* dst, tt__ImagingOptions20Extension2 *src) returns deep copy of tt__ImagingOptions20Extension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingOptions20Extension2(tt__ImagingOptions20Extension2*) deep deletes tt__ImagingOptions20Extension2 data members, use only on dst after soap_dup_tt__ImagingOptions20Extension2(NULL, tt__ImagingOptions20Extension2 *dst, tt__ImagingOptions20Extension2 *src) (use soapcpp2 -Ed)
struct tt__ImagingOptions20Extension2
{
/// <PRE><BLOCKQUOTE>
///   Options of parameters for adjustment of Ir cut filter auto mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "IrCutFilterAutoAdjustment" of type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions.
    struct tt__IrCutFilterAutoAdjustmentOptions*  IrCutFilterAutoAdjustment      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3.
    struct tt__ImagingOptions20Extension3*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3 is a complexType.
///
/// @note struct tt__ImagingOptions20Extension3 operations:
/// - tt__ImagingOptions20Extension3* soap_new_tt__ImagingOptions20Extension3(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingOptions20Extension3(struct soap*, tt__ImagingOptions20Extension3*) default initialize members
/// - int soap_read_tt__ImagingOptions20Extension3(struct soap*, tt__ImagingOptions20Extension3*) deserialize from a source
/// - int soap_write_tt__ImagingOptions20Extension3(struct soap*, tt__ImagingOptions20Extension3*) serialize to a sink
/// - tt__ImagingOptions20Extension3* soap_dup_tt__ImagingOptions20Extension3(struct soap*, tt__ImagingOptions20Extension3* dst, tt__ImagingOptions20Extension3 *src) returns deep copy of tt__ImagingOptions20Extension3 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingOptions20Extension3(tt__ImagingOptions20Extension3*) deep deletes tt__ImagingOptions20Extension3 data members, use only on dst after soap_dup_tt__ImagingOptions20Extension3(NULL, tt__ImagingOptions20Extension3 *dst, tt__ImagingOptions20Extension3 *src) (use soapcpp2 -Ed)
struct tt__ImagingOptions20Extension3
{
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Tone Compensation feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "ToneCompensationOptions" of type "http://www.onvif.org/ver10/schema":ToneCompensationOptions.
    struct tt__ToneCompensationOptions*  ToneCompensationOptions        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Defogging feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefoggingOptions" of type "http://www.onvif.org/ver10/schema":DefoggingOptions.
    struct tt__DefoggingOptions*         DefoggingOptions               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Options of parameter for Noise Reduction feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "NoiseReductionOptions" of type "http://www.onvif.org/ver10/schema":NoiseReductionOptions.
    struct tt__NoiseReductionOptions*    NoiseReductionOptions          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4.
    struct tt__ImagingOptions20Extension4*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4 is a complexType.
///
/// @note struct tt__ImagingOptions20Extension4 operations:
/// - tt__ImagingOptions20Extension4* soap_new_tt__ImagingOptions20Extension4(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingOptions20Extension4(struct soap*, tt__ImagingOptions20Extension4*) default initialize members
/// - int soap_read_tt__ImagingOptions20Extension4(struct soap*, tt__ImagingOptions20Extension4*) deserialize from a source
/// - int soap_write_tt__ImagingOptions20Extension4(struct soap*, tt__ImagingOptions20Extension4*) serialize to a sink
/// - tt__ImagingOptions20Extension4* soap_dup_tt__ImagingOptions20Extension4(struct soap*, tt__ImagingOptions20Extension4* dst, tt__ImagingOptions20Extension4 *src) returns deep copy of tt__ImagingOptions20Extension4 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingOptions20Extension4(tt__ImagingOptions20Extension4*) deep deletes tt__ImagingOptions20Extension4 data members, use only on dst after soap_dup_tt__ImagingOptions20Extension4(NULL, tt__ImagingOptions20Extension4 *dst, tt__ImagingOptions20Extension4 *src) (use soapcpp2 -Ed)
struct tt__ImagingOptions20Extension4
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationOptions is a complexType.
///
/// @note struct tt__ImageStabilizationOptions operations:
/// - tt__ImageStabilizationOptions* soap_new_tt__ImageStabilizationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImageStabilizationOptions(struct soap*, tt__ImageStabilizationOptions*) default initialize members
/// - int soap_read_tt__ImageStabilizationOptions(struct soap*, tt__ImageStabilizationOptions*) deserialize from a source
/// - int soap_write_tt__ImageStabilizationOptions(struct soap*, tt__ImageStabilizationOptions*) serialize to a sink
/// - tt__ImageStabilizationOptions* soap_dup_tt__ImageStabilizationOptions(struct soap*, tt__ImageStabilizationOptions* dst, tt__ImageStabilizationOptions *src) returns deep copy of tt__ImageStabilizationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImageStabilizationOptions(tt__ImageStabilizationOptions*) deep deletes tt__ImageStabilizationOptions data members, use only on dst after soap_dup_tt__ImageStabilizationOptions(NULL, tt__ImageStabilizationOptions *dst, tt__ImageStabilizationOptions *src) (use soapcpp2 -Ed)
struct tt__ImageStabilizationOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options of Image Stabilization mode parameter.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__ImageStabilizationMode* is 1..unbounded.
  $ int                                  __sizeMode                     1;
/// Array enum tt__ImageStabilizationMode* of size 1..unbounded.
    enum tt__ImageStabilizationMode*     Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Image Stabilization.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension.
    struct tt__ImageStabilizationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension is a complexType.
///
/// @note struct tt__ImageStabilizationOptionsExtension operations:
/// - tt__ImageStabilizationOptionsExtension* soap_new_tt__ImageStabilizationOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImageStabilizationOptionsExtension(struct soap*, tt__ImageStabilizationOptionsExtension*) default initialize members
/// - int soap_read_tt__ImageStabilizationOptionsExtension(struct soap*, tt__ImageStabilizationOptionsExtension*) deserialize from a source
/// - int soap_write_tt__ImageStabilizationOptionsExtension(struct soap*, tt__ImageStabilizationOptionsExtension*) serialize to a sink
/// - tt__ImageStabilizationOptionsExtension* soap_dup_tt__ImageStabilizationOptionsExtension(struct soap*, tt__ImageStabilizationOptionsExtension* dst, tt__ImageStabilizationOptionsExtension *src) returns deep copy of tt__ImageStabilizationOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImageStabilizationOptionsExtension(tt__ImageStabilizationOptionsExtension*) deep deletes tt__ImageStabilizationOptionsExtension data members, use only on dst after soap_dup_tt__ImageStabilizationOptionsExtension(NULL, tt__ImageStabilizationOptionsExtension *dst, tt__ImageStabilizationOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__ImageStabilizationOptionsExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions is a complexType.
///
/// @note struct tt__IrCutFilterAutoAdjustmentOptions operations:
/// - tt__IrCutFilterAutoAdjustmentOptions* soap_new_tt__IrCutFilterAutoAdjustmentOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IrCutFilterAutoAdjustmentOptions(struct soap*, tt__IrCutFilterAutoAdjustmentOptions*) default initialize members
/// - int soap_read_tt__IrCutFilterAutoAdjustmentOptions(struct soap*, tt__IrCutFilterAutoAdjustmentOptions*) deserialize from a source
/// - int soap_write_tt__IrCutFilterAutoAdjustmentOptions(struct soap*, tt__IrCutFilterAutoAdjustmentOptions*) serialize to a sink
/// - tt__IrCutFilterAutoAdjustmentOptions* soap_dup_tt__IrCutFilterAutoAdjustmentOptions(struct soap*, tt__IrCutFilterAutoAdjustmentOptions* dst, tt__IrCutFilterAutoAdjustmentOptions *src) returns deep copy of tt__IrCutFilterAutoAdjustmentOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IrCutFilterAutoAdjustmentOptions(tt__IrCutFilterAutoAdjustmentOptions*) deep deletes tt__IrCutFilterAutoAdjustmentOptions data members, use only on dst after soap_dup_tt__IrCutFilterAutoAdjustmentOptions(NULL, tt__IrCutFilterAutoAdjustmentOptions *dst, tt__IrCutFilterAutoAdjustmentOptions *src) (use soapcpp2 -Ed)
struct tt__IrCutFilterAutoAdjustmentOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options of boundary types for adjustment of Ir cut filter auto mode. The opptions shall be chosen from tt:IrCutFilterAutoBoundaryType.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char** is 1..unbounded.
  $ int                                  __sizeBoundaryType             1;
/// Array char** of size 1..unbounded.
    char**                               BoundaryType                   1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not boundary offset for toggling Ir cut filter is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "BoundaryOffset" of type xs:boolean.
    enum xsd__boolean*                   BoundaryOffset                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of delay time for toggling Ir cut filter.
/// </BLOCKQUOTE></PRE>
///
/// Element "ResponseTimeRange" of type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            ResponseTimeRange              0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension.
    struct tt__IrCutFilterAutoAdjustmentOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension is a complexType.
///
/// @note struct tt__IrCutFilterAutoAdjustmentOptionsExtension operations:
/// - tt__IrCutFilterAutoAdjustmentOptionsExtension* soap_new_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension*) default initialize members
/// - int soap_read_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension*) deserialize from a source
/// - int soap_write_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension*) serialize to a sink
/// - tt__IrCutFilterAutoAdjustmentOptionsExtension* soap_dup_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension* dst, tt__IrCutFilterAutoAdjustmentOptionsExtension *src) returns deep copy of tt__IrCutFilterAutoAdjustmentOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IrCutFilterAutoAdjustmentOptionsExtension(tt__IrCutFilterAutoAdjustmentOptionsExtension*) deep deletes tt__IrCutFilterAutoAdjustmentOptionsExtension data members, use only on dst after soap_dup_tt__IrCutFilterAutoAdjustmentOptionsExtension(NULL, tt__IrCutFilterAutoAdjustmentOptionsExtension *dst, tt__IrCutFilterAutoAdjustmentOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__IrCutFilterAutoAdjustmentOptionsExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is a complexType.
///
/// @note struct tt__WideDynamicRangeOptions20 operations:
/// - tt__WideDynamicRangeOptions20* soap_new_tt__WideDynamicRangeOptions20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__WideDynamicRangeOptions20(struct soap*, tt__WideDynamicRangeOptions20*) default initialize members
/// - int soap_read_tt__WideDynamicRangeOptions20(struct soap*, tt__WideDynamicRangeOptions20*) deserialize from a source
/// - int soap_write_tt__WideDynamicRangeOptions20(struct soap*, tt__WideDynamicRangeOptions20*) serialize to a sink
/// - tt__WideDynamicRangeOptions20* soap_dup_tt__WideDynamicRangeOptions20(struct soap*, tt__WideDynamicRangeOptions20* dst, tt__WideDynamicRangeOptions20 *src) returns deep copy of tt__WideDynamicRangeOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WideDynamicRangeOptions20(tt__WideDynamicRangeOptions20*) deep deletes tt__WideDynamicRangeOptions20 data members, use only on dst after soap_dup_tt__WideDynamicRangeOptions20(NULL, tt__WideDynamicRangeOptions20 *dst, tt__WideDynamicRangeOptions20 *src) (use soapcpp2 -Ed)
struct tt__WideDynamicRangeOptions20
{
/// Size of array of enum tt__WideDynamicMode* is 1..unbounded.
  $ int                                  __sizeMode                     1;
/// Array enum tt__WideDynamicMode* of size 1..unbounded.
    enum tt__WideDynamicMode*            Mode                           1;	///< Multiple elements.
/// Element "Level" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is a complexType.
///
/// @note struct tt__BacklightCompensationOptions20 operations:
/// - tt__BacklightCompensationOptions20* soap_new_tt__BacklightCompensationOptions20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__BacklightCompensationOptions20(struct soap*, tt__BacklightCompensationOptions20*) default initialize members
/// - int soap_read_tt__BacklightCompensationOptions20(struct soap*, tt__BacklightCompensationOptions20*) deserialize from a source
/// - int soap_write_tt__BacklightCompensationOptions20(struct soap*, tt__BacklightCompensationOptions20*) serialize to a sink
/// - tt__BacklightCompensationOptions20* soap_dup_tt__BacklightCompensationOptions20(struct soap*, tt__BacklightCompensationOptions20* dst, tt__BacklightCompensationOptions20 *src) returns deep copy of tt__BacklightCompensationOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BacklightCompensationOptions20(tt__BacklightCompensationOptions20*) deep deletes tt__BacklightCompensationOptions20 data members, use only on dst after soap_dup_tt__BacklightCompensationOptions20(NULL, tt__BacklightCompensationOptions20 *dst, tt__BacklightCompensationOptions20 *src) (use soapcpp2 -Ed)
struct tt__BacklightCompensationOptions20
{
/// <PRE><BLOCKQUOTE>
///   'ON' or 'OFF'
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__BacklightCompensationMode* is 1..unbounded.
  $ int                                  __sizeMode                     1;
/// Array enum tt__BacklightCompensationMode* of size 1..unbounded.
    enum tt__BacklightCompensationMode*  Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Level range of BacklightCompensation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureOptions20 is a complexType.
///
/// @note struct tt__ExposureOptions20 operations:
/// - tt__ExposureOptions20* soap_new_tt__ExposureOptions20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ExposureOptions20(struct soap*, tt__ExposureOptions20*) default initialize members
/// - int soap_read_tt__ExposureOptions20(struct soap*, tt__ExposureOptions20*) deserialize from a source
/// - int soap_write_tt__ExposureOptions20(struct soap*, tt__ExposureOptions20*) serialize to a sink
/// - tt__ExposureOptions20* soap_dup_tt__ExposureOptions20(struct soap*, tt__ExposureOptions20* dst, tt__ExposureOptions20 *src) returns deep copy of tt__ExposureOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ExposureOptions20(tt__ExposureOptions20*) deep deletes tt__ExposureOptions20 data members, use only on dst after soap_dup_tt__ExposureOptions20(NULL, tt__ExposureOptions20 *dst, tt__ExposureOptions20 *src) (use soapcpp2 -Ed)
struct tt__ExposureOptions20
{
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the device.</li>
///   <li>Manual Disabled exposure algorithm on the device.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__ExposureMode* is 1..unbounded.
  $ int                                  __sizeMode                     1;
/// Array enum tt__ExposureMode* of size 1..unbounded.
    enum tt__ExposureMode*               Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__ExposurePriority* is 0..unbounded.
  $ int                                  __sizePriority                 0;
/// Array enum tt__ExposurePriority* of size 0..unbounded.
    enum tt__ExposurePriority*           Priority                       0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum ExposureTime.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinExposureTime" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum ExposureTime.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxExposureTime" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum Gain.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum Gain.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum Iris.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinIris" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum Iris.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxIris" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the ExposureTime.
/// </BLOCKQUOTE></PRE>
///
/// Element "ExposureTime" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ExposureTime                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Gain.
/// </BLOCKQUOTE></PRE>
///
/// Element "Gain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Gain                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Iris.
/// </BLOCKQUOTE></PRE>
///
/// Element "Iris" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Iris                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MoveOptions20 is a complexType.
///
/// @note struct tt__MoveOptions20 operations:
/// - tt__MoveOptions20* soap_new_tt__MoveOptions20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MoveOptions20(struct soap*, tt__MoveOptions20*) default initialize members
/// - int soap_read_tt__MoveOptions20(struct soap*, tt__MoveOptions20*) deserialize from a source
/// - int soap_write_tt__MoveOptions20(struct soap*, tt__MoveOptions20*) serialize to a sink
/// - tt__MoveOptions20* soap_dup_tt__MoveOptions20(struct soap*, tt__MoveOptions20* dst, tt__MoveOptions20 *src) returns deep copy of tt__MoveOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MoveOptions20(tt__MoveOptions20*) deep deletes tt__MoveOptions20 data members, use only on dst after soap_dup_tt__MoveOptions20(NULL, tt__MoveOptions20 *dst, tt__MoveOptions20 *src) (use soapcpp2 -Ed)
struct tt__MoveOptions20
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the absolute control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Absolute" of type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    struct tt__AbsoluteFocusOptions*     Absolute                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the relative control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Relative" of type "http://www.onvif.org/ver10/schema":RelativeFocusOptions20.
    struct tt__RelativeFocusOptions20*   Relative                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the continuous control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Continuous" of type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    struct tt__ContinuousFocusOptions*   Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is a complexType.
///
/// @note struct tt__RelativeFocusOptions20 operations:
/// - tt__RelativeFocusOptions20* soap_new_tt__RelativeFocusOptions20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RelativeFocusOptions20(struct soap*, tt__RelativeFocusOptions20*) default initialize members
/// - int soap_read_tt__RelativeFocusOptions20(struct soap*, tt__RelativeFocusOptions20*) deserialize from a source
/// - int soap_write_tt__RelativeFocusOptions20(struct soap*, tt__RelativeFocusOptions20*) serialize to a sink
/// - tt__RelativeFocusOptions20* soap_dup_tt__RelativeFocusOptions20(struct soap*, tt__RelativeFocusOptions20* dst, tt__RelativeFocusOptions20 *src) returns deep copy of tt__RelativeFocusOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RelativeFocusOptions20(tt__RelativeFocusOptions20*) deep deletes tt__RelativeFocusOptions20 data members, use only on dst after soap_dup_tt__RelativeFocusOptions20(NULL, tt__RelativeFocusOptions20 *dst, tt__RelativeFocusOptions20 *src) (use soapcpp2 -Ed)
struct tt__RelativeFocusOptions20
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "Distance" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance20 is a complexType.
///
/// @note struct tt__WhiteBalance20 operations:
/// - tt__WhiteBalance20* soap_new_tt__WhiteBalance20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__WhiteBalance20(struct soap*, tt__WhiteBalance20*) default initialize members
/// - int soap_read_tt__WhiteBalance20(struct soap*, tt__WhiteBalance20*) deserialize from a source
/// - int soap_write_tt__WhiteBalance20(struct soap*, tt__WhiteBalance20*) serialize to a sink
/// - tt__WhiteBalance20* soap_dup_tt__WhiteBalance20(struct soap*, tt__WhiteBalance20* dst, tt__WhiteBalance20 *src) returns deep copy of tt__WhiteBalance20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WhiteBalance20(tt__WhiteBalance20*) deep deletes tt__WhiteBalance20 data members, use only on dst after soap_dup_tt__WhiteBalance20(NULL, tt__WhiteBalance20 *dst, tt__WhiteBalance20 *src) (use soapcpp2 -Ed)
struct tt__WhiteBalance20
{
/// <PRE><BLOCKQUOTE>
///   'AUTO' or 'MANUAL'
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rgain (unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "CrGain" of type xs:float.
    float*                               CrGain                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Bgain (unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "CbGain" of type xs:float.
    float*                               CbGain                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":WhiteBalance20Extension.
    struct tt__WhiteBalance20Extension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is a complexType.
///
/// @note struct tt__WhiteBalance20Extension operations:
/// - tt__WhiteBalance20Extension* soap_new_tt__WhiteBalance20Extension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__WhiteBalance20Extension(struct soap*, tt__WhiteBalance20Extension*) default initialize members
/// - int soap_read_tt__WhiteBalance20Extension(struct soap*, tt__WhiteBalance20Extension*) deserialize from a source
/// - int soap_write_tt__WhiteBalance20Extension(struct soap*, tt__WhiteBalance20Extension*) serialize to a sink
/// - tt__WhiteBalance20Extension* soap_dup_tt__WhiteBalance20Extension(struct soap*, tt__WhiteBalance20Extension* dst, tt__WhiteBalance20Extension *src) returns deep copy of tt__WhiteBalance20Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WhiteBalance20Extension(tt__WhiteBalance20Extension*) deep deletes tt__WhiteBalance20Extension data members, use only on dst after soap_dup_tt__WhiteBalance20Extension(NULL, tt__WhiteBalance20Extension *dst, tt__WhiteBalance20Extension *src) (use soapcpp2 -Ed)
struct tt__WhiteBalance20Extension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration20 is a complexType.
///
/// @note struct tt__FocusConfiguration20 operations:
/// - tt__FocusConfiguration20* soap_new_tt__FocusConfiguration20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FocusConfiguration20(struct soap*, tt__FocusConfiguration20*) default initialize members
/// - int soap_read_tt__FocusConfiguration20(struct soap*, tt__FocusConfiguration20*) deserialize from a source
/// - int soap_write_tt__FocusConfiguration20(struct soap*, tt__FocusConfiguration20*) serialize to a sink
/// - tt__FocusConfiguration20* soap_dup_tt__FocusConfiguration20(struct soap*, tt__FocusConfiguration20* dst, tt__FocusConfiguration20 *src) returns deep copy of tt__FocusConfiguration20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusConfiguration20(tt__FocusConfiguration20*) deep deletes tt__FocusConfiguration20 data members, use only on dst after soap_dup_tt__FocusConfiguration20(NULL, tt__FocusConfiguration20 *dst, tt__FocusConfiguration20 *src) (use soapcpp2 -Ed)
struct tt__FocusConfiguration20
{
/// <PRE><BLOCKQUOTE>
///   Mode of auto focus.
///   <ul>
///   <li>AUTO - The device automatically adjusts focus.</li>
///   <li>MANUAL - The device does not automatically adjust focus.</li>
///   </ul>
///   Note: for devices supporting both manual and auto operation at the same time manual operation may be supported even if the Mode parameter is set to Auto.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoFocusMode" of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element "DefaultSpeed" of type xs:float.
    float*                               DefaultSpeed                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus near limit (unit: meter).
/// </BLOCKQUOTE></PRE>
///
/// Element "NearLimit" of type xs:float.
    float*                               NearLimit                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus far limit (unit: meter).
/// </BLOCKQUOTE></PRE>
///
/// Element "FarLimit" of type xs:float.
    float*                               FarLimit                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension.
    struct tt__FocusConfiguration20Extension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Zero or more modes as defined in enumeration tt:AFModes.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AFMode" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   AFMode                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is a complexType.
///
/// @note struct tt__FocusConfiguration20Extension operations:
/// - tt__FocusConfiguration20Extension* soap_new_tt__FocusConfiguration20Extension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FocusConfiguration20Extension(struct soap*, tt__FocusConfiguration20Extension*) default initialize members
/// - int soap_read_tt__FocusConfiguration20Extension(struct soap*, tt__FocusConfiguration20Extension*) deserialize from a source
/// - int soap_write_tt__FocusConfiguration20Extension(struct soap*, tt__FocusConfiguration20Extension*) serialize to a sink
/// - tt__FocusConfiguration20Extension* soap_dup_tt__FocusConfiguration20Extension(struct soap*, tt__FocusConfiguration20Extension* dst, tt__FocusConfiguration20Extension *src) returns deep copy of tt__FocusConfiguration20Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusConfiguration20Extension(tt__FocusConfiguration20Extension*) deep deletes tt__FocusConfiguration20Extension data members, use only on dst after soap_dup_tt__FocusConfiguration20Extension(NULL, tt__FocusConfiguration20Extension *dst, tt__FocusConfiguration20Extension *src) (use soapcpp2 -Ed)
struct tt__FocusConfiguration20Extension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is a complexType.
///
/// @note struct tt__WhiteBalanceOptions20 operations:
/// - tt__WhiteBalanceOptions20* soap_new_tt__WhiteBalanceOptions20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__WhiteBalanceOptions20(struct soap*, tt__WhiteBalanceOptions20*) default initialize members
/// - int soap_read_tt__WhiteBalanceOptions20(struct soap*, tt__WhiteBalanceOptions20*) deserialize from a source
/// - int soap_write_tt__WhiteBalanceOptions20(struct soap*, tt__WhiteBalanceOptions20*) serialize to a sink
/// - tt__WhiteBalanceOptions20* soap_dup_tt__WhiteBalanceOptions20(struct soap*, tt__WhiteBalanceOptions20* dst, tt__WhiteBalanceOptions20 *src) returns deep copy of tt__WhiteBalanceOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WhiteBalanceOptions20(tt__WhiteBalanceOptions20*) deep deletes tt__WhiteBalanceOptions20 data members, use only on dst after soap_dup_tt__WhiteBalanceOptions20(NULL, tt__WhiteBalanceOptions20 *dst, tt__WhiteBalanceOptions20 *src) (use soapcpp2 -Ed)
struct tt__WhiteBalanceOptions20
{
/// <PRE><BLOCKQUOTE>
///   Mode of WhiteBalance.
///   <ul>
///   <li>AUTO</li>
///   <li>MANUAL</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__WhiteBalanceMode* is 1..unbounded.
  $ int                                  __sizeMode                     1;
/// Array enum tt__WhiteBalanceMode* of size 1..unbounded.
    enum tt__WhiteBalanceMode*           Mode                           1;	///< Multiple elements.
/// Element "YrGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YrGain                         0;	///< Optional element.
/// Element "YbGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YbGain                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension.
    struct tt__WhiteBalanceOptions20Extension*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is a complexType.
///
/// @note struct tt__WhiteBalanceOptions20Extension operations:
/// - tt__WhiteBalanceOptions20Extension* soap_new_tt__WhiteBalanceOptions20Extension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__WhiteBalanceOptions20Extension(struct soap*, tt__WhiteBalanceOptions20Extension*) default initialize members
/// - int soap_read_tt__WhiteBalanceOptions20Extension(struct soap*, tt__WhiteBalanceOptions20Extension*) deserialize from a source
/// - int soap_write_tt__WhiteBalanceOptions20Extension(struct soap*, tt__WhiteBalanceOptions20Extension*) serialize to a sink
/// - tt__WhiteBalanceOptions20Extension* soap_dup_tt__WhiteBalanceOptions20Extension(struct soap*, tt__WhiteBalanceOptions20Extension* dst, tt__WhiteBalanceOptions20Extension *src) returns deep copy of tt__WhiteBalanceOptions20Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WhiteBalanceOptions20Extension(tt__WhiteBalanceOptions20Extension*) deep deletes tt__WhiteBalanceOptions20Extension data members, use only on dst after soap_dup_tt__WhiteBalanceOptions20Extension(NULL, tt__WhiteBalanceOptions20Extension *dst, tt__WhiteBalanceOptions20Extension *src) (use soapcpp2 -Ed)
struct tt__WhiteBalanceOptions20Extension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions20 is a complexType.
///
/// @note struct tt__FocusOptions20 operations:
/// - tt__FocusOptions20* soap_new_tt__FocusOptions20(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FocusOptions20(struct soap*, tt__FocusOptions20*) default initialize members
/// - int soap_read_tt__FocusOptions20(struct soap*, tt__FocusOptions20*) deserialize from a source
/// - int soap_write_tt__FocusOptions20(struct soap*, tt__FocusOptions20*) serialize to a sink
/// - tt__FocusOptions20* soap_dup_tt__FocusOptions20(struct soap*, tt__FocusOptions20* dst, tt__FocusOptions20 *src) returns deep copy of tt__FocusOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusOptions20(tt__FocusOptions20*) deep deletes tt__FocusOptions20 data members, use only on dst after soap_dup_tt__FocusOptions20(NULL, tt__FocusOptions20 *dst, tt__FocusOptions20 *src) (use soapcpp2 -Ed)
struct tt__FocusOptions20
{
/// <PRE><BLOCKQUOTE>
///   Supported modes for auto focus.
///   <ul>
///   <li>AUTO - The device supports automatic focus adjustment.</li>
///   <li>MANUAL - The device supports manual focus adjustment.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__AutoFocusMode* is 0..unbounded.
  $ int                                  __sizeAutoFocusModes           0;
/// Array enum tt__AutoFocusMode* of size 0..unbounded.
    enum tt__AutoFocusMode*              AutoFocusModes                 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Valid range of DefaultSpeed.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultSpeed" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               DefaultSpeed                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of NearLimit.
/// </BLOCKQUOTE></PRE>
///
/// Element "NearLimit" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               NearLimit                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of FarLimit.
/// </BLOCKQUOTE></PRE>
///
/// Element "FarLimit" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               FarLimit                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":FocusOptions20Extension.
    struct tt__FocusOptions20Extension*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions20Extension is a complexType.
///
/// @note struct tt__FocusOptions20Extension operations:
/// - tt__FocusOptions20Extension* soap_new_tt__FocusOptions20Extension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FocusOptions20Extension(struct soap*, tt__FocusOptions20Extension*) default initialize members
/// - int soap_read_tt__FocusOptions20Extension(struct soap*, tt__FocusOptions20Extension*) deserialize from a source
/// - int soap_write_tt__FocusOptions20Extension(struct soap*, tt__FocusOptions20Extension*) serialize to a sink
/// - tt__FocusOptions20Extension* soap_dup_tt__FocusOptions20Extension(struct soap*, tt__FocusOptions20Extension* dst, tt__FocusOptions20Extension *src) returns deep copy of tt__FocusOptions20Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusOptions20Extension(tt__FocusOptions20Extension*) deep deletes tt__FocusOptions20Extension data members, use only on dst after soap_dup_tt__FocusOptions20Extension(NULL, tt__FocusOptions20Extension *dst, tt__FocusOptions20Extension *src) (use soapcpp2 -Ed)
struct tt__FocusOptions20Extension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Supported options for auto focus. Options shall be chosen from tt:AFModes.
/// </BLOCKQUOTE></PRE>
///
/// Element "AFModes" of type "http://www.onvif.org/ver10/schema":StringAttrList.
    tt__StringAttrList                   AFModes                        0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationOptions is a complexType.
///
/// @note struct tt__ToneCompensationOptions operations:
/// - tt__ToneCompensationOptions* soap_new_tt__ToneCompensationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ToneCompensationOptions(struct soap*, tt__ToneCompensationOptions*) default initialize members
/// - int soap_read_tt__ToneCompensationOptions(struct soap*, tt__ToneCompensationOptions*) deserialize from a source
/// - int soap_write_tt__ToneCompensationOptions(struct soap*, tt__ToneCompensationOptions*) serialize to a sink
/// - tt__ToneCompensationOptions* soap_dup_tt__ToneCompensationOptions(struct soap*, tt__ToneCompensationOptions* dst, tt__ToneCompensationOptions *src) returns deep copy of tt__ToneCompensationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ToneCompensationOptions(tt__ToneCompensationOptions*) deep deletes tt__ToneCompensationOptions data members, use only on dst after soap_dup_tt__ToneCompensationOptions(NULL, tt__ToneCompensationOptions *dst, tt__ToneCompensationOptions *src) (use soapcpp2 -Ed)
struct tt__ToneCompensationOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for Tone Compensation mode. Its options shall be chosen from tt:ToneCompensationMode Type.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char** is 1..unbounded.
  $ int                                  __sizeMode                     1;
/// Array char** of size 1..unbounded.
    char**                               Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for Tone Compensation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:boolean.
    enum xsd__boolean                    Level                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingOptions is a complexType.
///
/// @note struct tt__DefoggingOptions operations:
/// - tt__DefoggingOptions* soap_new_tt__DefoggingOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DefoggingOptions(struct soap*, tt__DefoggingOptions*) default initialize members
/// - int soap_read_tt__DefoggingOptions(struct soap*, tt__DefoggingOptions*) deserialize from a source
/// - int soap_write_tt__DefoggingOptions(struct soap*, tt__DefoggingOptions*) serialize to a sink
/// - tt__DefoggingOptions* soap_dup_tt__DefoggingOptions(struct soap*, tt__DefoggingOptions* dst, tt__DefoggingOptions *src) returns deep copy of tt__DefoggingOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DefoggingOptions(tt__DefoggingOptions*) deep deletes tt__DefoggingOptions data members, use only on dst after soap_dup_tt__DefoggingOptions(NULL, tt__DefoggingOptions *dst, tt__DefoggingOptions *src) (use soapcpp2 -Ed)
struct tt__DefoggingOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for Defogging mode. Its options shall be chosen from tt:DefoggingMode Type.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char** is 1..unbounded.
  $ int                                  __sizeMode                     1;
/// Array char** of size 1..unbounded.
    char**                               Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for Defogging.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:boolean.
    enum xsd__boolean                    Level                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NoiseReductionOptions is a complexType.
///
/// @note struct tt__NoiseReductionOptions operations:
/// - tt__NoiseReductionOptions* soap_new_tt__NoiseReductionOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NoiseReductionOptions(struct soap*, tt__NoiseReductionOptions*) default initialize members
/// - int soap_read_tt__NoiseReductionOptions(struct soap*, tt__NoiseReductionOptions*) deserialize from a source
/// - int soap_write_tt__NoiseReductionOptions(struct soap*, tt__NoiseReductionOptions*) serialize to a sink
/// - tt__NoiseReductionOptions* soap_dup_tt__NoiseReductionOptions(struct soap*, tt__NoiseReductionOptions* dst, tt__NoiseReductionOptions *src) returns deep copy of tt__NoiseReductionOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NoiseReductionOptions(tt__NoiseReductionOptions*) deep deletes tt__NoiseReductionOptions data members, use only on dst after soap_dup_tt__NoiseReductionOptions(NULL, tt__NoiseReductionOptions *dst, tt__NoiseReductionOptions *src) (use soapcpp2 -Ed)
struct tt__NoiseReductionOptions
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for NoiseReduction.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:boolean.
    enum xsd__boolean                    Level                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MessageExtension is a complexType.
///
/// @note struct tt__MessageExtension operations:
/// - tt__MessageExtension* soap_new_tt__MessageExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MessageExtension(struct soap*, tt__MessageExtension*) default initialize members
/// - int soap_read_tt__MessageExtension(struct soap*, tt__MessageExtension*) deserialize from a source
/// - int soap_write_tt__MessageExtension(struct soap*, tt__MessageExtension*) serialize to a sink
/// - tt__MessageExtension* soap_dup_tt__MessageExtension(struct soap*, tt__MessageExtension* dst, tt__MessageExtension *src) returns deep copy of tt__MessageExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MessageExtension(tt__MessageExtension*) deep deletes tt__MessageExtension data members, use only on dst after soap_dup_tt__MessageExtension(NULL, tt__MessageExtension *dst, tt__MessageExtension *src) (use soapcpp2 -Ed)
struct tt__MessageExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of parameters according to the corresponding ItemListDescription.
///   Each item in the list shall have a unique name.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__ItemList operations:
/// - tt__ItemList* soap_new_tt__ItemList(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ItemList(struct soap*, tt__ItemList*) default initialize members
/// - int soap_read_tt__ItemList(struct soap*, tt__ItemList*) deserialize from a source
/// - int soap_write_tt__ItemList(struct soap*, tt__ItemList*) serialize to a sink
/// - tt__ItemList* soap_dup_tt__ItemList(struct soap*, tt__ItemList* dst, tt__ItemList *src) returns deep copy of tt__ItemList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ItemList(tt__ItemList*) deep deletes tt__ItemList data members, use only on dst after soap_dup_tt__ItemList(NULL, tt__ItemList *dst, tt__ItemList *src) (use soapcpp2 -Ed)
struct tt__ItemList
{
/// <PRE><BLOCKQUOTE>
///   Value name pair as defined by the corresponding description.
/// </BLOCKQUOTE></PRE>
///
/// Size of SimpleItem array is 0..unbounded.
  $ int                                  __sizeSimpleItem               0;
/// @note struct _tt__ItemList_SimpleItem operations:
/// - _tt__ItemList_SimpleItem* soap_new__tt__ItemList_SimpleItem(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tt__ItemList_SimpleItem(struct soap*, _tt__ItemList_SimpleItem*) default initialize members
/// - int soap_read__tt__ItemList_SimpleItem(struct soap*, _tt__ItemList_SimpleItem*) deserialize from a source
/// - int soap_write__tt__ItemList_SimpleItem(struct soap*, _tt__ItemList_SimpleItem*) serialize to a sink
/// - _tt__ItemList_SimpleItem* soap_dup__tt__ItemList_SimpleItem(struct soap*, _tt__ItemList_SimpleItem* dst, _tt__ItemList_SimpleItem *src) returns deep copy of _tt__ItemList_SimpleItem src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ItemList_SimpleItem(_tt__ItemList_SimpleItem*) deep deletes _tt__ItemList_SimpleItem data members, use only on dst after soap_dup__tt__ItemList_SimpleItem(NULL, _tt__ItemList_SimpleItem *dst, _tt__ItemList_SimpleItem *src) (use soapcpp2 -Ed)
    struct _tt__ItemList_SimpleItem
    {
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Item value. The type is defined in the corresponding description.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Value" of type xs:anySimpleType.
  @ xsd__anySimpleType                   Value                          1;	///< Required attribute.
    }                                   *SimpleItem                     0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Complex value structure.
/// </BLOCKQUOTE></PRE>
///
/// Size of ElementItem array is 0..unbounded.
  $ int                                  __sizeElementItem              0;
/// @note struct _tt__ItemList_ElementItem operations:
/// - _tt__ItemList_ElementItem* soap_new__tt__ItemList_ElementItem(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tt__ItemList_ElementItem(struct soap*, _tt__ItemList_ElementItem*) default initialize members
/// - int soap_read__tt__ItemList_ElementItem(struct soap*, _tt__ItemList_ElementItem*) deserialize from a source
/// - int soap_write__tt__ItemList_ElementItem(struct soap*, _tt__ItemList_ElementItem*) serialize to a sink
/// - _tt__ItemList_ElementItem* soap_dup__tt__ItemList_ElementItem(struct soap*, _tt__ItemList_ElementItem* dst, _tt__ItemList_ElementItem *src) returns deep copy of _tt__ItemList_ElementItem src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ItemList_ElementItem(_tt__ItemList_ElementItem*) deep deletes _tt__ItemList_ElementItem data members, use only on dst after soap_dup__tt__ItemList_ElementItem(NULL, _tt__ItemList_ElementItem *dst, _tt__ItemList_ElementItem *src) (use soapcpp2 -Ed)
    struct _tt__ItemList_ElementItem
    {
/// <any namespace="##any">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ char*                                Name                           1;	///< Required attribute.
    }                                   *ElementItem                    0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ItemListExtension.
    struct tt__ItemListExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListExtension is a complexType.
///
/// @note struct tt__ItemListExtension operations:
/// - tt__ItemListExtension* soap_new_tt__ItemListExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ItemListExtension(struct soap*, tt__ItemListExtension*) default initialize members
/// - int soap_read_tt__ItemListExtension(struct soap*, tt__ItemListExtension*) deserialize from a source
/// - int soap_write_tt__ItemListExtension(struct soap*, tt__ItemListExtension*) serialize to a sink
/// - tt__ItemListExtension* soap_dup_tt__ItemListExtension(struct soap*, tt__ItemListExtension* dst, tt__ItemListExtension *src) returns deep copy of tt__ItemListExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ItemListExtension(tt__ItemListExtension*) deep deletes tt__ItemListExtension data members, use only on dst after soap_dup_tt__ItemListExtension(NULL, tt__ItemListExtension *dst, tt__ItemListExtension *src) (use soapcpp2 -Ed)
struct tt__ItemListExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageDescription is a complexType.
///
/// @note struct tt__MessageDescription operations:
/// - tt__MessageDescription* soap_new_tt__MessageDescription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MessageDescription(struct soap*, tt__MessageDescription*) default initialize members
/// - int soap_read_tt__MessageDescription(struct soap*, tt__MessageDescription*) deserialize from a source
/// - int soap_write_tt__MessageDescription(struct soap*, tt__MessageDescription*) serialize to a sink
/// - tt__MessageDescription* soap_dup_tt__MessageDescription(struct soap*, tt__MessageDescription* dst, tt__MessageDescription *src) returns deep copy of tt__MessageDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MessageDescription(tt__MessageDescription*) deep deletes tt__MessageDescription data members, use only on dst after soap_dup_tt__MessageDescription(NULL, tt__MessageDescription *dst, tt__MessageDescription *src) (use soapcpp2 -Ed)
struct tt__MessageDescription
{
/// <PRE><BLOCKQUOTE>
///   Set of tokens producing this message. The list may only contain SimpleItemDescription items.
///   The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/>
///   For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
///   and the name of the analytics module or rule.
/// </BLOCKQUOTE></PRE>
///
/// Element "Source" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Source                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// </BLOCKQUOTE></PRE>
///
/// Element "Key" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes the payload of the message.
/// </BLOCKQUOTE></PRE>
///
/// Element "Data" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Data                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    struct tt__MessageDescriptionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IsProperty" of type xs:boolean.
  @ enum xsd__boolean*                   IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is a complexType.
///
/// @note struct tt__MessageDescriptionExtension operations:
/// - tt__MessageDescriptionExtension* soap_new_tt__MessageDescriptionExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension*) default initialize members
/// - int soap_read_tt__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension*) deserialize from a source
/// - int soap_write_tt__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension*) serialize to a sink
/// - tt__MessageDescriptionExtension* soap_dup_tt__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension* dst, tt__MessageDescriptionExtension *src) returns deep copy of tt__MessageDescriptionExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MessageDescriptionExtension(tt__MessageDescriptionExtension*) deep deletes tt__MessageDescriptionExtension data members, use only on dst after soap_dup_tt__MessageDescriptionExtension(NULL, tt__MessageDescriptionExtension *dst, tt__MessageDescriptionExtension *src) (use soapcpp2 -Ed)
struct tt__MessageDescriptionExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListDescription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describes a list of items. Each item in the list shall have a unique name.
///   The list is designed as linear structure without optional or unbounded elements.
///   Use ElementItems only when complex structures are inevitable.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__ItemListDescription operations:
/// - tt__ItemListDescription* soap_new_tt__ItemListDescription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ItemListDescription(struct soap*, tt__ItemListDescription*) default initialize members
/// - int soap_read_tt__ItemListDescription(struct soap*, tt__ItemListDescription*) deserialize from a source
/// - int soap_write_tt__ItemListDescription(struct soap*, tt__ItemListDescription*) serialize to a sink
/// - tt__ItemListDescription* soap_dup_tt__ItemListDescription(struct soap*, tt__ItemListDescription* dst, tt__ItemListDescription *src) returns deep copy of tt__ItemListDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ItemListDescription(tt__ItemListDescription*) deep deletes tt__ItemListDescription data members, use only on dst after soap_dup_tt__ItemListDescription(NULL, tt__ItemListDescription *dst, tt__ItemListDescription *src) (use soapcpp2 -Ed)
struct tt__ItemListDescription
{
/// <PRE><BLOCKQUOTE>
///   Description of a simple item. The type must be of cathegory simpleType (xs:string, xs:integer, xs:float, ...).
/// </BLOCKQUOTE></PRE>
///
/// Size of SimpleItemDescription array is 0..unbounded.
  $ int                                  __sizeSimpleItemDescription    0;
/// @note struct _tt__ItemListDescription_SimpleItemDescription operations:
/// - _tt__ItemListDescription_SimpleItemDescription* soap_new__tt__ItemListDescription_SimpleItemDescription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tt__ItemListDescription_SimpleItemDescription(struct soap*, _tt__ItemListDescription_SimpleItemDescription*) default initialize members
/// - int soap_read__tt__ItemListDescription_SimpleItemDescription(struct soap*, _tt__ItemListDescription_SimpleItemDescription*) deserialize from a source
/// - int soap_write__tt__ItemListDescription_SimpleItemDescription(struct soap*, _tt__ItemListDescription_SimpleItemDescription*) serialize to a sink
/// - _tt__ItemListDescription_SimpleItemDescription* soap_dup__tt__ItemListDescription_SimpleItemDescription(struct soap*, _tt__ItemListDescription_SimpleItemDescription* dst, _tt__ItemListDescription_SimpleItemDescription *src) returns deep copy of _tt__ItemListDescription_SimpleItemDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ItemListDescription_SimpleItemDescription(_tt__ItemListDescription_SimpleItemDescription*) deep deletes _tt__ItemListDescription_SimpleItemDescription data members, use only on dst after soap_dup__tt__ItemListDescription_SimpleItemDescription(NULL, _tt__ItemListDescription_SimpleItemDescription *dst, _tt__ItemListDescription_SimpleItemDescription *src) (use soapcpp2 -Ed)
    struct _tt__ItemListDescription_SimpleItemDescription
    {
/// <PRE><BLOCKQUOTE>
///   Item name. Must be unique within a list.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ char*                                Name                           1;	///< Required attribute.
/// Attribute "Type" of type xs:QName.
  @ _QName                               Type                           1;	///< Required attribute.
    }                                   *SimpleItemDescription          0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Description of a complex type. The Type must reference a defined type.
/// </BLOCKQUOTE></PRE>
///
/// Size of ElementItemDescription array is 0..unbounded.
  $ int                                  __sizeElementItemDescription   0;
/// @note struct _tt__ItemListDescription_ElementItemDescription operations:
/// - _tt__ItemListDescription_ElementItemDescription* soap_new__tt__ItemListDescription_ElementItemDescription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tt__ItemListDescription_ElementItemDescription(struct soap*, _tt__ItemListDescription_ElementItemDescription*) default initialize members
/// - int soap_read__tt__ItemListDescription_ElementItemDescription(struct soap*, _tt__ItemListDescription_ElementItemDescription*) deserialize from a source
/// - int soap_write__tt__ItemListDescription_ElementItemDescription(struct soap*, _tt__ItemListDescription_ElementItemDescription*) serialize to a sink
/// - _tt__ItemListDescription_ElementItemDescription* soap_dup__tt__ItemListDescription_ElementItemDescription(struct soap*, _tt__ItemListDescription_ElementItemDescription* dst, _tt__ItemListDescription_ElementItemDescription *src) returns deep copy of _tt__ItemListDescription_ElementItemDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ItemListDescription_ElementItemDescription(_tt__ItemListDescription_ElementItemDescription*) deep deletes _tt__ItemListDescription_ElementItemDescription data members, use only on dst after soap_dup__tt__ItemListDescription_ElementItemDescription(NULL, _tt__ItemListDescription_ElementItemDescription *dst, _tt__ItemListDescription_ElementItemDescription *src) (use soapcpp2 -Ed)
    struct _tt__ItemListDescription_ElementItemDescription
    {
/// <PRE><BLOCKQUOTE>
///   Item name. Must be unique within a list.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The type of the item. The Type must reference a defined type.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Type" of type xs:QName.
  @ _QName                               Type                           1;	///< Required attribute.
    }                                   *ElementItemDescription         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension.
    struct tt__ItemListDescriptionExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is a complexType.
///
/// @note struct tt__ItemListDescriptionExtension operations:
/// - tt__ItemListDescriptionExtension* soap_new_tt__ItemListDescriptionExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension*) default initialize members
/// - int soap_read_tt__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension*) deserialize from a source
/// - int soap_write_tt__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension*) serialize to a sink
/// - tt__ItemListDescriptionExtension* soap_dup_tt__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension* dst, tt__ItemListDescriptionExtension *src) returns deep copy of tt__ItemListDescriptionExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ItemListDescriptionExtension(tt__ItemListDescriptionExtension*) deep deletes tt__ItemListDescriptionExtension data members, use only on dst after soap_dup_tt__ItemListDescriptionExtension(NULL, tt__ItemListDescriptionExtension *dst, tt__ItemListDescriptionExtension *src) (use soapcpp2 -Ed)
struct tt__ItemListDescriptionExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Polyline is a complexType.
///
/// @note struct tt__Polyline operations:
/// - tt__Polyline* soap_new_tt__Polyline(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Polyline(struct soap*, tt__Polyline*) default initialize members
/// - int soap_read_tt__Polyline(struct soap*, tt__Polyline*) deserialize from a source
/// - int soap_write_tt__Polyline(struct soap*, tt__Polyline*) serialize to a sink
/// - tt__Polyline* soap_dup_tt__Polyline(struct soap*, tt__Polyline* dst, tt__Polyline *src) returns deep copy of tt__Polyline src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Polyline(tt__Polyline*) deep deletes tt__Polyline data members, use only on dst after soap_dup_tt__Polyline(NULL, tt__Polyline *dst, tt__Polyline *src) (use soapcpp2 -Ed)
struct tt__Polyline
{
/// Size of array of struct tt__Vector* is 2..unbounded.
  $ int                                  __sizePoint                    2;
/// Array struct tt__Vector* of size 2..unbounded.
    struct tt__Vector*                   Point                          2;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is a complexType.
///
/// @note struct tt__AnalyticsEngineConfiguration operations:
/// - tt__AnalyticsEngineConfiguration* soap_new_tt__AnalyticsEngineConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsEngineConfiguration(struct soap*, tt__AnalyticsEngineConfiguration*) default initialize members
/// - int soap_read_tt__AnalyticsEngineConfiguration(struct soap*, tt__AnalyticsEngineConfiguration*) deserialize from a source
/// - int soap_write_tt__AnalyticsEngineConfiguration(struct soap*, tt__AnalyticsEngineConfiguration*) serialize to a sink
/// - tt__AnalyticsEngineConfiguration* soap_dup_tt__AnalyticsEngineConfiguration(struct soap*, tt__AnalyticsEngineConfiguration* dst, tt__AnalyticsEngineConfiguration *src) returns deep copy of tt__AnalyticsEngineConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsEngineConfiguration(tt__AnalyticsEngineConfiguration*) deep deletes tt__AnalyticsEngineConfiguration data members, use only on dst after soap_dup_tt__AnalyticsEngineConfiguration(NULL, tt__AnalyticsEngineConfiguration *dst, tt__AnalyticsEngineConfiguration *src) (use soapcpp2 -Ed)
struct tt__AnalyticsEngineConfiguration
{
/// Size of array of struct tt__Config* is 0..unbounded.
  $ int                                  __sizeAnalyticsModule          0;
/// Array struct tt__Config* of size 0..unbounded.
    struct tt__Config*                   AnalyticsModule                0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension.
    struct tt__AnalyticsEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is a complexType.
///
/// @note struct tt__AnalyticsEngineConfigurationExtension operations:
/// - tt__AnalyticsEngineConfigurationExtension* soap_new_tt__AnalyticsEngineConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsEngineConfigurationExtension(struct soap*, tt__AnalyticsEngineConfigurationExtension*) default initialize members
/// - int soap_read_tt__AnalyticsEngineConfigurationExtension(struct soap*, tt__AnalyticsEngineConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__AnalyticsEngineConfigurationExtension(struct soap*, tt__AnalyticsEngineConfigurationExtension*) serialize to a sink
/// - tt__AnalyticsEngineConfigurationExtension* soap_dup_tt__AnalyticsEngineConfigurationExtension(struct soap*, tt__AnalyticsEngineConfigurationExtension* dst, tt__AnalyticsEngineConfigurationExtension *src) returns deep copy of tt__AnalyticsEngineConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsEngineConfigurationExtension(tt__AnalyticsEngineConfigurationExtension*) deep deletes tt__AnalyticsEngineConfigurationExtension data members, use only on dst after soap_dup_tt__AnalyticsEngineConfigurationExtension(NULL, tt__AnalyticsEngineConfigurationExtension *dst, tt__AnalyticsEngineConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__AnalyticsEngineConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is a complexType.
///
/// @note struct tt__RuleEngineConfiguration operations:
/// - tt__RuleEngineConfiguration* soap_new_tt__RuleEngineConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RuleEngineConfiguration(struct soap*, tt__RuleEngineConfiguration*) default initialize members
/// - int soap_read_tt__RuleEngineConfiguration(struct soap*, tt__RuleEngineConfiguration*) deserialize from a source
/// - int soap_write_tt__RuleEngineConfiguration(struct soap*, tt__RuleEngineConfiguration*) serialize to a sink
/// - tt__RuleEngineConfiguration* soap_dup_tt__RuleEngineConfiguration(struct soap*, tt__RuleEngineConfiguration* dst, tt__RuleEngineConfiguration *src) returns deep copy of tt__RuleEngineConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RuleEngineConfiguration(tt__RuleEngineConfiguration*) deep deletes tt__RuleEngineConfiguration data members, use only on dst after soap_dup_tt__RuleEngineConfiguration(NULL, tt__RuleEngineConfiguration *dst, tt__RuleEngineConfiguration *src) (use soapcpp2 -Ed)
struct tt__RuleEngineConfiguration
{
/// Size of array of struct tt__Config* is 0..unbounded.
  $ int                                  __sizeRule                     0;
/// Array struct tt__Config* of size 0..unbounded.
    struct tt__Config*                   Rule                           0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension.
    struct tt__RuleEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is a complexType.
///
/// @note struct tt__RuleEngineConfigurationExtension operations:
/// - tt__RuleEngineConfigurationExtension* soap_new_tt__RuleEngineConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RuleEngineConfigurationExtension(struct soap*, tt__RuleEngineConfigurationExtension*) default initialize members
/// - int soap_read_tt__RuleEngineConfigurationExtension(struct soap*, tt__RuleEngineConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__RuleEngineConfigurationExtension(struct soap*, tt__RuleEngineConfigurationExtension*) serialize to a sink
/// - tt__RuleEngineConfigurationExtension* soap_dup_tt__RuleEngineConfigurationExtension(struct soap*, tt__RuleEngineConfigurationExtension* dst, tt__RuleEngineConfigurationExtension *src) returns deep copy of tt__RuleEngineConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RuleEngineConfigurationExtension(tt__RuleEngineConfigurationExtension*) deep deletes tt__RuleEngineConfigurationExtension data members, use only on dst after soap_dup_tt__RuleEngineConfigurationExtension(NULL, tt__RuleEngineConfigurationExtension *dst, tt__RuleEngineConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__RuleEngineConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Config is a complexType.
///
/// @note struct tt__Config operations:
/// - tt__Config* soap_new_tt__Config(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Config(struct soap*, tt__Config*) default initialize members
/// - int soap_read_tt__Config(struct soap*, tt__Config*) deserialize from a source
/// - int soap_write_tt__Config(struct soap*, tt__Config*) serialize to a sink
/// - tt__Config* soap_dup_tt__Config(struct soap*, tt__Config* dst, tt__Config *src) returns deep copy of tt__Config src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Config(tt__Config*) deep deletes tt__Config data members, use only on dst after soap_dup_tt__Config(NULL, tt__Config *dst, tt__Config *src) (use soapcpp2 -Ed)
struct tt__Config
{
/// <PRE><BLOCKQUOTE>
///   List of configuration parameters as defined in the correspding description.
/// </BLOCKQUOTE></PRE>
///
/// Element "Parameters" of type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Parameters                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Name of the configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The Type attribute specifies the type of rule and shall be equal to value of one of Name attributes of ConfigDescription elements returned by GetSupportedRules and GetSupportedAnalyticsModules command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Type" of type xs:QName.
  @ _QName                               Type                           1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigDescription is a complexType.
///
/// @note struct tt__ConfigDescription operations:
/// - tt__ConfigDescription* soap_new_tt__ConfigDescription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ConfigDescription(struct soap*, tt__ConfigDescription*) default initialize members
/// - int soap_read_tt__ConfigDescription(struct soap*, tt__ConfigDescription*) deserialize from a source
/// - int soap_write_tt__ConfigDescription(struct soap*, tt__ConfigDescription*) serialize to a sink
/// - tt__ConfigDescription* soap_dup_tt__ConfigDescription(struct soap*, tt__ConfigDescription* dst, tt__ConfigDescription *src) returns deep copy of tt__ConfigDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ConfigDescription(tt__ConfigDescription*) deep deletes tt__ConfigDescription data members, use only on dst after soap_dup_tt__ConfigDescription(NULL, tt__ConfigDescription *dst, tt__ConfigDescription *src) (use soapcpp2 -Ed)
struct tt__ConfigDescription
{
/// <PRE><BLOCKQUOTE>
///   List describing the configuration parameters. The names of the parameters must be unique. If possible SimpleItems
///   should be used to transport the information to ease parsing of dynamically defined messages by a client
///   application.
/// </BLOCKQUOTE></PRE>
///
/// Element "Parameters" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Parameters                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The analytics modules and rule engine produce Events, which must be listed within the Analytics Module Description. In order to do so
///   the structure of the Message is defined and consists of three groups: Source, Key, and Data. It is recommended to use SimpleItemDescriptions wherever applicable.
///   The name of all Items must be unique within all Items contained in any group of this Message.
///   Depending on the component multiple parameters or none may be needed to identify the component uniquely.
/// </BLOCKQUOTE></PRE>
///
/// Size of Messages array is 0..unbounded.
  $ int                                  __sizeMessages                 0;
/// @note struct _tt__ConfigDescription_Messages operations:
/// - _tt__ConfigDescription_Messages* soap_new__tt__ConfigDescription_Messages(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tt__ConfigDescription_Messages(struct soap*, _tt__ConfigDescription_Messages*) default initialize members
/// - int soap_read__tt__ConfigDescription_Messages(struct soap*, _tt__ConfigDescription_Messages*) deserialize from a source
/// - int soap_write__tt__ConfigDescription_Messages(struct soap*, _tt__ConfigDescription_Messages*) serialize to a sink
/// - _tt__ConfigDescription_Messages* soap_dup__tt__ConfigDescription_Messages(struct soap*, _tt__ConfigDescription_Messages* dst, _tt__ConfigDescription_Messages *src) returns deep copy of _tt__ConfigDescription_Messages src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ConfigDescription_Messages(_tt__ConfigDescription_Messages*) deep deletes _tt__ConfigDescription_Messages data members, use only on dst after soap_dup__tt__ConfigDescription_Messages(NULL, _tt__ConfigDescription_Messages *dst, _tt__ConfigDescription_Messages *src) (use soapcpp2 -Ed)
    struct _tt__ConfigDescription_Messages
    {
/// INHERITED FROM tt__MessageDescription:
/// <PRE><BLOCKQUOTE>
///   Set of tokens producing this message. The list may only contain SimpleItemDescription items.
///   The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/>
///   For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
///   and the name of the analytics module or rule.
/// </BLOCKQUOTE></PRE>
///
/// Element "Source" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Source                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// </BLOCKQUOTE></PRE>
///
/// Element "Key" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes the payload of the message.
/// </BLOCKQUOTE></PRE>
///
/// Element "Data" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Data                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    struct tt__MessageDescriptionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IsProperty" of type xs:boolean.
  @ enum xsd__boolean*                   IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM tt__MessageDescription
/// <PRE><BLOCKQUOTE>
///   The topic of the message. For historical reason the element is named ParentTopic, but the full topic is expected.
/// </BLOCKQUOTE></PRE>
///
/// Element "ParentTopic" of type xs:string.
    char*                                ParentTopic                    1;	///< Required element.
    }                                   *Messages                       0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension.
    struct tt__ConfigDescriptionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Name attribute (e.g. "tt::LineDetector") uniquely identifies the type of rule, not a type definition in a schema.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:QName.
  @ _QName                               Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The fixed attribute signals that it is not allowed to add or remove this type of configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "fixed" of type xs:boolean.
  @ enum xsd__boolean*                   fixed                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maxInstances attribute signals the maximum number of instances per configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "maxInstances" of type xs:integer.
  @ xsd__integer                         maxInstances                   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is a complexType.
///
/// @note struct tt__ConfigDescriptionExtension operations:
/// - tt__ConfigDescriptionExtension* soap_new_tt__ConfigDescriptionExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ConfigDescriptionExtension(struct soap*, tt__ConfigDescriptionExtension*) default initialize members
/// - int soap_read_tt__ConfigDescriptionExtension(struct soap*, tt__ConfigDescriptionExtension*) deserialize from a source
/// - int soap_write_tt__ConfigDescriptionExtension(struct soap*, tt__ConfigDescriptionExtension*) serialize to a sink
/// - tt__ConfigDescriptionExtension* soap_dup_tt__ConfigDescriptionExtension(struct soap*, tt__ConfigDescriptionExtension* dst, tt__ConfigDescriptionExtension *src) returns deep copy of tt__ConfigDescriptionExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ConfigDescriptionExtension(tt__ConfigDescriptionExtension*) deep deletes tt__ConfigDescriptionExtension data members, use only on dst after soap_dup_tt__ConfigDescriptionExtension(NULL, tt__ConfigDescriptionExtension *dst, tt__ConfigDescriptionExtension *src) (use soapcpp2 -Ed)
struct tt__ConfigDescriptionExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedRules is a complexType.
///
/// @note struct tt__SupportedRules operations:
/// - tt__SupportedRules* soap_new_tt__SupportedRules(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SupportedRules(struct soap*, tt__SupportedRules*) default initialize members
/// - int soap_read_tt__SupportedRules(struct soap*, tt__SupportedRules*) deserialize from a source
/// - int soap_write_tt__SupportedRules(struct soap*, tt__SupportedRules*) serialize to a sink
/// - tt__SupportedRules* soap_dup_tt__SupportedRules(struct soap*, tt__SupportedRules* dst, tt__SupportedRules *src) returns deep copy of tt__SupportedRules src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SupportedRules(tt__SupportedRules*) deep deletes tt__SupportedRules data members, use only on dst after soap_dup_tt__SupportedRules(NULL, tt__SupportedRules *dst, tt__SupportedRules *src) (use soapcpp2 -Ed)
struct tt__SupportedRules
{
/// <PRE><BLOCKQUOTE>
///   Lists the location of all schemas that are referenced in the rules.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 0..unbounded.
  $ int                                  __sizeRuleContentSchemaLocation 0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         RuleContentSchemaLocation      0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of rules supported by the Video Analytics configuration..
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__ConfigDescription* is 0..unbounded.
  $ int                                  __sizeRuleDescription          0;
/// Array struct tt__ConfigDescription* of size 0..unbounded.
    struct tt__ConfigDescription*        RuleDescription                0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SupportedRulesExtension.
    struct tt__SupportedRulesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedRulesExtension is a complexType.
///
/// @note struct tt__SupportedRulesExtension operations:
/// - tt__SupportedRulesExtension* soap_new_tt__SupportedRulesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SupportedRulesExtension(struct soap*, tt__SupportedRulesExtension*) default initialize members
/// - int soap_read_tt__SupportedRulesExtension(struct soap*, tt__SupportedRulesExtension*) deserialize from a source
/// - int soap_write_tt__SupportedRulesExtension(struct soap*, tt__SupportedRulesExtension*) serialize to a sink
/// - tt__SupportedRulesExtension* soap_dup_tt__SupportedRulesExtension(struct soap*, tt__SupportedRulesExtension* dst, tt__SupportedRulesExtension *src) returns deep copy of tt__SupportedRulesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SupportedRulesExtension(tt__SupportedRulesExtension*) deep deletes tt__SupportedRulesExtension data members, use only on dst after soap_dup_tt__SupportedRulesExtension(NULL, tt__SupportedRulesExtension *dst, tt__SupportedRulesExtension *src) (use soapcpp2 -Ed)
struct tt__SupportedRulesExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is a complexType.
///
/// @note struct tt__SupportedAnalyticsModules operations:
/// - tt__SupportedAnalyticsModules* soap_new_tt__SupportedAnalyticsModules(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SupportedAnalyticsModules(struct soap*, tt__SupportedAnalyticsModules*) default initialize members
/// - int soap_read_tt__SupportedAnalyticsModules(struct soap*, tt__SupportedAnalyticsModules*) deserialize from a source
/// - int soap_write_tt__SupportedAnalyticsModules(struct soap*, tt__SupportedAnalyticsModules*) serialize to a sink
/// - tt__SupportedAnalyticsModules* soap_dup_tt__SupportedAnalyticsModules(struct soap*, tt__SupportedAnalyticsModules* dst, tt__SupportedAnalyticsModules *src) returns deep copy of tt__SupportedAnalyticsModules src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SupportedAnalyticsModules(tt__SupportedAnalyticsModules*) deep deletes tt__SupportedAnalyticsModules data members, use only on dst after soap_dup_tt__SupportedAnalyticsModules(NULL, tt__SupportedAnalyticsModules *dst, tt__SupportedAnalyticsModules *src) (use soapcpp2 -Ed)
struct tt__SupportedAnalyticsModules
{
/// <PRE><BLOCKQUOTE>
///   It optionally contains a list of URLs that provide the location of schema files.
///   These schema files describe the types and elements used in the analytics module descriptions.
///   Analytics module descriptions that reference types or elements imported from any ONVIF defined schema files
///   need not explicitly list those schema files.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 0..unbounded.
  $ int                                  __sizeAnalyticsModuleContentSchemaLocation 0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         AnalyticsModuleContentSchemaLocation 0;	///< Multiple elements.
/// Size of array of struct tt__ConfigDescription* is 0..unbounded.
  $ int                                  __sizeAnalyticsModuleDescription 0;
/// Array struct tt__ConfigDescription* of size 0..unbounded.
    struct tt__ConfigDescription*        AnalyticsModuleDescription     0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension.
    struct tt__SupportedAnalyticsModulesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is a complexType.
///
/// @note struct tt__SupportedAnalyticsModulesExtension operations:
/// - tt__SupportedAnalyticsModulesExtension* soap_new_tt__SupportedAnalyticsModulesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SupportedAnalyticsModulesExtension(struct soap*, tt__SupportedAnalyticsModulesExtension*) default initialize members
/// - int soap_read_tt__SupportedAnalyticsModulesExtension(struct soap*, tt__SupportedAnalyticsModulesExtension*) deserialize from a source
/// - int soap_write_tt__SupportedAnalyticsModulesExtension(struct soap*, tt__SupportedAnalyticsModulesExtension*) serialize to a sink
/// - tt__SupportedAnalyticsModulesExtension* soap_dup_tt__SupportedAnalyticsModulesExtension(struct soap*, tt__SupportedAnalyticsModulesExtension* dst, tt__SupportedAnalyticsModulesExtension *src) returns deep copy of tt__SupportedAnalyticsModulesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SupportedAnalyticsModulesExtension(tt__SupportedAnalyticsModulesExtension*) deep deletes tt__SupportedAnalyticsModulesExtension data members, use only on dst after soap_dup_tt__SupportedAnalyticsModulesExtension(NULL, tt__SupportedAnalyticsModulesExtension *dst, tt__SupportedAnalyticsModulesExtension *src) (use soapcpp2 -Ed)
struct tt__SupportedAnalyticsModulesExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PolygonConfiguration is a complexType.
///
/// @note struct tt__PolygonConfiguration operations:
/// - tt__PolygonConfiguration* soap_new_tt__PolygonConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PolygonConfiguration(struct soap*, tt__PolygonConfiguration*) default initialize members
/// - int soap_read_tt__PolygonConfiguration(struct soap*, tt__PolygonConfiguration*) deserialize from a source
/// - int soap_write_tt__PolygonConfiguration(struct soap*, tt__PolygonConfiguration*) serialize to a sink
/// - tt__PolygonConfiguration* soap_dup_tt__PolygonConfiguration(struct soap*, tt__PolygonConfiguration* dst, tt__PolygonConfiguration *src) returns deep copy of tt__PolygonConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PolygonConfiguration(tt__PolygonConfiguration*) deep deletes tt__PolygonConfiguration data members, use only on dst after soap_dup_tt__PolygonConfiguration(NULL, tt__PolygonConfiguration *dst, tt__PolygonConfiguration *src) (use soapcpp2 -Ed)
struct tt__PolygonConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains Polygon configuration for rule parameters
/// </BLOCKQUOTE></PRE>
///
/// Element "Polygon" of type "http://www.onvif.org/ver10/schema":Polygon.
    struct tt__Polygon*                  Polygon                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArray is a complexType.
///
/// @note struct tt__PolylineArray operations:
/// - tt__PolylineArray* soap_new_tt__PolylineArray(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PolylineArray(struct soap*, tt__PolylineArray*) default initialize members
/// - int soap_read_tt__PolylineArray(struct soap*, tt__PolylineArray*) deserialize from a source
/// - int soap_write_tt__PolylineArray(struct soap*, tt__PolylineArray*) serialize to a sink
/// - tt__PolylineArray* soap_dup_tt__PolylineArray(struct soap*, tt__PolylineArray* dst, tt__PolylineArray *src) returns deep copy of tt__PolylineArray src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PolylineArray(tt__PolylineArray*) deep deletes tt__PolylineArray data members, use only on dst after soap_dup_tt__PolylineArray(NULL, tt__PolylineArray *dst, tt__PolylineArray *src) (use soapcpp2 -Ed)
struct tt__PolylineArray
{
/// <PRE><BLOCKQUOTE>
///   Contains array of Polyline
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Polyline* is 1..unbounded.
  $ int                                  __sizeSegment                  1;
/// Array struct tt__Polyline* of size 1..unbounded.
    struct tt__Polyline*                 Segment                        1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PolylineArrayExtension.
    struct tt__PolylineArrayExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArrayExtension is a complexType.
///
/// @note struct tt__PolylineArrayExtension operations:
/// - tt__PolylineArrayExtension* soap_new_tt__PolylineArrayExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PolylineArrayExtension(struct soap*, tt__PolylineArrayExtension*) default initialize members
/// - int soap_read_tt__PolylineArrayExtension(struct soap*, tt__PolylineArrayExtension*) deserialize from a source
/// - int soap_write_tt__PolylineArrayExtension(struct soap*, tt__PolylineArrayExtension*) serialize to a sink
/// - tt__PolylineArrayExtension* soap_dup_tt__PolylineArrayExtension(struct soap*, tt__PolylineArrayExtension* dst, tt__PolylineArrayExtension *src) returns deep copy of tt__PolylineArrayExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PolylineArrayExtension(tt__PolylineArrayExtension*) deep deletes tt__PolylineArrayExtension data members, use only on dst after soap_dup_tt__PolylineArrayExtension(NULL, tt__PolylineArrayExtension *dst, tt__PolylineArrayExtension *src) (use soapcpp2 -Ed)
struct tt__PolylineArrayExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArrayConfiguration is a complexType.
///
/// @note struct tt__PolylineArrayConfiguration operations:
/// - tt__PolylineArrayConfiguration* soap_new_tt__PolylineArrayConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PolylineArrayConfiguration(struct soap*, tt__PolylineArrayConfiguration*) default initialize members
/// - int soap_read_tt__PolylineArrayConfiguration(struct soap*, tt__PolylineArrayConfiguration*) deserialize from a source
/// - int soap_write_tt__PolylineArrayConfiguration(struct soap*, tt__PolylineArrayConfiguration*) serialize to a sink
/// - tt__PolylineArrayConfiguration* soap_dup_tt__PolylineArrayConfiguration(struct soap*, tt__PolylineArrayConfiguration* dst, tt__PolylineArrayConfiguration *src) returns deep copy of tt__PolylineArrayConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PolylineArrayConfiguration(tt__PolylineArrayConfiguration*) deep deletes tt__PolylineArrayConfiguration data members, use only on dst after soap_dup_tt__PolylineArrayConfiguration(NULL, tt__PolylineArrayConfiguration *dst, tt__PolylineArrayConfiguration *src) (use soapcpp2 -Ed)
struct tt__PolylineArrayConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains PolylineArray configuration data
/// </BLOCKQUOTE></PRE>
///
/// Element "PolylineArray" of type "http://www.onvif.org/ver10/schema":PolylineArray.
    struct tt__PolylineArray*            PolylineArray                  1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MotionExpression is a complexType.
///
/// @note struct tt__MotionExpression operations:
/// - tt__MotionExpression* soap_new_tt__MotionExpression(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MotionExpression(struct soap*, tt__MotionExpression*) default initialize members
/// - int soap_read_tt__MotionExpression(struct soap*, tt__MotionExpression*) deserialize from a source
/// - int soap_write_tt__MotionExpression(struct soap*, tt__MotionExpression*) serialize to a sink
/// - tt__MotionExpression* soap_dup_tt__MotionExpression(struct soap*, tt__MotionExpression* dst, tt__MotionExpression *src) returns deep copy of tt__MotionExpression src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MotionExpression(tt__MotionExpression*) deep deletes tt__MotionExpression data members, use only on dst after soap_dup_tt__MotionExpression(NULL, tt__MotionExpression *dst, tt__MotionExpression *src) (use soapcpp2 -Ed)
struct tt__MotionExpression
{
/// <PRE><BLOCKQUOTE>
///   Motion Expression data structure contains motion expression which is based on Scene Descriptor schema with XPATH syntax. The Type argument could allow introduction of different dialects
/// </BLOCKQUOTE></PRE>
///
/// Element "Expression" of type xs:string.
    char*                                Expression                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Attribute "Type" of type xs:string.
  @ char*                                Type                           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MotionExpressionConfiguration is a complexType.
///
/// @note struct tt__MotionExpressionConfiguration operations:
/// - tt__MotionExpressionConfiguration* soap_new_tt__MotionExpressionConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MotionExpressionConfiguration(struct soap*, tt__MotionExpressionConfiguration*) default initialize members
/// - int soap_read_tt__MotionExpressionConfiguration(struct soap*, tt__MotionExpressionConfiguration*) deserialize from a source
/// - int soap_write_tt__MotionExpressionConfiguration(struct soap*, tt__MotionExpressionConfiguration*) serialize to a sink
/// - tt__MotionExpressionConfiguration* soap_dup_tt__MotionExpressionConfiguration(struct soap*, tt__MotionExpressionConfiguration* dst, tt__MotionExpressionConfiguration *src) returns deep copy of tt__MotionExpressionConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MotionExpressionConfiguration(tt__MotionExpressionConfiguration*) deep deletes tt__MotionExpressionConfiguration data members, use only on dst after soap_dup_tt__MotionExpressionConfiguration(NULL, tt__MotionExpressionConfiguration *dst, tt__MotionExpressionConfiguration *src) (use soapcpp2 -Ed)
struct tt__MotionExpressionConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains Rule MotionExpression configuration
/// </BLOCKQUOTE></PRE>
///
/// Element "MotionExpression" of type "http://www.onvif.org/ver10/schema":MotionExpression.
    struct tt__MotionExpression*         MotionExpression               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CellLayout is a complexType.
///
/// @note struct tt__CellLayout operations:
/// - tt__CellLayout* soap_new_tt__CellLayout(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CellLayout(struct soap*, tt__CellLayout*) default initialize members
/// - int soap_read_tt__CellLayout(struct soap*, tt__CellLayout*) deserialize from a source
/// - int soap_write_tt__CellLayout(struct soap*, tt__CellLayout*) serialize to a sink
/// - tt__CellLayout* soap_dup_tt__CellLayout(struct soap*, tt__CellLayout* dst, tt__CellLayout *src) returns deep copy of tt__CellLayout src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CellLayout(tt__CellLayout*) deep deletes tt__CellLayout data members, use only on dst after soap_dup_tt__CellLayout(NULL, tt__CellLayout *dst, tt__CellLayout *src) (use soapcpp2 -Ed)
struct tt__CellLayout
{
/// <PRE><BLOCKQUOTE>
///   Mapping of the cell grid to the Video frame. The cell grid is starting from the upper left corner and x dimension is going from left to right and the y dimension from up to down.
/// </BLOCKQUOTE></PRE>
///
/// Element "Transformation" of type "http://www.onvif.org/ver10/schema":Transformation.
    struct tt__Transformation*           Transformation                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Number of columns of the cell grid (x dimension)
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Columns" of type xs:integer.
  @ xsd__integer                         Columns                        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Number of rows of the cell grid (y dimension)
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Rows" of type xs:integer.
  @ xsd__integer                         Rows                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PaneConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Configuration of the streaming and coding settings of a Video window.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__PaneConfiguration operations:
/// - tt__PaneConfiguration* soap_new_tt__PaneConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PaneConfiguration(struct soap*, tt__PaneConfiguration*) default initialize members
/// - int soap_read_tt__PaneConfiguration(struct soap*, tt__PaneConfiguration*) deserialize from a source
/// - int soap_write_tt__PaneConfiguration(struct soap*, tt__PaneConfiguration*) serialize to a sink
/// - tt__PaneConfiguration* soap_dup_tt__PaneConfiguration(struct soap*, tt__PaneConfiguration* dst, tt__PaneConfiguration *src) returns deep copy of tt__PaneConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PaneConfiguration(tt__PaneConfiguration*) deep deletes tt__PaneConfiguration data members, use only on dst after soap_dup_tt__PaneConfiguration(NULL, tt__PaneConfiguration *dst, tt__PaneConfiguration *src) (use soapcpp2 -Ed)
struct tt__PaneConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Optional name of the pane configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "PaneName" of type xs:string.
    char*                                PaneName                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device has audio outputs, this element contains a pointer to the audio output that is associated with the pane. A client
///   can retrieve the available audio outputs of a device using the GetAudioOutputs command of the DeviceIO service.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioOutputToken               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device has audio sources, this element contains a pointer to the audio source that is associated with this pane.
///   The audio connection from a decoder device to the NVT is established using the backchannel mechanism. A client can retrieve the available audio sources of a device using the GetAudioSources command of the
///   DeviceIO service.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioSourceToken               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The configuration of the audio encoder including codec, bitrate
///   and sample rate.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioEncoderConfiguration" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    struct tt__AudioEncoderConfiguration*  AudioEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A pointer to a Receiver that has the necessary information to receive
///   data from a Transmitter. This Receiver can be connected and the network video decoder displays the received data on the specified outputs. A client can retrieve the available Receivers using the
///   GetReceivers command of the Receiver Service.
/// </BLOCKQUOTE></PRE>
///
/// Element "ReceiverToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A unique identifier in the display device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PaneLayout is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A pane layout describes one Video window of a display. It links a pane configuration to a region of the screen.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__PaneLayout operations:
/// - tt__PaneLayout* soap_new_tt__PaneLayout(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PaneLayout(struct soap*, tt__PaneLayout*) default initialize members
/// - int soap_read_tt__PaneLayout(struct soap*, tt__PaneLayout*) deserialize from a source
/// - int soap_write_tt__PaneLayout(struct soap*, tt__PaneLayout*) serialize to a sink
/// - tt__PaneLayout* soap_dup_tt__PaneLayout(struct soap*, tt__PaneLayout* dst, tt__PaneLayout *src) returns deep copy of tt__PaneLayout src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PaneLayout(tt__PaneLayout*) deep deletes tt__PaneLayout data members, use only on dst after soap_dup_tt__PaneLayout(NULL, tt__PaneLayout *dst, tt__PaneLayout *src) (use soapcpp2 -Ed)
struct tt__PaneLayout
{
/// <PRE><BLOCKQUOTE>
///   Reference to the configuration of the streaming and coding parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Pane" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Pane                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Describes the location and size of the area on the monitor. The area coordinate values are espressed in normalized units [-1.0, 1.0].
/// </BLOCKQUOTE></PRE>
///
/// Element "Area" of type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                Area                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Layout is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A layout describes a set of Video windows that are displayed simultaniously on a display.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__Layout operations:
/// - tt__Layout* soap_new_tt__Layout(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Layout(struct soap*, tt__Layout*) default initialize members
/// - int soap_read_tt__Layout(struct soap*, tt__Layout*) deserialize from a source
/// - int soap_write_tt__Layout(struct soap*, tt__Layout*) serialize to a sink
/// - tt__Layout* soap_dup_tt__Layout(struct soap*, tt__Layout* dst, tt__Layout *src) returns deep copy of tt__Layout src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Layout(tt__Layout*) deep deletes tt__Layout data members, use only on dst after soap_dup_tt__Layout(NULL, tt__Layout *dst, tt__Layout *src) (use soapcpp2 -Ed)
struct tt__Layout
{
/// <PRE><BLOCKQUOTE>
///   List of panes assembling the display layout.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PaneLayout* is 1..unbounded.
  $ int                                  __sizePaneLayout               1;
/// Array struct tt__PaneLayout* of size 1..unbounded.
    struct tt__PaneLayout*               PaneLayout                     1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":LayoutExtension.
    struct tt__LayoutExtension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutExtension is a complexType.
///
/// @note struct tt__LayoutExtension operations:
/// - tt__LayoutExtension* soap_new_tt__LayoutExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__LayoutExtension(struct soap*, tt__LayoutExtension*) default initialize members
/// - int soap_read_tt__LayoutExtension(struct soap*, tt__LayoutExtension*) deserialize from a source
/// - int soap_write_tt__LayoutExtension(struct soap*, tt__LayoutExtension*) serialize to a sink
/// - tt__LayoutExtension* soap_dup_tt__LayoutExtension(struct soap*, tt__LayoutExtension* dst, tt__LayoutExtension *src) returns deep copy of tt__LayoutExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LayoutExtension(tt__LayoutExtension*) deep deletes tt__LayoutExtension data members, use only on dst after soap_dup_tt__LayoutExtension(NULL, tt__LayoutExtension *dst, tt__LayoutExtension *src) (use soapcpp2 -Ed)
struct tt__LayoutExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":CodingCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   This type contains the Audio and Video coding capabilities of a display service.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__CodingCapabilities operations:
/// - tt__CodingCapabilities* soap_new_tt__CodingCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CodingCapabilities(struct soap*, tt__CodingCapabilities*) default initialize members
/// - int soap_read_tt__CodingCapabilities(struct soap*, tt__CodingCapabilities*) deserialize from a source
/// - int soap_write_tt__CodingCapabilities(struct soap*, tt__CodingCapabilities*) serialize to a sink
/// - tt__CodingCapabilities* soap_dup_tt__CodingCapabilities(struct soap*, tt__CodingCapabilities* dst, tt__CodingCapabilities *src) returns deep copy of tt__CodingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CodingCapabilities(tt__CodingCapabilities*) deep deletes tt__CodingCapabilities data members, use only on dst after soap_dup_tt__CodingCapabilities(NULL, tt__CodingCapabilities *dst, tt__CodingCapabilities *src) (use soapcpp2 -Ed)
struct tt__CodingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   If the device supports audio encoding this section describes the supported codecs and their configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioEncodingCapabilities" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    struct tt__AudioEncoderConfigurationOptions*  AudioEncodingCapabilities      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device supports audio decoding this section describes the supported codecs and their settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioDecodingCapabilities" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    struct tt__AudioDecoderConfigurationOptions*  AudioDecodingCapabilities      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This section describes the supported video codesc and their configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoDecodingCapabilities" of type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions.
    struct tt__VideoDecoderConfigurationOptions*  VideoDecodingCapabilities      1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The options supported for a display layout.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__LayoutOptions operations:
/// - tt__LayoutOptions* soap_new_tt__LayoutOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__LayoutOptions(struct soap*, tt__LayoutOptions*) default initialize members
/// - int soap_read_tt__LayoutOptions(struct soap*, tt__LayoutOptions*) deserialize from a source
/// - int soap_write_tt__LayoutOptions(struct soap*, tt__LayoutOptions*) serialize to a sink
/// - tt__LayoutOptions* soap_dup_tt__LayoutOptions(struct soap*, tt__LayoutOptions* dst, tt__LayoutOptions *src) returns deep copy of tt__LayoutOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LayoutOptions(tt__LayoutOptions*) deep deletes tt__LayoutOptions data members, use only on dst after soap_dup_tt__LayoutOptions(NULL, tt__LayoutOptions *dst, tt__LayoutOptions *src) (use soapcpp2 -Ed)
struct tt__LayoutOptions
{
/// <PRE><BLOCKQUOTE>
///   Lists the possible Pane Layouts of the Video Output
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PaneLayoutOptions* is 1..unbounded.
  $ int                                  __sizePaneLayoutOptions        1;
/// Array struct tt__PaneLayoutOptions* of size 1..unbounded.
    struct tt__PaneLayoutOptions*        PaneLayoutOptions              1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":LayoutOptionsExtension.
    struct tt__LayoutOptionsExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutOptionsExtension is a complexType.
///
/// @note struct tt__LayoutOptionsExtension operations:
/// - tt__LayoutOptionsExtension* soap_new_tt__LayoutOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__LayoutOptionsExtension(struct soap*, tt__LayoutOptionsExtension*) default initialize members
/// - int soap_read_tt__LayoutOptionsExtension(struct soap*, tt__LayoutOptionsExtension*) deserialize from a source
/// - int soap_write_tt__LayoutOptionsExtension(struct soap*, tt__LayoutOptionsExtension*) serialize to a sink
/// - tt__LayoutOptionsExtension* soap_dup_tt__LayoutOptionsExtension(struct soap*, tt__LayoutOptionsExtension* dst, tt__LayoutOptionsExtension *src) returns deep copy of tt__LayoutOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LayoutOptionsExtension(tt__LayoutOptionsExtension*) deep deletes tt__LayoutOptionsExtension data members, use only on dst after soap_dup_tt__LayoutOptionsExtension(NULL, tt__LayoutOptionsExtension *dst, tt__LayoutOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__LayoutOptionsExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneLayoutOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Description of a pane layout describing a complete display layout.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__PaneLayoutOptions operations:
/// - tt__PaneLayoutOptions* soap_new_tt__PaneLayoutOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PaneLayoutOptions(struct soap*, tt__PaneLayoutOptions*) default initialize members
/// - int soap_read_tt__PaneLayoutOptions(struct soap*, tt__PaneLayoutOptions*) deserialize from a source
/// - int soap_write_tt__PaneLayoutOptions(struct soap*, tt__PaneLayoutOptions*) serialize to a sink
/// - tt__PaneLayoutOptions* soap_dup_tt__PaneLayoutOptions(struct soap*, tt__PaneLayoutOptions* dst, tt__PaneLayoutOptions *src) returns deep copy of tt__PaneLayoutOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PaneLayoutOptions(tt__PaneLayoutOptions*) deep deletes tt__PaneLayoutOptions data members, use only on dst after soap_dup_tt__PaneLayoutOptions(NULL, tt__PaneLayoutOptions *dst, tt__PaneLayoutOptions *src) (use soapcpp2 -Ed)
struct tt__PaneLayoutOptions
{
/// <PRE><BLOCKQUOTE>
///   List of areas assembling a layout. Coordinate values are in the range [-1.0, 1.0].
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Rectangle* is 1..unbounded.
  $ int                                  __sizeArea                     1;
/// Array struct tt__Rectangle* of size 1..unbounded.
    struct tt__Rectangle*                Area                           1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PaneOptionExtension.
    struct tt__PaneOptionExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PaneOptionExtension is a complexType.
///
/// @note struct tt__PaneOptionExtension operations:
/// - tt__PaneOptionExtension* soap_new_tt__PaneOptionExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PaneOptionExtension(struct soap*, tt__PaneOptionExtension*) default initialize members
/// - int soap_read_tt__PaneOptionExtension(struct soap*, tt__PaneOptionExtension*) deserialize from a source
/// - int soap_write_tt__PaneOptionExtension(struct soap*, tt__PaneOptionExtension*) serialize to a sink
/// - tt__PaneOptionExtension* soap_dup_tt__PaneOptionExtension(struct soap*, tt__PaneOptionExtension* dst, tt__PaneOptionExtension *src) returns deep copy of tt__PaneOptionExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PaneOptionExtension(tt__PaneOptionExtension*) deep deletes tt__PaneOptionExtension data members, use only on dst after soap_dup_tt__PaneOptionExtension(NULL, tt__PaneOptionExtension *dst, tt__PaneOptionExtension *src) (use soapcpp2 -Ed)
struct tt__PaneOptionExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Receiver is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Description of a receiver, including its token and configuration.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__Receiver operations:
/// - tt__Receiver* soap_new_tt__Receiver(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Receiver(struct soap*, tt__Receiver*) default initialize members
/// - int soap_read_tt__Receiver(struct soap*, tt__Receiver*) deserialize from a source
/// - int soap_write_tt__Receiver(struct soap*, tt__Receiver*) serialize to a sink
/// - tt__Receiver* soap_dup_tt__Receiver(struct soap*, tt__Receiver* dst, tt__Receiver *src) returns deep copy of tt__Receiver src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Receiver(tt__Receiver*) deep deletes tt__Receiver data members, use only on dst after soap_dup_tt__Receiver(NULL, tt__Receiver *dst, tt__Receiver *src) (use soapcpp2 -Ed)
struct tt__Receiver
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the receiver.
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Describes the configuration of the receiver.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    struct tt__ReceiverConfiguration*    Configuration                  1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describes the configuration of a receiver.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__ReceiverConfiguration operations:
/// - tt__ReceiverConfiguration* soap_new_tt__ReceiverConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ReceiverConfiguration(struct soap*, tt__ReceiverConfiguration*) default initialize members
/// - int soap_read_tt__ReceiverConfiguration(struct soap*, tt__ReceiverConfiguration*) deserialize from a source
/// - int soap_write_tt__ReceiverConfiguration(struct soap*, tt__ReceiverConfiguration*) serialize to a sink
/// - tt__ReceiverConfiguration* soap_dup_tt__ReceiverConfiguration(struct soap*, tt__ReceiverConfiguration* dst, tt__ReceiverConfiguration *src) returns deep copy of tt__ReceiverConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReceiverConfiguration(tt__ReceiverConfiguration*) deep deletes tt__ReceiverConfiguration data members, use only on dst after soap_dup_tt__ReceiverConfiguration(NULL, tt__ReceiverConfiguration *dst, tt__ReceiverConfiguration *src) (use soapcpp2 -Ed)
struct tt__ReceiverConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The following connection modes are defined:
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ReceiverMode.
    enum tt__ReceiverMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Details of the URI to which the receiver should connect.
/// </BLOCKQUOTE></PRE>
///
/// Element "MediaUri" of type xs:anyURI.
    xsd__anyURI                          MediaUri                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Stream connection parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamSetup" of type "http://www.onvif.org/ver10/schema":StreamSetup.
    struct tt__StreamSetup*              StreamSetup                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverStateInformation is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Contains information about a receiver's current state.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__ReceiverStateInformation operations:
/// - tt__ReceiverStateInformation* soap_new_tt__ReceiverStateInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ReceiverStateInformation(struct soap*, tt__ReceiverStateInformation*) default initialize members
/// - int soap_read_tt__ReceiverStateInformation(struct soap*, tt__ReceiverStateInformation*) deserialize from a source
/// - int soap_write_tt__ReceiverStateInformation(struct soap*, tt__ReceiverStateInformation*) serialize to a sink
/// - tt__ReceiverStateInformation* soap_dup_tt__ReceiverStateInformation(struct soap*, tt__ReceiverStateInformation* dst, tt__ReceiverStateInformation *src) returns deep copy of tt__ReceiverStateInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReceiverStateInformation(tt__ReceiverStateInformation*) deep deletes tt__ReceiverStateInformation data members, use only on dst after soap_dup_tt__ReceiverStateInformation(NULL, tt__ReceiverStateInformation *dst, tt__ReceiverStateInformation *src) (use soapcpp2 -Ed)
struct tt__ReceiverStateInformation
{
/// <PRE><BLOCKQUOTE>
///   The connection state of the receiver may have one of the following states:
/// </BLOCKQUOTE></PRE>
///
/// Element "State" of type "http://www.onvif.org/ver10/schema":ReceiverState.
    enum tt__ReceiverState               State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not the receiver was created automatically.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoCreated" of type xs:boolean.
    enum xsd__boolean                    AutoCreated                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SourceReference is a complexType.
///
/// @note struct tt__SourceReference operations:
/// - tt__SourceReference* soap_new_tt__SourceReference(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SourceReference(struct soap*, tt__SourceReference*) default initialize members
/// - int soap_read_tt__SourceReference(struct soap*, tt__SourceReference*) deserialize from a source
/// - int soap_write_tt__SourceReference(struct soap*, tt__SourceReference*) serialize to a sink
/// - tt__SourceReference* soap_dup_tt__SourceReference(struct soap*, tt__SourceReference* dst, tt__SourceReference *src) returns deep copy of tt__SourceReference src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SourceReference(tt__SourceReference*) deep deletes tt__SourceReference data members, use only on dst after soap_dup_tt__SourceReference(NULL, tt__SourceReference *dst, tt__SourceReference *src) (use soapcpp2 -Ed)
struct tt__SourceReference
{
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Attribute "Type" of type xs:anyURI.
  @ xsd__anyURI                          Type                           0 = "http://www.onvif.org/ver10/schema/Receiver";	///< Optional attribute with default value="http://www.onvif.org/ver10/schema/Receiver".
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DateTimeRange is a complexType.
///
/// @note struct tt__DateTimeRange operations:
/// - tt__DateTimeRange* soap_new_tt__DateTimeRange(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DateTimeRange(struct soap*, tt__DateTimeRange*) default initialize members
/// - int soap_read_tt__DateTimeRange(struct soap*, tt__DateTimeRange*) deserialize from a source
/// - int soap_write_tt__DateTimeRange(struct soap*, tt__DateTimeRange*) serialize to a sink
/// - tt__DateTimeRange* soap_dup_tt__DateTimeRange(struct soap*, tt__DateTimeRange* dst, tt__DateTimeRange *src) returns deep copy of tt__DateTimeRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DateTimeRange(tt__DateTimeRange*) deep deletes tt__DateTimeRange data members, use only on dst after soap_dup_tt__DateTimeRange(NULL, tt__DateTimeRange *dst, tt__DateTimeRange *src) (use soapcpp2 -Ed)
struct tt__DateTimeRange
{
/// Element "From" of type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// Element "Until" of type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingSummary is a complexType.
///
/// @note struct tt__RecordingSummary operations:
/// - tt__RecordingSummary* soap_new_tt__RecordingSummary(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingSummary(struct soap*, tt__RecordingSummary*) default initialize members
/// - int soap_read_tt__RecordingSummary(struct soap*, tt__RecordingSummary*) deserialize from a source
/// - int soap_write_tt__RecordingSummary(struct soap*, tt__RecordingSummary*) serialize to a sink
/// - tt__RecordingSummary* soap_dup_tt__RecordingSummary(struct soap*, tt__RecordingSummary* dst, tt__RecordingSummary *src) returns deep copy of tt__RecordingSummary src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingSummary(tt__RecordingSummary*) deep deletes tt__RecordingSummary data members, use only on dst after soap_dup_tt__RecordingSummary(NULL, tt__RecordingSummary *dst, tt__RecordingSummary *src) (use soapcpp2 -Ed)
struct tt__RecordingSummary
{
/// <PRE><BLOCKQUOTE>
///   The earliest point in time where there is recorded data on the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "DataFrom" of type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The most recent point in time where there is recorded data on the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "DataUntil" of type xs:dateTime.
    time_t                               DataUntil                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The device contains this many recordings.
/// </BLOCKQUOTE></PRE>
///
/// Element "NumberRecordings" of type xs:int.
    int                                  NumberRecordings               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SearchScope is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A structure for defining a limited scope when searching in recorded data.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__SearchScope operations:
/// - tt__SearchScope* soap_new_tt__SearchScope(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SearchScope(struct soap*, tt__SearchScope*) default initialize members
/// - int soap_read_tt__SearchScope(struct soap*, tt__SearchScope*) deserialize from a source
/// - int soap_write_tt__SearchScope(struct soap*, tt__SearchScope*) serialize to a sink
/// - tt__SearchScope* soap_dup_tt__SearchScope(struct soap*, tt__SearchScope* dst, tt__SearchScope *src) returns deep copy of tt__SearchScope src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SearchScope(tt__SearchScope*) deep deletes tt__SearchScope data members, use only on dst after soap_dup_tt__SearchScope(NULL, tt__SearchScope *dst, tt__SearchScope *src) (use soapcpp2 -Ed)
struct tt__SearchScope
{
/// <PRE><BLOCKQUOTE>
///   A list of sources that are included in the scope. If this list is included, only data from one of these sources shall be searched.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__SourceReference* is 0..unbounded.
  $ int                                  __sizeIncludedSources          0;
/// Array struct tt__SourceReference* of size 0..unbounded.
    struct tt__SourceReference*          IncludedSources                0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   A list of recordings that are included in the scope. If this list is included, only data from one of these recordings shall be searched.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__RecordingReference* is 0..unbounded.
  $ int                                  __sizeIncludedRecordings       0;
/// Array tt__RecordingReference* of size 0..unbounded.
    tt__RecordingReference*              IncludedRecordings             0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   An xpath expression used to specify what recordings to search. Only those recordings with an RecordingInformation structure that matches the filter shall be searched.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingInformationFilter" of type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression                  RecordingInformationFilter     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Extension point
/// </BLOCKQUOTE></PRE>
///
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SearchScopeExtension.
    struct tt__SearchScopeExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SearchScopeExtension is a complexType.
///
/// @note struct tt__SearchScopeExtension operations:
/// - tt__SearchScopeExtension* soap_new_tt__SearchScopeExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SearchScopeExtension(struct soap*, tt__SearchScopeExtension*) default initialize members
/// - int soap_read_tt__SearchScopeExtension(struct soap*, tt__SearchScopeExtension*) deserialize from a source
/// - int soap_write_tt__SearchScopeExtension(struct soap*, tt__SearchScopeExtension*) serialize to a sink
/// - tt__SearchScopeExtension* soap_dup_tt__SearchScopeExtension(struct soap*, tt__SearchScopeExtension* dst, tt__SearchScopeExtension *src) returns deep copy of tt__SearchScopeExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SearchScopeExtension(tt__SearchScopeExtension*) deep deletes tt__SearchScopeExtension data members, use only on dst after soap_dup_tt__SearchScopeExtension(NULL, tt__SearchScopeExtension *dst, tt__SearchScopeExtension *src) (use soapcpp2 -Ed)
struct tt__SearchScopeExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPositionFilter is a complexType.
///
/// @note struct tt__PTZPositionFilter operations:
/// - tt__PTZPositionFilter* soap_new_tt__PTZPositionFilter(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPositionFilter(struct soap*, tt__PTZPositionFilter*) default initialize members
/// - int soap_read_tt__PTZPositionFilter(struct soap*, tt__PTZPositionFilter*) deserialize from a source
/// - int soap_write_tt__PTZPositionFilter(struct soap*, tt__PTZPositionFilter*) serialize to a sink
/// - tt__PTZPositionFilter* soap_dup_tt__PTZPositionFilter(struct soap*, tt__PTZPositionFilter* dst, tt__PTZPositionFilter *src) returns deep copy of tt__PTZPositionFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPositionFilter(tt__PTZPositionFilter*) deep deletes tt__PTZPositionFilter data members, use only on dst after soap_dup_tt__PTZPositionFilter(NULL, tt__PTZPositionFilter *dst, tt__PTZPositionFilter *src) (use soapcpp2 -Ed)
struct tt__PTZPositionFilter
{
/// <PRE><BLOCKQUOTE>
///   The lower boundary of the PTZ volume to look for.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                MinPosition                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The upper boundary of the PTZ volume to look for.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                MaxPosition                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If true, search for when entering the specified PTZ volume.
/// </BLOCKQUOTE></PRE>
///
/// Element "EnterOrExit" of type xs:boolean.
    enum xsd__boolean                    EnterOrExit                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataFilter is a complexType.
///
/// @note struct tt__MetadataFilter operations:
/// - tt__MetadataFilter* soap_new_tt__MetadataFilter(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MetadataFilter(struct soap*, tt__MetadataFilter*) default initialize members
/// - int soap_read_tt__MetadataFilter(struct soap*, tt__MetadataFilter*) deserialize from a source
/// - int soap_write_tt__MetadataFilter(struct soap*, tt__MetadataFilter*) serialize to a sink
/// - tt__MetadataFilter* soap_dup_tt__MetadataFilter(struct soap*, tt__MetadataFilter* dst, tt__MetadataFilter *src) returns deep copy of tt__MetadataFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataFilter(tt__MetadataFilter*) deep deletes tt__MetadataFilter data members, use only on dst after soap_dup_tt__MetadataFilter(NULL, tt__MetadataFilter *dst, tt__MetadataFilter *src) (use soapcpp2 -Ed)
struct tt__MetadataFilter
{
/// Element "MetadataStreamFilter" of type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression                  MetadataStreamFilter           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":FindRecordingResultList is a complexType.
///
/// @note struct tt__FindRecordingResultList operations:
/// - tt__FindRecordingResultList* soap_new_tt__FindRecordingResultList(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FindRecordingResultList(struct soap*, tt__FindRecordingResultList*) default initialize members
/// - int soap_read_tt__FindRecordingResultList(struct soap*, tt__FindRecordingResultList*) deserialize from a source
/// - int soap_write_tt__FindRecordingResultList(struct soap*, tt__FindRecordingResultList*) serialize to a sink
/// - tt__FindRecordingResultList* soap_dup_tt__FindRecordingResultList(struct soap*, tt__FindRecordingResultList* dst, tt__FindRecordingResultList *src) returns deep copy of tt__FindRecordingResultList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FindRecordingResultList(tt__FindRecordingResultList*) deep deletes tt__FindRecordingResultList data members, use only on dst after soap_dup_tt__FindRecordingResultList(NULL, tt__FindRecordingResultList *dst, tt__FindRecordingResultList *src) (use soapcpp2 -Ed)
struct tt__FindRecordingResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchState" of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A RecordingInformation structure for each found recording matching the search.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__RecordingInformation* is 0..unbounded.
  $ int                                  __sizeRecordingInformation     0;
/// Array struct tt__RecordingInformation* of size 0..unbounded.
    struct tt__RecordingInformation*     RecordingInformation           0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":FindEventResultList is a complexType.
///
/// @note struct tt__FindEventResultList operations:
/// - tt__FindEventResultList* soap_new_tt__FindEventResultList(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FindEventResultList(struct soap*, tt__FindEventResultList*) default initialize members
/// - int soap_read_tt__FindEventResultList(struct soap*, tt__FindEventResultList*) deserialize from a source
/// - int soap_write_tt__FindEventResultList(struct soap*, tt__FindEventResultList*) serialize to a sink
/// - tt__FindEventResultList* soap_dup_tt__FindEventResultList(struct soap*, tt__FindEventResultList* dst, tt__FindEventResultList *src) returns deep copy of tt__FindEventResultList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FindEventResultList(tt__FindEventResultList*) deep deletes tt__FindEventResultList data members, use only on dst after soap_dup_tt__FindEventResultList(NULL, tt__FindEventResultList *dst, tt__FindEventResultList *src) (use soapcpp2 -Ed)
struct tt__FindEventResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchState" of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindEventResult structure for each found event matching the search.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__FindEventResult* is 0..unbounded.
  $ int                                  __sizeResult                   0;
/// Array struct tt__FindEventResult* of size 0..unbounded.
    struct tt__FindEventResult*          Result                         0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":FindEventResult is a complexType.
///
/// @note struct tt__FindEventResult operations:
/// - tt__FindEventResult* soap_new_tt__FindEventResult(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FindEventResult(struct soap*, tt__FindEventResult*) default initialize members
/// - int soap_read_tt__FindEventResult(struct soap*, tt__FindEventResult*) deserialize from a source
/// - int soap_write_tt__FindEventResult(struct soap*, tt__FindEventResult*) serialize to a sink
/// - tt__FindEventResult* soap_dup_tt__FindEventResult(struct soap*, tt__FindEventResult* dst, tt__FindEventResult *src) returns deep copy of tt__FindEventResult src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FindEventResult(tt__FindEventResult*) deep deletes tt__FindEventResult data members, use only on dst after soap_dup_tt__FindEventResult(NULL, tt__FindEventResult *dst, tt__FindEventResult *src) (use soapcpp2 -Ed)
struct tt__FindEventResult
{
/// <PRE><BLOCKQUOTE>
///   The recording where this event was found. Empty string if no recording is associated with this event.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the track where this event was found. Empty string if no track is associated with this event.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackToken" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time when the event occured.
/// </BLOCKQUOTE></PRE>
///
/// Element "Time" of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The description of the event.
/// </BLOCKQUOTE></PRE>
///
/// Element "Event" of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
    struct wsnt__NotificationMessageHolderType*  Event                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If true, indicates that the event is a virtual event generated for this particular search session to give the state of a property at the start time of the search.
/// </BLOCKQUOTE></PRE>
///
/// Element "StartStateEvent" of type xs:boolean.
    enum xsd__boolean                    StartStateEvent                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":FindPTZPositionResultList is a complexType.
///
/// @note struct tt__FindPTZPositionResultList operations:
/// - tt__FindPTZPositionResultList* soap_new_tt__FindPTZPositionResultList(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FindPTZPositionResultList(struct soap*, tt__FindPTZPositionResultList*) default initialize members
/// - int soap_read_tt__FindPTZPositionResultList(struct soap*, tt__FindPTZPositionResultList*) deserialize from a source
/// - int soap_write_tt__FindPTZPositionResultList(struct soap*, tt__FindPTZPositionResultList*) serialize to a sink
/// - tt__FindPTZPositionResultList* soap_dup_tt__FindPTZPositionResultList(struct soap*, tt__FindPTZPositionResultList* dst, tt__FindPTZPositionResultList *src) returns deep copy of tt__FindPTZPositionResultList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FindPTZPositionResultList(tt__FindPTZPositionResultList*) deep deletes tt__FindPTZPositionResultList data members, use only on dst after soap_dup_tt__FindPTZPositionResultList(NULL, tt__FindPTZPositionResultList *dst, tt__FindPTZPositionResultList *src) (use soapcpp2 -Ed)
struct tt__FindPTZPositionResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchState" of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindPTZPositionResult structure for each found PTZ position matching the search.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__FindPTZPositionResult* is 0..unbounded.
  $ int                                  __sizeResult                   0;
/// Array struct tt__FindPTZPositionResult* of size 0..unbounded.
    struct tt__FindPTZPositionResult*    Result                         0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":FindPTZPositionResult is a complexType.
///
/// @note struct tt__FindPTZPositionResult operations:
/// - tt__FindPTZPositionResult* soap_new_tt__FindPTZPositionResult(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FindPTZPositionResult(struct soap*, tt__FindPTZPositionResult*) default initialize members
/// - int soap_read_tt__FindPTZPositionResult(struct soap*, tt__FindPTZPositionResult*) deserialize from a source
/// - int soap_write_tt__FindPTZPositionResult(struct soap*, tt__FindPTZPositionResult*) serialize to a sink
/// - tt__FindPTZPositionResult* soap_dup_tt__FindPTZPositionResult(struct soap*, tt__FindPTZPositionResult* dst, tt__FindPTZPositionResult *src) returns deep copy of tt__FindPTZPositionResult src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FindPTZPositionResult(tt__FindPTZPositionResult*) deep deletes tt__FindPTZPositionResult data members, use only on dst after soap_dup_tt__FindPTZPositionResult(NULL, tt__FindPTZPositionResult *dst, tt__FindPTZPositionResult *src) (use soapcpp2 -Ed)
struct tt__FindPTZPositionResult
{
/// <PRE><BLOCKQUOTE>
///   A reference to the recording containing the PTZ position.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the metadata track containing the PTZ position.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackToken" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time when the PTZ position was valid.
/// </BLOCKQUOTE></PRE>
///
/// Element "Time" of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The PTZ position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                Position                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":FindMetadataResultList is a complexType.
///
/// @note struct tt__FindMetadataResultList operations:
/// - tt__FindMetadataResultList* soap_new_tt__FindMetadataResultList(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FindMetadataResultList(struct soap*, tt__FindMetadataResultList*) default initialize members
/// - int soap_read_tt__FindMetadataResultList(struct soap*, tt__FindMetadataResultList*) deserialize from a source
/// - int soap_write_tt__FindMetadataResultList(struct soap*, tt__FindMetadataResultList*) serialize to a sink
/// - tt__FindMetadataResultList* soap_dup_tt__FindMetadataResultList(struct soap*, tt__FindMetadataResultList* dst, tt__FindMetadataResultList *src) returns deep copy of tt__FindMetadataResultList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FindMetadataResultList(tt__FindMetadataResultList*) deep deletes tt__FindMetadataResultList data members, use only on dst after soap_dup_tt__FindMetadataResultList(NULL, tt__FindMetadataResultList *dst, tt__FindMetadataResultList *src) (use soapcpp2 -Ed)
struct tt__FindMetadataResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchState" of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindMetadataResult structure for each found set of Metadata matching the search.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__FindMetadataResult* is 0..unbounded.
  $ int                                  __sizeResult                   0;
/// Array struct tt__FindMetadataResult* of size 0..unbounded.
    struct tt__FindMetadataResult*       Result                         0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":FindMetadataResult is a complexType.
///
/// @note struct tt__FindMetadataResult operations:
/// - tt__FindMetadataResult* soap_new_tt__FindMetadataResult(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FindMetadataResult(struct soap*, tt__FindMetadataResult*) default initialize members
/// - int soap_read_tt__FindMetadataResult(struct soap*, tt__FindMetadataResult*) deserialize from a source
/// - int soap_write_tt__FindMetadataResult(struct soap*, tt__FindMetadataResult*) serialize to a sink
/// - tt__FindMetadataResult* soap_dup_tt__FindMetadataResult(struct soap*, tt__FindMetadataResult* dst, tt__FindMetadataResult *src) returns deep copy of tt__FindMetadataResult src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FindMetadataResult(tt__FindMetadataResult*) deep deletes tt__FindMetadataResult data members, use only on dst after soap_dup_tt__FindMetadataResult(NULL, tt__FindMetadataResult *dst, tt__FindMetadataResult *src) (use soapcpp2 -Ed)
struct tt__FindMetadataResult
{
/// <PRE><BLOCKQUOTE>
///   A reference to the recording containing the metadata.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the metadata track containing the matching metadata.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackToken" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The point in time when the matching metadata occurs in the metadata track.
/// </BLOCKQUOTE></PRE>
///
/// Element "Time" of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingInformation is a complexType.
///
/// @note struct tt__RecordingInformation operations:
/// - tt__RecordingInformation* soap_new_tt__RecordingInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingInformation(struct soap*, tt__RecordingInformation*) default initialize members
/// - int soap_read_tt__RecordingInformation(struct soap*, tt__RecordingInformation*) deserialize from a source
/// - int soap_write_tt__RecordingInformation(struct soap*, tt__RecordingInformation*) serialize to a sink
/// - tt__RecordingInformation* soap_dup_tt__RecordingInformation(struct soap*, tt__RecordingInformation* dst, tt__RecordingInformation *src) returns deep copy of tt__RecordingInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingInformation(tt__RecordingInformation*) deep deletes tt__RecordingInformation data members, use only on dst after soap_dup_tt__RecordingInformation(NULL, tt__RecordingInformation *dst, tt__RecordingInformation *src) (use soapcpp2 -Ed)
struct tt__RecordingInformation
{
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Information about the source of the recording. This gives a description of where the data in the recording comes from. Since a single
///   recording is intended to record related material, there is just one source. It is indicates the physical location or the
///   major data source for the recording. Currently the recordingconfiguration cannot describe each individual data source.
/// </BLOCKQUOTE></PRE>
///
/// Element "Source" of type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    struct tt__RecordingSourceInformation*  Source                         1;	///< Required element.
/// Element "EarliestRecording" of type xs:dateTime.
    time_t*                              EarliestRecording              0;	///< Optional element.
/// Element "LatestRecording" of type xs:dateTime.
    time_t*                              LatestRecording                0;	///< Optional element.
/// Element "Content" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__TrackInformation* is 0..unbounded.
  $ int                                  __sizeTrack                    0;
/// Array struct tt__TrackInformation* of size 0..unbounded.
    struct tt__TrackInformation*         Track                          0;	///< Multiple elements.
/// Element "RecordingStatus" of type "http://www.onvif.org/ver10/schema":RecordingStatus.
    enum tt__RecordingStatus             RecordingStatus                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingSourceInformation is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A set of informative desciptions of a data source. The Search searvice allows a client to filter on recordings based on information in this structure.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__RecordingSourceInformation operations:
/// - tt__RecordingSourceInformation* soap_new_tt__RecordingSourceInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingSourceInformation(struct soap*, tt__RecordingSourceInformation*) default initialize members
/// - int soap_read_tt__RecordingSourceInformation(struct soap*, tt__RecordingSourceInformation*) deserialize from a source
/// - int soap_write_tt__RecordingSourceInformation(struct soap*, tt__RecordingSourceInformation*) serialize to a sink
/// - tt__RecordingSourceInformation* soap_dup_tt__RecordingSourceInformation(struct soap*, tt__RecordingSourceInformation* dst, tt__RecordingSourceInformation *src) returns deep copy of tt__RecordingSourceInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingSourceInformation(tt__RecordingSourceInformation*) deep deletes tt__RecordingSourceInformation data members, use only on dst after soap_dup_tt__RecordingSourceInformation(NULL, tt__RecordingSourceInformation *dst, tt__RecordingSourceInformation *src) (use soapcpp2 -Ed)
struct tt__RecordingSourceInformation
{
/// <PRE><BLOCKQUOTE>
///   Identifier for the source chosen by the client that creates the structure.
///   This identifier is opaque to the device. Clients may use any type of URI for this field. A device shall support at least 128 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceId" of type xs:anyURI.
    xsd__anyURI                          SourceId                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative user readable name of the source, e.g. "Camera23". A device shall support at least 20 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the physical location of the source, e.g. the coordinates on a map.
/// </BLOCKQUOTE></PRE>
///
/// Element "Location" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Location                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the source.
/// </BLOCKQUOTE></PRE>
///
/// Element "Description" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   URI provided by the service supplying data to be recorded. A device shall support at least 128 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type xs:anyURI.
    xsd__anyURI                          Address                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":TrackInformation is a complexType.
///
/// @note struct tt__TrackInformation operations:
/// - tt__TrackInformation* soap_new_tt__TrackInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__TrackInformation(struct soap*, tt__TrackInformation*) default initialize members
/// - int soap_read_tt__TrackInformation(struct soap*, tt__TrackInformation*) deserialize from a source
/// - int soap_write_tt__TrackInformation(struct soap*, tt__TrackInformation*) serialize to a sink
/// - tt__TrackInformation* soap_dup_tt__TrackInformation(struct soap*, tt__TrackInformation* dst, tt__TrackInformation *src) returns deep copy of tt__TrackInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TrackInformation(tt__TrackInformation*) deep deletes tt__TrackInformation data members, use only on dst after soap_dup_tt__TrackInformation(NULL, tt__TrackInformation *dst, tt__TrackInformation *src) (use soapcpp2 -Ed)
struct tt__TrackInformation
{
/// Element "TrackToken" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Type of the track: "Video", "Audio" or "Metadata".
///   The track shall only be able to hold data of that type.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackType" of type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the contents of the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "Description" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The start date and time of the oldest recorded data in the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "DataFrom" of type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The stop date and time of the newest recorded data in the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "DataTo" of type xs:dateTime.
    time_t                               DataTo                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MediaAttributes is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A set of media attributes valid for a recording at a point in time or for a time interval.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__MediaAttributes operations:
/// - tt__MediaAttributes* soap_new_tt__MediaAttributes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MediaAttributes(struct soap*, tt__MediaAttributes*) default initialize members
/// - int soap_read_tt__MediaAttributes(struct soap*, tt__MediaAttributes*) deserialize from a source
/// - int soap_write_tt__MediaAttributes(struct soap*, tt__MediaAttributes*) serialize to a sink
/// - tt__MediaAttributes* soap_dup_tt__MediaAttributes(struct soap*, tt__MediaAttributes* dst, tt__MediaAttributes *src) returns deep copy of tt__MediaAttributes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MediaAttributes(tt__MediaAttributes*) deep deletes tt__MediaAttributes data members, use only on dst after soap_dup_tt__MediaAttributes(NULL, tt__MediaAttributes *dst, tt__MediaAttributes *src) (use soapcpp2 -Ed)
struct tt__MediaAttributes
{
/// <PRE><BLOCKQUOTE>
///   A reference to the recording that has these attributes.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A set of attributes for each track.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__TrackAttributes* is 0..unbounded.
  $ int                                  __sizeTrackAttributes          0;
/// Array struct tt__TrackAttributes* of size 0..unbounded.
    struct tt__TrackAttributes*          TrackAttributes                0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The attributes are valid from this point in time in the recording.
/// </BLOCKQUOTE></PRE>
///
/// Element "From" of type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The attributes are valid until this point in time in the recording. Can be equal to 'From' to indicate that the attributes are only known to be valid for this particular point in time.
/// </BLOCKQUOTE></PRE>
///
/// Element "Until" of type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":TrackAttributes is a complexType.
///
/// @note struct tt__TrackAttributes operations:
/// - tt__TrackAttributes* soap_new_tt__TrackAttributes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__TrackAttributes(struct soap*, tt__TrackAttributes*) default initialize members
/// - int soap_read_tt__TrackAttributes(struct soap*, tt__TrackAttributes*) deserialize from a source
/// - int soap_write_tt__TrackAttributes(struct soap*, tt__TrackAttributes*) serialize to a sink
/// - tt__TrackAttributes* soap_dup_tt__TrackAttributes(struct soap*, tt__TrackAttributes* dst, tt__TrackAttributes *src) returns deep copy of tt__TrackAttributes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TrackAttributes(tt__TrackAttributes*) deep deletes tt__TrackAttributes data members, use only on dst after soap_dup_tt__TrackAttributes(NULL, tt__TrackAttributes *dst, tt__TrackAttributes *src) (use soapcpp2 -Ed)
struct tt__TrackAttributes
{
/// <PRE><BLOCKQUOTE>
///   The basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackInformation" of type "http://www.onvif.org/ver10/schema":TrackInformation.
    struct tt__TrackInformation*         TrackInformation               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If the track is a video track, exactly one of this structure shall be present and contain the video attributes.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoAttributes" of type "http://www.onvif.org/ver10/schema":VideoAttributes.
    struct tt__VideoAttributes*          VideoAttributes                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the track is an audio track, exactly one of this structure shall be present and contain the audio attributes.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioAttributes" of type "http://www.onvif.org/ver10/schema":AudioAttributes.
    struct tt__AudioAttributes*          AudioAttributes                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the track is an metadata track, exactly one of this structure shall be present and contain the metadata attributes.
/// </BLOCKQUOTE></PRE>
///
/// Element "MetadataAttributes" of type "http://www.onvif.org/ver10/schema":MetadataAttributes.
    struct tt__MetadataAttributes*       MetadataAttributes             0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":TrackAttributesExtension.
    struct tt__TrackAttributesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":TrackAttributesExtension is a complexType.
///
/// @note struct tt__TrackAttributesExtension operations:
/// - tt__TrackAttributesExtension* soap_new_tt__TrackAttributesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__TrackAttributesExtension(struct soap*, tt__TrackAttributesExtension*) default initialize members
/// - int soap_read_tt__TrackAttributesExtension(struct soap*, tt__TrackAttributesExtension*) deserialize from a source
/// - int soap_write_tt__TrackAttributesExtension(struct soap*, tt__TrackAttributesExtension*) serialize to a sink
/// - tt__TrackAttributesExtension* soap_dup_tt__TrackAttributesExtension(struct soap*, tt__TrackAttributesExtension* dst, tt__TrackAttributesExtension *src) returns deep copy of tt__TrackAttributesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TrackAttributesExtension(tt__TrackAttributesExtension*) deep deletes tt__TrackAttributesExtension data members, use only on dst after soap_dup_tt__TrackAttributesExtension(NULL, tt__TrackAttributesExtension *dst, tt__TrackAttributesExtension *src) (use soapcpp2 -Ed)
struct tt__TrackAttributesExtension
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAttributes is a complexType.
///
/// @note struct tt__VideoAttributes operations:
/// - tt__VideoAttributes* soap_new_tt__VideoAttributes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoAttributes(struct soap*, tt__VideoAttributes*) default initialize members
/// - int soap_read_tt__VideoAttributes(struct soap*, tt__VideoAttributes*) deserialize from a source
/// - int soap_write_tt__VideoAttributes(struct soap*, tt__VideoAttributes*) serialize to a sink
/// - tt__VideoAttributes* soap_dup_tt__VideoAttributes(struct soap*, tt__VideoAttributes* dst, tt__VideoAttributes *src) returns deep copy of tt__VideoAttributes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoAttributes(tt__VideoAttributes*) deep deletes tt__VideoAttributes data members, use only on dst after soap_dup_tt__VideoAttributes(NULL, tt__VideoAttributes *dst, tt__VideoAttributes *src) (use soapcpp2 -Ed)
struct tt__VideoAttributes
{
/// <PRE><BLOCKQUOTE>
///   Average bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The width of the video in pixels.
/// </BLOCKQUOTE></PRE>
///
/// Element "Width" of type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The height of the video in pixels.
/// </BLOCKQUOTE></PRE>
///
/// Element "Height" of type xs:int.
    int                                  Height                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Video encoding of the track. Use value from tt:VideoEncoding for MPEG4. Otherwise use values from tt:VideoEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type xs:string.
    char*                                Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Average framerate in frames per second.
/// </BLOCKQUOTE></PRE>
///
/// Element "Framerate" of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioAttributes is a complexType.
///
/// @note struct tt__AudioAttributes operations:
/// - tt__AudioAttributes* soap_new_tt__AudioAttributes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioAttributes(struct soap*, tt__AudioAttributes*) default initialize members
/// - int soap_read_tt__AudioAttributes(struct soap*, tt__AudioAttributes*) deserialize from a source
/// - int soap_write_tt__AudioAttributes(struct soap*, tt__AudioAttributes*) serialize to a sink
/// - tt__AudioAttributes* soap_dup_tt__AudioAttributes(struct soap*, tt__AudioAttributes* dst, tt__AudioAttributes *src) returns deep copy of tt__AudioAttributes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioAttributes(tt__AudioAttributes*) deep deletes tt__AudioAttributes data members, use only on dst after soap_dup_tt__AudioAttributes(NULL, tt__AudioAttributes *dst, tt__AudioAttributes *src) (use soapcpp2 -Ed)
struct tt__AudioAttributes
{
/// <PRE><BLOCKQUOTE>
///   The bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Audio encoding of the track. Use values from tt:AudioEncoding for G711 and AAC. Otherwise use values from tt:AudioEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#audio"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type xs:string.
    char*                                Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The sample rate in kHz.
/// </BLOCKQUOTE></PRE>
///
/// Element "Samplerate" of type xs:int.
    int                                  Samplerate                     1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataAttributes is a complexType.
///
/// @note struct tt__MetadataAttributes operations:
/// - tt__MetadataAttributes* soap_new_tt__MetadataAttributes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MetadataAttributes(struct soap*, tt__MetadataAttributes*) default initialize members
/// - int soap_read_tt__MetadataAttributes(struct soap*, tt__MetadataAttributes*) deserialize from a source
/// - int soap_write_tt__MetadataAttributes(struct soap*, tt__MetadataAttributes*) serialize to a sink
/// - tt__MetadataAttributes* soap_dup_tt__MetadataAttributes(struct soap*, tt__MetadataAttributes* dst, tt__MetadataAttributes *src) returns deep copy of tt__MetadataAttributes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataAttributes(tt__MetadataAttributes*) deep deletes tt__MetadataAttributes data members, use only on dst after soap_dup_tt__MetadataAttributes(NULL, tt__MetadataAttributes *dst, tt__MetadataAttributes *src) (use soapcpp2 -Ed)
struct tt__MetadataAttributes
{
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be PTZ data in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
///
/// Element "CanContainPTZ" of type xs:boolean.
    enum xsd__boolean                    CanContainPTZ                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be analytics data in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
///
/// Element "CanContainAnalytics" of type xs:boolean.
    enum xsd__boolean                    CanContainAnalytics            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be notifications in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
///
/// Element "CanContainNotifications" of type xs:boolean.
    enum xsd__boolean                    CanContainNotifications        1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   List of all PTZ spaces active for recording. Note that events are only recorded on position changes and the actual point of recording may not necessarily contain an event of the specified type.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PtzSpaces" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   PtzSpaces                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingConfiguration is a complexType.
///
/// @note struct tt__RecordingConfiguration operations:
/// - tt__RecordingConfiguration* soap_new_tt__RecordingConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingConfiguration(struct soap*, tt__RecordingConfiguration*) default initialize members
/// - int soap_read_tt__RecordingConfiguration(struct soap*, tt__RecordingConfiguration*) deserialize from a source
/// - int soap_write_tt__RecordingConfiguration(struct soap*, tt__RecordingConfiguration*) serialize to a sink
/// - tt__RecordingConfiguration* soap_dup_tt__RecordingConfiguration(struct soap*, tt__RecordingConfiguration* dst, tt__RecordingConfiguration *src) returns deep copy of tt__RecordingConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingConfiguration(tt__RecordingConfiguration*) deep deletes tt__RecordingConfiguration data members, use only on dst after soap_dup_tt__RecordingConfiguration(NULL, tt__RecordingConfiguration *dst, tt__RecordingConfiguration *src) (use soapcpp2 -Ed)
struct tt__RecordingConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Information about the source of the recording.
/// </BLOCKQUOTE></PRE>
///
/// Element "Source" of type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    struct tt__RecordingSourceInformation*  Source                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the source.
/// </BLOCKQUOTE></PRE>
///
/// Element "Content" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Sspecifies the maximum time that data in any track within the
///   recording shall be stored. The device shall delete any data older than the maximum retention
///   time. Such data shall not be accessible anymore. If the MaximumRetentionPeriod is set to 0,
///   the device shall not limit the retention time of stored data, except by resource constraints.
///   Whatever the value of MaximumRetentionTime, the device may automatically delete
///   recordings to free up storage space for new recordings.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumRetentionTime" of type xs:duration.
    xsd__duration                        MaximumRetentionTime           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":TrackConfiguration is a complexType.
///
/// @note struct tt__TrackConfiguration operations:
/// - tt__TrackConfiguration* soap_new_tt__TrackConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__TrackConfiguration(struct soap*, tt__TrackConfiguration*) default initialize members
/// - int soap_read_tt__TrackConfiguration(struct soap*, tt__TrackConfiguration*) deserialize from a source
/// - int soap_write_tt__TrackConfiguration(struct soap*, tt__TrackConfiguration*) serialize to a sink
/// - tt__TrackConfiguration* soap_dup_tt__TrackConfiguration(struct soap*, tt__TrackConfiguration* dst, tt__TrackConfiguration *src) returns deep copy of tt__TrackConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TrackConfiguration(tt__TrackConfiguration*) deep deletes tt__TrackConfiguration data members, use only on dst after soap_dup_tt__TrackConfiguration(NULL, tt__TrackConfiguration *dst, tt__TrackConfiguration *src) (use soapcpp2 -Ed)
struct tt__TrackConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Type of the track. It shall be equal to the strings Video,
///   Audio or Metadata. The track shall only be able to hold data of that type.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackType" of type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "Description" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":GetRecordingsResponseItem is a complexType.
///
/// @note struct tt__GetRecordingsResponseItem operations:
/// - tt__GetRecordingsResponseItem* soap_new_tt__GetRecordingsResponseItem(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__GetRecordingsResponseItem(struct soap*, tt__GetRecordingsResponseItem*) default initialize members
/// - int soap_read_tt__GetRecordingsResponseItem(struct soap*, tt__GetRecordingsResponseItem*) deserialize from a source
/// - int soap_write_tt__GetRecordingsResponseItem(struct soap*, tt__GetRecordingsResponseItem*) serialize to a sink
/// - tt__GetRecordingsResponseItem* soap_dup_tt__GetRecordingsResponseItem(struct soap*, tt__GetRecordingsResponseItem* dst, tt__GetRecordingsResponseItem *src) returns deep copy of tt__GetRecordingsResponseItem src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__GetRecordingsResponseItem(tt__GetRecordingsResponseItem*) deep deletes tt__GetRecordingsResponseItem data members, use only on dst after soap_dup_tt__GetRecordingsResponseItem(NULL, tt__GetRecordingsResponseItem *dst, tt__GetRecordingsResponseItem *src) (use soapcpp2 -Ed)
struct tt__GetRecordingsResponseItem
{
/// <PRE><BLOCKQUOTE>
///   Token of the recording.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configuration of the recording.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    struct tt__RecordingConfiguration*   Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of tracks.
/// </BLOCKQUOTE></PRE>
///
/// Element "Tracks" of type "http://www.onvif.org/ver10/schema":GetTracksResponseList.
    struct tt__GetTracksResponseList*    Tracks                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":GetTracksResponseList is a complexType.
///
/// @note struct tt__GetTracksResponseList operations:
/// - tt__GetTracksResponseList* soap_new_tt__GetTracksResponseList(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__GetTracksResponseList(struct soap*, tt__GetTracksResponseList*) default initialize members
/// - int soap_read_tt__GetTracksResponseList(struct soap*, tt__GetTracksResponseList*) deserialize from a source
/// - int soap_write_tt__GetTracksResponseList(struct soap*, tt__GetTracksResponseList*) serialize to a sink
/// - tt__GetTracksResponseList* soap_dup_tt__GetTracksResponseList(struct soap*, tt__GetTracksResponseList* dst, tt__GetTracksResponseList *src) returns deep copy of tt__GetTracksResponseList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__GetTracksResponseList(tt__GetTracksResponseList*) deep deletes tt__GetTracksResponseList data members, use only on dst after soap_dup_tt__GetTracksResponseList(NULL, tt__GetTracksResponseList *dst, tt__GetTracksResponseList *src) (use soapcpp2 -Ed)
struct tt__GetTracksResponseList
{
/// <PRE><BLOCKQUOTE>
///   Configuration of a track.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__GetTracksResponseItem* is 0..unbounded.
  $ int                                  __sizeTrack                    0;
/// Array struct tt__GetTracksResponseItem* of size 0..unbounded.
    struct tt__GetTracksResponseItem*    Track                          0;	///< Multiple elements.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":GetTracksResponseItem is a complexType.
///
/// @note struct tt__GetTracksResponseItem operations:
/// - tt__GetTracksResponseItem* soap_new_tt__GetTracksResponseItem(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__GetTracksResponseItem(struct soap*, tt__GetTracksResponseItem*) default initialize members
/// - int soap_read_tt__GetTracksResponseItem(struct soap*, tt__GetTracksResponseItem*) deserialize from a source
/// - int soap_write_tt__GetTracksResponseItem(struct soap*, tt__GetTracksResponseItem*) serialize to a sink
/// - tt__GetTracksResponseItem* soap_dup_tt__GetTracksResponseItem(struct soap*, tt__GetTracksResponseItem* dst, tt__GetTracksResponseItem *src) returns deep copy of tt__GetTracksResponseItem src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__GetTracksResponseItem(tt__GetTracksResponseItem*) deep deletes tt__GetTracksResponseItem data members, use only on dst after soap_dup_tt__GetTracksResponseItem(NULL, tt__GetTracksResponseItem *dst, tt__GetTracksResponseItem *src) (use soapcpp2 -Ed)
struct tt__GetTracksResponseItem
{
/// <PRE><BLOCKQUOTE>
///   Token of the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackToken" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configuration of the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    struct tt__TrackConfiguration*       Configuration                  1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobConfiguration is a complexType.
///
/// @note struct tt__RecordingJobConfiguration operations:
/// - tt__RecordingJobConfiguration* soap_new_tt__RecordingJobConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingJobConfiguration(struct soap*, tt__RecordingJobConfiguration*) default initialize members
/// - int soap_read_tt__RecordingJobConfiguration(struct soap*, tt__RecordingJobConfiguration*) deserialize from a source
/// - int soap_write_tt__RecordingJobConfiguration(struct soap*, tt__RecordingJobConfiguration*) serialize to a sink
/// - tt__RecordingJobConfiguration* soap_dup_tt__RecordingJobConfiguration(struct soap*, tt__RecordingJobConfiguration* dst, tt__RecordingJobConfiguration *src) returns deep copy of tt__RecordingJobConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobConfiguration(tt__RecordingJobConfiguration*) deep deletes tt__RecordingJobConfiguration data members, use only on dst after soap_dup_tt__RecordingJobConfiguration(NULL, tt__RecordingJobConfiguration *dst, tt__RecordingJobConfiguration *src) (use soapcpp2 -Ed)
struct tt__RecordingJobConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Identifies the recording to which this job shall store the received data.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The mode of the job. If it is idle, nothing shall happen. If it is active, the device shall try
///   to obtain data from the receivers. A client shall use GetRecordingJobState to determine if data transfer is really taking place.<br/>
///   The only valid values for Mode shall be Idle and Active.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":RecordingJobMode.
    tt__RecordingJobMode                 Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   This shall be a non-negative number. If there are multiple recording jobs that store data to
///   the same track, the device will only store the data for the recording job with the highest
///   priority. The priority is specified per recording job, but the device shall determine the priority
///   of each track individually. If there are two recording jobs with the same priority, the device
///   shall record the data corresponding to the recording job that was activated the latest.
/// </BLOCKQUOTE></PRE>
///
/// Element "Priority" of type xs:int.
    int                                  Priority                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Source of the recording.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__RecordingJobSource* is 0..unbounded.
  $ int                                  __sizeSource                   0;
/// Array struct tt__RecordingJobSource* of size 0..unbounded.
    struct tt__RecordingJobSource*       Source                         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension.
    struct tt__RecordingJobConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This attribute adds an additional requirement for activating the recording job. If this optional field is provided the job shall only record if the schedule exists and is active.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ScheduleToken" has no type or ref: assuming string content.
  @ char*                                ScheduleToken                  0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension is a complexType.
///
/// @note struct tt__RecordingJobConfigurationExtension operations:
/// - tt__RecordingJobConfigurationExtension* soap_new_tt__RecordingJobConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingJobConfigurationExtension(struct soap*, tt__RecordingJobConfigurationExtension*) default initialize members
/// - int soap_read_tt__RecordingJobConfigurationExtension(struct soap*, tt__RecordingJobConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__RecordingJobConfigurationExtension(struct soap*, tt__RecordingJobConfigurationExtension*) serialize to a sink
/// - tt__RecordingJobConfigurationExtension* soap_dup_tt__RecordingJobConfigurationExtension(struct soap*, tt__RecordingJobConfigurationExtension* dst, tt__RecordingJobConfigurationExtension *src) returns deep copy of tt__RecordingJobConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobConfigurationExtension(tt__RecordingJobConfigurationExtension*) deep deletes tt__RecordingJobConfigurationExtension data members, use only on dst after soap_dup_tt__RecordingJobConfigurationExtension(NULL, tt__RecordingJobConfigurationExtension *dst, tt__RecordingJobConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__RecordingJobConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobSource is a complexType.
///
/// @note struct tt__RecordingJobSource operations:
/// - tt__RecordingJobSource* soap_new_tt__RecordingJobSource(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingJobSource(struct soap*, tt__RecordingJobSource*) default initialize members
/// - int soap_read_tt__RecordingJobSource(struct soap*, tt__RecordingJobSource*) deserialize from a source
/// - int soap_write_tt__RecordingJobSource(struct soap*, tt__RecordingJobSource*) serialize to a sink
/// - tt__RecordingJobSource* soap_dup_tt__RecordingJobSource(struct soap*, tt__RecordingJobSource* dst, tt__RecordingJobSource *src) returns deep copy of tt__RecordingJobSource src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobSource(tt__RecordingJobSource*) deep deletes tt__RecordingJobSource data members, use only on dst after soap_dup_tt__RecordingJobSource(NULL, tt__RecordingJobSource *dst, tt__RecordingJobSource *src) (use soapcpp2 -Ed)
struct tt__RecordingJobSource
{
/// <PRE><BLOCKQUOTE>
///   This field shall be a reference to the source of the data. The type of the source
///   is determined by the attribute Type in the SourceToken structure. If Type is
///   http://www.onvif.org/ver10/schema/Receiver, the token is a ReceiverReference. In this case
///   the device shall receive the data over the network. If Type is
///   http://www.onvif.org/ver10/schema/Profile, the token identifies a media profile, instructing the
///   device to obtain data from a profile that exists on the local device.
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceToken" of type "http://www.onvif.org/ver10/schema":SourceReference.
    struct tt__SourceReference*          SourceToken                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If this field is TRUE, and if the SourceToken is omitted, the device
///   shall create a receiver object (through the receiver service) and assign the
///   ReceiverReference to the SourceToken field. When retrieving the RecordingJobConfiguration
///   from the device, the AutoCreateReceiver field shall never be present.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoCreateReceiver" of type xs:boolean.
    enum xsd__boolean*                   AutoCreateReceiver             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of tracks associated with the recording.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__RecordingJobTrack* is 0..unbounded.
  $ int                                  __sizeTracks                   0;
/// Array struct tt__RecordingJobTrack* of size 0..unbounded.
    struct tt__RecordingJobTrack*        Tracks                         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension.
    struct tt__RecordingJobSourceExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension is a complexType.
///
/// @note struct tt__RecordingJobSourceExtension operations:
/// - tt__RecordingJobSourceExtension* soap_new_tt__RecordingJobSourceExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingJobSourceExtension(struct soap*, tt__RecordingJobSourceExtension*) default initialize members
/// - int soap_read_tt__RecordingJobSourceExtension(struct soap*, tt__RecordingJobSourceExtension*) deserialize from a source
/// - int soap_write_tt__RecordingJobSourceExtension(struct soap*, tt__RecordingJobSourceExtension*) serialize to a sink
/// - tt__RecordingJobSourceExtension* soap_dup_tt__RecordingJobSourceExtension(struct soap*, tt__RecordingJobSourceExtension* dst, tt__RecordingJobSourceExtension *src) returns deep copy of tt__RecordingJobSourceExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobSourceExtension(tt__RecordingJobSourceExtension*) deep deletes tt__RecordingJobSourceExtension data members, use only on dst after soap_dup_tt__RecordingJobSourceExtension(NULL, tt__RecordingJobSourceExtension *dst, tt__RecordingJobSourceExtension *src) (use soapcpp2 -Ed)
struct tt__RecordingJobSourceExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobTrack is a complexType.
///
/// @note struct tt__RecordingJobTrack operations:
/// - tt__RecordingJobTrack* soap_new_tt__RecordingJobTrack(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingJobTrack(struct soap*, tt__RecordingJobTrack*) default initialize members
/// - int soap_read_tt__RecordingJobTrack(struct soap*, tt__RecordingJobTrack*) deserialize from a source
/// - int soap_write_tt__RecordingJobTrack(struct soap*, tt__RecordingJobTrack*) serialize to a sink
/// - tt__RecordingJobTrack* soap_dup_tt__RecordingJobTrack(struct soap*, tt__RecordingJobTrack* dst, tt__RecordingJobTrack *src) returns deep copy of tt__RecordingJobTrack src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobTrack(tt__RecordingJobTrack*) deep deletes tt__RecordingJobTrack data members, use only on dst after soap_dup_tt__RecordingJobTrack(NULL, tt__RecordingJobTrack *dst, tt__RecordingJobTrack *src) (use soapcpp2 -Ed)
struct tt__RecordingJobTrack
{
/// <PRE><BLOCKQUOTE>
///   If the received RTSP stream contains multiple tracks of the same type, the
///   SourceTag differentiates between those Tracks. This field can be ignored in case of recording a local source.
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceTag" of type xs:string.
    char*                                SourceTag                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The destination is the tracktoken of the track to which the device shall store the
///   received data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Destination" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateInformation is a complexType.
///
/// @note struct tt__RecordingJobStateInformation operations:
/// - tt__RecordingJobStateInformation* soap_new_tt__RecordingJobStateInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingJobStateInformation(struct soap*, tt__RecordingJobStateInformation*) default initialize members
/// - int soap_read_tt__RecordingJobStateInformation(struct soap*, tt__RecordingJobStateInformation*) deserialize from a source
/// - int soap_write_tt__RecordingJobStateInformation(struct soap*, tt__RecordingJobStateInformation*) serialize to a sink
/// - tt__RecordingJobStateInformation* soap_dup_tt__RecordingJobStateInformation(struct soap*, tt__RecordingJobStateInformation* dst, tt__RecordingJobStateInformation *src) returns deep copy of tt__RecordingJobStateInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobStateInformation(tt__RecordingJobStateInformation*) deep deletes tt__RecordingJobStateInformation data members, use only on dst after soap_dup_tt__RecordingJobStateInformation(NULL, tt__RecordingJobStateInformation *dst, tt__RecordingJobStateInformation *src) (use soapcpp2 -Ed)
struct tt__RecordingJobStateInformation
{
/// <PRE><BLOCKQUOTE>
///   Identification of the recording that the recording job records to.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Holds the aggregated state over the whole RecordingJobInformation structure.
/// </BLOCKQUOTE></PRE>
///
/// Element "State" of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Identifies the data source of the recording job.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__RecordingJobStateSource* is 0..unbounded.
  $ int                                  __sizeSources                  0;
/// Array struct tt__RecordingJobStateSource* of size 0..unbounded.
    struct tt__RecordingJobStateSource*  Sources                        0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension.
    struct tt__RecordingJobStateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension is a complexType.
///
/// @note struct tt__RecordingJobStateInformationExtension operations:
/// - tt__RecordingJobStateInformationExtension* soap_new_tt__RecordingJobStateInformationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingJobStateInformationExtension(struct soap*, tt__RecordingJobStateInformationExtension*) default initialize members
/// - int soap_read_tt__RecordingJobStateInformationExtension(struct soap*, tt__RecordingJobStateInformationExtension*) deserialize from a source
/// - int soap_write_tt__RecordingJobStateInformationExtension(struct soap*, tt__RecordingJobStateInformationExtension*) serialize to a sink
/// - tt__RecordingJobStateInformationExtension* soap_dup_tt__RecordingJobStateInformationExtension(struct soap*, tt__RecordingJobStateInformationExtension* dst, tt__RecordingJobStateInformationExtension *src) returns deep copy of tt__RecordingJobStateInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobStateInformationExtension(tt__RecordingJobStateInformationExtension*) deep deletes tt__RecordingJobStateInformationExtension data members, use only on dst after soap_dup_tt__RecordingJobStateInformationExtension(NULL, tt__RecordingJobStateInformationExtension *dst, tt__RecordingJobStateInformationExtension *src) (use soapcpp2 -Ed)
struct tt__RecordingJobStateInformationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateSource is a complexType.
///
/// @note struct tt__RecordingJobStateSource operations:
/// - tt__RecordingJobStateSource* soap_new_tt__RecordingJobStateSource(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingJobStateSource(struct soap*, tt__RecordingJobStateSource*) default initialize members
/// - int soap_read_tt__RecordingJobStateSource(struct soap*, tt__RecordingJobStateSource*) deserialize from a source
/// - int soap_write_tt__RecordingJobStateSource(struct soap*, tt__RecordingJobStateSource*) serialize to a sink
/// - tt__RecordingJobStateSource* soap_dup_tt__RecordingJobStateSource(struct soap*, tt__RecordingJobStateSource* dst, tt__RecordingJobStateSource *src) returns deep copy of tt__RecordingJobStateSource src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobStateSource(tt__RecordingJobStateSource*) deep deletes tt__RecordingJobStateSource data members, use only on dst after soap_dup_tt__RecordingJobStateSource(NULL, tt__RecordingJobStateSource *dst, tt__RecordingJobStateSource *src) (use soapcpp2 -Ed)
struct tt__RecordingJobStateSource
{
/// <PRE><BLOCKQUOTE>
///   Identifies the data source of the recording job.
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceToken" of type "http://www.onvif.org/ver10/schema":SourceReference.
    struct tt__SourceReference*          SourceToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Holds the aggregated state over all substructures of RecordingJobStateSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "State" of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of track items.
/// </BLOCKQUOTE></PRE>
///
/// Element "Tracks" of type "http://www.onvif.org/ver10/schema":RecordingJobStateTracks.
    struct tt__RecordingJobStateTracks*  Tracks                         1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateTracks is a complexType.
///
/// @note struct tt__RecordingJobStateTracks operations:
/// - tt__RecordingJobStateTracks* soap_new_tt__RecordingJobStateTracks(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingJobStateTracks(struct soap*, tt__RecordingJobStateTracks*) default initialize members
/// - int soap_read_tt__RecordingJobStateTracks(struct soap*, tt__RecordingJobStateTracks*) deserialize from a source
/// - int soap_write_tt__RecordingJobStateTracks(struct soap*, tt__RecordingJobStateTracks*) serialize to a sink
/// - tt__RecordingJobStateTracks* soap_dup_tt__RecordingJobStateTracks(struct soap*, tt__RecordingJobStateTracks* dst, tt__RecordingJobStateTracks *src) returns deep copy of tt__RecordingJobStateTracks src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobStateTracks(tt__RecordingJobStateTracks*) deep deletes tt__RecordingJobStateTracks data members, use only on dst after soap_dup_tt__RecordingJobStateTracks(NULL, tt__RecordingJobStateTracks *dst, tt__RecordingJobStateTracks *src) (use soapcpp2 -Ed)
struct tt__RecordingJobStateTracks
{
/// Size of array of struct tt__RecordingJobStateTrack* is 0..unbounded.
  $ int                                  __sizeTrack                    0;
/// Array struct tt__RecordingJobStateTrack* of size 0..unbounded.
    struct tt__RecordingJobStateTrack*   Track                          0;	///< Multiple elements.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateTrack is a complexType.
///
/// @note struct tt__RecordingJobStateTrack operations:
/// - tt__RecordingJobStateTrack* soap_new_tt__RecordingJobStateTrack(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingJobStateTrack(struct soap*, tt__RecordingJobStateTrack*) default initialize members
/// - int soap_read_tt__RecordingJobStateTrack(struct soap*, tt__RecordingJobStateTrack*) deserialize from a source
/// - int soap_write_tt__RecordingJobStateTrack(struct soap*, tt__RecordingJobStateTrack*) serialize to a sink
/// - tt__RecordingJobStateTrack* soap_dup_tt__RecordingJobStateTrack(struct soap*, tt__RecordingJobStateTrack* dst, tt__RecordingJobStateTrack *src) returns deep copy of tt__RecordingJobStateTrack src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobStateTrack(tt__RecordingJobStateTrack*) deep deletes tt__RecordingJobStateTrack data members, use only on dst after soap_dup_tt__RecordingJobStateTrack(NULL, tt__RecordingJobStateTrack *dst, tt__RecordingJobStateTrack *src) (use soapcpp2 -Ed)
struct tt__RecordingJobStateTrack
{
/// <PRE><BLOCKQUOTE>
///   Identifies the track of the data source that provides the data.
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceTag" of type xs:string.
    char*                                SourceTag                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the destination track.
/// </BLOCKQUOTE></PRE>
///
/// Element "Destination" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optionally holds an implementation defined string value that describes the error.
///   The string should be in the English language.
/// </BLOCKQUOTE></PRE>
///
/// Element "Error" of type xs:string.
    char*                                Error                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Provides the job state of the track. The valid
///   values of state shall be Idle, Active and Error. If state equals Error, the Error field may be filled in with an implementation defined value.
/// </BLOCKQUOTE></PRE>
///
/// Element "State" of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":GetRecordingJobsResponseItem is a complexType.
///
/// @note struct tt__GetRecordingJobsResponseItem operations:
/// - tt__GetRecordingJobsResponseItem* soap_new_tt__GetRecordingJobsResponseItem(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__GetRecordingJobsResponseItem(struct soap*, tt__GetRecordingJobsResponseItem*) default initialize members
/// - int soap_read_tt__GetRecordingJobsResponseItem(struct soap*, tt__GetRecordingJobsResponseItem*) deserialize from a source
/// - int soap_write_tt__GetRecordingJobsResponseItem(struct soap*, tt__GetRecordingJobsResponseItem*) serialize to a sink
/// - tt__GetRecordingJobsResponseItem* soap_dup_tt__GetRecordingJobsResponseItem(struct soap*, tt__GetRecordingJobsResponseItem* dst, tt__GetRecordingJobsResponseItem *src) returns deep copy of tt__GetRecordingJobsResponseItem src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__GetRecordingJobsResponseItem(tt__GetRecordingJobsResponseItem*) deep deletes tt__GetRecordingJobsResponseItem data members, use only on dst after soap_dup_tt__GetRecordingJobsResponseItem(NULL, tt__GetRecordingJobsResponseItem *dst, tt__GetRecordingJobsResponseItem *src) (use soapcpp2 -Ed)
struct tt__GetRecordingJobsResponseItem
{
/// Element "JobToken" of type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// Element "JobConfiguration" of type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    struct tt__RecordingJobConfiguration*  JobConfiguration               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Configuration parameters for the replay service.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__ReplayConfiguration operations:
/// - tt__ReplayConfiguration* soap_new_tt__ReplayConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ReplayConfiguration(struct soap*, tt__ReplayConfiguration*) default initialize members
/// - int soap_read_tt__ReplayConfiguration(struct soap*, tt__ReplayConfiguration*) deserialize from a source
/// - int soap_write_tt__ReplayConfiguration(struct soap*, tt__ReplayConfiguration*) serialize to a sink
/// - tt__ReplayConfiguration* soap_dup_tt__ReplayConfiguration(struct soap*, tt__ReplayConfiguration* dst, tt__ReplayConfiguration *src) returns deep copy of tt__ReplayConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReplayConfiguration(tt__ReplayConfiguration*) deep deletes tt__ReplayConfiguration data members, use only on dst after soap_dup_tt__ReplayConfiguration(NULL, tt__ReplayConfiguration *dst, tt__ReplayConfiguration *src) (use soapcpp2 -Ed)
struct tt__ReplayConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The RTSP session timeout.
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration is a complexType.
///
/// @note struct tt__AnalyticsDeviceEngineConfiguration operations:
/// - tt__AnalyticsDeviceEngineConfiguration* soap_new_tt__AnalyticsDeviceEngineConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsDeviceEngineConfiguration(struct soap*, tt__AnalyticsDeviceEngineConfiguration*) default initialize members
/// - int soap_read_tt__AnalyticsDeviceEngineConfiguration(struct soap*, tt__AnalyticsDeviceEngineConfiguration*) deserialize from a source
/// - int soap_write_tt__AnalyticsDeviceEngineConfiguration(struct soap*, tt__AnalyticsDeviceEngineConfiguration*) serialize to a sink
/// - tt__AnalyticsDeviceEngineConfiguration* soap_dup_tt__AnalyticsDeviceEngineConfiguration(struct soap*, tt__AnalyticsDeviceEngineConfiguration* dst, tt__AnalyticsDeviceEngineConfiguration *src) returns deep copy of tt__AnalyticsDeviceEngineConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsDeviceEngineConfiguration(tt__AnalyticsDeviceEngineConfiguration*) deep deletes tt__AnalyticsDeviceEngineConfiguration data members, use only on dst after soap_dup_tt__AnalyticsDeviceEngineConfiguration(NULL, tt__AnalyticsDeviceEngineConfiguration *dst, tt__AnalyticsDeviceEngineConfiguration *src) (use soapcpp2 -Ed)
struct tt__AnalyticsDeviceEngineConfiguration
{
/// Size of array of struct tt__EngineConfiguration* is 1..unbounded.
  $ int                                  __sizeEngineConfiguration      1;
/// Array struct tt__EngineConfiguration* of size 1..unbounded.
    struct tt__EngineConfiguration*      EngineConfiguration            1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension.
    struct tt__AnalyticsDeviceEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension is a complexType.
///
/// @note struct tt__AnalyticsDeviceEngineConfigurationExtension operations:
/// - tt__AnalyticsDeviceEngineConfigurationExtension* soap_new_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap*, tt__AnalyticsDeviceEngineConfigurationExtension*) default initialize members
/// - int soap_read_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap*, tt__AnalyticsDeviceEngineConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap*, tt__AnalyticsDeviceEngineConfigurationExtension*) serialize to a sink
/// - tt__AnalyticsDeviceEngineConfigurationExtension* soap_dup_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap*, tt__AnalyticsDeviceEngineConfigurationExtension* dst, tt__AnalyticsDeviceEngineConfigurationExtension *src) returns deep copy of tt__AnalyticsDeviceEngineConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsDeviceEngineConfigurationExtension(tt__AnalyticsDeviceEngineConfigurationExtension*) deep deletes tt__AnalyticsDeviceEngineConfigurationExtension data members, use only on dst after soap_dup_tt__AnalyticsDeviceEngineConfigurationExtension(NULL, tt__AnalyticsDeviceEngineConfigurationExtension *dst, tt__AnalyticsDeviceEngineConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__AnalyticsDeviceEngineConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":EngineConfiguration is a complexType.
///
/// @note struct tt__EngineConfiguration operations:
/// - tt__EngineConfiguration* soap_new_tt__EngineConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__EngineConfiguration(struct soap*, tt__EngineConfiguration*) default initialize members
/// - int soap_read_tt__EngineConfiguration(struct soap*, tt__EngineConfiguration*) deserialize from a source
/// - int soap_write_tt__EngineConfiguration(struct soap*, tt__EngineConfiguration*) serialize to a sink
/// - tt__EngineConfiguration* soap_dup_tt__EngineConfiguration(struct soap*, tt__EngineConfiguration* dst, tt__EngineConfiguration *src) returns deep copy of tt__EngineConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EngineConfiguration(tt__EngineConfiguration*) deep deletes tt__EngineConfiguration data members, use only on dst after soap_dup_tt__EngineConfiguration(NULL, tt__EngineConfiguration *dst, tt__EngineConfiguration *src) (use soapcpp2 -Ed)
struct tt__EngineConfiguration
{
/// Element "VideoAnalyticsConfiguration" of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  VideoAnalyticsConfiguration    1;	///< Required element.
/// Element "AnalyticsEngineInputInfo" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo.
    struct tt__AnalyticsEngineInputInfo*  AnalyticsEngineInputInfo       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo is a complexType.
///
/// @note struct tt__AnalyticsEngineInputInfo operations:
/// - tt__AnalyticsEngineInputInfo* soap_new_tt__AnalyticsEngineInputInfo(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsEngineInputInfo(struct soap*, tt__AnalyticsEngineInputInfo*) default initialize members
/// - int soap_read_tt__AnalyticsEngineInputInfo(struct soap*, tt__AnalyticsEngineInputInfo*) deserialize from a source
/// - int soap_write_tt__AnalyticsEngineInputInfo(struct soap*, tt__AnalyticsEngineInputInfo*) serialize to a sink
/// - tt__AnalyticsEngineInputInfo* soap_dup_tt__AnalyticsEngineInputInfo(struct soap*, tt__AnalyticsEngineInputInfo* dst, tt__AnalyticsEngineInputInfo *src) returns deep copy of tt__AnalyticsEngineInputInfo src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsEngineInputInfo(tt__AnalyticsEngineInputInfo*) deep deletes tt__AnalyticsEngineInputInfo data members, use only on dst after soap_dup_tt__AnalyticsEngineInputInfo(NULL, tt__AnalyticsEngineInputInfo *dst, tt__AnalyticsEngineInputInfo *src) (use soapcpp2 -Ed)
struct tt__AnalyticsEngineInputInfo
{
/// Element "InputInfo" of type "http://www.onvif.org/ver10/schema":Config.
    struct tt__Config*                   InputInfo                      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension.
    struct tt__AnalyticsEngineInputInfoExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension is a complexType.
///
/// @note struct tt__AnalyticsEngineInputInfoExtension operations:
/// - tt__AnalyticsEngineInputInfoExtension* soap_new_tt__AnalyticsEngineInputInfoExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsEngineInputInfoExtension(struct soap*, tt__AnalyticsEngineInputInfoExtension*) default initialize members
/// - int soap_read_tt__AnalyticsEngineInputInfoExtension(struct soap*, tt__AnalyticsEngineInputInfoExtension*) deserialize from a source
/// - int soap_write_tt__AnalyticsEngineInputInfoExtension(struct soap*, tt__AnalyticsEngineInputInfoExtension*) serialize to a sink
/// - tt__AnalyticsEngineInputInfoExtension* soap_dup_tt__AnalyticsEngineInputInfoExtension(struct soap*, tt__AnalyticsEngineInputInfoExtension* dst, tt__AnalyticsEngineInputInfoExtension *src) returns deep copy of tt__AnalyticsEngineInputInfoExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsEngineInputInfoExtension(tt__AnalyticsEngineInputInfoExtension*) deep deletes tt__AnalyticsEngineInputInfoExtension data members, use only on dst after soap_dup_tt__AnalyticsEngineInputInfoExtension(NULL, tt__AnalyticsEngineInputInfoExtension *dst, tt__AnalyticsEngineInputInfoExtension *src) (use soapcpp2 -Ed)
struct tt__AnalyticsEngineInputInfoExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":SourceIdentification is a complexType.
///
/// @note struct tt__SourceIdentification operations:
/// - tt__SourceIdentification* soap_new_tt__SourceIdentification(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SourceIdentification(struct soap*, tt__SourceIdentification*) default initialize members
/// - int soap_read_tt__SourceIdentification(struct soap*, tt__SourceIdentification*) deserialize from a source
/// - int soap_write_tt__SourceIdentification(struct soap*, tt__SourceIdentification*) serialize to a sink
/// - tt__SourceIdentification* soap_dup_tt__SourceIdentification(struct soap*, tt__SourceIdentification* dst, tt__SourceIdentification *src) returns deep copy of tt__SourceIdentification src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SourceIdentification(tt__SourceIdentification*) deep deletes tt__SourceIdentification data members, use only on dst after soap_dup_tt__SourceIdentification(NULL, tt__SourceIdentification *dst, tt__SourceIdentification *src) (use soapcpp2 -Ed)
struct tt__SourceIdentification
{
/// Element "Name" of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Size of array of tt__ReferenceToken* is 1..unbounded.
  $ int                                  __sizeToken                    1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  Token                          1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SourceIdentificationExtension.
    struct tt__SourceIdentificationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SourceIdentificationExtension is a complexType.
///
/// @note struct tt__SourceIdentificationExtension operations:
/// - tt__SourceIdentificationExtension* soap_new_tt__SourceIdentificationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SourceIdentificationExtension(struct soap*, tt__SourceIdentificationExtension*) default initialize members
/// - int soap_read_tt__SourceIdentificationExtension(struct soap*, tt__SourceIdentificationExtension*) deserialize from a source
/// - int soap_write_tt__SourceIdentificationExtension(struct soap*, tt__SourceIdentificationExtension*) serialize to a sink
/// - tt__SourceIdentificationExtension* soap_dup_tt__SourceIdentificationExtension(struct soap*, tt__SourceIdentificationExtension* dst, tt__SourceIdentificationExtension *src) returns deep copy of tt__SourceIdentificationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SourceIdentificationExtension(tt__SourceIdentificationExtension*) deep deletes tt__SourceIdentificationExtension data members, use only on dst after soap_dup_tt__SourceIdentificationExtension(NULL, tt__SourceIdentificationExtension *dst, tt__SourceIdentificationExtension *src) (use soapcpp2 -Ed)
struct tt__SourceIdentificationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataInput is a complexType.
///
/// @note struct tt__MetadataInput operations:
/// - tt__MetadataInput* soap_new_tt__MetadataInput(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MetadataInput(struct soap*, tt__MetadataInput*) default initialize members
/// - int soap_read_tt__MetadataInput(struct soap*, tt__MetadataInput*) deserialize from a source
/// - int soap_write_tt__MetadataInput(struct soap*, tt__MetadataInput*) serialize to a sink
/// - tt__MetadataInput* soap_dup_tt__MetadataInput(struct soap*, tt__MetadataInput* dst, tt__MetadataInput *src) returns deep copy of tt__MetadataInput src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataInput(tt__MetadataInput*) deep deletes tt__MetadataInput data members, use only on dst after soap_dup_tt__MetadataInput(NULL, tt__MetadataInput *dst, tt__MetadataInput *src) (use soapcpp2 -Ed)
struct tt__MetadataInput
{
/// Size of array of struct tt__Config* is 0..unbounded.
  $ int                                  __sizeMetadataConfig           0;
/// Array struct tt__Config* of size 0..unbounded.
    struct tt__Config*                   MetadataConfig                 0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MetadataInputExtension.
    struct tt__MetadataInputExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataInputExtension is a complexType.
///
/// @note struct tt__MetadataInputExtension operations:
/// - tt__MetadataInputExtension* soap_new_tt__MetadataInputExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MetadataInputExtension(struct soap*, tt__MetadataInputExtension*) default initialize members
/// - int soap_read_tt__MetadataInputExtension(struct soap*, tt__MetadataInputExtension*) deserialize from a source
/// - int soap_write_tt__MetadataInputExtension(struct soap*, tt__MetadataInputExtension*) serialize to a sink
/// - tt__MetadataInputExtension* soap_dup_tt__MetadataInputExtension(struct soap*, tt__MetadataInputExtension* dst, tt__MetadataInputExtension *src) returns deep copy of tt__MetadataInputExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataInputExtension(tt__MetadataInputExtension*) deep deletes tt__MetadataInputExtension data members, use only on dst after soap_dup_tt__MetadataInputExtension(NULL, tt__MetadataInputExtension *dst, tt__MetadataInputExtension *src) (use soapcpp2 -Ed)
struct tt__MetadataInputExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsStateInformation is a complexType.
///
/// @note struct tt__AnalyticsStateInformation operations:
/// - tt__AnalyticsStateInformation* soap_new_tt__AnalyticsStateInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsStateInformation(struct soap*, tt__AnalyticsStateInformation*) default initialize members
/// - int soap_read_tt__AnalyticsStateInformation(struct soap*, tt__AnalyticsStateInformation*) deserialize from a source
/// - int soap_write_tt__AnalyticsStateInformation(struct soap*, tt__AnalyticsStateInformation*) serialize to a sink
/// - tt__AnalyticsStateInformation* soap_dup_tt__AnalyticsStateInformation(struct soap*, tt__AnalyticsStateInformation* dst, tt__AnalyticsStateInformation *src) returns deep copy of tt__AnalyticsStateInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsStateInformation(tt__AnalyticsStateInformation*) deep deletes tt__AnalyticsStateInformation data members, use only on dst after soap_dup_tt__AnalyticsStateInformation(NULL, tt__AnalyticsStateInformation *dst, tt__AnalyticsStateInformation *src) (use soapcpp2 -Ed)
struct tt__AnalyticsStateInformation
{
/// <PRE><BLOCKQUOTE>
///   Token of the control object whose status is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "AnalyticsEngineControlToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AnalyticsEngineControlToken    1;	///< Required element.
/// Element "State" of type "http://www.onvif.org/ver10/schema":AnalyticsState.
    struct tt__AnalyticsState*           State                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsState is a complexType.
///
/// @note struct tt__AnalyticsState operations:
/// - tt__AnalyticsState* soap_new_tt__AnalyticsState(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsState(struct soap*, tt__AnalyticsState*) default initialize members
/// - int soap_read_tt__AnalyticsState(struct soap*, tt__AnalyticsState*) deserialize from a source
/// - int soap_write_tt__AnalyticsState(struct soap*, tt__AnalyticsState*) serialize to a sink
/// - tt__AnalyticsState* soap_dup_tt__AnalyticsState(struct soap*, tt__AnalyticsState* dst, tt__AnalyticsState *src) returns deep copy of tt__AnalyticsState src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsState(tt__AnalyticsState*) deep deletes tt__AnalyticsState data members, use only on dst after soap_dup_tt__AnalyticsState(NULL, tt__AnalyticsState *dst, tt__AnalyticsState *src) (use soapcpp2 -Ed)
struct tt__AnalyticsState
{
/// Element "Error" of type xs:string.
    char*                                Error                          0;	///< Optional element.
/// Element "State" of type xs:string.
    char*                                State                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ActionEngineEventPayload is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Action Engine Event Payload data structure contains the information about the ONVIF command invocations. Since this event could be generated by other or proprietary actions, the command invocation specific fields are defined as optional and additional extension mechanism is provided for future or additional action definitions.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__ActionEngineEventPayload operations:
/// - tt__ActionEngineEventPayload* soap_new_tt__ActionEngineEventPayload(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ActionEngineEventPayload(struct soap*, tt__ActionEngineEventPayload*) default initialize members
/// - int soap_read_tt__ActionEngineEventPayload(struct soap*, tt__ActionEngineEventPayload*) deserialize from a source
/// - int soap_write_tt__ActionEngineEventPayload(struct soap*, tt__ActionEngineEventPayload*) serialize to a sink
/// - tt__ActionEngineEventPayload* soap_dup_tt__ActionEngineEventPayload(struct soap*, tt__ActionEngineEventPayload* dst, tt__ActionEngineEventPayload *src) returns deep copy of tt__ActionEngineEventPayload src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ActionEngineEventPayload(tt__ActionEngineEventPayload*) deep deletes tt__ActionEngineEventPayload data members, use only on dst after soap_dup_tt__ActionEngineEventPayload(NULL, tt__ActionEngineEventPayload *dst, tt__ActionEngineEventPayload *src) (use soapcpp2 -Ed)
struct tt__ActionEngineEventPayload
{
/// <PRE><BLOCKQUOTE>
///   Request Message
/// </BLOCKQUOTE></PRE>
///
/// Element "RequestInfo" of type SOAP-ENV:Envelope.
    struct SOAP_ENV__Envelope*           RequestInfo                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Response Message
/// </BLOCKQUOTE></PRE>
///
/// Element "ResponseInfo" of type SOAP-ENV:Envelope.
    struct SOAP_ENV__Envelope*           ResponseInfo                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Fault Message
/// </BLOCKQUOTE></PRE>
///
/// Element "Fault" of type SOAP-ENV:Fault.
    struct SOAP_ENV__Fault*              Fault                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension.
    struct tt__ActionEngineEventPayloadExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension is a complexType.
///
/// @note struct tt__ActionEngineEventPayloadExtension operations:
/// - tt__ActionEngineEventPayloadExtension* soap_new_tt__ActionEngineEventPayloadExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ActionEngineEventPayloadExtension(struct soap*, tt__ActionEngineEventPayloadExtension*) default initialize members
/// - int soap_read_tt__ActionEngineEventPayloadExtension(struct soap*, tt__ActionEngineEventPayloadExtension*) deserialize from a source
/// - int soap_write_tt__ActionEngineEventPayloadExtension(struct soap*, tt__ActionEngineEventPayloadExtension*) serialize to a sink
/// - tt__ActionEngineEventPayloadExtension* soap_dup_tt__ActionEngineEventPayloadExtension(struct soap*, tt__ActionEngineEventPayloadExtension* dst, tt__ActionEngineEventPayloadExtension *src) returns deep copy of tt__ActionEngineEventPayloadExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ActionEngineEventPayloadExtension(tt__ActionEngineEventPayloadExtension*) deep deletes tt__ActionEngineEventPayloadExtension data members, use only on dst after soap_dup_tt__ActionEngineEventPayloadExtension(NULL, tt__ActionEngineEventPayloadExtension *dst, tt__ActionEngineEventPayloadExtension *src) (use soapcpp2 -Ed)
struct tt__ActionEngineEventPayloadExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassCandidate is a complexType.
///
/// @note struct tt__AudioClassCandidate operations:
/// - tt__AudioClassCandidate* soap_new_tt__AudioClassCandidate(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioClassCandidate(struct soap*, tt__AudioClassCandidate*) default initialize members
/// - int soap_read_tt__AudioClassCandidate(struct soap*, tt__AudioClassCandidate*) deserialize from a source
/// - int soap_write_tt__AudioClassCandidate(struct soap*, tt__AudioClassCandidate*) serialize to a sink
/// - tt__AudioClassCandidate* soap_dup_tt__AudioClassCandidate(struct soap*, tt__AudioClassCandidate* dst, tt__AudioClassCandidate *src) returns deep copy of tt__AudioClassCandidate src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioClassCandidate(tt__AudioClassCandidate*) deep deletes tt__AudioClassCandidate data members, use only on dst after soap_dup_tt__AudioClassCandidate(NULL, tt__AudioClassCandidate *dst, tt__AudioClassCandidate *src) (use soapcpp2 -Ed)
struct tt__AudioClassCandidate
{
/// <PRE><BLOCKQUOTE>
///   Indicates audio class label
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":AudioClassType.
    tt__AudioClassType                   Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A likelihood/probability that the corresponding audio event belongs to this class. The sum of the likelihoods shall NOT exceed 1
/// </BLOCKQUOTE></PRE>
///
/// Element "Likelihood" of type xs:float.
    float                                Likelihood                     1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassDescriptor is a complexType.
///
/// @note struct tt__AudioClassDescriptor operations:
/// - tt__AudioClassDescriptor* soap_new_tt__AudioClassDescriptor(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioClassDescriptor(struct soap*, tt__AudioClassDescriptor*) default initialize members
/// - int soap_read_tt__AudioClassDescriptor(struct soap*, tt__AudioClassDescriptor*) deserialize from a source
/// - int soap_write_tt__AudioClassDescriptor(struct soap*, tt__AudioClassDescriptor*) serialize to a sink
/// - tt__AudioClassDescriptor* soap_dup_tt__AudioClassDescriptor(struct soap*, tt__AudioClassDescriptor* dst, tt__AudioClassDescriptor *src) returns deep copy of tt__AudioClassDescriptor src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioClassDescriptor(tt__AudioClassDescriptor*) deep deletes tt__AudioClassDescriptor data members, use only on dst after soap_dup_tt__AudioClassDescriptor(NULL, tt__AudioClassDescriptor *dst, tt__AudioClassDescriptor *src) (use soapcpp2 -Ed)
struct tt__AudioClassDescriptor
{
/// <PRE><BLOCKQUOTE>
///   Array of audio class label and class probability
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioClassCandidate* is 0..unbounded.
  $ int                                  __sizeClassCandidate           0;
/// Array struct tt__AudioClassCandidate* of size 0..unbounded.
    struct tt__AudioClassCandidate*      ClassCandidate                 0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension.
    struct tt__AudioClassDescriptorExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension is a complexType.
///
/// @note struct tt__AudioClassDescriptorExtension operations:
/// - tt__AudioClassDescriptorExtension* soap_new_tt__AudioClassDescriptorExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioClassDescriptorExtension(struct soap*, tt__AudioClassDescriptorExtension*) default initialize members
/// - int soap_read_tt__AudioClassDescriptorExtension(struct soap*, tt__AudioClassDescriptorExtension*) deserialize from a source
/// - int soap_write_tt__AudioClassDescriptorExtension(struct soap*, tt__AudioClassDescriptorExtension*) serialize to a sink
/// - tt__AudioClassDescriptorExtension* soap_dup_tt__AudioClassDescriptorExtension(struct soap*, tt__AudioClassDescriptorExtension* dst, tt__AudioClassDescriptorExtension *src) returns deep copy of tt__AudioClassDescriptorExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioClassDescriptorExtension(tt__AudioClassDescriptorExtension*) deep deletes tt__AudioClassDescriptorExtension data members, use only on dst after soap_dup_tt__AudioClassDescriptorExtension(NULL, tt__AudioClassDescriptorExtension *dst, tt__AudioClassDescriptorExtension *src) (use soapcpp2 -Ed)
struct tt__AudioClassDescriptorExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ActiveConnection is a complexType.
///
/// @note struct tt__ActiveConnection operations:
/// - tt__ActiveConnection* soap_new_tt__ActiveConnection(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ActiveConnection(struct soap*, tt__ActiveConnection*) default initialize members
/// - int soap_read_tt__ActiveConnection(struct soap*, tt__ActiveConnection*) deserialize from a source
/// - int soap_write_tt__ActiveConnection(struct soap*, tt__ActiveConnection*) serialize to a sink
/// - tt__ActiveConnection* soap_dup_tt__ActiveConnection(struct soap*, tt__ActiveConnection* dst, tt__ActiveConnection *src) returns deep copy of tt__ActiveConnection src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ActiveConnection(tt__ActiveConnection*) deep deletes tt__ActiveConnection data members, use only on dst after soap_dup_tt__ActiveConnection(NULL, tt__ActiveConnection *dst, tt__ActiveConnection *src) (use soapcpp2 -Ed)
struct tt__ActiveConnection
{
/// Element "CurrentBitrate" of type xs:float.
    float                                CurrentBitrate                 1;	///< Required element.
/// Element "CurrentFps" of type xs:float.
    float                                CurrentFps                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileStatus is a complexType.
///
/// @note struct tt__ProfileStatus operations:
/// - tt__ProfileStatus* soap_new_tt__ProfileStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ProfileStatus(struct soap*, tt__ProfileStatus*) default initialize members
/// - int soap_read_tt__ProfileStatus(struct soap*, tt__ProfileStatus*) deserialize from a source
/// - int soap_write_tt__ProfileStatus(struct soap*, tt__ProfileStatus*) serialize to a sink
/// - tt__ProfileStatus* soap_dup_tt__ProfileStatus(struct soap*, tt__ProfileStatus* dst, tt__ProfileStatus *src) returns deep copy of tt__ProfileStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ProfileStatus(tt__ProfileStatus*) deep deletes tt__ProfileStatus data members, use only on dst after soap_dup_tt__ProfileStatus(NULL, tt__ProfileStatus *dst, tt__ProfileStatus *src) (use soapcpp2 -Ed)
struct tt__ProfileStatus
{
/// Size of array of struct tt__ActiveConnection* is 0..unbounded.
  $ int                                  __sizeActiveConnections        0;
/// Array struct tt__ActiveConnection* of size 0..unbounded.
    struct tt__ActiveConnection*         ActiveConnections              0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ProfileStatusExtension.
    struct tt__ProfileStatusExtension*   Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileStatusExtension is a complexType.
///
/// @note struct tt__ProfileStatusExtension operations:
/// - tt__ProfileStatusExtension* soap_new_tt__ProfileStatusExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ProfileStatusExtension(struct soap*, tt__ProfileStatusExtension*) default initialize members
/// - int soap_read_tt__ProfileStatusExtension(struct soap*, tt__ProfileStatusExtension*) deserialize from a source
/// - int soap_write_tt__ProfileStatusExtension(struct soap*, tt__ProfileStatusExtension*) serialize to a sink
/// - tt__ProfileStatusExtension* soap_dup_tt__ProfileStatusExtension(struct soap*, tt__ProfileStatusExtension* dst, tt__ProfileStatusExtension *src) returns deep copy of tt__ProfileStatusExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ProfileStatusExtension(tt__ProfileStatusExtension*) deep deletes tt__ProfileStatusExtension data members, use only on dst after soap_dup_tt__ProfileStatusExtension(NULL, tt__ProfileStatusExtension *dst, tt__ProfileStatusExtension *src) (use soapcpp2 -Ed)
struct tt__ProfileStatusExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDPosConfiguration is a complexType.
///
/// @note struct tt__OSDPosConfiguration operations:
/// - tt__OSDPosConfiguration* soap_new_tt__OSDPosConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDPosConfiguration(struct soap*, tt__OSDPosConfiguration*) default initialize members
/// - int soap_read_tt__OSDPosConfiguration(struct soap*, tt__OSDPosConfiguration*) deserialize from a source
/// - int soap_write_tt__OSDPosConfiguration(struct soap*, tt__OSDPosConfiguration*) serialize to a sink
/// - tt__OSDPosConfiguration* soap_dup_tt__OSDPosConfiguration(struct soap*, tt__OSDPosConfiguration* dst, tt__OSDPosConfiguration *src) returns deep copy of tt__OSDPosConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDPosConfiguration(tt__OSDPosConfiguration*) deep deletes tt__OSDPosConfiguration data members, use only on dst after soap_dup_tt__OSDPosConfiguration(NULL, tt__OSDPosConfiguration *dst, tt__OSDPosConfiguration *src) (use soapcpp2 -Ed)
struct tt__OSDPosConfiguration
{
/// <PRE><BLOCKQUOTE>
///   For OSD position type, following are the pre-defined: <ul><li>UpperLeft</li>
///   <li>UpperRight</li>
///   <li>LowerLeft</li>
///   <li>LowerRight</li>
///   <li>Custom</li></ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type xs:string.
    char*                                Type                           1;	///< Required element.
/// Element "Pos" of type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   Pos                            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension.
    struct tt__OSDPosConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension is a complexType.
///
/// @note struct tt__OSDPosConfigurationExtension operations:
/// - tt__OSDPosConfigurationExtension* soap_new_tt__OSDPosConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDPosConfigurationExtension(struct soap*, tt__OSDPosConfigurationExtension*) default initialize members
/// - int soap_read_tt__OSDPosConfigurationExtension(struct soap*, tt__OSDPosConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__OSDPosConfigurationExtension(struct soap*, tt__OSDPosConfigurationExtension*) serialize to a sink
/// - tt__OSDPosConfigurationExtension* soap_dup_tt__OSDPosConfigurationExtension(struct soap*, tt__OSDPosConfigurationExtension* dst, tt__OSDPosConfigurationExtension *src) returns deep copy of tt__OSDPosConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDPosConfigurationExtension(tt__OSDPosConfigurationExtension*) deep deletes tt__OSDPosConfigurationExtension data members, use only on dst after soap_dup_tt__OSDPosConfigurationExtension(NULL, tt__OSDPosConfigurationExtension *dst, tt__OSDPosConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__OSDPosConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColor is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The value range of "Transparent" could be defined by vendors only should follow this rule: the minimum value means non-transparent and the maximum value maens fully transparent.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__OSDColor operations:
/// - tt__OSDColor* soap_new_tt__OSDColor(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDColor(struct soap*, tt__OSDColor*) default initialize members
/// - int soap_read_tt__OSDColor(struct soap*, tt__OSDColor*) deserialize from a source
/// - int soap_write_tt__OSDColor(struct soap*, tt__OSDColor*) serialize to a sink
/// - tt__OSDColor* soap_dup_tt__OSDColor(struct soap*, tt__OSDColor* dst, tt__OSDColor *src) returns deep copy of tt__OSDColor src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDColor(tt__OSDColor*) deep deletes tt__OSDColor data members, use only on dst after soap_dup_tt__OSDColor(NULL, tt__OSDColor *dst, tt__OSDColor *src) (use soapcpp2 -Ed)
struct tt__OSDColor
{
/// Element "Color" of type "http://www.onvif.org/ver10/schema":Color.
    struct tt__Color*                    Color                          1;	///< Required element.
/// Attribute "Transparent" of type xs:int.
  @ int*                                 Transparent                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextConfiguration is a complexType.
///
/// @note struct tt__OSDTextConfiguration operations:
/// - tt__OSDTextConfiguration* soap_new_tt__OSDTextConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDTextConfiguration(struct soap*, tt__OSDTextConfiguration*) default initialize members
/// - int soap_read_tt__OSDTextConfiguration(struct soap*, tt__OSDTextConfiguration*) deserialize from a source
/// - int soap_write_tt__OSDTextConfiguration(struct soap*, tt__OSDTextConfiguration*) serialize to a sink
/// - tt__OSDTextConfiguration* soap_dup_tt__OSDTextConfiguration(struct soap*, tt__OSDTextConfiguration* dst, tt__OSDTextConfiguration *src) returns deep copy of tt__OSDTextConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDTextConfiguration(tt__OSDTextConfiguration*) deep deletes tt__OSDTextConfiguration data members, use only on dst after soap_dup_tt__OSDTextConfiguration(NULL, tt__OSDTextConfiguration *dst, tt__OSDTextConfiguration *src) (use soapcpp2 -Ed)
struct tt__OSDTextConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The following OSD Text Type are defined:<ul>
///   <li>Plain - The Plain type means the OSD is shown as a text string which defined in the "PlainText" item.</li>
///   <li>Date - The Date type means the OSD is shown as a date, format of which should be present in the "DateFormat" item.</li>
///   <li>Time - The Time type means the OSD is shown as a time, format of which should be present in the "TimeFormat" item.</li>
///   <li>DateAndTime - The DateAndTime type means the OSD is shown as date and time, format of which should be present in the "DateFormat" and the "TimeFormat" item.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type xs:string.
    char*                                Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported OSD date formats. This element shall be present when the value of Type field has Date or DateAndTime. The following DateFormat are defined:<ul>
///   <li>M/d/yyyy - e.g. 3/6/2013</li>
///   <li>MM/dd/yyyy - e.g. 03/06/2013</li>
///   <li>dd/MM/yyyy - e.g. 06/03/2013</li>
///   <li>yyyy/MM/dd - e.g. 2013/03/06</li>
///   <li>yyyy-MM-dd - e.g. 2013-06-03</li>
///   <li>dddd, MMMM dd, yyyy - e.g. Wednesday, March 06, 2013</li>
///   <li>MMMM dd, yyyy - e.g. March 06, 2013</li>
///   <li>dd MMMM, yyyy - e.g. 06 March, 2013</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "DateFormat" of type xs:string.
    char*                                DateFormat                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported OSD time formats. This element shall be present when the value of Type field has Time or DateAndTime. The following TimeFormat are defined:<ul>
///   <li>h:mm:ss tt - e.g. 2:14:21 PM</li>
///   <li>hh:mm:ss tt - e.g. 02:14:21 PM</li>
///   <li>H:mm:ss - e.g. 14:14:21</li>
///   <li>HH:mm:ss - e.g. 14:14:21</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeFormat" of type xs:string.
    char*                                TimeFormat                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Font size of the text in pt.
/// </BLOCKQUOTE></PRE>
///
/// Element "FontSize" of type xs:int.
    int*                                 FontSize                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Font color of the text.
/// </BLOCKQUOTE></PRE>
///
/// Element "FontColor" of type "http://www.onvif.org/ver10/schema":OSDColor.
    struct tt__OSDColor*                 FontColor                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Background color of the text.
/// </BLOCKQUOTE></PRE>
///
/// Element "BackgroundColor" of type "http://www.onvif.org/ver10/schema":OSDColor.
    struct tt__OSDColor*                 BackgroundColor                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The content of text to be displayed.
/// </BLOCKQUOTE></PRE>
///
/// Element "PlainText" of type xs:string.
    char*                                PlainText                      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension.
    struct tt__OSDTextConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This flag is applicable for Type Plain and defaults to true. When set to false the PlainText content will not be persistent across device reboots.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IsPersistentText" of type xs:boolean.
  @ enum xsd__boolean*                   IsPersistentText               0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension is a complexType.
///
/// @note struct tt__OSDTextConfigurationExtension operations:
/// - tt__OSDTextConfigurationExtension* soap_new_tt__OSDTextConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDTextConfigurationExtension(struct soap*, tt__OSDTextConfigurationExtension*) default initialize members
/// - int soap_read_tt__OSDTextConfigurationExtension(struct soap*, tt__OSDTextConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__OSDTextConfigurationExtension(struct soap*, tt__OSDTextConfigurationExtension*) serialize to a sink
/// - tt__OSDTextConfigurationExtension* soap_dup_tt__OSDTextConfigurationExtension(struct soap*, tt__OSDTextConfigurationExtension* dst, tt__OSDTextConfigurationExtension *src) returns deep copy of tt__OSDTextConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDTextConfigurationExtension(tt__OSDTextConfigurationExtension*) deep deletes tt__OSDTextConfigurationExtension data members, use only on dst after soap_dup_tt__OSDTextConfigurationExtension(NULL, tt__OSDTextConfigurationExtension *dst, tt__OSDTextConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__OSDTextConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgConfiguration is a complexType.
///
/// @note struct tt__OSDImgConfiguration operations:
/// - tt__OSDImgConfiguration* soap_new_tt__OSDImgConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDImgConfiguration(struct soap*, tt__OSDImgConfiguration*) default initialize members
/// - int soap_read_tt__OSDImgConfiguration(struct soap*, tt__OSDImgConfiguration*) deserialize from a source
/// - int soap_write_tt__OSDImgConfiguration(struct soap*, tt__OSDImgConfiguration*) serialize to a sink
/// - tt__OSDImgConfiguration* soap_dup_tt__OSDImgConfiguration(struct soap*, tt__OSDImgConfiguration* dst, tt__OSDImgConfiguration *src) returns deep copy of tt__OSDImgConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDImgConfiguration(tt__OSDImgConfiguration*) deep deletes tt__OSDImgConfiguration data members, use only on dst after soap_dup_tt__OSDImgConfiguration(NULL, tt__OSDImgConfiguration *dst, tt__OSDImgConfiguration *src) (use soapcpp2 -Ed)
struct tt__OSDImgConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The URI of the image which to be displayed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImgPath" of type xs:anyURI.
    xsd__anyURI                          ImgPath                        1;	///< Required element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension.
    struct tt__OSDImgConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension is a complexType.
///
/// @note struct tt__OSDImgConfigurationExtension operations:
/// - tt__OSDImgConfigurationExtension* soap_new_tt__OSDImgConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDImgConfigurationExtension(struct soap*, tt__OSDImgConfigurationExtension*) default initialize members
/// - int soap_read_tt__OSDImgConfigurationExtension(struct soap*, tt__OSDImgConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__OSDImgConfigurationExtension(struct soap*, tt__OSDImgConfigurationExtension*) serialize to a sink
/// - tt__OSDImgConfigurationExtension* soap_dup_tt__OSDImgConfigurationExtension(struct soap*, tt__OSDImgConfigurationExtension* dst, tt__OSDImgConfigurationExtension *src) returns deep copy of tt__OSDImgConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDImgConfigurationExtension(tt__OSDImgConfigurationExtension*) deep deletes tt__OSDImgConfigurationExtension data members, use only on dst after soap_dup_tt__OSDImgConfigurationExtension(NULL, tt__OSDImgConfigurationExtension *dst, tt__OSDImgConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__OSDImgConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ColorspaceRange is a complexType.
///
/// @note struct tt__ColorspaceRange operations:
/// - tt__ColorspaceRange* soap_new_tt__ColorspaceRange(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ColorspaceRange(struct soap*, tt__ColorspaceRange*) default initialize members
/// - int soap_read_tt__ColorspaceRange(struct soap*, tt__ColorspaceRange*) deserialize from a source
/// - int soap_write_tt__ColorspaceRange(struct soap*, tt__ColorspaceRange*) serialize to a sink
/// - tt__ColorspaceRange* soap_dup_tt__ColorspaceRange(struct soap*, tt__ColorspaceRange* dst, tt__ColorspaceRange *src) returns deep copy of tt__ColorspaceRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ColorspaceRange(tt__ColorspaceRange*) deep deletes tt__ColorspaceRange data members, use only on dst after soap_dup_tt__ColorspaceRange(NULL, tt__ColorspaceRange *dst, tt__ColorspaceRange *src) (use soapcpp2 -Ed)
struct tt__ColorspaceRange
{
/// Element "X" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               X                              1;	///< Required element.
/// Element "Y" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Y                              1;	///< Required element.
/// Element "Z" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Z                              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Acceptable values are the same as in tt:Color.
/// </BLOCKQUOTE></PRE>
///
/// Element "Colorspace" of type xs:anyURI.
    xsd__anyURI                          Colorspace                     1;	///< Required element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ColorOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describe the colors supported. Either list each color or define the range of color values.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__ColorOptions operations:
/// - tt__ColorOptions* soap_new_tt__ColorOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ColorOptions(struct soap*, tt__ColorOptions*) default initialize members
/// - int soap_read_tt__ColorOptions(struct soap*, tt__ColorOptions*) deserialize from a source
/// - int soap_write_tt__ColorOptions(struct soap*, tt__ColorOptions*) serialize to a sink
/// - tt__ColorOptions* soap_dup_tt__ColorOptions(struct soap*, tt__ColorOptions* dst, tt__ColorOptions *src) returns deep copy of tt__ColorOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ColorOptions(tt__ColorOptions*) deep deletes tt__ColorOptions data members, use only on dst after soap_dup_tt__ColorOptions(NULL, tt__ColorOptions *dst, tt__ColorOptions *src) (use soapcpp2 -Ed)
struct tt__ColorOptions
{
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with one ore more elements with maxOccurs>1 prevents the use of a union. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
/// <PRE><BLOCKQUOTE>
///   List the supported color.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Color* is 1..unbounded.
  $ int                                  __sizeColorList                0;
/// Array struct tt__Color* of size 1..unbounded.
    struct tt__Color*                    ColorList                     ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Define the range of color supported.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__ColorspaceRange* is 1..unbounded.
  $ int                                  __sizeColorspaceRange          0;
/// Array struct tt__ColorspaceRange* of size 1..unbounded.
    struct tt__ColorspaceRange*          ColorspaceRange               ;	///< Choice of element (one of multiple choices).
//  END OF CHOICE
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColorOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describe the option of the color and its transparency.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__OSDColorOptions operations:
/// - tt__OSDColorOptions* soap_new_tt__OSDColorOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDColorOptions(struct soap*, tt__OSDColorOptions*) default initialize members
/// - int soap_read_tt__OSDColorOptions(struct soap*, tt__OSDColorOptions*) deserialize from a source
/// - int soap_write_tt__OSDColorOptions(struct soap*, tt__OSDColorOptions*) serialize to a sink
/// - tt__OSDColorOptions* soap_dup_tt__OSDColorOptions(struct soap*, tt__OSDColorOptions* dst, tt__OSDColorOptions *src) returns deep copy of tt__OSDColorOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDColorOptions(tt__OSDColorOptions*) deep deletes tt__OSDColorOptions data members, use only on dst after soap_dup_tt__OSDColorOptions(NULL, tt__OSDColorOptions *dst, tt__OSDColorOptions *src) (use soapcpp2 -Ed)
struct tt__OSDColorOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional list of supported colors.
/// </BLOCKQUOTE></PRE>
///
/// Element "Color" of type "http://www.onvif.org/ver10/schema":ColorOptions.
    struct tt__ColorOptions*             Color                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Range of the transparent level. Larger means more tranparent.
/// </BLOCKQUOTE></PRE>
///
/// Element "Transparent" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 Transparent                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension.
    struct tt__OSDColorOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension is a complexType.
///
/// @note struct tt__OSDColorOptionsExtension operations:
/// - tt__OSDColorOptionsExtension* soap_new_tt__OSDColorOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDColorOptionsExtension(struct soap*, tt__OSDColorOptionsExtension*) default initialize members
/// - int soap_read_tt__OSDColorOptionsExtension(struct soap*, tt__OSDColorOptionsExtension*) deserialize from a source
/// - int soap_write_tt__OSDColorOptionsExtension(struct soap*, tt__OSDColorOptionsExtension*) serialize to a sink
/// - tt__OSDColorOptionsExtension* soap_dup_tt__OSDColorOptionsExtension(struct soap*, tt__OSDColorOptionsExtension* dst, tt__OSDColorOptionsExtension *src) returns deep copy of tt__OSDColorOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDColorOptionsExtension(tt__OSDColorOptionsExtension*) deep deletes tt__OSDColorOptionsExtension data members, use only on dst after soap_dup_tt__OSDColorOptionsExtension(NULL, tt__OSDColorOptionsExtension *dst, tt__OSDColorOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__OSDColorOptionsExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextOptions is a complexType.
///
/// @note struct tt__OSDTextOptions operations:
/// - tt__OSDTextOptions* soap_new_tt__OSDTextOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDTextOptions(struct soap*, tt__OSDTextOptions*) default initialize members
/// - int soap_read_tt__OSDTextOptions(struct soap*, tt__OSDTextOptions*) deserialize from a source
/// - int soap_write_tt__OSDTextOptions(struct soap*, tt__OSDTextOptions*) serialize to a sink
/// - tt__OSDTextOptions* soap_dup_tt__OSDTextOptions(struct soap*, tt__OSDTextOptions* dst, tt__OSDTextOptions *src) returns deep copy of tt__OSDTextOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDTextOptions(tt__OSDTextOptions*) deep deletes tt__OSDTextOptions data members, use only on dst after soap_dup_tt__OSDTextOptions(NULL, tt__OSDTextOptions *dst, tt__OSDTextOptions *src) (use soapcpp2 -Ed)
struct tt__OSDTextOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported OSD text type. When a device indicates the supported number relating to Text type in MaximumNumberOfOSDs, the type shall be presented.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char** is 1..unbounded.
  $ int                                  __sizeType                     1;
/// Array char** of size 1..unbounded.
    char**                               Type                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Range of the font size value.
/// </BLOCKQUOTE></PRE>
///
/// Element "FontSizeRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FontSizeRange                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported date format.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char** is 0..unbounded.
  $ int                                  __sizeDateFormat               0;
/// Array char** of size 0..unbounded.
    char**                               DateFormat                     0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of supported time format.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char** is 0..unbounded.
  $ int                                  __sizeTimeFormat               0;
/// Array char** of size 0..unbounded.
    char**                               TimeFormat                     0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of supported font color.
/// </BLOCKQUOTE></PRE>
///
/// Element "FontColor" of type "http://www.onvif.org/ver10/schema":OSDColorOptions.
    struct tt__OSDColorOptions*          FontColor                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported background color.
/// </BLOCKQUOTE></PRE>
///
/// Element "BackgroundColor" of type "http://www.onvif.org/ver10/schema":OSDColorOptions.
    struct tt__OSDColorOptions*          BackgroundColor                0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension.
    struct tt__OSDTextOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension is a complexType.
///
/// @note struct tt__OSDTextOptionsExtension operations:
/// - tt__OSDTextOptionsExtension* soap_new_tt__OSDTextOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDTextOptionsExtension(struct soap*, tt__OSDTextOptionsExtension*) default initialize members
/// - int soap_read_tt__OSDTextOptionsExtension(struct soap*, tt__OSDTextOptionsExtension*) deserialize from a source
/// - int soap_write_tt__OSDTextOptionsExtension(struct soap*, tt__OSDTextOptionsExtension*) serialize to a sink
/// - tt__OSDTextOptionsExtension* soap_dup_tt__OSDTextOptionsExtension(struct soap*, tt__OSDTextOptionsExtension* dst, tt__OSDTextOptionsExtension *src) returns deep copy of tt__OSDTextOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDTextOptionsExtension(tt__OSDTextOptionsExtension*) deep deletes tt__OSDTextOptionsExtension data members, use only on dst after soap_dup_tt__OSDTextOptionsExtension(NULL, tt__OSDTextOptionsExtension *dst, tt__OSDTextOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__OSDTextOptionsExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgOptions is a complexType.
///
/// @note struct tt__OSDImgOptions operations:
/// - tt__OSDImgOptions* soap_new_tt__OSDImgOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDImgOptions(struct soap*, tt__OSDImgOptions*) default initialize members
/// - int soap_read_tt__OSDImgOptions(struct soap*, tt__OSDImgOptions*) deserialize from a source
/// - int soap_write_tt__OSDImgOptions(struct soap*, tt__OSDImgOptions*) serialize to a sink
/// - tt__OSDImgOptions* soap_dup_tt__OSDImgOptions(struct soap*, tt__OSDImgOptions* dst, tt__OSDImgOptions *src) returns deep copy of tt__OSDImgOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDImgOptions(tt__OSDImgOptions*) deep deletes tt__OSDImgOptions data members, use only on dst after soap_dup_tt__OSDImgOptions(NULL, tt__OSDImgOptions *dst, tt__OSDImgOptions *src) (use soapcpp2 -Ed)
struct tt__OSDImgOptions
{
/// <PRE><BLOCKQUOTE>
///   List of available image URIs.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeImagePath                1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         ImagePath                      1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension.
    struct tt__OSDImgOptionsExtension*   Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported image MIME types, such as "image/png".
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FormatsSupported" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   FormatsSupported               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum size (in bytes) of the image that can be uploaded.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxSize" of type xs:int.
  @ int*                                 MaxSize                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum width (in pixels) of the image that can be uploaded.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxWidth" of type xs:int.
  @ int*                                 MaxWidth                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum height (in pixels) of the image that can be uploaded.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxHeight" of type xs:int.
  @ int*                                 MaxHeight                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension is a complexType.
///
/// @note struct tt__OSDImgOptionsExtension operations:
/// - tt__OSDImgOptionsExtension* soap_new_tt__OSDImgOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDImgOptionsExtension(struct soap*, tt__OSDImgOptionsExtension*) default initialize members
/// - int soap_read_tt__OSDImgOptionsExtension(struct soap*, tt__OSDImgOptionsExtension*) deserialize from a source
/// - int soap_write_tt__OSDImgOptionsExtension(struct soap*, tt__OSDImgOptionsExtension*) serialize to a sink
/// - tt__OSDImgOptionsExtension* soap_dup_tt__OSDImgOptionsExtension(struct soap*, tt__OSDImgOptionsExtension* dst, tt__OSDImgOptionsExtension *src) returns deep copy of tt__OSDImgOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDImgOptionsExtension(tt__OSDImgOptionsExtension*) deep deletes tt__OSDImgOptionsExtension data members, use only on dst after soap_dup_tt__OSDImgOptionsExtension(NULL, tt__OSDImgOptionsExtension *dst, tt__OSDImgOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__OSDImgOptionsExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationExtension is a complexType.
///
/// @note struct tt__OSDConfigurationExtension operations:
/// - tt__OSDConfigurationExtension* soap_new_tt__OSDConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDConfigurationExtension(struct soap*, tt__OSDConfigurationExtension*) default initialize members
/// - int soap_read_tt__OSDConfigurationExtension(struct soap*, tt__OSDConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__OSDConfigurationExtension(struct soap*, tt__OSDConfigurationExtension*) serialize to a sink
/// - tt__OSDConfigurationExtension* soap_dup_tt__OSDConfigurationExtension(struct soap*, tt__OSDConfigurationExtension* dst, tt__OSDConfigurationExtension *src) returns deep copy of tt__OSDConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDConfigurationExtension(tt__OSDConfigurationExtension*) deep deletes tt__OSDConfigurationExtension data members, use only on dst after soap_dup_tt__OSDConfigurationExtension(NULL, tt__OSDConfigurationExtension *dst, tt__OSDConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__OSDConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs is a complexType.
///
/// @note struct tt__MaximumNumberOfOSDs operations:
/// - tt__MaximumNumberOfOSDs* soap_new_tt__MaximumNumberOfOSDs(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MaximumNumberOfOSDs(struct soap*, tt__MaximumNumberOfOSDs*) default initialize members
/// - int soap_read_tt__MaximumNumberOfOSDs(struct soap*, tt__MaximumNumberOfOSDs*) deserialize from a source
/// - int soap_write_tt__MaximumNumberOfOSDs(struct soap*, tt__MaximumNumberOfOSDs*) serialize to a sink
/// - tt__MaximumNumberOfOSDs* soap_dup_tt__MaximumNumberOfOSDs(struct soap*, tt__MaximumNumberOfOSDs* dst, tt__MaximumNumberOfOSDs *src) returns deep copy of tt__MaximumNumberOfOSDs src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MaximumNumberOfOSDs(tt__MaximumNumberOfOSDs*) deep deletes tt__MaximumNumberOfOSDs data members, use only on dst after soap_dup_tt__MaximumNumberOfOSDs(NULL, tt__MaximumNumberOfOSDs *dst, tt__MaximumNumberOfOSDs *src) (use soapcpp2 -Ed)
struct tt__MaximumNumberOfOSDs
{
/// Attribute "Total" of type xs:int.
  @ int                                  Total                          1;	///< Required attribute.
/// Attribute "Image" of type xs:int.
  @ int*                                 Image                          0;	///< Optional attribute.
/// Attribute "PlainText" of type xs:int.
  @ int*                                 PlainText                      0;	///< Optional attribute.
/// Attribute "Date" of type xs:int.
  @ int*                                 Date                           0;	///< Optional attribute.
/// Attribute "Time" of type xs:int.
  @ int*                                 Time                           0;	///< Optional attribute.
/// Attribute "DateAndTime" of type xs:int.
  @ int*                                 DateAndTime                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationOptions is a complexType.
///
/// @note struct tt__OSDConfigurationOptions operations:
/// - tt__OSDConfigurationOptions* soap_new_tt__OSDConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDConfigurationOptions(struct soap*, tt__OSDConfigurationOptions*) default initialize members
/// - int soap_read_tt__OSDConfigurationOptions(struct soap*, tt__OSDConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__OSDConfigurationOptions(struct soap*, tt__OSDConfigurationOptions*) serialize to a sink
/// - tt__OSDConfigurationOptions* soap_dup_tt__OSDConfigurationOptions(struct soap*, tt__OSDConfigurationOptions* dst, tt__OSDConfigurationOptions *src) returns deep copy of tt__OSDConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDConfigurationOptions(tt__OSDConfigurationOptions*) deep deletes tt__OSDConfigurationOptions data members, use only on dst after soap_dup_tt__OSDConfigurationOptions(NULL, tt__OSDConfigurationOptions *dst, tt__OSDConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__OSDConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   The maximum number of OSD configurations supported for the specified video source configuration. If the configuration does not support OSDs, this value shall be zero and the Type and PositionOption elements are ignored. If a device limits the number of instances by OSDType, it shall indicate the supported number for each type via the related attribute.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfOSDs" of type "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs.
    struct tt__MaximumNumberOfOSDs*      MaximumNumberOfOSDs            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List supported type of OSD configuration. When a device indicates the supported number for each types in MaximumNumberOfOSDs, related type shall be presented. A device shall return Option element relating to listed type.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__OSDType* is 1..unbounded.
  $ int                                  __sizeType                     1;
/// Array enum tt__OSDType* of size 1..unbounded.
    enum tt__OSDType*                    Type                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List available OSD position type. Following are the pre-defined:<ul><li>UpperLeft</li>
///   <li>UpperRight</li>
///   <li>LowerLeft</li>
///   <li>LowerRight</li>
///   <li>Custom</li></ul>
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char** is 1..unbounded.
  $ int                                  __sizePositionOption           1;
/// Array char** of size 1..unbounded.
    char**                               PositionOption                 1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Option of the OSD text configuration. This element shall be returned if the device is signaling the support for Text.
/// </BLOCKQUOTE></PRE>
///
/// Element "TextOption" of type "http://www.onvif.org/ver10/schema":OSDTextOptions.
    struct tt__OSDTextOptions*           TextOption                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Option of the OSD image configuration. This element shall be returned if the device is signaling the support for Image.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImageOption" of type "http://www.onvif.org/ver10/schema":OSDImgOptions.
    struct tt__OSDImgOptions*            ImageOption                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension.
    struct tt__OSDConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension is a complexType.
///
/// @note struct tt__OSDConfigurationOptionsExtension operations:
/// - tt__OSDConfigurationOptionsExtension* soap_new_tt__OSDConfigurationOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDConfigurationOptionsExtension(struct soap*, tt__OSDConfigurationOptionsExtension*) default initialize members
/// - int soap_read_tt__OSDConfigurationOptionsExtension(struct soap*, tt__OSDConfigurationOptionsExtension*) deserialize from a source
/// - int soap_write_tt__OSDConfigurationOptionsExtension(struct soap*, tt__OSDConfigurationOptionsExtension*) serialize to a sink
/// - tt__OSDConfigurationOptionsExtension* soap_dup_tt__OSDConfigurationOptionsExtension(struct soap*, tt__OSDConfigurationOptionsExtension* dst, tt__OSDConfigurationOptionsExtension *src) returns deep copy of tt__OSDConfigurationOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDConfigurationOptionsExtension(tt__OSDConfigurationOptionsExtension*) deep deletes tt__OSDConfigurationOptionsExtension data members, use only on dst after soap_dup_tt__OSDConfigurationOptionsExtension(NULL, tt__OSDConfigurationOptionsExtension *dst, tt__OSDConfigurationOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__OSDConfigurationOptionsExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":FileProgress is a complexType.
///
/// @note struct tt__FileProgress operations:
/// - tt__FileProgress* soap_new_tt__FileProgress(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FileProgress(struct soap*, tt__FileProgress*) default initialize members
/// - int soap_read_tt__FileProgress(struct soap*, tt__FileProgress*) deserialize from a source
/// - int soap_write_tt__FileProgress(struct soap*, tt__FileProgress*) serialize to a sink
/// - tt__FileProgress* soap_dup_tt__FileProgress(struct soap*, tt__FileProgress* dst, tt__FileProgress *src) returns deep copy of tt__FileProgress src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FileProgress(tt__FileProgress*) deep deletes tt__FileProgress data members, use only on dst after soap_dup_tt__FileProgress(NULL, tt__FileProgress *dst, tt__FileProgress *src) (use soapcpp2 -Ed)
struct tt__FileProgress
{
/// <PRE><BLOCKQUOTE>
///   Exported file name
/// </BLOCKQUOTE></PRE>
///
/// Element "FileName" of type xs:string.
    char*                                FileName                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Normalized percentage completion for uploading the exported file
/// </BLOCKQUOTE></PRE>
///
/// Element "Progress" of type xs:float.
    float                                Progress                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ArrayOfFileProgress is a complexType.
///
/// @note struct tt__ArrayOfFileProgress operations:
/// - tt__ArrayOfFileProgress* soap_new_tt__ArrayOfFileProgress(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ArrayOfFileProgress(struct soap*, tt__ArrayOfFileProgress*) default initialize members
/// - int soap_read_tt__ArrayOfFileProgress(struct soap*, tt__ArrayOfFileProgress*) deserialize from a source
/// - int soap_write_tt__ArrayOfFileProgress(struct soap*, tt__ArrayOfFileProgress*) serialize to a sink
/// - tt__ArrayOfFileProgress* soap_dup_tt__ArrayOfFileProgress(struct soap*, tt__ArrayOfFileProgress* dst, tt__ArrayOfFileProgress *src) returns deep copy of tt__ArrayOfFileProgress src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ArrayOfFileProgress(tt__ArrayOfFileProgress*) deep deletes tt__ArrayOfFileProgress data members, use only on dst after soap_dup_tt__ArrayOfFileProgress(NULL, tt__ArrayOfFileProgress *dst, tt__ArrayOfFileProgress *src) (use soapcpp2 -Ed)
struct tt__ArrayOfFileProgress
{
/// <PRE><BLOCKQUOTE>
///   Exported file name and export progress information
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__FileProgress* is 0..unbounded.
  $ int                                  __sizeFileProgress             0;
/// Array struct tt__FileProgress* of size 0..unbounded.
    struct tt__FileProgress*             FileProgress                   0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension.
    struct tt__ArrayOfFileProgressExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension is a complexType.
///
/// @note struct tt__ArrayOfFileProgressExtension operations:
/// - tt__ArrayOfFileProgressExtension* soap_new_tt__ArrayOfFileProgressExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ArrayOfFileProgressExtension(struct soap*, tt__ArrayOfFileProgressExtension*) default initialize members
/// - int soap_read_tt__ArrayOfFileProgressExtension(struct soap*, tt__ArrayOfFileProgressExtension*) deserialize from a source
/// - int soap_write_tt__ArrayOfFileProgressExtension(struct soap*, tt__ArrayOfFileProgressExtension*) serialize to a sink
/// - tt__ArrayOfFileProgressExtension* soap_dup_tt__ArrayOfFileProgressExtension(struct soap*, tt__ArrayOfFileProgressExtension* dst, tt__ArrayOfFileProgressExtension *src) returns deep copy of tt__ArrayOfFileProgressExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ArrayOfFileProgressExtension(tt__ArrayOfFileProgressExtension*) deep deletes tt__ArrayOfFileProgressExtension data members, use only on dst after soap_dup_tt__ArrayOfFileProgressExtension(NULL, tt__ArrayOfFileProgressExtension *dst, tt__ArrayOfFileProgressExtension *src) (use soapcpp2 -Ed)
struct tt__ArrayOfFileProgressExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":StorageReferencePath is a complexType.
///
/// @note struct tt__StorageReferencePath operations:
/// - tt__StorageReferencePath* soap_new_tt__StorageReferencePath(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__StorageReferencePath(struct soap*, tt__StorageReferencePath*) default initialize members
/// - int soap_read_tt__StorageReferencePath(struct soap*, tt__StorageReferencePath*) deserialize from a source
/// - int soap_write_tt__StorageReferencePath(struct soap*, tt__StorageReferencePath*) serialize to a sink
/// - tt__StorageReferencePath* soap_dup_tt__StorageReferencePath(struct soap*, tt__StorageReferencePath* dst, tt__StorageReferencePath *src) returns deep copy of tt__StorageReferencePath src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__StorageReferencePath(tt__StorageReferencePath*) deep deletes tt__StorageReferencePath data members, use only on dst after soap_dup_tt__StorageReferencePath(NULL, tt__StorageReferencePath *dst, tt__StorageReferencePath *src) (use soapcpp2 -Ed)
struct tt__StorageReferencePath
{
/// <PRE><BLOCKQUOTE>
///   identifier of an existing Storage Configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "StorageToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   StorageToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   gives the relative directory path on the storage
/// </BLOCKQUOTE></PRE>
///
/// Element "RelativePath" of type xs:string.
    char*                                RelativePath                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":StorageReferencePathExtension.
    struct tt__StorageReferencePathExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":StorageReferencePathExtension is a complexType.
///
/// @note struct tt__StorageReferencePathExtension operations:
/// - tt__StorageReferencePathExtension* soap_new_tt__StorageReferencePathExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__StorageReferencePathExtension(struct soap*, tt__StorageReferencePathExtension*) default initialize members
/// - int soap_read_tt__StorageReferencePathExtension(struct soap*, tt__StorageReferencePathExtension*) deserialize from a source
/// - int soap_write_tt__StorageReferencePathExtension(struct soap*, tt__StorageReferencePathExtension*) serialize to a sink
/// - tt__StorageReferencePathExtension* soap_dup_tt__StorageReferencePathExtension(struct soap*, tt__StorageReferencePathExtension* dst, tt__StorageReferencePathExtension *src) returns deep copy of tt__StorageReferencePathExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__StorageReferencePathExtension(tt__StorageReferencePathExtension*) deep deletes tt__StorageReferencePathExtension data members, use only on dst after soap_dup_tt__StorageReferencePathExtension(NULL, tt__StorageReferencePathExtension *dst, tt__StorageReferencePathExtension *src) (use soapcpp2 -Ed)
struct tt__StorageReferencePathExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IntRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__IntRange operations:
/// - tt__IntRange* soap_new_tt__IntRange(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IntRange(struct soap*, tt__IntRange*) default initialize members
/// - int soap_read_tt__IntRange(struct soap*, tt__IntRange*) deserialize from a source
/// - int soap_write_tt__IntRange(struct soap*, tt__IntRange*) serialize to a sink
/// - tt__IntRange* soap_dup_tt__IntRange(struct soap*, tt__IntRange* dst, tt__IntRange *src) returns deep copy of tt__IntRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IntRange(tt__IntRange*) deep deletes tt__IntRange data members, use only on dst after soap_dup_tt__IntRange(NULL, tt__IntRange *dst, tt__IntRange *src) (use soapcpp2 -Ed)
struct tt__IntRange
{
/// Element "Min" of type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element "Max" of type xs:int.
    int                                  Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector2D is a complexType.
///
/// @note struct tt__Vector2D operations:
/// - tt__Vector2D* soap_new_tt__Vector2D(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Vector2D(struct soap*, tt__Vector2D*) default initialize members
/// - int soap_read_tt__Vector2D(struct soap*, tt__Vector2D*) deserialize from a source
/// - int soap_write_tt__Vector2D(struct soap*, tt__Vector2D*) serialize to a sink
/// - tt__Vector2D* soap_dup_tt__Vector2D(struct soap*, tt__Vector2D* dst, tt__Vector2D *src) returns deep copy of tt__Vector2D src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Vector2D(tt__Vector2D*) deep deletes tt__Vector2D data members, use only on dst after soap_dup_tt__Vector2D(NULL, tt__Vector2D *dst, tt__Vector2D *src) (use soapcpp2 -Ed)
struct tt__Vector2D
{
/// Attribute "x" of type xs:float.
  @ float                                x                              1;	///< Required attribute.
/// Attribute "y" of type xs:float.
  @ float                                y                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Pan/tilt coordinate space selector. The following options are defined:<ul>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Attribute "space" of type xs:anyURI.
  @ xsd__anyURI                          space                          0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector1D is a complexType.
///
/// @note struct tt__Vector1D operations:
/// - tt__Vector1D* soap_new_tt__Vector1D(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Vector1D(struct soap*, tt__Vector1D*) default initialize members
/// - int soap_read_tt__Vector1D(struct soap*, tt__Vector1D*) deserialize from a source
/// - int soap_write_tt__Vector1D(struct soap*, tt__Vector1D*) serialize to a sink
/// - tt__Vector1D* soap_dup_tt__Vector1D(struct soap*, tt__Vector1D* dst, tt__Vector1D *src) returns deep copy of tt__Vector1D src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Vector1D(tt__Vector1D*) deep deletes tt__Vector1D data members, use only on dst after soap_dup_tt__Vector1D(NULL, tt__Vector1D *dst, tt__Vector1D *src) (use soapcpp2 -Ed)
struct tt__Vector1D
{
/// Attribute "x" of type xs:float.
  @ float                                x                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Zoom coordinate space selector. The following options are defined:<ul style="">
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/ZoomGenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Attribute "space" of type xs:anyURI.
  @ xsd__anyURI                          space                          0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZVector is a complexType.
///
/// @note struct tt__PTZVector operations:
/// - tt__PTZVector* soap_new_tt__PTZVector(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZVector(struct soap*, tt__PTZVector*) default initialize members
/// - int soap_read_tt__PTZVector(struct soap*, tt__PTZVector*) deserialize from a source
/// - int soap_write_tt__PTZVector(struct soap*, tt__PTZVector*) serialize to a sink
/// - tt__PTZVector* soap_dup_tt__PTZVector(struct soap*, tt__PTZVector* dst, tt__PTZVector *src) returns deep copy of tt__PTZVector src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZVector(tt__PTZVector*) deep deletes tt__PTZVector data members, use only on dst after soap_dup_tt__PTZVector(NULL, tt__PTZVector *dst, tt__PTZVector *src) (use soapcpp2 -Ed)
struct tt__PTZVector
{
/// <PRE><BLOCKQUOTE>
///   Pan and tilt position. The x component corresponds to pan and the y component to tilt.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":Vector2D.
    struct tt__Vector2D*                 PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":Vector1D.
    struct tt__Vector1D*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatus is a complexType.
///
/// @note struct tt__PTZStatus operations:
/// - tt__PTZStatus* soap_new_tt__PTZStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZStatus(struct soap*, tt__PTZStatus*) default initialize members
/// - int soap_read_tt__PTZStatus(struct soap*, tt__PTZStatus*) deserialize from a source
/// - int soap_write_tt__PTZStatus(struct soap*, tt__PTZStatus*) serialize to a sink
/// - tt__PTZStatus* soap_dup_tt__PTZStatus(struct soap*, tt__PTZStatus* dst, tt__PTZStatus *src) returns deep copy of tt__PTZStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZStatus(tt__PTZStatus*) deep deletes tt__PTZStatus data members, use only on dst after soap_dup_tt__PTZStatus(NULL, tt__PTZStatus *dst, tt__PTZStatus *src) (use soapcpp2 -Ed)
struct tt__PTZStatus
{
/// <PRE><BLOCKQUOTE>
///   Specifies the absolute position of the PTZ unit together with the Space references. The default absolute spaces of the corresponding PTZ configuration MUST be referenced within the Position element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                Position                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Pan/Tilt/Zoom device unit is currently moving, idle or in an unknown state.
/// </BLOCKQUOTE></PRE>
///
/// Element "MoveStatus" of type "http://www.onvif.org/ver10/schema":PTZMoveStatus.
    struct tt__PTZMoveStatus*            MoveStatus                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   States a current PTZ error.
/// </BLOCKQUOTE></PRE>
///
/// Element "Error" of type xs:string.
    char*                                Error                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Specifies the UTC time when this status was generated.
/// </BLOCKQUOTE></PRE>
///
/// Element "UtcTime" of type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZMoveStatus is a complexType.
///
/// @note struct tt__PTZMoveStatus operations:
/// - tt__PTZMoveStatus* soap_new_tt__PTZMoveStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZMoveStatus(struct soap*, tt__PTZMoveStatus*) default initialize members
/// - int soap_read_tt__PTZMoveStatus(struct soap*, tt__PTZMoveStatus*) deserialize from a source
/// - int soap_write_tt__PTZMoveStatus(struct soap*, tt__PTZMoveStatus*) serialize to a sink
/// - tt__PTZMoveStatus* soap_dup_tt__PTZMoveStatus(struct soap*, tt__PTZMoveStatus* dst, tt__PTZMoveStatus *src) returns deep copy of tt__PTZMoveStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZMoveStatus(tt__PTZMoveStatus*) deep deletes tt__PTZMoveStatus data members, use only on dst after soap_dup_tt__PTZMoveStatus(NULL, tt__PTZMoveStatus *dst, tt__PTZMoveStatus *src) (use soapcpp2 -Ed)
struct tt__PTZMoveStatus
{

/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 PanTilt                        0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector is a complexType.
///
/// @note struct tt__Vector operations:
/// - tt__Vector* soap_new_tt__Vector(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Vector(struct soap*, tt__Vector*) default initialize members
/// - int soap_read_tt__Vector(struct soap*, tt__Vector*) deserialize from a source
/// - int soap_write_tt__Vector(struct soap*, tt__Vector*) serialize to a sink
/// - tt__Vector* soap_dup_tt__Vector(struct soap*, tt__Vector* dst, tt__Vector *src) returns deep copy of tt__Vector src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Vector(tt__Vector*) deep deletes tt__Vector data members, use only on dst after soap_dup_tt__Vector(NULL, tt__Vector *dst, tt__Vector *src) (use soapcpp2 -Ed)
struct tt__Vector
{
/// Attribute "x" of type xs:float.
  @ float*                               x                              0;	///< Optional attribute.
/// Attribute "y" of type xs:float.
  @ float*                               y                              0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Rectangle is a complexType.
///
/// @note struct tt__Rectangle operations:
/// - tt__Rectangle* soap_new_tt__Rectangle(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Rectangle(struct soap*, tt__Rectangle*) default initialize members
/// - int soap_read_tt__Rectangle(struct soap*, tt__Rectangle*) deserialize from a source
/// - int soap_write_tt__Rectangle(struct soap*, tt__Rectangle*) serialize to a sink
/// - tt__Rectangle* soap_dup_tt__Rectangle(struct soap*, tt__Rectangle* dst, tt__Rectangle *src) returns deep copy of tt__Rectangle src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Rectangle(tt__Rectangle*) deep deletes tt__Rectangle data members, use only on dst after soap_dup_tt__Rectangle(NULL, tt__Rectangle *dst, tt__Rectangle *src) (use soapcpp2 -Ed)
struct tt__Rectangle
{
/// Attribute "bottom" of type xs:float.
  @ float*                               bottom                         0;	///< Optional attribute.
/// Attribute "top" of type xs:float.
  @ float*                               top                            0;	///< Optional attribute.
/// Attribute "right" of type xs:float.
  @ float*                               right                          0;	///< Optional attribute.
/// Attribute "left" of type xs:float.
  @ float*                               left                           0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Polygon is a complexType.
///
/// @note struct tt__Polygon operations:
/// - tt__Polygon* soap_new_tt__Polygon(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Polygon(struct soap*, tt__Polygon*) default initialize members
/// - int soap_read_tt__Polygon(struct soap*, tt__Polygon*) deserialize from a source
/// - int soap_write_tt__Polygon(struct soap*, tt__Polygon*) serialize to a sink
/// - tt__Polygon* soap_dup_tt__Polygon(struct soap*, tt__Polygon* dst, tt__Polygon *src) returns deep copy of tt__Polygon src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Polygon(tt__Polygon*) deep deletes tt__Polygon data members, use only on dst after soap_dup_tt__Polygon(NULL, tt__Polygon *dst, tt__Polygon *src) (use soapcpp2 -Ed)
struct tt__Polygon
{
/// Size of array of struct tt__Vector* is 3..unbounded.
  $ int                                  __sizePoint                    3;
/// Array struct tt__Vector* of size 3..unbounded.
    struct tt__Vector*                   Point                          3;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":Color is a complexType.
///
/// @note struct tt__Color operations:
/// - tt__Color* soap_new_tt__Color(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Color(struct soap*, tt__Color*) default initialize members
/// - int soap_read_tt__Color(struct soap*, tt__Color*) deserialize from a source
/// - int soap_write_tt__Color(struct soap*, tt__Color*) serialize to a sink
/// - tt__Color* soap_dup_tt__Color(struct soap*, tt__Color* dst, tt__Color *src) returns deep copy of tt__Color src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Color(tt__Color*) deep deletes tt__Color data members, use only on dst after soap_dup_tt__Color(NULL, tt__Color *dst, tt__Color *src) (use soapcpp2 -Ed)
struct tt__Color
{
/// Attribute "X" of type xs:float.
  @ float                                X                              1;	///< Required attribute.
/// Attribute "Y" of type xs:float.
  @ float                                Y                              1;	///< Required attribute.
/// Attribute "Z" of type xs:float.
  @ float                                Z                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Acceptable values:
///   <ul>
///   <li>http://www.onvif.org/ver10/colorspace/YCbCr - YCbCr
///   <ul><li>X attribute = Y value</li>
///   <li>Y attribute = Cb value</li>
///   <li>Z attribute = Cr value</li></ul>
///   </li>
///   <li>http://www.onvif.org/ver10/colorspace/RGB - RGB
///   <ul><li>X attribute = R value</li>
///   <li>Y attribute = G value</li>
///   <li>Z attribute = B value</li></ul>
///   </li>
///   </ul>
///   If the Colorspace attribute is absent, YCbCr is implied.
///   Deprecated values:
///   <ul>
///   <li>http://www.onvif.org/ver10/colorspace/CIELUV - CIE LUV</li>
///   <li>http://www.onvif.org/ver10/colorspace/CIELAB - CIE 1976 (L*a*b*)</li>
///   <li>http://www.onvif.org/ver10/colorspace/HSV - HSV</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Colorspace" of type xs:anyURI.
  @ xsd__anyURI                          Colorspace                     0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorCovariance is a complexType.
///
/// @note struct tt__ColorCovariance operations:
/// - tt__ColorCovariance* soap_new_tt__ColorCovariance(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ColorCovariance(struct soap*, tt__ColorCovariance*) default initialize members
/// - int soap_read_tt__ColorCovariance(struct soap*, tt__ColorCovariance*) deserialize from a source
/// - int soap_write_tt__ColorCovariance(struct soap*, tt__ColorCovariance*) serialize to a sink
/// - tt__ColorCovariance* soap_dup_tt__ColorCovariance(struct soap*, tt__ColorCovariance* dst, tt__ColorCovariance *src) returns deep copy of tt__ColorCovariance src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ColorCovariance(tt__ColorCovariance*) deep deletes tt__ColorCovariance data members, use only on dst after soap_dup_tt__ColorCovariance(NULL, tt__ColorCovariance *dst, tt__ColorCovariance *src) (use soapcpp2 -Ed)
struct tt__ColorCovariance
{
/// Attribute "XX" of type xs:float.
  @ float                                XX                             1;	///< Required attribute.
/// Attribute "YY" of type xs:float.
  @ float                                YY                             1;	///< Required attribute.
/// Attribute "ZZ" of type xs:float.
  @ float                                ZZ                             1;	///< Required attribute.
/// Attribute "XY" of type xs:float.
  @ float*                               XY                             0;	///< Optional attribute.
/// Attribute "XZ" of type xs:float.
  @ float*                               XZ                             0;	///< Optional attribute.
/// Attribute "YZ" of type xs:float.
  @ float*                               YZ                             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Acceptable values are the same as in tt:Color.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Colorspace" of type xs:anyURI.
  @ xsd__anyURI                          Colorspace                     0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorDescriptor is a complexType.
///
/// @note struct tt__ColorDescriptor operations:
/// - tt__ColorDescriptor* soap_new_tt__ColorDescriptor(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ColorDescriptor(struct soap*, tt__ColorDescriptor*) default initialize members
/// - int soap_read_tt__ColorDescriptor(struct soap*, tt__ColorDescriptor*) deserialize from a source
/// - int soap_write_tt__ColorDescriptor(struct soap*, tt__ColorDescriptor*) serialize to a sink
/// - tt__ColorDescriptor* soap_dup_tt__ColorDescriptor(struct soap*, tt__ColorDescriptor* dst, tt__ColorDescriptor *src) returns deep copy of tt__ColorDescriptor src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ColorDescriptor(tt__ColorDescriptor*) deep deletes tt__ColorDescriptor data members, use only on dst after soap_dup_tt__ColorDescriptor(NULL, tt__ColorDescriptor *dst, tt__ColorDescriptor *src) (use soapcpp2 -Ed)
struct tt__ColorDescriptor
{
/// Size of ColorCluster array is 0..unbounded.
  $ int                                  __sizeColorCluster             0;
/// @note struct _tt__ColorDescriptor_ColorCluster operations:
/// - _tt__ColorDescriptor_ColorCluster* soap_new__tt__ColorDescriptor_ColorCluster(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tt__ColorDescriptor_ColorCluster(struct soap*, _tt__ColorDescriptor_ColorCluster*) default initialize members
/// - int soap_read__tt__ColorDescriptor_ColorCluster(struct soap*, _tt__ColorDescriptor_ColorCluster*) deserialize from a source
/// - int soap_write__tt__ColorDescriptor_ColorCluster(struct soap*, _tt__ColorDescriptor_ColorCluster*) serialize to a sink
/// - _tt__ColorDescriptor_ColorCluster* soap_dup__tt__ColorDescriptor_ColorCluster(struct soap*, _tt__ColorDescriptor_ColorCluster* dst, _tt__ColorDescriptor_ColorCluster *src) returns deep copy of _tt__ColorDescriptor_ColorCluster src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ColorDescriptor_ColorCluster(_tt__ColorDescriptor_ColorCluster*) deep deletes _tt__ColorDescriptor_ColorCluster data members, use only on dst after soap_dup__tt__ColorDescriptor_ColorCluster(NULL, _tt__ColorDescriptor_ColorCluster *dst, _tt__ColorDescriptor_ColorCluster *src) (use soapcpp2 -Ed)
    struct _tt__ColorDescriptor_ColorCluster
    {
/// Element "Color" of type "http://www.onvif.org/ver10/schema":Color.
    struct tt__Color*                    Color                          1;	///< Required element.
/// Element "Weight" of type xs:float.
    float*                               Weight                         0;	///< Optional element.
/// Element "Covariance" of type "http://www.onvif.org/ver10/schema":ColorCovariance.
    struct tt__ColorCovariance*          Covariance                     0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *ColorCluster                   0;	///< Multiple elements.
/// Element "Extension" of type xs:anyType.
    _XML                                 Extension                      0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Transformation is a complexType.
///
/// @note struct tt__Transformation operations:
/// - tt__Transformation* soap_new_tt__Transformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Transformation(struct soap*, tt__Transformation*) default initialize members
/// - int soap_read_tt__Transformation(struct soap*, tt__Transformation*) deserialize from a source
/// - int soap_write_tt__Transformation(struct soap*, tt__Transformation*) serialize to a sink
/// - tt__Transformation* soap_dup_tt__Transformation(struct soap*, tt__Transformation* dst, tt__Transformation *src) returns deep copy of tt__Transformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Transformation(tt__Transformation*) deep deletes tt__Transformation data members, use only on dst after soap_dup_tt__Transformation(NULL, tt__Transformation *dst, tt__Transformation *src) (use soapcpp2 -Ed)
struct tt__Transformation
{
/// Element "Translate" of type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   Translate                      0;	///< Optional element.
/// Element "Scale" of type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   Scale                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":TransformationExtension.
    struct tt__TransformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":TransformationExtension is a complexType.
///
/// @note struct tt__TransformationExtension operations:
/// - tt__TransformationExtension* soap_new_tt__TransformationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__TransformationExtension(struct soap*, tt__TransformationExtension*) default initialize members
/// - int soap_read_tt__TransformationExtension(struct soap*, tt__TransformationExtension*) deserialize from a source
/// - int soap_write_tt__TransformationExtension(struct soap*, tt__TransformationExtension*) serialize to a sink
/// - tt__TransformationExtension* soap_dup_tt__TransformationExtension(struct soap*, tt__TransformationExtension* dst, tt__TransformationExtension *src) returns deep copy of tt__TransformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TransformationExtension(tt__TransformationExtension*) deep deletes tt__TransformationExtension data members, use only on dst after soap_dup_tt__TransformationExtension(NULL, tt__TransformationExtension *dst, tt__TransformationExtension *src) (use soapcpp2 -Ed)
struct tt__TransformationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":GeoLocation is a complexType.
///
/// @note struct tt__GeoLocation operations:
/// - tt__GeoLocation* soap_new_tt__GeoLocation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__GeoLocation(struct soap*, tt__GeoLocation*) default initialize members
/// - int soap_read_tt__GeoLocation(struct soap*, tt__GeoLocation*) deserialize from a source
/// - int soap_write_tt__GeoLocation(struct soap*, tt__GeoLocation*) serialize to a sink
/// - tt__GeoLocation* soap_dup_tt__GeoLocation(struct soap*, tt__GeoLocation* dst, tt__GeoLocation *src) returns deep copy of tt__GeoLocation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__GeoLocation(tt__GeoLocation*) deep deletes tt__GeoLocation data members, use only on dst after soap_dup_tt__GeoLocation(NULL, tt__GeoLocation *dst, tt__GeoLocation *src) (use soapcpp2 -Ed)
struct tt__GeoLocation
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   East west location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "lon" of type xs:double.
  @ double*                              lon                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   North south location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "lat" of type xs:double.
  @ double*                              lat                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Hight in meters above sea level.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "elevation" of type xs:float.
  @ float*                               elevation                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":GeoOrientation is a complexType.
///
/// @note struct tt__GeoOrientation operations:
/// - tt__GeoOrientation* soap_new_tt__GeoOrientation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__GeoOrientation(struct soap*, tt__GeoOrientation*) default initialize members
/// - int soap_read_tt__GeoOrientation(struct soap*, tt__GeoOrientation*) deserialize from a source
/// - int soap_write_tt__GeoOrientation(struct soap*, tt__GeoOrientation*) serialize to a sink
/// - tt__GeoOrientation* soap_dup_tt__GeoOrientation(struct soap*, tt__GeoOrientation* dst, tt__GeoOrientation *src) returns deep copy of tt__GeoOrientation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__GeoOrientation(tt__GeoOrientation*) deep deletes tt__GeoOrientation data members, use only on dst after soap_dup_tt__GeoOrientation(NULL, tt__GeoOrientation *dst, tt__GeoOrientation *src) (use soapcpp2 -Ed)
struct tt__GeoOrientation
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Rotation around the x axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "roll" of type xs:float.
  @ float*                               roll                           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the y axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "pitch" of type xs:float.
  @ float*                               pitch                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the z axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "yaw" of type xs:float.
  @ float*                               yaw                            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":LocalLocation is a complexType.
///
/// @note struct tt__LocalLocation operations:
/// - tt__LocalLocation* soap_new_tt__LocalLocation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__LocalLocation(struct soap*, tt__LocalLocation*) default initialize members
/// - int soap_read_tt__LocalLocation(struct soap*, tt__LocalLocation*) deserialize from a source
/// - int soap_write_tt__LocalLocation(struct soap*, tt__LocalLocation*) serialize to a sink
/// - tt__LocalLocation* soap_dup_tt__LocalLocation(struct soap*, tt__LocalLocation* dst, tt__LocalLocation *src) returns deep copy of tt__LocalLocation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LocalLocation(tt__LocalLocation*) deep deletes tt__LocalLocation data members, use only on dst after soap_dup_tt__LocalLocation(NULL, tt__LocalLocation *dst, tt__LocalLocation *src) (use soapcpp2 -Ed)
struct tt__LocalLocation
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   East west location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "x" of type xs:float.
  @ float*                               x                              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   North south location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "y" of type xs:float.
  @ float*                               y                              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Offset in meters from the sea level.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "z" of type xs:float.
  @ float*                               z                              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":LocalOrientation is a complexType.
///
/// @note struct tt__LocalOrientation operations:
/// - tt__LocalOrientation* soap_new_tt__LocalOrientation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__LocalOrientation(struct soap*, tt__LocalOrientation*) default initialize members
/// - int soap_read_tt__LocalOrientation(struct soap*, tt__LocalOrientation*) deserialize from a source
/// - int soap_write_tt__LocalOrientation(struct soap*, tt__LocalOrientation*) serialize to a sink
/// - tt__LocalOrientation* soap_dup_tt__LocalOrientation(struct soap*, tt__LocalOrientation* dst, tt__LocalOrientation *src) returns deep copy of tt__LocalOrientation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LocalOrientation(tt__LocalOrientation*) deep deletes tt__LocalOrientation data members, use only on dst after soap_dup_tt__LocalOrientation(NULL, tt__LocalOrientation *dst, tt__LocalOrientation *src) (use soapcpp2 -Ed)
struct tt__LocalOrientation
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Rotation around the y axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "pan" of type xs:float.
  @ float*                               pan                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the z axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "tilt" of type xs:float.
  @ float*                               tilt                           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the x axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "roll" of type xs:float.
  @ float*                               roll                           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":LocationEntity is a complexType.
///
/// @note struct tt__LocationEntity operations:
/// - tt__LocationEntity* soap_new_tt__LocationEntity(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__LocationEntity(struct soap*, tt__LocationEntity*) default initialize members
/// - int soap_read_tt__LocationEntity(struct soap*, tt__LocationEntity*) deserialize from a source
/// - int soap_write_tt__LocationEntity(struct soap*, tt__LocationEntity*) serialize to a sink
/// - tt__LocationEntity* soap_dup_tt__LocationEntity(struct soap*, tt__LocationEntity* dst, tt__LocationEntity *src) returns deep copy of tt__LocationEntity src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LocationEntity(tt__LocationEntity*) deep deletes tt__LocationEntity data members, use only on dst after soap_dup_tt__LocationEntity(NULL, tt__LocationEntity *dst, tt__LocationEntity *src) (use soapcpp2 -Ed)
struct tt__LocationEntity
{
/// <PRE><BLOCKQUOTE>
///   Location on earth.
/// </BLOCKQUOTE></PRE>
///
/// Element "GeoLocation" of type "http://www.onvif.org/ver10/schema":GeoLocation.
    struct tt__GeoLocation*              GeoLocation                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Orientation relative to earth.
/// </BLOCKQUOTE></PRE>
///
/// Element "GeoOrientation" of type "http://www.onvif.org/ver10/schema":GeoOrientation.
    struct tt__GeoOrientation*           GeoOrientation                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indoor location offset.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalLocation" of type "http://www.onvif.org/ver10/schema":LocalLocation.
    struct tt__LocalLocation*            LocalLocation                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indoor orientation offset.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalOrientation" of type "http://www.onvif.org/ver10/schema":LocalOrientation.
    struct tt__LocalOrientation*         LocalOrientation               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Entity type the entry refers to, use a value from the tt:Entity enumeration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Entity" of type xs:string.
  @ char*                                Entity                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional entity token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   Token                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If this value is true the entity cannot be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Fixed" of type xs:boolean.
  @ enum xsd__boolean*                   Fixed                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional reference to the XAddr of another devices DeviceManagement service.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoSource" of type xs:anyURI.
  @ xsd__anyURI                          GeoSource                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If set the geo location is obtained internally.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AutoGeo" of type xs:boolean.
  @ enum xsd__boolean*                   AutoGeo                        0;	///< Optional attribute.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":StringItems
/// @brief "http://www.onvif.org/ver10/schema":StringItems is a complexType.
///
/// @note struct _tt__StringItems operations:
/// - _tt__StringItems* soap_new__tt__StringItems(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tt__StringItems(struct soap*, _tt__StringItems*) default initialize members
/// - int soap_read__tt__StringItems(struct soap*, _tt__StringItems*) deserialize from a source
/// - int soap_write__tt__StringItems(struct soap*, _tt__StringItems*) serialize to a sink
/// - _tt__StringItems* soap_dup__tt__StringItems(struct soap*, _tt__StringItems* dst, _tt__StringItems *src) returns deep copy of _tt__StringItems src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__StringItems(_tt__StringItems*) deep deletes _tt__StringItems data members, use only on dst after soap_dup__tt__StringItems(NULL, _tt__StringItems *dst, _tt__StringItems *src) (use soapcpp2 -Ed)
struct _tt__StringItems
{
/// Size of array of char** is 1..unbounded.
  $ int                                  __sizeItem                     1;
/// Array char** of size 1..unbounded.
    char**                               Item                           1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Message
/// @brief "http://www.onvif.org/ver10/schema":Message is a complexType.
///
/// @note struct _tt__Message operations:
/// - _tt__Message* soap_new__tt__Message(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tt__Message(struct soap*, _tt__Message*) default initialize members
/// - int soap_read__tt__Message(struct soap*, _tt__Message*) deserialize from a source
/// - int soap_write__tt__Message(struct soap*, _tt__Message*) serialize to a sink
/// - _tt__Message* soap_dup__tt__Message(struct soap*, _tt__Message* dst, _tt__Message *src) returns deep copy of _tt__Message src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__Message(_tt__Message*) deep deletes _tt__Message data members, use only on dst after soap_dup__tt__Message(NULL, _tt__Message *dst, _tt__Message *src) (use soapcpp2 -Ed)
struct _tt__Message
{
/// <PRE><BLOCKQUOTE>
///   Token value pairs that triggered this message. Typically only one item is present.
/// </BLOCKQUOTE></PRE>
///
/// Element "Source" of type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Source                         0;	///< Optional element.
/// Element "Key" of type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Key                            0;	///< Optional element.
/// Element "Data" of type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Data                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MessageExtension.
    struct tt__MessageExtension*         Extension                      0;	///< Optional element.
/// Attribute "UtcTime" of type xs:dateTime.
  @ time_t                               UtcTime                        1;	///< Required attribute.
/// Attribute "PropertyOperation" of type "http://www.onvif.org/ver10/schema":PropertyOperation.
  @ enum tt__PropertyOperation*          PropertyOperation              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType.
///
/// @note struct wsnt__QueryExpressionType operations:
/// - wsnt__QueryExpressionType* soap_new_wsnt__QueryExpressionType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__QueryExpressionType(struct soap*, wsnt__QueryExpressionType*) default initialize members
/// - int soap_read_wsnt__QueryExpressionType(struct soap*, wsnt__QueryExpressionType*) deserialize from a source
/// - int soap_write_wsnt__QueryExpressionType(struct soap*, wsnt__QueryExpressionType*) serialize to a sink
/// - wsnt__QueryExpressionType* soap_dup_wsnt__QueryExpressionType(struct soap*, wsnt__QueryExpressionType* dst, wsnt__QueryExpressionType *src) returns deep copy of wsnt__QueryExpressionType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__QueryExpressionType(wsnt__QueryExpressionType*) deep deletes wsnt__QueryExpressionType data members, use only on dst after soap_dup_wsnt__QueryExpressionType(NULL, wsnt__QueryExpressionType *dst, wsnt__QueryExpressionType *src) (use soapcpp2 -Ed)
struct wsnt__QueryExpressionType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType.
///
/// @note struct wsnt__TopicExpressionType operations:
/// - wsnt__TopicExpressionType* soap_new_wsnt__TopicExpressionType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType*) default initialize members
/// - int soap_read_wsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType*) deserialize from a source
/// - int soap_write_wsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType*) serialize to a sink
/// - wsnt__TopicExpressionType* soap_dup_wsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType* dst, wsnt__TopicExpressionType *src) returns deep copy of wsnt__TopicExpressionType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__TopicExpressionType(wsnt__TopicExpressionType*) deep deletes wsnt__TopicExpressionType data members, use only on dst after soap_dup_wsnt__TopicExpressionType(NULL, wsnt__TopicExpressionType *dst, wsnt__TopicExpressionType *src) (use soapcpp2 -Ed)
struct wsnt__TopicExpressionType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":EventFilter as struct tt__EventFilter
///
/// @note struct wsnt__FilterType operations:
/// - wsnt__FilterType* soap_new_wsnt__FilterType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__FilterType(struct soap*, wsnt__FilterType*) default initialize members
/// - int soap_read_wsnt__FilterType(struct soap*, wsnt__FilterType*) deserialize from a source
/// - int soap_write_wsnt__FilterType(struct soap*, wsnt__FilterType*) serialize to a sink
/// - wsnt__FilterType* soap_dup_wsnt__FilterType(struct soap*, wsnt__FilterType* dst, wsnt__FilterType *src) returns deep copy of wsnt__FilterType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__FilterType(wsnt__FilterType*) deep deletes wsnt__FilterType data members, use only on dst after soap_dup_wsnt__FilterType(NULL, wsnt__FilterType *dst, wsnt__FilterType *src) (use soapcpp2 -Ed)
struct wsnt__FilterType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
///
/// @note struct wsnt__SubscriptionPolicyType operations:
/// - wsnt__SubscriptionPolicyType* soap_new_wsnt__SubscriptionPolicyType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType*) default initialize members
/// - int soap_read_wsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType*) deserialize from a source
/// - int soap_write_wsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType*) serialize to a sink
/// - wsnt__SubscriptionPolicyType* soap_dup_wsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType* dst, wsnt__SubscriptionPolicyType *src) returns deep copy of wsnt__SubscriptionPolicyType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__SubscriptionPolicyType(wsnt__SubscriptionPolicyType*) deep deletes wsnt__SubscriptionPolicyType data members, use only on dst after soap_dup_wsnt__SubscriptionPolicyType(NULL, wsnt__SubscriptionPolicyType *dst, wsnt__SubscriptionPolicyType *src) (use soapcpp2 -Ed)
struct wsnt__SubscriptionPolicyType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
///
/// @note struct wsnt__NotificationMessageHolderType operations:
/// - wsnt__NotificationMessageHolderType* soap_new_wsnt__NotificationMessageHolderType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType*) default initialize members
/// - int soap_read_wsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType*) deserialize from a source
/// - int soap_write_wsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType*) serialize to a sink
/// - wsnt__NotificationMessageHolderType* soap_dup_wsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType* dst, wsnt__NotificationMessageHolderType *src) returns deep copy of wsnt__NotificationMessageHolderType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__NotificationMessageHolderType(wsnt__NotificationMessageHolderType*) deep deletes wsnt__NotificationMessageHolderType data members, use only on dst after soap_dup_wsnt__NotificationMessageHolderType(NULL, wsnt__NotificationMessageHolderType *dst, wsnt__NotificationMessageHolderType *src) (use soapcpp2 -Ed)
struct wsnt__NotificationMessageHolderType
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"Topic.
    struct wsnt__TopicExpressionType*    Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"ProducerReference.
    wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
/// @note struct _wsnt__NotificationMessageHolderType_Message operations:
/// - _wsnt__NotificationMessageHolderType_Message* soap_new__wsnt__NotificationMessageHolderType_Message(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotificationMessageHolderType_Message(struct soap*, _wsnt__NotificationMessageHolderType_Message*) default initialize members
/// - int soap_read__wsnt__NotificationMessageHolderType_Message(struct soap*, _wsnt__NotificationMessageHolderType_Message*) deserialize from a source
/// - int soap_write__wsnt__NotificationMessageHolderType_Message(struct soap*, _wsnt__NotificationMessageHolderType_Message*) serialize to a sink
/// - _wsnt__NotificationMessageHolderType_Message* soap_dup__wsnt__NotificationMessageHolderType_Message(struct soap*, _wsnt__NotificationMessageHolderType_Message* dst, _wsnt__NotificationMessageHolderType_Message *src) returns deep copy of _wsnt__NotificationMessageHolderType_Message src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotificationMessageHolderType_Message(_wsnt__NotificationMessageHolderType_Message*) deep deletes _wsnt__NotificationMessageHolderType_Message data members, use only on dst after soap_dup__wsnt__NotificationMessageHolderType_Message(NULL, _wsnt__NotificationMessageHolderType_Message *dst, _wsnt__NotificationMessageHolderType_Message *src) (use soapcpp2 -Ed)
    struct _wsnt__NotificationMessageHolderType_Message
    {
/// <any namespace="##any" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                    Message                        1;	///< Required element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is a complexType.
///
/// @note struct _wsnt__NotificationProducerRP operations:
/// - _wsnt__NotificationProducerRP* soap_new__wsnt__NotificationProducerRP(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*) default initialize members
/// - int soap_read__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*) deserialize from a source
/// - int soap_write__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*) serialize to a sink
/// - _wsnt__NotificationProducerRP* soap_dup__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP* dst, _wsnt__NotificationProducerRP *src) returns deep copy of _wsnt__NotificationProducerRP src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotificationProducerRP(_wsnt__NotificationProducerRP*) deep deletes _wsnt__NotificationProducerRP data members, use only on dst after soap_dup__wsnt__NotificationProducerRP(NULL, _wsnt__NotificationProducerRP *dst, _wsnt__NotificationProducerRP *src) (use soapcpp2 -Ed)
struct _wsnt__NotificationProducerRP
{
/// Size of the dynamic array of values of type struct wsnt__TopicExpressionType* is 0..unbounded.
  $ int                                  __sizeTopicExpression          0;
/// Array struct wsnt__TopicExpressionType* of size 0..unbounded.
    struct wsnt__TopicExpressionType*    TopicExpression_               0;	///< Multiple elements.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"FixedTopicSet.
    enum xsd__boolean*                   FixedTopicSet                  0 = xsd__boolean__true_;	///< Optional element with default value="true".
/// Size of the dynamic array of values of type xsd__anyURI* is 0..unbounded.
  $ int                                  __sizeTopicExpressionDialect   0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         TopicExpressionDialect_        0;	///< Multiple elements.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"TopicSet.
    struct wstop__TopicSetType*          wstop__TopicSet                0;	///< Optional element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
///
/// @note struct _wsnt__SubscriptionManagerRP operations:
/// - _wsnt__SubscriptionManagerRP* soap_new__wsnt__SubscriptionManagerRP(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*) default initialize members
/// - int soap_read__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*) deserialize from a source
/// - int soap_write__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*) serialize to a sink
/// - _wsnt__SubscriptionManagerRP* soap_dup__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP* dst, _wsnt__SubscriptionManagerRP *src) returns deep copy of _wsnt__SubscriptionManagerRP src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscriptionManagerRP(_wsnt__SubscriptionManagerRP*) deep deletes _wsnt__SubscriptionManagerRP data members, use only on dst after soap_dup__wsnt__SubscriptionManagerRP(NULL, _wsnt__SubscriptionManagerRP *dst, _wsnt__SubscriptionManagerRP *src) (use soapcpp2 -Ed)
struct _wsnt__SubscriptionManagerRP
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"ConsumerReference.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"Filter.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"SubscriptionPolicy.
    struct wsnt__SubscriptionPolicyType*  SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"CreationTime.
    time_t*                              CreationTime                   0;	///< Optional element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify
/// @brief "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
///
/// @note struct _wsnt__Notify operations:
/// - _wsnt__Notify* soap_new__wsnt__Notify(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Notify(struct soap*, _wsnt__Notify*) default initialize members
/// - int soap_read__wsnt__Notify(struct soap*, _wsnt__Notify*) deserialize from a source
/// - int soap_write__wsnt__Notify(struct soap*, _wsnt__Notify*) serialize to a sink
/// - _wsnt__Notify* soap_dup__wsnt__Notify(struct soap*, _wsnt__Notify* dst, _wsnt__Notify *src) returns deep copy of _wsnt__Notify src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Notify(_wsnt__Notify*) deep deletes _wsnt__Notify data members, use only on dst after soap_dup__wsnt__Notify(NULL, _wsnt__Notify *dst, _wsnt__Notify *src) (use soapcpp2 -Ed)
struct _wsnt__Notify
{
/// Size of the dynamic array of values of type struct wsnt__NotificationMessageHolderType* is 1..unbounded.
  $ int                                  __sizeNotificationMessage      1;
/// Array struct wsnt__NotificationMessageHolderType* of size 1..unbounded.
    struct wsnt__NotificationMessageHolderType*  NotificationMessage_           1;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw
/// @brief "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
///
/// @note struct _wsnt__UseRaw operations:
/// - _wsnt__UseRaw* soap_new__wsnt__UseRaw(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*) default initialize members
/// - int soap_read__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*) deserialize from a source
/// - int soap_write__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*) serialize to a sink
/// - _wsnt__UseRaw* soap_dup__wsnt__UseRaw(struct soap*, _wsnt__UseRaw* dst, _wsnt__UseRaw *src) returns deep copy of _wsnt__UseRaw src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UseRaw(_wsnt__UseRaw*) deep deletes _wsnt__UseRaw data members, use only on dst after soap_dup__wsnt__UseRaw(NULL, _wsnt__UseRaw *dst, _wsnt__UseRaw *src) (use soapcpp2 -Ed)
struct _wsnt__UseRaw
{
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
///
/// @note struct _wsnt__Subscribe operations:
/// - _wsnt__Subscribe* soap_new__wsnt__Subscribe(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*) default initialize members
/// - int soap_read__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*) deserialize from a source
/// - int soap_write__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*) serialize to a sink
/// - _wsnt__Subscribe* soap_dup__wsnt__Subscribe(struct soap*, _wsnt__Subscribe* dst, _wsnt__Subscribe *src) returns deep copy of _wsnt__Subscribe src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Subscribe(_wsnt__Subscribe*) deep deletes _wsnt__Subscribe data members, use only on dst after soap_dup__wsnt__Subscribe(NULL, _wsnt__Subscribe *dst, _wsnt__Subscribe *src) (use soapcpp2 -Ed)
struct _wsnt__Subscribe
{
/// Element "ConsumerReference" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element "Filter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// Element "InitialTerminationTime" of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     InitialTerminationTime         0;	///< Optional element.
/// @note struct _wsnt__Subscribe_SubscriptionPolicy operations:
/// - _wsnt__Subscribe_SubscriptionPolicy* soap_new__wsnt__Subscribe_SubscriptionPolicy(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy*) default initialize members
/// - int soap_read__wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy*) deserialize from a source
/// - int soap_write__wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy*) serialize to a sink
/// - _wsnt__Subscribe_SubscriptionPolicy* soap_dup__wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy* dst, _wsnt__Subscribe_SubscriptionPolicy *src) returns deep copy of _wsnt__Subscribe_SubscriptionPolicy src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Subscribe_SubscriptionPolicy(_wsnt__Subscribe_SubscriptionPolicy*) deep deletes _wsnt__Subscribe_SubscriptionPolicy data members, use only on dst after soap_dup__wsnt__Subscribe_SubscriptionPolicy(NULL, _wsnt__Subscribe_SubscriptionPolicy *dst, _wsnt__Subscribe_SubscriptionPolicy *src) (use soapcpp2 -Ed)
    struct _wsnt__Subscribe_SubscriptionPolicy
    {
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
///
/// @note struct _wsnt__SubscribeResponse operations:
/// - _wsnt__SubscribeResponse* soap_new__wsnt__SubscribeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*) default initialize members
/// - int soap_read__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*) deserialize from a source
/// - int soap_write__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*) serialize to a sink
/// - _wsnt__SubscribeResponse* soap_dup__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse* dst, _wsnt__SubscribeResponse *src) returns deep copy of _wsnt__SubscribeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeResponse(_wsnt__SubscribeResponse*) deep deletes _wsnt__SubscribeResponse data members, use only on dst after soap_dup__wsnt__SubscribeResponse(NULL, _wsnt__SubscribeResponse *dst, _wsnt__SubscribeResponse *src) (use soapcpp2 -Ed)
struct _wsnt__SubscribeResponse
{
/// Element "SubscriptionReference" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"TerminationTime.
    time_t*                              TerminationTime                0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
///
/// @note struct _wsnt__GetCurrentMessage operations:
/// - _wsnt__GetCurrentMessage* soap_new__wsnt__GetCurrentMessage(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*) default initialize members
/// - int soap_read__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*) deserialize from a source
/// - int soap_write__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*) serialize to a sink
/// - _wsnt__GetCurrentMessage* soap_dup__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage* dst, _wsnt__GetCurrentMessage *src) returns deep copy of _wsnt__GetCurrentMessage src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetCurrentMessage(_wsnt__GetCurrentMessage*) deep deletes _wsnt__GetCurrentMessage data members, use only on dst after soap_dup__wsnt__GetCurrentMessage(NULL, _wsnt__GetCurrentMessage *dst, _wsnt__GetCurrentMessage *src) (use soapcpp2 -Ed)
struct _wsnt__GetCurrentMessage
{
/// Element "Topic" of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    struct wsnt__TopicExpressionType*    Topic                          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
///
/// @note struct _wsnt__GetCurrentMessageResponse operations:
/// - _wsnt__GetCurrentMessageResponse* soap_new__wsnt__GetCurrentMessageResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*) default initialize members
/// - int soap_read__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*) deserialize from a source
/// - int soap_write__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*) serialize to a sink
/// - _wsnt__GetCurrentMessageResponse* soap_dup__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse* dst, _wsnt__GetCurrentMessageResponse *src) returns deep copy of _wsnt__GetCurrentMessageResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetCurrentMessageResponse(_wsnt__GetCurrentMessageResponse*) deep deletes _wsnt__GetCurrentMessageResponse data members, use only on dst after soap_dup__wsnt__GetCurrentMessageResponse(NULL, _wsnt__GetCurrentMessageResponse *dst, _wsnt__GetCurrentMessageResponse *src) (use soapcpp2 -Ed)
struct _wsnt__GetCurrentMessageResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
///
/// @note struct _wsnt__GetMessages operations:
/// - _wsnt__GetMessages* soap_new__wsnt__GetMessages(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*) default initialize members
/// - int soap_read__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*) deserialize from a source
/// - int soap_write__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*) serialize to a sink
/// - _wsnt__GetMessages* soap_dup__wsnt__GetMessages(struct soap*, _wsnt__GetMessages* dst, _wsnt__GetMessages *src) returns deep copy of _wsnt__GetMessages src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetMessages(_wsnt__GetMessages*) deep deletes _wsnt__GetMessages data members, use only on dst after soap_dup__wsnt__GetMessages(NULL, _wsnt__GetMessages *dst, _wsnt__GetMessages *src) (use soapcpp2 -Ed)
struct _wsnt__GetMessages
{
/// Element "MaximumNumber" of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              MaximumNumber                  0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
///
/// @note struct _wsnt__GetMessagesResponse operations:
/// - _wsnt__GetMessagesResponse* soap_new__wsnt__GetMessagesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*) default initialize members
/// - int soap_read__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*) deserialize from a source
/// - int soap_write__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*) serialize to a sink
/// - _wsnt__GetMessagesResponse* soap_dup__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse* dst, _wsnt__GetMessagesResponse *src) returns deep copy of _wsnt__GetMessagesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetMessagesResponse(_wsnt__GetMessagesResponse*) deep deletes _wsnt__GetMessagesResponse data members, use only on dst after soap_dup__wsnt__GetMessagesResponse(NULL, _wsnt__GetMessagesResponse *dst, _wsnt__GetMessagesResponse *src) (use soapcpp2 -Ed)
struct _wsnt__GetMessagesResponse
{
/// Size of the dynamic array of values of type struct wsnt__NotificationMessageHolderType* is 0..unbounded.
  $ int                                  __sizeNotificationMessage      0;
/// Array struct wsnt__NotificationMessageHolderType* of size 0..unbounded.
    struct wsnt__NotificationMessageHolderType*  NotificationMessage_           0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
///
/// @note struct _wsnt__DestroyPullPoint operations:
/// - _wsnt__DestroyPullPoint* soap_new__wsnt__DestroyPullPoint(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*) default initialize members
/// - int soap_read__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*) deserialize from a source
/// - int soap_write__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*) serialize to a sink
/// - _wsnt__DestroyPullPoint* soap_dup__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint* dst, _wsnt__DestroyPullPoint *src) returns deep copy of _wsnt__DestroyPullPoint src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__DestroyPullPoint(_wsnt__DestroyPullPoint*) deep deletes _wsnt__DestroyPullPoint data members, use only on dst after soap_dup__wsnt__DestroyPullPoint(NULL, _wsnt__DestroyPullPoint *dst, _wsnt__DestroyPullPoint *src) (use soapcpp2 -Ed)
struct _wsnt__DestroyPullPoint
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
///
/// @note struct _wsnt__DestroyPullPointResponse operations:
/// - _wsnt__DestroyPullPointResponse* soap_new__wsnt__DestroyPullPointResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*) default initialize members
/// - int soap_read__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*) deserialize from a source
/// - int soap_write__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*) serialize to a sink
/// - _wsnt__DestroyPullPointResponse* soap_dup__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse* dst, _wsnt__DestroyPullPointResponse *src) returns deep copy of _wsnt__DestroyPullPointResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__DestroyPullPointResponse(_wsnt__DestroyPullPointResponse*) deep deletes _wsnt__DestroyPullPointResponse data members, use only on dst after soap_dup__wsnt__DestroyPullPointResponse(NULL, _wsnt__DestroyPullPointResponse *dst, _wsnt__DestroyPullPointResponse *src) (use soapcpp2 -Ed)
struct _wsnt__DestroyPullPointResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
///
/// @note struct _wsnt__CreatePullPoint operations:
/// - _wsnt__CreatePullPoint* soap_new__wsnt__CreatePullPoint(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*) default initialize members
/// - int soap_read__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*) deserialize from a source
/// - int soap_write__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*) serialize to a sink
/// - _wsnt__CreatePullPoint* soap_dup__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint* dst, _wsnt__CreatePullPoint *src) returns deep copy of _wsnt__CreatePullPoint src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__CreatePullPoint(_wsnt__CreatePullPoint*) deep deletes _wsnt__CreatePullPoint data members, use only on dst after soap_dup__wsnt__CreatePullPoint(NULL, _wsnt__CreatePullPoint *dst, _wsnt__CreatePullPoint *src) (use soapcpp2 -Ed)
struct _wsnt__CreatePullPoint
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
///
/// @note struct _wsnt__CreatePullPointResponse operations:
/// - _wsnt__CreatePullPointResponse* soap_new__wsnt__CreatePullPointResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*) default initialize members
/// - int soap_read__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*) deserialize from a source
/// - int soap_write__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*) serialize to a sink
/// - _wsnt__CreatePullPointResponse* soap_dup__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse* dst, _wsnt__CreatePullPointResponse *src) returns deep copy of _wsnt__CreatePullPointResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__CreatePullPointResponse(_wsnt__CreatePullPointResponse*) deep deletes _wsnt__CreatePullPointResponse data members, use only on dst after soap_dup__wsnt__CreatePullPointResponse(NULL, _wsnt__CreatePullPointResponse *dst, _wsnt__CreatePullPointResponse *src) (use soapcpp2 -Ed)
struct _wsnt__CreatePullPointResponse
{
/// Element "PullPoint" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          PullPoint                      1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew
/// @brief "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
///
/// @note struct _wsnt__Renew operations:
/// - _wsnt__Renew* soap_new__wsnt__Renew(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Renew(struct soap*, _wsnt__Renew*) default initialize members
/// - int soap_read__wsnt__Renew(struct soap*, _wsnt__Renew*) deserialize from a source
/// - int soap_write__wsnt__Renew(struct soap*, _wsnt__Renew*) serialize to a sink
/// - _wsnt__Renew* soap_dup__wsnt__Renew(struct soap*, _wsnt__Renew* dst, _wsnt__Renew *src) returns deep copy of _wsnt__Renew src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Renew(_wsnt__Renew*) deep deletes _wsnt__Renew data members, use only on dst after soap_dup__wsnt__Renew(NULL, _wsnt__Renew *dst, _wsnt__Renew *src) (use soapcpp2 -Ed)
struct _wsnt__Renew
{
/// Element "TerminationTime" of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     TerminationTime                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
///
/// @note struct _wsnt__RenewResponse operations:
/// - _wsnt__RenewResponse* soap_new__wsnt__RenewResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*) default initialize members
/// - int soap_read__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*) deserialize from a source
/// - int soap_write__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*) serialize to a sink
/// - _wsnt__RenewResponse* soap_dup__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse* dst, _wsnt__RenewResponse *src) returns deep copy of _wsnt__RenewResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__RenewResponse(_wsnt__RenewResponse*) deep deletes _wsnt__RenewResponse data members, use only on dst after soap_dup__wsnt__RenewResponse(NULL, _wsnt__RenewResponse *dst, _wsnt__RenewResponse *src) (use soapcpp2 -Ed)
struct _wsnt__RenewResponse
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"TerminationTime.
    time_t                               TerminationTime                1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
///
/// @note struct _wsnt__Unsubscribe operations:
/// - _wsnt__Unsubscribe* soap_new__wsnt__Unsubscribe(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*) default initialize members
/// - int soap_read__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*) deserialize from a source
/// - int soap_write__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*) serialize to a sink
/// - _wsnt__Unsubscribe* soap_dup__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe* dst, _wsnt__Unsubscribe *src) returns deep copy of _wsnt__Unsubscribe src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Unsubscribe(_wsnt__Unsubscribe*) deep deletes _wsnt__Unsubscribe data members, use only on dst after soap_dup__wsnt__Unsubscribe(NULL, _wsnt__Unsubscribe *dst, _wsnt__Unsubscribe *src) (use soapcpp2 -Ed)
struct _wsnt__Unsubscribe
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
///
/// @note struct _wsnt__UnsubscribeResponse operations:
/// - _wsnt__UnsubscribeResponse* soap_new__wsnt__UnsubscribeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*) default initialize members
/// - int soap_read__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*) deserialize from a source
/// - int soap_write__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*) serialize to a sink
/// - _wsnt__UnsubscribeResponse* soap_dup__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse* dst, _wsnt__UnsubscribeResponse *src) returns deep copy of _wsnt__UnsubscribeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsubscribeResponse(_wsnt__UnsubscribeResponse*) deep deletes _wsnt__UnsubscribeResponse data members, use only on dst after soap_dup__wsnt__UnsubscribeResponse(NULL, _wsnt__UnsubscribeResponse *dst, _wsnt__UnsubscribeResponse *src) (use soapcpp2 -Ed)
struct _wsnt__UnsubscribeResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
///
/// @note struct _wsnt__PauseSubscription operations:
/// - _wsnt__PauseSubscription* soap_new__wsnt__PauseSubscription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*) default initialize members
/// - int soap_read__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*) deserialize from a source
/// - int soap_write__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*) serialize to a sink
/// - _wsnt__PauseSubscription* soap_dup__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription* dst, _wsnt__PauseSubscription *src) returns deep copy of _wsnt__PauseSubscription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseSubscription(_wsnt__PauseSubscription*) deep deletes _wsnt__PauseSubscription data members, use only on dst after soap_dup__wsnt__PauseSubscription(NULL, _wsnt__PauseSubscription *dst, _wsnt__PauseSubscription *src) (use soapcpp2 -Ed)
struct _wsnt__PauseSubscription
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
///
/// @note struct _wsnt__PauseSubscriptionResponse operations:
/// - _wsnt__PauseSubscriptionResponse* soap_new__wsnt__PauseSubscriptionResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*) default initialize members
/// - int soap_read__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*) deserialize from a source
/// - int soap_write__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*) serialize to a sink
/// - _wsnt__PauseSubscriptionResponse* soap_dup__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse* dst, _wsnt__PauseSubscriptionResponse *src) returns deep copy of _wsnt__PauseSubscriptionResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseSubscriptionResponse(_wsnt__PauseSubscriptionResponse*) deep deletes _wsnt__PauseSubscriptionResponse data members, use only on dst after soap_dup__wsnt__PauseSubscriptionResponse(NULL, _wsnt__PauseSubscriptionResponse *dst, _wsnt__PauseSubscriptionResponse *src) (use soapcpp2 -Ed)
struct _wsnt__PauseSubscriptionResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
///
/// @note struct _wsnt__ResumeSubscription operations:
/// - _wsnt__ResumeSubscription* soap_new__wsnt__ResumeSubscription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*) default initialize members
/// - int soap_read__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*) deserialize from a source
/// - int soap_write__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*) serialize to a sink
/// - _wsnt__ResumeSubscription* soap_dup__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription* dst, _wsnt__ResumeSubscription *src) returns deep copy of _wsnt__ResumeSubscription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeSubscription(_wsnt__ResumeSubscription*) deep deletes _wsnt__ResumeSubscription data members, use only on dst after soap_dup__wsnt__ResumeSubscription(NULL, _wsnt__ResumeSubscription *dst, _wsnt__ResumeSubscription *src) (use soapcpp2 -Ed)
struct _wsnt__ResumeSubscription
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
///
/// @note struct _wsnt__ResumeSubscriptionResponse operations:
/// - _wsnt__ResumeSubscriptionResponse* soap_new__wsnt__ResumeSubscriptionResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*) default initialize members
/// - int soap_read__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*) deserialize from a source
/// - int soap_write__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*) serialize to a sink
/// - _wsnt__ResumeSubscriptionResponse* soap_dup__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse* dst, _wsnt__ResumeSubscriptionResponse *src) returns deep copy of _wsnt__ResumeSubscriptionResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeSubscriptionResponse(_wsnt__ResumeSubscriptionResponse*) deep deletes _wsnt__ResumeSubscriptionResponse data members, use only on dst after soap_dup__wsnt__ResumeSubscriptionResponse(NULL, _wsnt__ResumeSubscriptionResponse *dst, _wsnt__ResumeSubscriptionResponse *src) (use soapcpp2 -Ed)
struct _wsnt__ResumeSubscriptionResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
///
/// This type is extended by:
/// - "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType as struct wsrfr__ResourceUnknownFaultType
/// - "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType as struct wsrfr__ResourceUnavailableFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType as struct wsnt__SubscribeCreationFailedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType as struct wsnt__InvalidFilterFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType as struct wsnt__TopicExpressionDialectUnknownFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType as struct wsnt__InvalidTopicExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType as struct wsnt__TopicNotSupportedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType as struct wsnt__MultipleTopicsSpecifiedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType as struct wsnt__InvalidProducerPropertiesExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType as struct wsnt__InvalidMessageContentExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType as struct wsnt__UnrecognizedPolicyRequestFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType as struct wsnt__UnsupportedPolicyRequestFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType as struct wsnt__NotifyMessageNotSupportedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType as struct wsnt__UnacceptableInitialTerminationTimeFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType as struct wsnt__NoCurrentMessageOnTopicFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType as struct wsnt__UnableToGetMessagesFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType as struct wsnt__UnableToDestroyPullPointFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType as struct wsnt__UnableToCreatePullPointFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType as struct wsnt__UnacceptableTerminationTimeFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType as struct wsnt__UnableToDestroySubscriptionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType as struct wsnt__PauseFailedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType as struct wsnt__ResumeFailedFaultType
///
/// @note struct wsrfbf__BaseFaultType operations:
/// - wsrfbf__BaseFaultType* soap_new_wsrfbf__BaseFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsrfbf__BaseFaultType(struct soap*, wsrfbf__BaseFaultType*) default initialize members
/// - int soap_read_wsrfbf__BaseFaultType(struct soap*, wsrfbf__BaseFaultType*) deserialize from a source
/// - int soap_write_wsrfbf__BaseFaultType(struct soap*, wsrfbf__BaseFaultType*) serialize to a sink
/// - wsrfbf__BaseFaultType* soap_dup_wsrfbf__BaseFaultType(struct soap*, wsrfbf__BaseFaultType* dst, wsrfbf__BaseFaultType *src) returns deep copy of wsrfbf__BaseFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsrfbf__BaseFaultType(wsrfbf__BaseFaultType*) deep deletes wsrfbf__BaseFaultType data members, use only on dst after soap_dup_wsrfbf__BaseFaultType(NULL, wsrfbf__BaseFaultType *dst, wsrfbf__BaseFaultType *src) (use soapcpp2 -Ed)
struct wsrfbf__BaseFaultType
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// @note struct _wsrfbf__BaseFaultType_ErrorCode operations:
/// - _wsrfbf__BaseFaultType_ErrorCode* soap_new__wsrfbf__BaseFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode*) serialize to a sink
/// - _wsrfbf__BaseFaultType_ErrorCode* soap_dup__wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode* dst, _wsrfbf__BaseFaultType_ErrorCode *src) returns deep copy of _wsrfbf__BaseFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfbf__BaseFaultType_ErrorCode(_wsrfbf__BaseFaultType_ErrorCode*) deep deletes _wsrfbf__BaseFaultType_ErrorCode data members, use only on dst after soap_dup__wsrfbf__BaseFaultType_ErrorCode(NULL, _wsrfbf__BaseFaultType_ErrorCode *dst, _wsrfbf__BaseFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsrfbf__BaseFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsrfbf__BaseFaultType_Description operations:
/// - _wsrfbf__BaseFaultType_Description* soap_new__wsrfbf__BaseFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfbf__BaseFaultType_Description(struct soap*, _wsrfbf__BaseFaultType_Description*) default initialize members
/// - int soap_read__wsrfbf__BaseFaultType_Description(struct soap*, _wsrfbf__BaseFaultType_Description*) deserialize from a source
/// - int soap_write__wsrfbf__BaseFaultType_Description(struct soap*, _wsrfbf__BaseFaultType_Description*) serialize to a sink
/// - _wsrfbf__BaseFaultType_Description* soap_dup__wsrfbf__BaseFaultType_Description(struct soap*, _wsrfbf__BaseFaultType_Description* dst, _wsrfbf__BaseFaultType_Description *src) returns deep copy of _wsrfbf__BaseFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfbf__BaseFaultType_Description(_wsrfbf__BaseFaultType_Description*) deep deletes _wsrfbf__BaseFaultType_Description data members, use only on dst after soap_dup__wsrfbf__BaseFaultType_Description(NULL, _wsrfbf__BaseFaultType_Description *dst, _wsrfbf__BaseFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsrfbf__BaseFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;	///< Multiple elements.
/// @note struct _wsrfbf__BaseFaultType_FaultCause operations:
/// - _wsrfbf__BaseFaultType_FaultCause* soap_new__wsrfbf__BaseFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause*) default initialize members
/// - int soap_read__wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause*) serialize to a sink
/// - _wsrfbf__BaseFaultType_FaultCause* soap_dup__wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause* dst, _wsrfbf__BaseFaultType_FaultCause *src) returns deep copy of _wsrfbf__BaseFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfbf__BaseFaultType_FaultCause(_wsrfbf__BaseFaultType_FaultCause*) deep deletes _wsrfbf__BaseFaultType_FaultCause data members, use only on dst after soap_dup__wsrfbf__BaseFaultType_FaultCause(NULL, _wsrfbf__BaseFaultType_FaultCause *dst, _wsrfbf__BaseFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsrfbf__BaseFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":Documentation is a complexType.
///
/// @note struct wstop__Documentation operations:
/// - wstop__Documentation* soap_new_wstop__Documentation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__Documentation(struct soap*, wstop__Documentation*) default initialize members
/// - int soap_read_wstop__Documentation(struct soap*, wstop__Documentation*) deserialize from a source
/// - int soap_write_wstop__Documentation(struct soap*, wstop__Documentation*) serialize to a sink
/// - wstop__Documentation* soap_dup_wstop__Documentation(struct soap*, wstop__Documentation* dst, wstop__Documentation *src) returns deep copy of wstop__Documentation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__Documentation(wstop__Documentation*) deep deletes wstop__Documentation data members, use only on dst after soap_dup_wstop__Documentation(NULL, wstop__Documentation *dst, wstop__Documentation *src) (use soapcpp2 -Ed)
struct wstop__Documentation
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is an abstract complexType.
///
/// This type is extended by:
/// - "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType as struct wstop__TopicNamespaceType
/// - "http://docs.oasis-open.org/wsn/t-1":TopicType as struct wstop__TopicType
/// - "http://docs.oasis-open.org/wsn/t-1":TopicSetType as struct wstop__TopicSetType
///
/// @note struct wstop__ExtensibleDocumented operations:
/// - wstop__ExtensibleDocumented* soap_new_wstop__ExtensibleDocumented(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__ExtensibleDocumented(struct soap*, wstop__ExtensibleDocumented*) default initialize members
/// - int soap_read_wstop__ExtensibleDocumented(struct soap*, wstop__ExtensibleDocumented*) deserialize from a source
/// - int soap_write_wstop__ExtensibleDocumented(struct soap*, wstop__ExtensibleDocumented*) serialize to a sink
/// - wstop__ExtensibleDocumented* soap_dup_wstop__ExtensibleDocumented(struct soap*, wstop__ExtensibleDocumented* dst, wstop__ExtensibleDocumented *src) returns deep copy of wstop__ExtensibleDocumented src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__ExtensibleDocumented(wstop__ExtensibleDocumented*) deep deletes wstop__ExtensibleDocumented data members, use only on dst after soap_dup_wstop__ExtensibleDocumented(NULL, wstop__ExtensibleDocumented *dst, wstop__ExtensibleDocumented *src) (use soapcpp2 -Ed)
struct wstop__ExtensibleDocumented
{
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is a complexType.
///
/// @note struct wstop__QueryExpressionType operations:
/// - wstop__QueryExpressionType* soap_new_wstop__QueryExpressionType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType*) default initialize members
/// - int soap_read_wstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType*) deserialize from a source
/// - int soap_write_wstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType*) serialize to a sink
/// - wstop__QueryExpressionType* soap_dup_wstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType* dst, wstop__QueryExpressionType *src) returns deep copy of wstop__QueryExpressionType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__QueryExpressionType(wstop__QueryExpressionType*) deep deletes wstop__QueryExpressionType data members, use only on dst after soap_dup_wstop__QueryExpressionType(NULL, wstop__QueryExpressionType *dst, wstop__QueryExpressionType *src) (use soapcpp2 -Ed)
struct wstop__QueryExpressionType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/media/wsdl":Capabilities is a complexType.
///
/// @note struct trt__Capabilities operations:
/// - trt__Capabilities* soap_new_trt__Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_trt__Capabilities(struct soap*, trt__Capabilities*) default initialize members
/// - int soap_read_trt__Capabilities(struct soap*, trt__Capabilities*) deserialize from a source
/// - int soap_write_trt__Capabilities(struct soap*, trt__Capabilities*) serialize to a sink
/// - trt__Capabilities* soap_dup_trt__Capabilities(struct soap*, trt__Capabilities* dst, trt__Capabilities *src) returns deep copy of trt__Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_trt__Capabilities(trt__Capabilities*) deep deletes trt__Capabilities data members, use only on dst after soap_dup_trt__Capabilities(NULL, trt__Capabilities *dst, trt__Capabilities *src) (use soapcpp2 -Ed)
struct trt__Capabilities
{
/// <PRE><BLOCKQUOTE>
///   Media profile capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileCapabilities" of type "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities.
    struct trt__ProfileCapabilities*     ProfileCapabilities            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamingCapabilities" of type "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities.
    struct trt__StreamingCapabilities*   StreamingCapabilities          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indicates if GetSnapshotUri is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SnapshotUri" of type xs:boolean.
  @ enum xsd__boolean*                   SnapshotUri                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not Rotation feature is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Rotation" of type xs:boolean.
  @ enum xsd__boolean*                   Rotation                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for changing video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "VideoSourceMode" of type xs:boolean.
  @ enum xsd__boolean*                   VideoSourceMode                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates if OSD is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "OSD" of type xs:boolean.
  @ enum xsd__boolean*                   OSD                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for temporary osd text configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TemporaryOSDText" of type xs:boolean.
  @ enum xsd__boolean*                   TemporaryOSDText               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for the Efficient XML Interchange (EXI) binary XML format.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "EXICompression" of type xs:boolean.
  @ enum xsd__boolean*                   EXICompression                 0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities is a complexType.
///
/// @note struct trt__ProfileCapabilities operations:
/// - trt__ProfileCapabilities* soap_new_trt__ProfileCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_trt__ProfileCapabilities(struct soap*, trt__ProfileCapabilities*) default initialize members
/// - int soap_read_trt__ProfileCapabilities(struct soap*, trt__ProfileCapabilities*) deserialize from a source
/// - int soap_write_trt__ProfileCapabilities(struct soap*, trt__ProfileCapabilities*) serialize to a sink
/// - trt__ProfileCapabilities* soap_dup_trt__ProfileCapabilities(struct soap*, trt__ProfileCapabilities* dst, trt__ProfileCapabilities *src) returns deep copy of trt__ProfileCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_trt__ProfileCapabilities(trt__ProfileCapabilities*) deep deletes trt__ProfileCapabilities data members, use only on dst after soap_dup_trt__ProfileCapabilities(NULL, trt__ProfileCapabilities *dst, trt__ProfileCapabilities *src) (use soapcpp2 -Ed)
struct trt__ProfileCapabilities
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaximumNumberOfProfiles" of type xs:int.
  @ int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities is a complexType.
///
/// @note struct trt__StreamingCapabilities operations:
/// - trt__StreamingCapabilities* soap_new_trt__StreamingCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_trt__StreamingCapabilities(struct soap*, trt__StreamingCapabilities*) default initialize members
/// - int soap_read_trt__StreamingCapabilities(struct soap*, trt__StreamingCapabilities*) deserialize from a source
/// - int soap_write_trt__StreamingCapabilities(struct soap*, trt__StreamingCapabilities*) serialize to a sink
/// - trt__StreamingCapabilities* soap_dup_trt__StreamingCapabilities(struct soap*, trt__StreamingCapabilities* dst, trt__StreamingCapabilities *src) returns deep copy of trt__StreamingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_trt__StreamingCapabilities(trt__StreamingCapabilities*) deep deletes trt__StreamingCapabilities data members, use only on dst after soap_dup_trt__StreamingCapabilities(NULL, trt__StreamingCapabilities *dst, trt__StreamingCapabilities *src) (use soapcpp2 -Ed)
struct trt__StreamingCapabilities
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP multicast.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTPMulticast" of type xs:boolean.
  @ enum xsd__boolean*                   RTPMulticast                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP over TCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTP_TCP" of type xs:boolean.
  @ enum xsd__boolean*                   RTP_USCORETCP                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP/RTSP/TCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTP_RTSP_TCP" of type xs:boolean.
  @ enum xsd__boolean*                   RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for non aggregate RTSP control.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "NonAggregateControl" of type xs:boolean.
  @ enum xsd__boolean*                   NonAggregateControl            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the device does not support live media streaming via RTSP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "NoRTSPStreaming" of type xs:boolean.
  @ enum xsd__boolean*                   NoRTSPStreaming                0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":VideoSourceMode is a complexType.
///
/// @note struct trt__VideoSourceMode operations:
/// - trt__VideoSourceMode* soap_new_trt__VideoSourceMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_trt__VideoSourceMode(struct soap*, trt__VideoSourceMode*) default initialize members
/// - int soap_read_trt__VideoSourceMode(struct soap*, trt__VideoSourceMode*) deserialize from a source
/// - int soap_write_trt__VideoSourceMode(struct soap*, trt__VideoSourceMode*) serialize to a sink
/// - trt__VideoSourceMode* soap_dup_trt__VideoSourceMode(struct soap*, trt__VideoSourceMode* dst, trt__VideoSourceMode *src) returns deep copy of trt__VideoSourceMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_trt__VideoSourceMode(trt__VideoSourceMode*) deep deletes trt__VideoSourceMode data members, use only on dst after soap_dup_trt__VideoSourceMode(NULL, trt__VideoSourceMode *dst, trt__VideoSourceMode *src) (use soapcpp2 -Ed)
struct trt__VideoSourceMode
{
/// <PRE><BLOCKQUOTE>
///   Max frame rate in frames per second for this video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxFramerate" of type xs:float.
    float                                MaxFramerate                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Max horizontal and vertical resolution for this video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxResolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          MaxResolution                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encodings" of type "http://www.onvif.org/ver10/media/wsdl":EncodingTypes.
    trt__EncodingTypes                   Encodings                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   After setting the mode if a device starts to reboot this value is true. If a device change the mode without rebooting this value is false. If true, configured parameters may not be guaranteed by the device after rebooting.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reboot" of type xs:boolean.
    enum xsd__boolean                    Reboot                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of this video source mode. This field should be described in English.
/// </BLOCKQUOTE></PRE>
///
/// Element "Description" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/media/wsdl":VideoSourceModeExtension.
    struct trt__VideoSourceModeExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicate token for video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indication of whether this mode is active. If active this value is true. In case of non-indication, it means as false. The value of true shall be had by only one video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Enabled" of type xs:boolean.
  @ enum xsd__boolean*                   Enabled                        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":VideoSourceModeExtension is a complexType.
///
/// @note struct trt__VideoSourceModeExtension operations:
/// - trt__VideoSourceModeExtension* soap_new_trt__VideoSourceModeExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_trt__VideoSourceModeExtension(struct soap*, trt__VideoSourceModeExtension*) default initialize members
/// - int soap_read_trt__VideoSourceModeExtension(struct soap*, trt__VideoSourceModeExtension*) deserialize from a source
/// - int soap_write_trt__VideoSourceModeExtension(struct soap*, trt__VideoSourceModeExtension*) serialize to a sink
/// - trt__VideoSourceModeExtension* soap_dup_trt__VideoSourceModeExtension(struct soap*, trt__VideoSourceModeExtension* dst, trt__VideoSourceModeExtension *src) returns deep copy of trt__VideoSourceModeExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_trt__VideoSourceModeExtension(trt__VideoSourceModeExtension*) deep deletes trt__VideoSourceModeExtension data members, use only on dst after soap_dup_trt__VideoSourceModeExtension(NULL, trt__VideoSourceModeExtension *dst, trt__VideoSourceModeExtension *src) (use soapcpp2 -Ed)
struct trt__VideoSourceModeExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities is a complexType.
///
/// @note struct _trt__GetServiceCapabilities operations:
/// - _trt__GetServiceCapabilities* soap_new__trt__GetServiceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities*) default initialize members
/// - int soap_read__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities*) deserialize from a source
/// - int soap_write__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities*) serialize to a sink
/// - _trt__GetServiceCapabilities* soap_dup__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities* dst, _trt__GetServiceCapabilities *src) returns deep copy of _trt__GetServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetServiceCapabilities(_trt__GetServiceCapabilities*) deep deletes _trt__GetServiceCapabilities data members, use only on dst after soap_dup__trt__GetServiceCapabilities(NULL, _trt__GetServiceCapabilities *dst, _trt__GetServiceCapabilities *src) (use soapcpp2 -Ed)
struct _trt__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note struct _trt__GetServiceCapabilitiesResponse operations:
/// - _trt__GetServiceCapabilitiesResponse* soap_new__trt__GetServiceCapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse*) default initialize members
/// - int soap_read__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse*) deserialize from a source
/// - int soap_write__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse*) serialize to a sink
/// - _trt__GetServiceCapabilitiesResponse* soap_dup__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse* dst, _trt__GetServiceCapabilitiesResponse *src) returns deep copy of _trt__GetServiceCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetServiceCapabilitiesResponse(_trt__GetServiceCapabilitiesResponse*) deep deletes _trt__GetServiceCapabilitiesResponse data members, use only on dst after soap_dup__trt__GetServiceCapabilitiesResponse(NULL, _trt__GetServiceCapabilitiesResponse *dst, _trt__GetServiceCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _trt__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the media service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
    struct trt__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSources
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSources is a complexType.
///
/// @note struct _trt__GetVideoSources operations:
/// - _trt__GetVideoSources* soap_new__trt__GetVideoSources(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoSources(struct soap*, _trt__GetVideoSources*) default initialize members
/// - int soap_read__trt__GetVideoSources(struct soap*, _trt__GetVideoSources*) deserialize from a source
/// - int soap_write__trt__GetVideoSources(struct soap*, _trt__GetVideoSources*) serialize to a sink
/// - _trt__GetVideoSources* soap_dup__trt__GetVideoSources(struct soap*, _trt__GetVideoSources* dst, _trt__GetVideoSources *src) returns deep copy of _trt__GetVideoSources src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSources(_trt__GetVideoSources*) deep deletes _trt__GetVideoSources data members, use only on dst after soap_dup__trt__GetVideoSources(NULL, _trt__GetVideoSources *dst, _trt__GetVideoSources *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSources
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse is a complexType.
///
/// @note struct _trt__GetVideoSourcesResponse operations:
/// - _trt__GetVideoSourcesResponse* soap_new__trt__GetVideoSourcesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoSourcesResponse(struct soap*, _trt__GetVideoSourcesResponse*) default initialize members
/// - int soap_read__trt__GetVideoSourcesResponse(struct soap*, _trt__GetVideoSourcesResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoSourcesResponse(struct soap*, _trt__GetVideoSourcesResponse*) serialize to a sink
/// - _trt__GetVideoSourcesResponse* soap_dup__trt__GetVideoSourcesResponse(struct soap*, _trt__GetVideoSourcesResponse* dst, _trt__GetVideoSourcesResponse *src) returns deep copy of _trt__GetVideoSourcesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourcesResponse(_trt__GetVideoSourcesResponse*) deep deletes _trt__GetVideoSourcesResponse data members, use only on dst after soap_dup__trt__GetVideoSourcesResponse(NULL, _trt__GetVideoSourcesResponse *dst, _trt__GetVideoSourcesResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourcesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of existing Video Sources
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoSource* is 0..unbounded.
  $ int                                  __sizeVideoSources             0;
/// Array struct tt__VideoSource* of size 0..unbounded.
    struct tt__VideoSource*              VideoSources                   0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSources
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSources is a complexType.
///
/// @note struct _trt__GetAudioSources operations:
/// - _trt__GetAudioSources* soap_new__trt__GetAudioSources(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioSources(struct soap*, _trt__GetAudioSources*) default initialize members
/// - int soap_read__trt__GetAudioSources(struct soap*, _trt__GetAudioSources*) deserialize from a source
/// - int soap_write__trt__GetAudioSources(struct soap*, _trt__GetAudioSources*) serialize to a sink
/// - _trt__GetAudioSources* soap_dup__trt__GetAudioSources(struct soap*, _trt__GetAudioSources* dst, _trt__GetAudioSources *src) returns deep copy of _trt__GetAudioSources src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSources(_trt__GetAudioSources*) deep deletes _trt__GetAudioSources data members, use only on dst after soap_dup__trt__GetAudioSources(NULL, _trt__GetAudioSources *dst, _trt__GetAudioSources *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSources
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse is a complexType.
///
/// @note struct _trt__GetAudioSourcesResponse operations:
/// - _trt__GetAudioSourcesResponse* soap_new__trt__GetAudioSourcesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioSourcesResponse(struct soap*, _trt__GetAudioSourcesResponse*) default initialize members
/// - int soap_read__trt__GetAudioSourcesResponse(struct soap*, _trt__GetAudioSourcesResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioSourcesResponse(struct soap*, _trt__GetAudioSourcesResponse*) serialize to a sink
/// - _trt__GetAudioSourcesResponse* soap_dup__trt__GetAudioSourcesResponse(struct soap*, _trt__GetAudioSourcesResponse* dst, _trt__GetAudioSourcesResponse *src) returns deep copy of _trt__GetAudioSourcesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSourcesResponse(_trt__GetAudioSourcesResponse*) deep deletes _trt__GetAudioSourcesResponse data members, use only on dst after soap_dup__trt__GetAudioSourcesResponse(NULL, _trt__GetAudioSourcesResponse *dst, _trt__GetAudioSourcesResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSourcesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of existing Audio Sources
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioSource* is 0..unbounded.
  $ int                                  __sizeAudioSources             0;
/// Array struct tt__AudioSource* of size 0..unbounded.
    struct tt__AudioSource*              AudioSources                   0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs is a complexType.
///
/// @note struct _trt__GetAudioOutputs operations:
/// - _trt__GetAudioOutputs* soap_new__trt__GetAudioOutputs(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioOutputs(struct soap*, _trt__GetAudioOutputs*) default initialize members
/// - int soap_read__trt__GetAudioOutputs(struct soap*, _trt__GetAudioOutputs*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputs(struct soap*, _trt__GetAudioOutputs*) serialize to a sink
/// - _trt__GetAudioOutputs* soap_dup__trt__GetAudioOutputs(struct soap*, _trt__GetAudioOutputs* dst, _trt__GetAudioOutputs *src) returns deep copy of _trt__GetAudioOutputs src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputs(_trt__GetAudioOutputs*) deep deletes _trt__GetAudioOutputs data members, use only on dst after soap_dup__trt__GetAudioOutputs(NULL, _trt__GetAudioOutputs *dst, _trt__GetAudioOutputs *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputs
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse is a complexType.
///
/// @note struct _trt__GetAudioOutputsResponse operations:
/// - _trt__GetAudioOutputsResponse* soap_new__trt__GetAudioOutputsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioOutputsResponse(struct soap*, _trt__GetAudioOutputsResponse*) default initialize members
/// - int soap_read__trt__GetAudioOutputsResponse(struct soap*, _trt__GetAudioOutputsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputsResponse(struct soap*, _trt__GetAudioOutputsResponse*) serialize to a sink
/// - _trt__GetAudioOutputsResponse* soap_dup__trt__GetAudioOutputsResponse(struct soap*, _trt__GetAudioOutputsResponse* dst, _trt__GetAudioOutputsResponse *src) returns deep copy of _trt__GetAudioOutputsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputsResponse(_trt__GetAudioOutputsResponse*) deep deletes _trt__GetAudioOutputsResponse data members, use only on dst after soap_dup__trt__GetAudioOutputsResponse(NULL, _trt__GetAudioOutputsResponse *dst, _trt__GetAudioOutputsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputsResponse
{
/// <PRE><BLOCKQUOTE>
///   List of existing Audio Outputs
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioOutput* is 0..unbounded.
  $ int                                  __sizeAudioOutputs             0;
/// Array struct tt__AudioOutput* of size 0..unbounded.
    struct tt__AudioOutput*              AudioOutputs                   0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateProfile is a complexType.
///
/// @note struct _trt__CreateProfile operations:
/// - _trt__CreateProfile* soap_new__trt__CreateProfile(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__CreateProfile(struct soap*, _trt__CreateProfile*) default initialize members
/// - int soap_read__trt__CreateProfile(struct soap*, _trt__CreateProfile*) deserialize from a source
/// - int soap_write__trt__CreateProfile(struct soap*, _trt__CreateProfile*) serialize to a sink
/// - _trt__CreateProfile* soap_dup__trt__CreateProfile(struct soap*, _trt__CreateProfile* dst, _trt__CreateProfile *src) returns deep copy of _trt__CreateProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__CreateProfile(_trt__CreateProfile*) deep deletes _trt__CreateProfile data members, use only on dst after soap_dup__trt__CreateProfile(NULL, _trt__CreateProfile *dst, _trt__CreateProfile *src) (use soapcpp2 -Ed)
struct _trt__CreateProfile
{
/// <PRE><BLOCKQUOTE>
///   friendly name of the profile to be created
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional token, specifying the unique identifier of the new profile. <br/>A device supports at least a token length of 12 characters and characters "A-Z" | "a-z" | "0-9" | "-.".
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse is a complexType.
///
/// @note struct _trt__CreateProfileResponse operations:
/// - _trt__CreateProfileResponse* soap_new__trt__CreateProfileResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*) default initialize members
/// - int soap_read__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*) deserialize from a source
/// - int soap_write__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*) serialize to a sink
/// - _trt__CreateProfileResponse* soap_dup__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse* dst, _trt__CreateProfileResponse *src) returns deep copy of _trt__CreateProfileResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__CreateProfileResponse(_trt__CreateProfileResponse*) deep deletes _trt__CreateProfileResponse data members, use only on dst after soap_dup__trt__CreateProfileResponse(NULL, _trt__CreateProfileResponse *dst, _trt__CreateProfileResponse *src) (use soapcpp2 -Ed)
struct _trt__CreateProfileResponse
{
/// <PRE><BLOCKQUOTE>
///   returns the new created profile
/// </BLOCKQUOTE></PRE>
///
/// Element "Profile" of type "http://www.onvif.org/ver10/schema":Profile.
    struct tt__Profile*                  Profile                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfile is a complexType.
///
/// @note struct _trt__GetProfile operations:
/// - _trt__GetProfile* soap_new__trt__GetProfile(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetProfile(struct soap*, _trt__GetProfile*) default initialize members
/// - int soap_read__trt__GetProfile(struct soap*, _trt__GetProfile*) deserialize from a source
/// - int soap_write__trt__GetProfile(struct soap*, _trt__GetProfile*) serialize to a sink
/// - _trt__GetProfile* soap_dup__trt__GetProfile(struct soap*, _trt__GetProfile* dst, _trt__GetProfile *src) returns deep copy of _trt__GetProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetProfile(_trt__GetProfile*) deep deletes _trt__GetProfile data members, use only on dst after soap_dup__trt__GetProfile(NULL, _trt__GetProfile *dst, _trt__GetProfile *src) (use soapcpp2 -Ed)
struct _trt__GetProfile
{
/// <PRE><BLOCKQUOTE>
///   this command requests a specific profile
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse is a complexType.
///
/// @note struct _trt__GetProfileResponse operations:
/// - _trt__GetProfileResponse* soap_new__trt__GetProfileResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*) default initialize members
/// - int soap_read__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*) deserialize from a source
/// - int soap_write__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*) serialize to a sink
/// - _trt__GetProfileResponse* soap_dup__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse* dst, _trt__GetProfileResponse *src) returns deep copy of _trt__GetProfileResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetProfileResponse(_trt__GetProfileResponse*) deep deletes _trt__GetProfileResponse data members, use only on dst after soap_dup__trt__GetProfileResponse(NULL, _trt__GetProfileResponse *dst, _trt__GetProfileResponse *src) (use soapcpp2 -Ed)
struct _trt__GetProfileResponse
{
/// <PRE><BLOCKQUOTE>
///   returns the requested media profile
/// </BLOCKQUOTE></PRE>
///
/// Element "Profile" of type "http://www.onvif.org/ver10/schema":Profile.
    struct tt__Profile*                  Profile                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfiles
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfiles is a complexType.
///
/// @note struct _trt__GetProfiles operations:
/// - _trt__GetProfiles* soap_new__trt__GetProfiles(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetProfiles(struct soap*, _trt__GetProfiles*) default initialize members
/// - int soap_read__trt__GetProfiles(struct soap*, _trt__GetProfiles*) deserialize from a source
/// - int soap_write__trt__GetProfiles(struct soap*, _trt__GetProfiles*) serialize to a sink
/// - _trt__GetProfiles* soap_dup__trt__GetProfiles(struct soap*, _trt__GetProfiles* dst, _trt__GetProfiles *src) returns deep copy of _trt__GetProfiles src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetProfiles(_trt__GetProfiles*) deep deletes _trt__GetProfiles data members, use only on dst after soap_dup__trt__GetProfiles(NULL, _trt__GetProfiles *dst, _trt__GetProfiles *src) (use soapcpp2 -Ed)
struct _trt__GetProfiles
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse is a complexType.
///
/// @note struct _trt__GetProfilesResponse operations:
/// - _trt__GetProfilesResponse* soap_new__trt__GetProfilesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*) default initialize members
/// - int soap_read__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*) deserialize from a source
/// - int soap_write__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*) serialize to a sink
/// - _trt__GetProfilesResponse* soap_dup__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse* dst, _trt__GetProfilesResponse *src) returns deep copy of _trt__GetProfilesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetProfilesResponse(_trt__GetProfilesResponse*) deep deletes _trt__GetProfilesResponse data members, use only on dst after soap_dup__trt__GetProfilesResponse(NULL, _trt__GetProfilesResponse *dst, _trt__GetProfilesResponse *src) (use soapcpp2 -Ed)
struct _trt__GetProfilesResponse
{
/// <PRE><BLOCKQUOTE>
///   lists all profiles that exist in the media service
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Profile* is 0..unbounded.
  $ int                                  __sizeProfiles                 0;
/// Array struct tt__Profile* of size 0..unbounded.
    struct tt__Profile*                  Profiles                       0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration is a complexType.
///
/// @note struct _trt__AddVideoEncoderConfiguration operations:
/// - _trt__AddVideoEncoderConfiguration* soap_new__trt__AddVideoEncoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddVideoEncoderConfiguration(struct soap*, _trt__AddVideoEncoderConfiguration*) default initialize members
/// - int soap_read__trt__AddVideoEncoderConfiguration(struct soap*, _trt__AddVideoEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__AddVideoEncoderConfiguration(struct soap*, _trt__AddVideoEncoderConfiguration*) serialize to a sink
/// - _trt__AddVideoEncoderConfiguration* soap_dup__trt__AddVideoEncoderConfiguration(struct soap*, _trt__AddVideoEncoderConfiguration* dst, _trt__AddVideoEncoderConfiguration *src) returns deep copy of _trt__AddVideoEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddVideoEncoderConfiguration(_trt__AddVideoEncoderConfiguration*) deep deletes _trt__AddVideoEncoderConfiguration data members, use only on dst after soap_dup__trt__AddVideoEncoderConfiguration(NULL, _trt__AddVideoEncoderConfiguration *dst, _trt__AddVideoEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddVideoEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoEncoderConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse is a complexType.
///
/// @note struct _trt__AddVideoEncoderConfigurationResponse operations:
/// - _trt__AddVideoEncoderConfigurationResponse* soap_new__trt__AddVideoEncoderConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddVideoEncoderConfigurationResponse(struct soap*, _trt__AddVideoEncoderConfigurationResponse*) default initialize members
/// - int soap_read__trt__AddVideoEncoderConfigurationResponse(struct soap*, _trt__AddVideoEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddVideoEncoderConfigurationResponse(struct soap*, _trt__AddVideoEncoderConfigurationResponse*) serialize to a sink
/// - _trt__AddVideoEncoderConfigurationResponse* soap_dup__trt__AddVideoEncoderConfigurationResponse(struct soap*, _trt__AddVideoEncoderConfigurationResponse* dst, _trt__AddVideoEncoderConfigurationResponse *src) returns deep copy of _trt__AddVideoEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddVideoEncoderConfigurationResponse(_trt__AddVideoEncoderConfigurationResponse*) deep deletes _trt__AddVideoEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__AddVideoEncoderConfigurationResponse(NULL, _trt__AddVideoEncoderConfigurationResponse *dst, _trt__AddVideoEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddVideoEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration is a complexType.
///
/// @note struct _trt__RemoveVideoEncoderConfiguration operations:
/// - _trt__RemoveVideoEncoderConfiguration* soap_new__trt__RemoveVideoEncoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveVideoEncoderConfiguration(struct soap*, _trt__RemoveVideoEncoderConfiguration*) default initialize members
/// - int soap_read__trt__RemoveVideoEncoderConfiguration(struct soap*, _trt__RemoveVideoEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveVideoEncoderConfiguration(struct soap*, _trt__RemoveVideoEncoderConfiguration*) serialize to a sink
/// - _trt__RemoveVideoEncoderConfiguration* soap_dup__trt__RemoveVideoEncoderConfiguration(struct soap*, _trt__RemoveVideoEncoderConfiguration* dst, _trt__RemoveVideoEncoderConfiguration *src) returns deep copy of _trt__RemoveVideoEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveVideoEncoderConfiguration(_trt__RemoveVideoEncoderConfiguration*) deep deletes _trt__RemoveVideoEncoderConfiguration data members, use only on dst after soap_dup__trt__RemoveVideoEncoderConfiguration(NULL, _trt__RemoveVideoEncoderConfiguration *dst, _trt__RemoveVideoEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveVideoEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoEncoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse is a complexType.
///
/// @note struct _trt__RemoveVideoEncoderConfigurationResponse operations:
/// - _trt__RemoveVideoEncoderConfigurationResponse* soap_new__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, _trt__RemoveVideoEncoderConfigurationResponse*) default initialize members
/// - int soap_read__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, _trt__RemoveVideoEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, _trt__RemoveVideoEncoderConfigurationResponse*) serialize to a sink
/// - _trt__RemoveVideoEncoderConfigurationResponse* soap_dup__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, _trt__RemoveVideoEncoderConfigurationResponse* dst, _trt__RemoveVideoEncoderConfigurationResponse *src) returns deep copy of _trt__RemoveVideoEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveVideoEncoderConfigurationResponse(_trt__RemoveVideoEncoderConfigurationResponse*) deep deletes _trt__RemoveVideoEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveVideoEncoderConfigurationResponse(NULL, _trt__RemoveVideoEncoderConfigurationResponse *dst, _trt__RemoveVideoEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveVideoEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration is a complexType.
///
/// @note struct _trt__AddVideoSourceConfiguration operations:
/// - _trt__AddVideoSourceConfiguration* soap_new__trt__AddVideoSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddVideoSourceConfiguration(struct soap*, _trt__AddVideoSourceConfiguration*) default initialize members
/// - int soap_read__trt__AddVideoSourceConfiguration(struct soap*, _trt__AddVideoSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__AddVideoSourceConfiguration(struct soap*, _trt__AddVideoSourceConfiguration*) serialize to a sink
/// - _trt__AddVideoSourceConfiguration* soap_dup__trt__AddVideoSourceConfiguration(struct soap*, _trt__AddVideoSourceConfiguration* dst, _trt__AddVideoSourceConfiguration *src) returns deep copy of _trt__AddVideoSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddVideoSourceConfiguration(_trt__AddVideoSourceConfiguration*) deep deletes _trt__AddVideoSourceConfiguration data members, use only on dst after soap_dup__trt__AddVideoSourceConfiguration(NULL, _trt__AddVideoSourceConfiguration *dst, _trt__AddVideoSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoSourceConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse is a complexType.
///
/// @note struct _trt__AddVideoSourceConfigurationResponse operations:
/// - _trt__AddVideoSourceConfigurationResponse* soap_new__trt__AddVideoSourceConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddVideoSourceConfigurationResponse(struct soap*, _trt__AddVideoSourceConfigurationResponse*) default initialize members
/// - int soap_read__trt__AddVideoSourceConfigurationResponse(struct soap*, _trt__AddVideoSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddVideoSourceConfigurationResponse(struct soap*, _trt__AddVideoSourceConfigurationResponse*) serialize to a sink
/// - _trt__AddVideoSourceConfigurationResponse* soap_dup__trt__AddVideoSourceConfigurationResponse(struct soap*, _trt__AddVideoSourceConfigurationResponse* dst, _trt__AddVideoSourceConfigurationResponse *src) returns deep copy of _trt__AddVideoSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddVideoSourceConfigurationResponse(_trt__AddVideoSourceConfigurationResponse*) deep deletes _trt__AddVideoSourceConfigurationResponse data members, use only on dst after soap_dup__trt__AddVideoSourceConfigurationResponse(NULL, _trt__AddVideoSourceConfigurationResponse *dst, _trt__AddVideoSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddVideoSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration is a complexType.
///
/// @note struct _trt__RemoveVideoSourceConfiguration operations:
/// - _trt__RemoveVideoSourceConfiguration* soap_new__trt__RemoveVideoSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveVideoSourceConfiguration(struct soap*, _trt__RemoveVideoSourceConfiguration*) default initialize members
/// - int soap_read__trt__RemoveVideoSourceConfiguration(struct soap*, _trt__RemoveVideoSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveVideoSourceConfiguration(struct soap*, _trt__RemoveVideoSourceConfiguration*) serialize to a sink
/// - _trt__RemoveVideoSourceConfiguration* soap_dup__trt__RemoveVideoSourceConfiguration(struct soap*, _trt__RemoveVideoSourceConfiguration* dst, _trt__RemoveVideoSourceConfiguration *src) returns deep copy of _trt__RemoveVideoSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveVideoSourceConfiguration(_trt__RemoveVideoSourceConfiguration*) deep deletes _trt__RemoveVideoSourceConfiguration data members, use only on dst after soap_dup__trt__RemoveVideoSourceConfiguration(NULL, _trt__RemoveVideoSourceConfiguration *dst, _trt__RemoveVideoSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoSourceConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse is a complexType.
///
/// @note struct _trt__RemoveVideoSourceConfigurationResponse operations:
/// - _trt__RemoveVideoSourceConfigurationResponse* soap_new__trt__RemoveVideoSourceConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveVideoSourceConfigurationResponse(struct soap*, _trt__RemoveVideoSourceConfigurationResponse*) default initialize members
/// - int soap_read__trt__RemoveVideoSourceConfigurationResponse(struct soap*, _trt__RemoveVideoSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveVideoSourceConfigurationResponse(struct soap*, _trt__RemoveVideoSourceConfigurationResponse*) serialize to a sink
/// - _trt__RemoveVideoSourceConfigurationResponse* soap_dup__trt__RemoveVideoSourceConfigurationResponse(struct soap*, _trt__RemoveVideoSourceConfigurationResponse* dst, _trt__RemoveVideoSourceConfigurationResponse *src) returns deep copy of _trt__RemoveVideoSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveVideoSourceConfigurationResponse(_trt__RemoveVideoSourceConfigurationResponse*) deep deletes _trt__RemoveVideoSourceConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveVideoSourceConfigurationResponse(NULL, _trt__RemoveVideoSourceConfigurationResponse *dst, _trt__RemoveVideoSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveVideoSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration is a complexType.
///
/// @note struct _trt__AddAudioEncoderConfiguration operations:
/// - _trt__AddAudioEncoderConfiguration* soap_new__trt__AddAudioEncoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddAudioEncoderConfiguration(struct soap*, _trt__AddAudioEncoderConfiguration*) default initialize members
/// - int soap_read__trt__AddAudioEncoderConfiguration(struct soap*, _trt__AddAudioEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__AddAudioEncoderConfiguration(struct soap*, _trt__AddAudioEncoderConfiguration*) serialize to a sink
/// - _trt__AddAudioEncoderConfiguration* soap_dup__trt__AddAudioEncoderConfiguration(struct soap*, _trt__AddAudioEncoderConfiguration* dst, _trt__AddAudioEncoderConfiguration *src) returns deep copy of _trt__AddAudioEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioEncoderConfiguration(_trt__AddAudioEncoderConfiguration*) deep deletes _trt__AddAudioEncoderConfiguration data members, use only on dst after soap_dup__trt__AddAudioEncoderConfiguration(NULL, _trt__AddAudioEncoderConfiguration *dst, _trt__AddAudioEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddAudioEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioEncoderConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse is a complexType.
///
/// @note struct _trt__AddAudioEncoderConfigurationResponse operations:
/// - _trt__AddAudioEncoderConfigurationResponse* soap_new__trt__AddAudioEncoderConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddAudioEncoderConfigurationResponse(struct soap*, _trt__AddAudioEncoderConfigurationResponse*) default initialize members
/// - int soap_read__trt__AddAudioEncoderConfigurationResponse(struct soap*, _trt__AddAudioEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddAudioEncoderConfigurationResponse(struct soap*, _trt__AddAudioEncoderConfigurationResponse*) serialize to a sink
/// - _trt__AddAudioEncoderConfigurationResponse* soap_dup__trt__AddAudioEncoderConfigurationResponse(struct soap*, _trt__AddAudioEncoderConfigurationResponse* dst, _trt__AddAudioEncoderConfigurationResponse *src) returns deep copy of _trt__AddAudioEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioEncoderConfigurationResponse(_trt__AddAudioEncoderConfigurationResponse*) deep deletes _trt__AddAudioEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__AddAudioEncoderConfigurationResponse(NULL, _trt__AddAudioEncoderConfigurationResponse *dst, _trt__AddAudioEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddAudioEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration is a complexType.
///
/// @note struct _trt__RemoveAudioEncoderConfiguration operations:
/// - _trt__RemoveAudioEncoderConfiguration* soap_new__trt__RemoveAudioEncoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveAudioEncoderConfiguration(struct soap*, _trt__RemoveAudioEncoderConfiguration*) default initialize members
/// - int soap_read__trt__RemoveAudioEncoderConfiguration(struct soap*, _trt__RemoveAudioEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveAudioEncoderConfiguration(struct soap*, _trt__RemoveAudioEncoderConfiguration*) serialize to a sink
/// - _trt__RemoveAudioEncoderConfiguration* soap_dup__trt__RemoveAudioEncoderConfiguration(struct soap*, _trt__RemoveAudioEncoderConfiguration* dst, _trt__RemoveAudioEncoderConfiguration *src) returns deep copy of _trt__RemoveAudioEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioEncoderConfiguration(_trt__RemoveAudioEncoderConfiguration*) deep deletes _trt__RemoveAudioEncoderConfiguration data members, use only on dst after soap_dup__trt__RemoveAudioEncoderConfiguration(NULL, _trt__RemoveAudioEncoderConfiguration *dst, _trt__RemoveAudioEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioEncoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse is a complexType.
///
/// @note struct _trt__RemoveAudioEncoderConfigurationResponse operations:
/// - _trt__RemoveAudioEncoderConfigurationResponse* soap_new__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, _trt__RemoveAudioEncoderConfigurationResponse*) default initialize members
/// - int soap_read__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, _trt__RemoveAudioEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, _trt__RemoveAudioEncoderConfigurationResponse*) serialize to a sink
/// - _trt__RemoveAudioEncoderConfigurationResponse* soap_dup__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, _trt__RemoveAudioEncoderConfigurationResponse* dst, _trt__RemoveAudioEncoderConfigurationResponse *src) returns deep copy of _trt__RemoveAudioEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioEncoderConfigurationResponse(_trt__RemoveAudioEncoderConfigurationResponse*) deep deletes _trt__RemoveAudioEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveAudioEncoderConfigurationResponse(NULL, _trt__RemoveAudioEncoderConfigurationResponse *dst, _trt__RemoveAudioEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration is a complexType.
///
/// @note struct _trt__AddAudioSourceConfiguration operations:
/// - _trt__AddAudioSourceConfiguration* soap_new__trt__AddAudioSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddAudioSourceConfiguration(struct soap*, _trt__AddAudioSourceConfiguration*) default initialize members
/// - int soap_read__trt__AddAudioSourceConfiguration(struct soap*, _trt__AddAudioSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__AddAudioSourceConfiguration(struct soap*, _trt__AddAudioSourceConfiguration*) serialize to a sink
/// - _trt__AddAudioSourceConfiguration* soap_dup__trt__AddAudioSourceConfiguration(struct soap*, _trt__AddAudioSourceConfiguration* dst, _trt__AddAudioSourceConfiguration *src) returns deep copy of _trt__AddAudioSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioSourceConfiguration(_trt__AddAudioSourceConfiguration*) deep deletes _trt__AddAudioSourceConfiguration data members, use only on dst after soap_dup__trt__AddAudioSourceConfiguration(NULL, _trt__AddAudioSourceConfiguration *dst, _trt__AddAudioSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioSourceConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse is a complexType.
///
/// @note struct _trt__AddAudioSourceConfigurationResponse operations:
/// - _trt__AddAudioSourceConfigurationResponse* soap_new__trt__AddAudioSourceConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddAudioSourceConfigurationResponse(struct soap*, _trt__AddAudioSourceConfigurationResponse*) default initialize members
/// - int soap_read__trt__AddAudioSourceConfigurationResponse(struct soap*, _trt__AddAudioSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddAudioSourceConfigurationResponse(struct soap*, _trt__AddAudioSourceConfigurationResponse*) serialize to a sink
/// - _trt__AddAudioSourceConfigurationResponse* soap_dup__trt__AddAudioSourceConfigurationResponse(struct soap*, _trt__AddAudioSourceConfigurationResponse* dst, _trt__AddAudioSourceConfigurationResponse *src) returns deep copy of _trt__AddAudioSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioSourceConfigurationResponse(_trt__AddAudioSourceConfigurationResponse*) deep deletes _trt__AddAudioSourceConfigurationResponse data members, use only on dst after soap_dup__trt__AddAudioSourceConfigurationResponse(NULL, _trt__AddAudioSourceConfigurationResponse *dst, _trt__AddAudioSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddAudioSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration is a complexType.
///
/// @note struct _trt__RemoveAudioSourceConfiguration operations:
/// - _trt__RemoveAudioSourceConfiguration* soap_new__trt__RemoveAudioSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveAudioSourceConfiguration(struct soap*, _trt__RemoveAudioSourceConfiguration*) default initialize members
/// - int soap_read__trt__RemoveAudioSourceConfiguration(struct soap*, _trt__RemoveAudioSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveAudioSourceConfiguration(struct soap*, _trt__RemoveAudioSourceConfiguration*) serialize to a sink
/// - _trt__RemoveAudioSourceConfiguration* soap_dup__trt__RemoveAudioSourceConfiguration(struct soap*, _trt__RemoveAudioSourceConfiguration* dst, _trt__RemoveAudioSourceConfiguration *src) returns deep copy of _trt__RemoveAudioSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioSourceConfiguration(_trt__RemoveAudioSourceConfiguration*) deep deletes _trt__RemoveAudioSourceConfiguration data members, use only on dst after soap_dup__trt__RemoveAudioSourceConfiguration(NULL, _trt__RemoveAudioSourceConfiguration *dst, _trt__RemoveAudioSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioSourceConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse is a complexType.
///
/// @note struct _trt__RemoveAudioSourceConfigurationResponse operations:
/// - _trt__RemoveAudioSourceConfigurationResponse* soap_new__trt__RemoveAudioSourceConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveAudioSourceConfigurationResponse(struct soap*, _trt__RemoveAudioSourceConfigurationResponse*) default initialize members
/// - int soap_read__trt__RemoveAudioSourceConfigurationResponse(struct soap*, _trt__RemoveAudioSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveAudioSourceConfigurationResponse(struct soap*, _trt__RemoveAudioSourceConfigurationResponse*) serialize to a sink
/// - _trt__RemoveAudioSourceConfigurationResponse* soap_dup__trt__RemoveAudioSourceConfigurationResponse(struct soap*, _trt__RemoveAudioSourceConfigurationResponse* dst, _trt__RemoveAudioSourceConfigurationResponse *src) returns deep copy of _trt__RemoveAudioSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioSourceConfigurationResponse(_trt__RemoveAudioSourceConfigurationResponse*) deep deletes _trt__RemoveAudioSourceConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveAudioSourceConfigurationResponse(NULL, _trt__RemoveAudioSourceConfigurationResponse *dst, _trt__RemoveAudioSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration is a complexType.
///
/// @note struct _trt__AddPTZConfiguration operations:
/// - _trt__AddPTZConfiguration* soap_new__trt__AddPTZConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddPTZConfiguration(struct soap*, _trt__AddPTZConfiguration*) default initialize members
/// - int soap_read__trt__AddPTZConfiguration(struct soap*, _trt__AddPTZConfiguration*) deserialize from a source
/// - int soap_write__trt__AddPTZConfiguration(struct soap*, _trt__AddPTZConfiguration*) serialize to a sink
/// - _trt__AddPTZConfiguration* soap_dup__trt__AddPTZConfiguration(struct soap*, _trt__AddPTZConfiguration* dst, _trt__AddPTZConfiguration *src) returns deep copy of _trt__AddPTZConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddPTZConfiguration(_trt__AddPTZConfiguration*) deep deletes _trt__AddPTZConfiguration data members, use only on dst after soap_dup__trt__AddPTZConfiguration(NULL, _trt__AddPTZConfiguration *dst, _trt__AddPTZConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddPTZConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the PTZConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse is a complexType.
///
/// @note struct _trt__AddPTZConfigurationResponse operations:
/// - _trt__AddPTZConfigurationResponse* soap_new__trt__AddPTZConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddPTZConfigurationResponse(struct soap*, _trt__AddPTZConfigurationResponse*) default initialize members
/// - int soap_read__trt__AddPTZConfigurationResponse(struct soap*, _trt__AddPTZConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddPTZConfigurationResponse(struct soap*, _trt__AddPTZConfigurationResponse*) serialize to a sink
/// - _trt__AddPTZConfigurationResponse* soap_dup__trt__AddPTZConfigurationResponse(struct soap*, _trt__AddPTZConfigurationResponse* dst, _trt__AddPTZConfigurationResponse *src) returns deep copy of _trt__AddPTZConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddPTZConfigurationResponse(_trt__AddPTZConfigurationResponse*) deep deletes _trt__AddPTZConfigurationResponse data members, use only on dst after soap_dup__trt__AddPTZConfigurationResponse(NULL, _trt__AddPTZConfigurationResponse *dst, _trt__AddPTZConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddPTZConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration is a complexType.
///
/// @note struct _trt__RemovePTZConfiguration operations:
/// - _trt__RemovePTZConfiguration* soap_new__trt__RemovePTZConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemovePTZConfiguration(struct soap*, _trt__RemovePTZConfiguration*) default initialize members
/// - int soap_read__trt__RemovePTZConfiguration(struct soap*, _trt__RemovePTZConfiguration*) deserialize from a source
/// - int soap_write__trt__RemovePTZConfiguration(struct soap*, _trt__RemovePTZConfiguration*) serialize to a sink
/// - _trt__RemovePTZConfiguration* soap_dup__trt__RemovePTZConfiguration(struct soap*, _trt__RemovePTZConfiguration* dst, _trt__RemovePTZConfiguration *src) returns deep copy of _trt__RemovePTZConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemovePTZConfiguration(_trt__RemovePTZConfiguration*) deep deletes _trt__RemovePTZConfiguration data members, use only on dst after soap_dup__trt__RemovePTZConfiguration(NULL, _trt__RemovePTZConfiguration *dst, _trt__RemovePTZConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemovePTZConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   PTZConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse is a complexType.
///
/// @note struct _trt__RemovePTZConfigurationResponse operations:
/// - _trt__RemovePTZConfigurationResponse* soap_new__trt__RemovePTZConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemovePTZConfigurationResponse(struct soap*, _trt__RemovePTZConfigurationResponse*) default initialize members
/// - int soap_read__trt__RemovePTZConfigurationResponse(struct soap*, _trt__RemovePTZConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemovePTZConfigurationResponse(struct soap*, _trt__RemovePTZConfigurationResponse*) serialize to a sink
/// - _trt__RemovePTZConfigurationResponse* soap_dup__trt__RemovePTZConfigurationResponse(struct soap*, _trt__RemovePTZConfigurationResponse* dst, _trt__RemovePTZConfigurationResponse *src) returns deep copy of _trt__RemovePTZConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemovePTZConfigurationResponse(_trt__RemovePTZConfigurationResponse*) deep deletes _trt__RemovePTZConfigurationResponse data members, use only on dst after soap_dup__trt__RemovePTZConfigurationResponse(NULL, _trt__RemovePTZConfigurationResponse *dst, _trt__RemovePTZConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemovePTZConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration is a complexType.
///
/// @note struct _trt__AddVideoAnalyticsConfiguration operations:
/// - _trt__AddVideoAnalyticsConfiguration* soap_new__trt__AddVideoAnalyticsConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddVideoAnalyticsConfiguration(struct soap*, _trt__AddVideoAnalyticsConfiguration*) default initialize members
/// - int soap_read__trt__AddVideoAnalyticsConfiguration(struct soap*, _trt__AddVideoAnalyticsConfiguration*) deserialize from a source
/// - int soap_write__trt__AddVideoAnalyticsConfiguration(struct soap*, _trt__AddVideoAnalyticsConfiguration*) serialize to a sink
/// - _trt__AddVideoAnalyticsConfiguration* soap_dup__trt__AddVideoAnalyticsConfiguration(struct soap*, _trt__AddVideoAnalyticsConfiguration* dst, _trt__AddVideoAnalyticsConfiguration *src) returns deep copy of _trt__AddVideoAnalyticsConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddVideoAnalyticsConfiguration(_trt__AddVideoAnalyticsConfiguration*) deep deletes _trt__AddVideoAnalyticsConfiguration data members, use only on dst after soap_dup__trt__AddVideoAnalyticsConfiguration(NULL, _trt__AddVideoAnalyticsConfiguration *dst, _trt__AddVideoAnalyticsConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddVideoAnalyticsConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoAnalyticsConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse is a complexType.
///
/// @note struct _trt__AddVideoAnalyticsConfigurationResponse operations:
/// - _trt__AddVideoAnalyticsConfigurationResponse* soap_new__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, _trt__AddVideoAnalyticsConfigurationResponse*) default initialize members
/// - int soap_read__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, _trt__AddVideoAnalyticsConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, _trt__AddVideoAnalyticsConfigurationResponse*) serialize to a sink
/// - _trt__AddVideoAnalyticsConfigurationResponse* soap_dup__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, _trt__AddVideoAnalyticsConfigurationResponse* dst, _trt__AddVideoAnalyticsConfigurationResponse *src) returns deep copy of _trt__AddVideoAnalyticsConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddVideoAnalyticsConfigurationResponse(_trt__AddVideoAnalyticsConfigurationResponse*) deep deletes _trt__AddVideoAnalyticsConfigurationResponse data members, use only on dst after soap_dup__trt__AddVideoAnalyticsConfigurationResponse(NULL, _trt__AddVideoAnalyticsConfigurationResponse *dst, _trt__AddVideoAnalyticsConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddVideoAnalyticsConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration is a complexType.
///
/// @note struct _trt__RemoveVideoAnalyticsConfiguration operations:
/// - _trt__RemoveVideoAnalyticsConfiguration* soap_new__trt__RemoveVideoAnalyticsConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveVideoAnalyticsConfiguration(struct soap*, _trt__RemoveVideoAnalyticsConfiguration*) default initialize members
/// - int soap_read__trt__RemoveVideoAnalyticsConfiguration(struct soap*, _trt__RemoveVideoAnalyticsConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveVideoAnalyticsConfiguration(struct soap*, _trt__RemoveVideoAnalyticsConfiguration*) serialize to a sink
/// - _trt__RemoveVideoAnalyticsConfiguration* soap_dup__trt__RemoveVideoAnalyticsConfiguration(struct soap*, _trt__RemoveVideoAnalyticsConfiguration* dst, _trt__RemoveVideoAnalyticsConfiguration *src) returns deep copy of _trt__RemoveVideoAnalyticsConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveVideoAnalyticsConfiguration(_trt__RemoveVideoAnalyticsConfiguration*) deep deletes _trt__RemoveVideoAnalyticsConfiguration data members, use only on dst after soap_dup__trt__RemoveVideoAnalyticsConfiguration(NULL, _trt__RemoveVideoAnalyticsConfiguration *dst, _trt__RemoveVideoAnalyticsConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveVideoAnalyticsConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoAnalyticsConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse is a complexType.
///
/// @note struct _trt__RemoveVideoAnalyticsConfigurationResponse operations:
/// - _trt__RemoveVideoAnalyticsConfigurationResponse* soap_new__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*) default initialize members
/// - int soap_read__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*) serialize to a sink
/// - _trt__RemoveVideoAnalyticsConfigurationResponse* soap_dup__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _trt__RemoveVideoAnalyticsConfigurationResponse* dst, _trt__RemoveVideoAnalyticsConfigurationResponse *src) returns deep copy of _trt__RemoveVideoAnalyticsConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveVideoAnalyticsConfigurationResponse(_trt__RemoveVideoAnalyticsConfigurationResponse*) deep deletes _trt__RemoveVideoAnalyticsConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveVideoAnalyticsConfigurationResponse(NULL, _trt__RemoveVideoAnalyticsConfigurationResponse *dst, _trt__RemoveVideoAnalyticsConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveVideoAnalyticsConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration is a complexType.
///
/// @note struct _trt__AddMetadataConfiguration operations:
/// - _trt__AddMetadataConfiguration* soap_new__trt__AddMetadataConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddMetadataConfiguration(struct soap*, _trt__AddMetadataConfiguration*) default initialize members
/// - int soap_read__trt__AddMetadataConfiguration(struct soap*, _trt__AddMetadataConfiguration*) deserialize from a source
/// - int soap_write__trt__AddMetadataConfiguration(struct soap*, _trt__AddMetadataConfiguration*) serialize to a sink
/// - _trt__AddMetadataConfiguration* soap_dup__trt__AddMetadataConfiguration(struct soap*, _trt__AddMetadataConfiguration* dst, _trt__AddMetadataConfiguration *src) returns deep copy of _trt__AddMetadataConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddMetadataConfiguration(_trt__AddMetadataConfiguration*) deep deletes _trt__AddMetadataConfiguration data members, use only on dst after soap_dup__trt__AddMetadataConfiguration(NULL, _trt__AddMetadataConfiguration *dst, _trt__AddMetadataConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddMetadataConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the MetadataConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse is a complexType.
///
/// @note struct _trt__AddMetadataConfigurationResponse operations:
/// - _trt__AddMetadataConfigurationResponse* soap_new__trt__AddMetadataConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddMetadataConfigurationResponse(struct soap*, _trt__AddMetadataConfigurationResponse*) default initialize members
/// - int soap_read__trt__AddMetadataConfigurationResponse(struct soap*, _trt__AddMetadataConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddMetadataConfigurationResponse(struct soap*, _trt__AddMetadataConfigurationResponse*) serialize to a sink
/// - _trt__AddMetadataConfigurationResponse* soap_dup__trt__AddMetadataConfigurationResponse(struct soap*, _trt__AddMetadataConfigurationResponse* dst, _trt__AddMetadataConfigurationResponse *src) returns deep copy of _trt__AddMetadataConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddMetadataConfigurationResponse(_trt__AddMetadataConfigurationResponse*) deep deletes _trt__AddMetadataConfigurationResponse data members, use only on dst after soap_dup__trt__AddMetadataConfigurationResponse(NULL, _trt__AddMetadataConfigurationResponse *dst, _trt__AddMetadataConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddMetadataConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration is a complexType.
///
/// @note struct _trt__RemoveMetadataConfiguration operations:
/// - _trt__RemoveMetadataConfiguration* soap_new__trt__RemoveMetadataConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveMetadataConfiguration(struct soap*, _trt__RemoveMetadataConfiguration*) default initialize members
/// - int soap_read__trt__RemoveMetadataConfiguration(struct soap*, _trt__RemoveMetadataConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveMetadataConfiguration(struct soap*, _trt__RemoveMetadataConfiguration*) serialize to a sink
/// - _trt__RemoveMetadataConfiguration* soap_dup__trt__RemoveMetadataConfiguration(struct soap*, _trt__RemoveMetadataConfiguration* dst, _trt__RemoveMetadataConfiguration *src) returns deep copy of _trt__RemoveMetadataConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveMetadataConfiguration(_trt__RemoveMetadataConfiguration*) deep deletes _trt__RemoveMetadataConfiguration data members, use only on dst after soap_dup__trt__RemoveMetadataConfiguration(NULL, _trt__RemoveMetadataConfiguration *dst, _trt__RemoveMetadataConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveMetadataConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   MetadataConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse is a complexType.
///
/// @note struct _trt__RemoveMetadataConfigurationResponse operations:
/// - _trt__RemoveMetadataConfigurationResponse* soap_new__trt__RemoveMetadataConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveMetadataConfigurationResponse(struct soap*, _trt__RemoveMetadataConfigurationResponse*) default initialize members
/// - int soap_read__trt__RemoveMetadataConfigurationResponse(struct soap*, _trt__RemoveMetadataConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveMetadataConfigurationResponse(struct soap*, _trt__RemoveMetadataConfigurationResponse*) serialize to a sink
/// - _trt__RemoveMetadataConfigurationResponse* soap_dup__trt__RemoveMetadataConfigurationResponse(struct soap*, _trt__RemoveMetadataConfigurationResponse* dst, _trt__RemoveMetadataConfigurationResponse *src) returns deep copy of _trt__RemoveMetadataConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveMetadataConfigurationResponse(_trt__RemoveMetadataConfigurationResponse*) deep deletes _trt__RemoveMetadataConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveMetadataConfigurationResponse(NULL, _trt__RemoveMetadataConfigurationResponse *dst, _trt__RemoveMetadataConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveMetadataConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration is a complexType.
///
/// @note struct _trt__AddAudioOutputConfiguration operations:
/// - _trt__AddAudioOutputConfiguration* soap_new__trt__AddAudioOutputConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddAudioOutputConfiguration(struct soap*, _trt__AddAudioOutputConfiguration*) default initialize members
/// - int soap_read__trt__AddAudioOutputConfiguration(struct soap*, _trt__AddAudioOutputConfiguration*) deserialize from a source
/// - int soap_write__trt__AddAudioOutputConfiguration(struct soap*, _trt__AddAudioOutputConfiguration*) serialize to a sink
/// - _trt__AddAudioOutputConfiguration* soap_dup__trt__AddAudioOutputConfiguration(struct soap*, _trt__AddAudioOutputConfiguration* dst, _trt__AddAudioOutputConfiguration *src) returns deep copy of _trt__AddAudioOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioOutputConfiguration(_trt__AddAudioOutputConfiguration*) deep deletes _trt__AddAudioOutputConfiguration data members, use only on dst after soap_dup__trt__AddAudioOutputConfiguration(NULL, _trt__AddAudioOutputConfiguration *dst, _trt__AddAudioOutputConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioOutputConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse is a complexType.
///
/// @note struct _trt__AddAudioOutputConfigurationResponse operations:
/// - _trt__AddAudioOutputConfigurationResponse* soap_new__trt__AddAudioOutputConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddAudioOutputConfigurationResponse(struct soap*, _trt__AddAudioOutputConfigurationResponse*) default initialize members
/// - int soap_read__trt__AddAudioOutputConfigurationResponse(struct soap*, _trt__AddAudioOutputConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddAudioOutputConfigurationResponse(struct soap*, _trt__AddAudioOutputConfigurationResponse*) serialize to a sink
/// - _trt__AddAudioOutputConfigurationResponse* soap_dup__trt__AddAudioOutputConfigurationResponse(struct soap*, _trt__AddAudioOutputConfigurationResponse* dst, _trt__AddAudioOutputConfigurationResponse *src) returns deep copy of _trt__AddAudioOutputConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioOutputConfigurationResponse(_trt__AddAudioOutputConfigurationResponse*) deep deletes _trt__AddAudioOutputConfigurationResponse data members, use only on dst after soap_dup__trt__AddAudioOutputConfigurationResponse(NULL, _trt__AddAudioOutputConfigurationResponse *dst, _trt__AddAudioOutputConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddAudioOutputConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration is a complexType.
///
/// @note struct _trt__RemoveAudioOutputConfiguration operations:
/// - _trt__RemoveAudioOutputConfiguration* soap_new__trt__RemoveAudioOutputConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveAudioOutputConfiguration(struct soap*, _trt__RemoveAudioOutputConfiguration*) default initialize members
/// - int soap_read__trt__RemoveAudioOutputConfiguration(struct soap*, _trt__RemoveAudioOutputConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveAudioOutputConfiguration(struct soap*, _trt__RemoveAudioOutputConfiguration*) serialize to a sink
/// - _trt__RemoveAudioOutputConfiguration* soap_dup__trt__RemoveAudioOutputConfiguration(struct soap*, _trt__RemoveAudioOutputConfiguration* dst, _trt__RemoveAudioOutputConfiguration *src) returns deep copy of _trt__RemoveAudioOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioOutputConfiguration(_trt__RemoveAudioOutputConfiguration*) deep deletes _trt__RemoveAudioOutputConfiguration data members, use only on dst after soap_dup__trt__RemoveAudioOutputConfiguration(NULL, _trt__RemoveAudioOutputConfiguration *dst, _trt__RemoveAudioOutputConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioOutputConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse is a complexType.
///
/// @note struct _trt__RemoveAudioOutputConfigurationResponse operations:
/// - _trt__RemoveAudioOutputConfigurationResponse* soap_new__trt__RemoveAudioOutputConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveAudioOutputConfigurationResponse(struct soap*, _trt__RemoveAudioOutputConfigurationResponse*) default initialize members
/// - int soap_read__trt__RemoveAudioOutputConfigurationResponse(struct soap*, _trt__RemoveAudioOutputConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveAudioOutputConfigurationResponse(struct soap*, _trt__RemoveAudioOutputConfigurationResponse*) serialize to a sink
/// - _trt__RemoveAudioOutputConfigurationResponse* soap_dup__trt__RemoveAudioOutputConfigurationResponse(struct soap*, _trt__RemoveAudioOutputConfigurationResponse* dst, _trt__RemoveAudioOutputConfigurationResponse *src) returns deep copy of _trt__RemoveAudioOutputConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioOutputConfigurationResponse(_trt__RemoveAudioOutputConfigurationResponse*) deep deletes _trt__RemoveAudioOutputConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveAudioOutputConfigurationResponse(NULL, _trt__RemoveAudioOutputConfigurationResponse *dst, _trt__RemoveAudioOutputConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioOutputConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration is a complexType.
///
/// @note struct _trt__AddAudioDecoderConfiguration operations:
/// - _trt__AddAudioDecoderConfiguration* soap_new__trt__AddAudioDecoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddAudioDecoderConfiguration(struct soap*, _trt__AddAudioDecoderConfiguration*) default initialize members
/// - int soap_read__trt__AddAudioDecoderConfiguration(struct soap*, _trt__AddAudioDecoderConfiguration*) deserialize from a source
/// - int soap_write__trt__AddAudioDecoderConfiguration(struct soap*, _trt__AddAudioDecoderConfiguration*) serialize to a sink
/// - _trt__AddAudioDecoderConfiguration* soap_dup__trt__AddAudioDecoderConfiguration(struct soap*, _trt__AddAudioDecoderConfiguration* dst, _trt__AddAudioDecoderConfiguration *src) returns deep copy of _trt__AddAudioDecoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioDecoderConfiguration(_trt__AddAudioDecoderConfiguration*) deep deletes _trt__AddAudioDecoderConfiguration data members, use only on dst after soap_dup__trt__AddAudioDecoderConfiguration(NULL, _trt__AddAudioDecoderConfiguration *dst, _trt__AddAudioDecoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddAudioDecoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile where the configuration should be added.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the AudioDecoderConfiguration to add.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse is a complexType.
///
/// @note struct _trt__AddAudioDecoderConfigurationResponse operations:
/// - _trt__AddAudioDecoderConfigurationResponse* soap_new__trt__AddAudioDecoderConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__AddAudioDecoderConfigurationResponse(struct soap*, _trt__AddAudioDecoderConfigurationResponse*) default initialize members
/// - int soap_read__trt__AddAudioDecoderConfigurationResponse(struct soap*, _trt__AddAudioDecoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddAudioDecoderConfigurationResponse(struct soap*, _trt__AddAudioDecoderConfigurationResponse*) serialize to a sink
/// - _trt__AddAudioDecoderConfigurationResponse* soap_dup__trt__AddAudioDecoderConfigurationResponse(struct soap*, _trt__AddAudioDecoderConfigurationResponse* dst, _trt__AddAudioDecoderConfigurationResponse *src) returns deep copy of _trt__AddAudioDecoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioDecoderConfigurationResponse(_trt__AddAudioDecoderConfigurationResponse*) deep deletes _trt__AddAudioDecoderConfigurationResponse data members, use only on dst after soap_dup__trt__AddAudioDecoderConfigurationResponse(NULL, _trt__AddAudioDecoderConfigurationResponse *dst, _trt__AddAudioDecoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddAudioDecoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration is a complexType.
///
/// @note struct _trt__RemoveAudioDecoderConfiguration operations:
/// - _trt__RemoveAudioDecoderConfiguration* soap_new__trt__RemoveAudioDecoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveAudioDecoderConfiguration(struct soap*, _trt__RemoveAudioDecoderConfiguration*) default initialize members
/// - int soap_read__trt__RemoveAudioDecoderConfiguration(struct soap*, _trt__RemoveAudioDecoderConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveAudioDecoderConfiguration(struct soap*, _trt__RemoveAudioDecoderConfiguration*) serialize to a sink
/// - _trt__RemoveAudioDecoderConfiguration* soap_dup__trt__RemoveAudioDecoderConfiguration(struct soap*, _trt__RemoveAudioDecoderConfiguration* dst, _trt__RemoveAudioDecoderConfiguration *src) returns deep copy of _trt__RemoveAudioDecoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioDecoderConfiguration(_trt__RemoveAudioDecoderConfiguration*) deep deletes _trt__RemoveAudioDecoderConfiguration data members, use only on dst after soap_dup__trt__RemoveAudioDecoderConfiguration(NULL, _trt__RemoveAudioDecoderConfiguration *dst, _trt__RemoveAudioDecoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioDecoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the media profile from which the AudioDecoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse is a complexType.
///
/// @note struct _trt__RemoveAudioDecoderConfigurationResponse operations:
/// - _trt__RemoveAudioDecoderConfigurationResponse* soap_new__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, _trt__RemoveAudioDecoderConfigurationResponse*) default initialize members
/// - int soap_read__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, _trt__RemoveAudioDecoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, _trt__RemoveAudioDecoderConfigurationResponse*) serialize to a sink
/// - _trt__RemoveAudioDecoderConfigurationResponse* soap_dup__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, _trt__RemoveAudioDecoderConfigurationResponse* dst, _trt__RemoveAudioDecoderConfigurationResponse *src) returns deep copy of _trt__RemoveAudioDecoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioDecoderConfigurationResponse(_trt__RemoveAudioDecoderConfigurationResponse*) deep deletes _trt__RemoveAudioDecoderConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveAudioDecoderConfigurationResponse(NULL, _trt__RemoveAudioDecoderConfigurationResponse *dst, _trt__RemoveAudioDecoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioDecoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteProfile is a complexType.
///
/// @note struct _trt__DeleteProfile operations:
/// - _trt__DeleteProfile* soap_new__trt__DeleteProfile(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*) default initialize members
/// - int soap_read__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*) deserialize from a source
/// - int soap_write__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*) serialize to a sink
/// - _trt__DeleteProfile* soap_dup__trt__DeleteProfile(struct soap*, _trt__DeleteProfile* dst, _trt__DeleteProfile *src) returns deep copy of _trt__DeleteProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__DeleteProfile(_trt__DeleteProfile*) deep deletes _trt__DeleteProfile data members, use only on dst after soap_dup__trt__DeleteProfile(NULL, _trt__DeleteProfile *dst, _trt__DeleteProfile *src) (use soapcpp2 -Ed)
struct _trt__DeleteProfile
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile that should be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse is a complexType.
///
/// @note struct _trt__DeleteProfileResponse operations:
/// - _trt__DeleteProfileResponse* soap_new__trt__DeleteProfileResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*) default initialize members
/// - int soap_read__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*) deserialize from a source
/// - int soap_write__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*) serialize to a sink
/// - _trt__DeleteProfileResponse* soap_dup__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse* dst, _trt__DeleteProfileResponse *src) returns deep copy of _trt__DeleteProfileResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__DeleteProfileResponse(_trt__DeleteProfileResponse*) deep deletes _trt__DeleteProfileResponse data members, use only on dst after soap_dup__trt__DeleteProfileResponse(NULL, _trt__DeleteProfileResponse *dst, _trt__DeleteProfileResponse *src) (use soapcpp2 -Ed)
struct _trt__DeleteProfileResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations is a complexType.
///
/// @note struct _trt__GetVideoEncoderConfigurations operations:
/// - _trt__GetVideoEncoderConfigurations* soap_new__trt__GetVideoEncoderConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoEncoderConfigurations(struct soap*, _trt__GetVideoEncoderConfigurations*) default initialize members
/// - int soap_read__trt__GetVideoEncoderConfigurations(struct soap*, _trt__GetVideoEncoderConfigurations*) deserialize from a source
/// - int soap_write__trt__GetVideoEncoderConfigurations(struct soap*, _trt__GetVideoEncoderConfigurations*) serialize to a sink
/// - _trt__GetVideoEncoderConfigurations* soap_dup__trt__GetVideoEncoderConfigurations(struct soap*, _trt__GetVideoEncoderConfigurations* dst, _trt__GetVideoEncoderConfigurations *src) returns deep copy of _trt__GetVideoEncoderConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoEncoderConfigurations(_trt__GetVideoEncoderConfigurations*) deep deletes _trt__GetVideoEncoderConfigurations data members, use only on dst after soap_dup__trt__GetVideoEncoderConfigurations(NULL, _trt__GetVideoEncoderConfigurations *dst, _trt__GetVideoEncoderConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetVideoEncoderConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetVideoEncoderConfigurationsResponse operations:
/// - _trt__GetVideoEncoderConfigurationsResponse* soap_new__trt__GetVideoEncoderConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoEncoderConfigurationsResponse(struct soap*, _trt__GetVideoEncoderConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetVideoEncoderConfigurationsResponse(struct soap*, _trt__GetVideoEncoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoEncoderConfigurationsResponse(struct soap*, _trt__GetVideoEncoderConfigurationsResponse*) serialize to a sink
/// - _trt__GetVideoEncoderConfigurationsResponse* soap_dup__trt__GetVideoEncoderConfigurationsResponse(struct soap*, _trt__GetVideoEncoderConfigurationsResponse* dst, _trt__GetVideoEncoderConfigurationsResponse *src) returns deep copy of _trt__GetVideoEncoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoEncoderConfigurationsResponse(_trt__GetVideoEncoderConfigurationsResponse*) deep deletes _trt__GetVideoEncoderConfigurationsResponse data members, use only on dst after soap_dup__trt__GetVideoEncoderConfigurationsResponse(NULL, _trt__GetVideoEncoderConfigurationsResponse *dst, _trt__GetVideoEncoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video encoder configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoEncoderConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__VideoEncoderConfiguration* of size 0..unbounded.
    struct tt__VideoEncoderConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations is a complexType.
///
/// @note struct _trt__GetVideoSourceConfigurations operations:
/// - _trt__GetVideoSourceConfigurations* soap_new__trt__GetVideoSourceConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoSourceConfigurations(struct soap*, _trt__GetVideoSourceConfigurations*) default initialize members
/// - int soap_read__trt__GetVideoSourceConfigurations(struct soap*, _trt__GetVideoSourceConfigurations*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceConfigurations(struct soap*, _trt__GetVideoSourceConfigurations*) serialize to a sink
/// - _trt__GetVideoSourceConfigurations* soap_dup__trt__GetVideoSourceConfigurations(struct soap*, _trt__GetVideoSourceConfigurations* dst, _trt__GetVideoSourceConfigurations *src) returns deep copy of _trt__GetVideoSourceConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceConfigurations(_trt__GetVideoSourceConfigurations*) deep deletes _trt__GetVideoSourceConfigurations data members, use only on dst after soap_dup__trt__GetVideoSourceConfigurations(NULL, _trt__GetVideoSourceConfigurations *dst, _trt__GetVideoSourceConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetVideoSourceConfigurationsResponse operations:
/// - _trt__GetVideoSourceConfigurationsResponse* soap_new__trt__GetVideoSourceConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoSourceConfigurationsResponse(struct soap*, _trt__GetVideoSourceConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetVideoSourceConfigurationsResponse(struct soap*, _trt__GetVideoSourceConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceConfigurationsResponse(struct soap*, _trt__GetVideoSourceConfigurationsResponse*) serialize to a sink
/// - _trt__GetVideoSourceConfigurationsResponse* soap_dup__trt__GetVideoSourceConfigurationsResponse(struct soap*, _trt__GetVideoSourceConfigurationsResponse* dst, _trt__GetVideoSourceConfigurationsResponse *src) returns deep copy of _trt__GetVideoSourceConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceConfigurationsResponse(_trt__GetVideoSourceConfigurationsResponse*) deep deletes _trt__GetVideoSourceConfigurationsResponse data members, use only on dst after soap_dup__trt__GetVideoSourceConfigurationsResponse(NULL, _trt__GetVideoSourceConfigurationsResponse *dst, _trt__GetVideoSourceConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video source configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoSourceConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__VideoSourceConfiguration* of size 0..unbounded.
    struct tt__VideoSourceConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations is a complexType.
///
/// @note struct _trt__GetAudioEncoderConfigurations operations:
/// - _trt__GetAudioEncoderConfigurations* soap_new__trt__GetAudioEncoderConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioEncoderConfigurations(struct soap*, _trt__GetAudioEncoderConfigurations*) default initialize members
/// - int soap_read__trt__GetAudioEncoderConfigurations(struct soap*, _trt__GetAudioEncoderConfigurations*) deserialize from a source
/// - int soap_write__trt__GetAudioEncoderConfigurations(struct soap*, _trt__GetAudioEncoderConfigurations*) serialize to a sink
/// - _trt__GetAudioEncoderConfigurations* soap_dup__trt__GetAudioEncoderConfigurations(struct soap*, _trt__GetAudioEncoderConfigurations* dst, _trt__GetAudioEncoderConfigurations *src) returns deep copy of _trt__GetAudioEncoderConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioEncoderConfigurations(_trt__GetAudioEncoderConfigurations*) deep deletes _trt__GetAudioEncoderConfigurations data members, use only on dst after soap_dup__trt__GetAudioEncoderConfigurations(NULL, _trt__GetAudioEncoderConfigurations *dst, _trt__GetAudioEncoderConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetAudioEncoderConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetAudioEncoderConfigurationsResponse operations:
/// - _trt__GetAudioEncoderConfigurationsResponse* soap_new__trt__GetAudioEncoderConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioEncoderConfigurationsResponse(struct soap*, _trt__GetAudioEncoderConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetAudioEncoderConfigurationsResponse(struct soap*, _trt__GetAudioEncoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioEncoderConfigurationsResponse(struct soap*, _trt__GetAudioEncoderConfigurationsResponse*) serialize to a sink
/// - _trt__GetAudioEncoderConfigurationsResponse* soap_dup__trt__GetAudioEncoderConfigurationsResponse(struct soap*, _trt__GetAudioEncoderConfigurationsResponse* dst, _trt__GetAudioEncoderConfigurationsResponse *src) returns deep copy of _trt__GetAudioEncoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioEncoderConfigurationsResponse(_trt__GetAudioEncoderConfigurationsResponse*) deep deletes _trt__GetAudioEncoderConfigurationsResponse data members, use only on dst after soap_dup__trt__GetAudioEncoderConfigurationsResponse(NULL, _trt__GetAudioEncoderConfigurationsResponse *dst, _trt__GetAudioEncoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio encoder configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioEncoderConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__AudioEncoderConfiguration* of size 0..unbounded.
    struct tt__AudioEncoderConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations is a complexType.
///
/// @note struct _trt__GetAudioSourceConfigurations operations:
/// - _trt__GetAudioSourceConfigurations* soap_new__trt__GetAudioSourceConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioSourceConfigurations(struct soap*, _trt__GetAudioSourceConfigurations*) default initialize members
/// - int soap_read__trt__GetAudioSourceConfigurations(struct soap*, _trt__GetAudioSourceConfigurations*) deserialize from a source
/// - int soap_write__trt__GetAudioSourceConfigurations(struct soap*, _trt__GetAudioSourceConfigurations*) serialize to a sink
/// - _trt__GetAudioSourceConfigurations* soap_dup__trt__GetAudioSourceConfigurations(struct soap*, _trt__GetAudioSourceConfigurations* dst, _trt__GetAudioSourceConfigurations *src) returns deep copy of _trt__GetAudioSourceConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSourceConfigurations(_trt__GetAudioSourceConfigurations*) deep deletes _trt__GetAudioSourceConfigurations data members, use only on dst after soap_dup__trt__GetAudioSourceConfigurations(NULL, _trt__GetAudioSourceConfigurations *dst, _trt__GetAudioSourceConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSourceConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetAudioSourceConfigurationsResponse operations:
/// - _trt__GetAudioSourceConfigurationsResponse* soap_new__trt__GetAudioSourceConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioSourceConfigurationsResponse(struct soap*, _trt__GetAudioSourceConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetAudioSourceConfigurationsResponse(struct soap*, _trt__GetAudioSourceConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioSourceConfigurationsResponse(struct soap*, _trt__GetAudioSourceConfigurationsResponse*) serialize to a sink
/// - _trt__GetAudioSourceConfigurationsResponse* soap_dup__trt__GetAudioSourceConfigurationsResponse(struct soap*, _trt__GetAudioSourceConfigurationsResponse* dst, _trt__GetAudioSourceConfigurationsResponse *src) returns deep copy of _trt__GetAudioSourceConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSourceConfigurationsResponse(_trt__GetAudioSourceConfigurationsResponse*) deep deletes _trt__GetAudioSourceConfigurationsResponse data members, use only on dst after soap_dup__trt__GetAudioSourceConfigurationsResponse(NULL, _trt__GetAudioSourceConfigurationsResponse *dst, _trt__GetAudioSourceConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio source configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioSourceConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__AudioSourceConfiguration* of size 0..unbounded.
    struct tt__AudioSourceConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations is a complexType.
///
/// @note struct _trt__GetVideoAnalyticsConfigurations operations:
/// - _trt__GetVideoAnalyticsConfigurations* soap_new__trt__GetVideoAnalyticsConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoAnalyticsConfigurations(struct soap*, _trt__GetVideoAnalyticsConfigurations*) default initialize members
/// - int soap_read__trt__GetVideoAnalyticsConfigurations(struct soap*, _trt__GetVideoAnalyticsConfigurations*) deserialize from a source
/// - int soap_write__trt__GetVideoAnalyticsConfigurations(struct soap*, _trt__GetVideoAnalyticsConfigurations*) serialize to a sink
/// - _trt__GetVideoAnalyticsConfigurations* soap_dup__trt__GetVideoAnalyticsConfigurations(struct soap*, _trt__GetVideoAnalyticsConfigurations* dst, _trt__GetVideoAnalyticsConfigurations *src) returns deep copy of _trt__GetVideoAnalyticsConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoAnalyticsConfigurations(_trt__GetVideoAnalyticsConfigurations*) deep deletes _trt__GetVideoAnalyticsConfigurations data members, use only on dst after soap_dup__trt__GetVideoAnalyticsConfigurations(NULL, _trt__GetVideoAnalyticsConfigurations *dst, _trt__GetVideoAnalyticsConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetVideoAnalyticsConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetVideoAnalyticsConfigurationsResponse operations:
/// - _trt__GetVideoAnalyticsConfigurationsResponse* soap_new__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationsResponse*) serialize to a sink
/// - _trt__GetVideoAnalyticsConfigurationsResponse* soap_dup__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationsResponse* dst, _trt__GetVideoAnalyticsConfigurationsResponse *src) returns deep copy of _trt__GetVideoAnalyticsConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoAnalyticsConfigurationsResponse(_trt__GetVideoAnalyticsConfigurationsResponse*) deep deletes _trt__GetVideoAnalyticsConfigurationsResponse data members, use only on dst after soap_dup__trt__GetVideoAnalyticsConfigurationsResponse(NULL, _trt__GetVideoAnalyticsConfigurationsResponse *dst, _trt__GetVideoAnalyticsConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoAnalyticsConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of VideoAnalytics configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoAnalyticsConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__VideoAnalyticsConfiguration* of size 0..unbounded.
    struct tt__VideoAnalyticsConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations is a complexType.
///
/// @note struct _trt__GetMetadataConfigurations operations:
/// - _trt__GetMetadataConfigurations* soap_new__trt__GetMetadataConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetMetadataConfigurations(struct soap*, _trt__GetMetadataConfigurations*) default initialize members
/// - int soap_read__trt__GetMetadataConfigurations(struct soap*, _trt__GetMetadataConfigurations*) deserialize from a source
/// - int soap_write__trt__GetMetadataConfigurations(struct soap*, _trt__GetMetadataConfigurations*) serialize to a sink
/// - _trt__GetMetadataConfigurations* soap_dup__trt__GetMetadataConfigurations(struct soap*, _trt__GetMetadataConfigurations* dst, _trt__GetMetadataConfigurations *src) returns deep copy of _trt__GetMetadataConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetMetadataConfigurations(_trt__GetMetadataConfigurations*) deep deletes _trt__GetMetadataConfigurations data members, use only on dst after soap_dup__trt__GetMetadataConfigurations(NULL, _trt__GetMetadataConfigurations *dst, _trt__GetMetadataConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetMetadataConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetMetadataConfigurationsResponse operations:
/// - _trt__GetMetadataConfigurationsResponse* soap_new__trt__GetMetadataConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetMetadataConfigurationsResponse(struct soap*, _trt__GetMetadataConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetMetadataConfigurationsResponse(struct soap*, _trt__GetMetadataConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetMetadataConfigurationsResponse(struct soap*, _trt__GetMetadataConfigurationsResponse*) serialize to a sink
/// - _trt__GetMetadataConfigurationsResponse* soap_dup__trt__GetMetadataConfigurationsResponse(struct soap*, _trt__GetMetadataConfigurationsResponse* dst, _trt__GetMetadataConfigurationsResponse *src) returns deep copy of _trt__GetMetadataConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetMetadataConfigurationsResponse(_trt__GetMetadataConfigurationsResponse*) deep deletes _trt__GetMetadataConfigurationsResponse data members, use only on dst after soap_dup__trt__GetMetadataConfigurationsResponse(NULL, _trt__GetMetadataConfigurationsResponse *dst, _trt__GetMetadataConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetMetadataConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of metadata configurations
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__MetadataConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__MetadataConfiguration* of size 0..unbounded.
    struct tt__MetadataConfiguration*    Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations is a complexType.
///
/// @note struct _trt__GetAudioOutputConfigurations operations:
/// - _trt__GetAudioOutputConfigurations* soap_new__trt__GetAudioOutputConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioOutputConfigurations(struct soap*, _trt__GetAudioOutputConfigurations*) default initialize members
/// - int soap_read__trt__GetAudioOutputConfigurations(struct soap*, _trt__GetAudioOutputConfigurations*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputConfigurations(struct soap*, _trt__GetAudioOutputConfigurations*) serialize to a sink
/// - _trt__GetAudioOutputConfigurations* soap_dup__trt__GetAudioOutputConfigurations(struct soap*, _trt__GetAudioOutputConfigurations* dst, _trt__GetAudioOutputConfigurations *src) returns deep copy of _trt__GetAudioOutputConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputConfigurations(_trt__GetAudioOutputConfigurations*) deep deletes _trt__GetAudioOutputConfigurations data members, use only on dst after soap_dup__trt__GetAudioOutputConfigurations(NULL, _trt__GetAudioOutputConfigurations *dst, _trt__GetAudioOutputConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetAudioOutputConfigurationsResponse operations:
/// - _trt__GetAudioOutputConfigurationsResponse* soap_new__trt__GetAudioOutputConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioOutputConfigurationsResponse(struct soap*, _trt__GetAudioOutputConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetAudioOutputConfigurationsResponse(struct soap*, _trt__GetAudioOutputConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputConfigurationsResponse(struct soap*, _trt__GetAudioOutputConfigurationsResponse*) serialize to a sink
/// - _trt__GetAudioOutputConfigurationsResponse* soap_dup__trt__GetAudioOutputConfigurationsResponse(struct soap*, _trt__GetAudioOutputConfigurationsResponse* dst, _trt__GetAudioOutputConfigurationsResponse *src) returns deep copy of _trt__GetAudioOutputConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputConfigurationsResponse(_trt__GetAudioOutputConfigurationsResponse*) deep deletes _trt__GetAudioOutputConfigurationsResponse data members, use only on dst after soap_dup__trt__GetAudioOutputConfigurationsResponse(NULL, _trt__GetAudioOutputConfigurationsResponse *dst, _trt__GetAudioOutputConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio output configurations
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioOutputConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__AudioOutputConfiguration* of size 0..unbounded.
    struct tt__AudioOutputConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations is a complexType.
///
/// @note struct _trt__GetAudioDecoderConfigurations operations:
/// - _trt__GetAudioDecoderConfigurations* soap_new__trt__GetAudioDecoderConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioDecoderConfigurations(struct soap*, _trt__GetAudioDecoderConfigurations*) default initialize members
/// - int soap_read__trt__GetAudioDecoderConfigurations(struct soap*, _trt__GetAudioDecoderConfigurations*) deserialize from a source
/// - int soap_write__trt__GetAudioDecoderConfigurations(struct soap*, _trt__GetAudioDecoderConfigurations*) serialize to a sink
/// - _trt__GetAudioDecoderConfigurations* soap_dup__trt__GetAudioDecoderConfigurations(struct soap*, _trt__GetAudioDecoderConfigurations* dst, _trt__GetAudioDecoderConfigurations *src) returns deep copy of _trt__GetAudioDecoderConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioDecoderConfigurations(_trt__GetAudioDecoderConfigurations*) deep deletes _trt__GetAudioDecoderConfigurations data members, use only on dst after soap_dup__trt__GetAudioDecoderConfigurations(NULL, _trt__GetAudioDecoderConfigurations *dst, _trt__GetAudioDecoderConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetAudioDecoderConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetAudioDecoderConfigurationsResponse operations:
/// - _trt__GetAudioDecoderConfigurationsResponse* soap_new__trt__GetAudioDecoderConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioDecoderConfigurationsResponse(struct soap*, _trt__GetAudioDecoderConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetAudioDecoderConfigurationsResponse(struct soap*, _trt__GetAudioDecoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioDecoderConfigurationsResponse(struct soap*, _trt__GetAudioDecoderConfigurationsResponse*) serialize to a sink
/// - _trt__GetAudioDecoderConfigurationsResponse* soap_dup__trt__GetAudioDecoderConfigurationsResponse(struct soap*, _trt__GetAudioDecoderConfigurationsResponse* dst, _trt__GetAudioDecoderConfigurationsResponse *src) returns deep copy of _trt__GetAudioDecoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioDecoderConfigurationsResponse(_trt__GetAudioDecoderConfigurationsResponse*) deep deletes _trt__GetAudioDecoderConfigurationsResponse data members, use only on dst after soap_dup__trt__GetAudioDecoderConfigurationsResponse(NULL, _trt__GetAudioDecoderConfigurationsResponse *dst, _trt__GetAudioDecoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioDecoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio decoder configurations
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioDecoderConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__AudioDecoderConfiguration* of size 0..unbounded.
    struct tt__AudioDecoderConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration is a complexType.
///
/// @note struct _trt__GetVideoSourceConfiguration operations:
/// - _trt__GetVideoSourceConfiguration* soap_new__trt__GetVideoSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoSourceConfiguration(struct soap*, _trt__GetVideoSourceConfiguration*) default initialize members
/// - int soap_read__trt__GetVideoSourceConfiguration(struct soap*, _trt__GetVideoSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceConfiguration(struct soap*, _trt__GetVideoSourceConfiguration*) serialize to a sink
/// - _trt__GetVideoSourceConfiguration* soap_dup__trt__GetVideoSourceConfiguration(struct soap*, _trt__GetVideoSourceConfiguration* dst, _trt__GetVideoSourceConfiguration *src) returns deep copy of _trt__GetVideoSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceConfiguration(_trt__GetVideoSourceConfiguration*) deep deletes _trt__GetVideoSourceConfiguration data members, use only on dst after soap_dup__trt__GetVideoSourceConfiguration(NULL, _trt__GetVideoSourceConfiguration *dst, _trt__GetVideoSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested video source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse is a complexType.
///
/// @note struct _trt__GetVideoSourceConfigurationResponse operations:
/// - _trt__GetVideoSourceConfigurationResponse* soap_new__trt__GetVideoSourceConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoSourceConfigurationResponse(struct soap*, _trt__GetVideoSourceConfigurationResponse*) default initialize members
/// - int soap_read__trt__GetVideoSourceConfigurationResponse(struct soap*, _trt__GetVideoSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceConfigurationResponse(struct soap*, _trt__GetVideoSourceConfigurationResponse*) serialize to a sink
/// - _trt__GetVideoSourceConfigurationResponse* soap_dup__trt__GetVideoSourceConfigurationResponse(struct soap*, _trt__GetVideoSourceConfigurationResponse* dst, _trt__GetVideoSourceConfigurationResponse *src) returns deep copy of _trt__GetVideoSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceConfigurationResponse(_trt__GetVideoSourceConfigurationResponse*) deep deletes _trt__GetVideoSourceConfigurationResponse data members, use only on dst after soap_dup__trt__GetVideoSourceConfigurationResponse(NULL, _trt__GetVideoSourceConfigurationResponse *dst, _trt__GetVideoSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested video source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration is a complexType.
///
/// @note struct _trt__GetVideoEncoderConfiguration operations:
/// - _trt__GetVideoEncoderConfiguration* soap_new__trt__GetVideoEncoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoEncoderConfiguration(struct soap*, _trt__GetVideoEncoderConfiguration*) default initialize members
/// - int soap_read__trt__GetVideoEncoderConfiguration(struct soap*, _trt__GetVideoEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__GetVideoEncoderConfiguration(struct soap*, _trt__GetVideoEncoderConfiguration*) serialize to a sink
/// - _trt__GetVideoEncoderConfiguration* soap_dup__trt__GetVideoEncoderConfiguration(struct soap*, _trt__GetVideoEncoderConfiguration* dst, _trt__GetVideoEncoderConfiguration *src) returns deep copy of _trt__GetVideoEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoEncoderConfiguration(_trt__GetVideoEncoderConfiguration*) deep deletes _trt__GetVideoEncoderConfiguration data members, use only on dst after soap_dup__trt__GetVideoEncoderConfiguration(NULL, _trt__GetVideoEncoderConfiguration *dst, _trt__GetVideoEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetVideoEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested video encoder configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse is a complexType.
///
/// @note struct _trt__GetVideoEncoderConfigurationResponse operations:
/// - _trt__GetVideoEncoderConfigurationResponse* soap_new__trt__GetVideoEncoderConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoEncoderConfigurationResponse(struct soap*, _trt__GetVideoEncoderConfigurationResponse*) default initialize members
/// - int soap_read__trt__GetVideoEncoderConfigurationResponse(struct soap*, _trt__GetVideoEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoEncoderConfigurationResponse(struct soap*, _trt__GetVideoEncoderConfigurationResponse*) serialize to a sink
/// - _trt__GetVideoEncoderConfigurationResponse* soap_dup__trt__GetVideoEncoderConfigurationResponse(struct soap*, _trt__GetVideoEncoderConfigurationResponse* dst, _trt__GetVideoEncoderConfigurationResponse *src) returns deep copy of _trt__GetVideoEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoEncoderConfigurationResponse(_trt__GetVideoEncoderConfigurationResponse*) deep deletes _trt__GetVideoEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__GetVideoEncoderConfigurationResponse(NULL, _trt__GetVideoEncoderConfigurationResponse *dst, _trt__GetVideoEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoEncoderConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested video encoder configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration is a complexType.
///
/// @note struct _trt__GetAudioSourceConfiguration operations:
/// - _trt__GetAudioSourceConfiguration* soap_new__trt__GetAudioSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioSourceConfiguration(struct soap*, _trt__GetAudioSourceConfiguration*) default initialize members
/// - int soap_read__trt__GetAudioSourceConfiguration(struct soap*, _trt__GetAudioSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__GetAudioSourceConfiguration(struct soap*, _trt__GetAudioSourceConfiguration*) serialize to a sink
/// - _trt__GetAudioSourceConfiguration* soap_dup__trt__GetAudioSourceConfiguration(struct soap*, _trt__GetAudioSourceConfiguration* dst, _trt__GetAudioSourceConfiguration *src) returns deep copy of _trt__GetAudioSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSourceConfiguration(_trt__GetAudioSourceConfiguration*) deep deletes _trt__GetAudioSourceConfiguration data members, use only on dst after soap_dup__trt__GetAudioSourceConfiguration(NULL, _trt__GetAudioSourceConfiguration *dst, _trt__GetAudioSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse is a complexType.
///
/// @note struct _trt__GetAudioSourceConfigurationResponse operations:
/// - _trt__GetAudioSourceConfigurationResponse* soap_new__trt__GetAudioSourceConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioSourceConfigurationResponse(struct soap*, _trt__GetAudioSourceConfigurationResponse*) default initialize members
/// - int soap_read__trt__GetAudioSourceConfigurationResponse(struct soap*, _trt__GetAudioSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioSourceConfigurationResponse(struct soap*, _trt__GetAudioSourceConfigurationResponse*) serialize to a sink
/// - _trt__GetAudioSourceConfigurationResponse* soap_dup__trt__GetAudioSourceConfigurationResponse(struct soap*, _trt__GetAudioSourceConfigurationResponse* dst, _trt__GetAudioSourceConfigurationResponse *src) returns deep copy of _trt__GetAudioSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSourceConfigurationResponse(_trt__GetAudioSourceConfigurationResponse*) deep deletes _trt__GetAudioSourceConfigurationResponse data members, use only on dst after soap_dup__trt__GetAudioSourceConfigurationResponse(NULL, _trt__GetAudioSourceConfigurationResponse *dst, _trt__GetAudioSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSourceConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested audio source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration is a complexType.
///
/// @note struct _trt__GetAudioEncoderConfiguration operations:
/// - _trt__GetAudioEncoderConfiguration* soap_new__trt__GetAudioEncoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioEncoderConfiguration(struct soap*, _trt__GetAudioEncoderConfiguration*) default initialize members
/// - int soap_read__trt__GetAudioEncoderConfiguration(struct soap*, _trt__GetAudioEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__GetAudioEncoderConfiguration(struct soap*, _trt__GetAudioEncoderConfiguration*) serialize to a sink
/// - _trt__GetAudioEncoderConfiguration* soap_dup__trt__GetAudioEncoderConfiguration(struct soap*, _trt__GetAudioEncoderConfiguration* dst, _trt__GetAudioEncoderConfiguration *src) returns deep copy of _trt__GetAudioEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioEncoderConfiguration(_trt__GetAudioEncoderConfiguration*) deep deletes _trt__GetAudioEncoderConfiguration data members, use only on dst after soap_dup__trt__GetAudioEncoderConfiguration(NULL, _trt__GetAudioEncoderConfiguration *dst, _trt__GetAudioEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetAudioEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio encoder configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse is a complexType.
///
/// @note struct _trt__GetAudioEncoderConfigurationResponse operations:
/// - _trt__GetAudioEncoderConfigurationResponse* soap_new__trt__GetAudioEncoderConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioEncoderConfigurationResponse(struct soap*, _trt__GetAudioEncoderConfigurationResponse*) default initialize members
/// - int soap_read__trt__GetAudioEncoderConfigurationResponse(struct soap*, _trt__GetAudioEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioEncoderConfigurationResponse(struct soap*, _trt__GetAudioEncoderConfigurationResponse*) serialize to a sink
/// - _trt__GetAudioEncoderConfigurationResponse* soap_dup__trt__GetAudioEncoderConfigurationResponse(struct soap*, _trt__GetAudioEncoderConfigurationResponse* dst, _trt__GetAudioEncoderConfigurationResponse *src) returns deep copy of _trt__GetAudioEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioEncoderConfigurationResponse(_trt__GetAudioEncoderConfigurationResponse*) deep deletes _trt__GetAudioEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__GetAudioEncoderConfigurationResponse(NULL, _trt__GetAudioEncoderConfigurationResponse *dst, _trt__GetAudioEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioEncoderConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested audio encoder configuration
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    struct tt__AudioEncoderConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration is a complexType.
///
/// @note struct _trt__GetVideoAnalyticsConfiguration operations:
/// - _trt__GetVideoAnalyticsConfiguration* soap_new__trt__GetVideoAnalyticsConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoAnalyticsConfiguration(struct soap*, _trt__GetVideoAnalyticsConfiguration*) default initialize members
/// - int soap_read__trt__GetVideoAnalyticsConfiguration(struct soap*, _trt__GetVideoAnalyticsConfiguration*) deserialize from a source
/// - int soap_write__trt__GetVideoAnalyticsConfiguration(struct soap*, _trt__GetVideoAnalyticsConfiguration*) serialize to a sink
/// - _trt__GetVideoAnalyticsConfiguration* soap_dup__trt__GetVideoAnalyticsConfiguration(struct soap*, _trt__GetVideoAnalyticsConfiguration* dst, _trt__GetVideoAnalyticsConfiguration *src) returns deep copy of _trt__GetVideoAnalyticsConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoAnalyticsConfiguration(_trt__GetVideoAnalyticsConfiguration*) deep deletes _trt__GetVideoAnalyticsConfiguration data members, use only on dst after soap_dup__trt__GetVideoAnalyticsConfiguration(NULL, _trt__GetVideoAnalyticsConfiguration *dst, _trt__GetVideoAnalyticsConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetVideoAnalyticsConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested video analytics configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse is a complexType.
///
/// @note struct _trt__GetVideoAnalyticsConfigurationResponse operations:
/// - _trt__GetVideoAnalyticsConfigurationResponse* soap_new__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationResponse*) default initialize members
/// - int soap_read__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationResponse*) serialize to a sink
/// - _trt__GetVideoAnalyticsConfigurationResponse* soap_dup__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationResponse* dst, _trt__GetVideoAnalyticsConfigurationResponse *src) returns deep copy of _trt__GetVideoAnalyticsConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoAnalyticsConfigurationResponse(_trt__GetVideoAnalyticsConfigurationResponse*) deep deletes _trt__GetVideoAnalyticsConfigurationResponse data members, use only on dst after soap_dup__trt__GetVideoAnalyticsConfigurationResponse(NULL, _trt__GetVideoAnalyticsConfigurationResponse *dst, _trt__GetVideoAnalyticsConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoAnalyticsConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested video analytics configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration is a complexType.
///
/// @note struct _trt__GetMetadataConfiguration operations:
/// - _trt__GetMetadataConfiguration* soap_new__trt__GetMetadataConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetMetadataConfiguration(struct soap*, _trt__GetMetadataConfiguration*) default initialize members
/// - int soap_read__trt__GetMetadataConfiguration(struct soap*, _trt__GetMetadataConfiguration*) deserialize from a source
/// - int soap_write__trt__GetMetadataConfiguration(struct soap*, _trt__GetMetadataConfiguration*) serialize to a sink
/// - _trt__GetMetadataConfiguration* soap_dup__trt__GetMetadataConfiguration(struct soap*, _trt__GetMetadataConfiguration* dst, _trt__GetMetadataConfiguration *src) returns deep copy of _trt__GetMetadataConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetMetadataConfiguration(_trt__GetMetadataConfiguration*) deep deletes _trt__GetMetadataConfiguration data members, use only on dst after soap_dup__trt__GetMetadataConfiguration(NULL, _trt__GetMetadataConfiguration *dst, _trt__GetMetadataConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetMetadataConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested metadata configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse is a complexType.
///
/// @note struct _trt__GetMetadataConfigurationResponse operations:
/// - _trt__GetMetadataConfigurationResponse* soap_new__trt__GetMetadataConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetMetadataConfigurationResponse(struct soap*, _trt__GetMetadataConfigurationResponse*) default initialize members
/// - int soap_read__trt__GetMetadataConfigurationResponse(struct soap*, _trt__GetMetadataConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetMetadataConfigurationResponse(struct soap*, _trt__GetMetadataConfigurationResponse*) serialize to a sink
/// - _trt__GetMetadataConfigurationResponse* soap_dup__trt__GetMetadataConfigurationResponse(struct soap*, _trt__GetMetadataConfigurationResponse* dst, _trt__GetMetadataConfigurationResponse *src) returns deep copy of _trt__GetMetadataConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetMetadataConfigurationResponse(_trt__GetMetadataConfigurationResponse*) deep deletes _trt__GetMetadataConfigurationResponse data members, use only on dst after soap_dup__trt__GetMetadataConfigurationResponse(NULL, _trt__GetMetadataConfigurationResponse *dst, _trt__GetMetadataConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetMetadataConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested metadata configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    struct tt__MetadataConfiguration*    Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration is a complexType.
///
/// @note struct _trt__GetAudioOutputConfiguration operations:
/// - _trt__GetAudioOutputConfiguration* soap_new__trt__GetAudioOutputConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioOutputConfiguration(struct soap*, _trt__GetAudioOutputConfiguration*) default initialize members
/// - int soap_read__trt__GetAudioOutputConfiguration(struct soap*, _trt__GetAudioOutputConfiguration*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputConfiguration(struct soap*, _trt__GetAudioOutputConfiguration*) serialize to a sink
/// - _trt__GetAudioOutputConfiguration* soap_dup__trt__GetAudioOutputConfiguration(struct soap*, _trt__GetAudioOutputConfiguration* dst, _trt__GetAudioOutputConfiguration *src) returns deep copy of _trt__GetAudioOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputConfiguration(_trt__GetAudioOutputConfiguration*) deep deletes _trt__GetAudioOutputConfiguration data members, use only on dst after soap_dup__trt__GetAudioOutputConfiguration(NULL, _trt__GetAudioOutputConfiguration *dst, _trt__GetAudioOutputConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio output configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse is a complexType.
///
/// @note struct _trt__GetAudioOutputConfigurationResponse operations:
/// - _trt__GetAudioOutputConfigurationResponse* soap_new__trt__GetAudioOutputConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioOutputConfigurationResponse(struct soap*, _trt__GetAudioOutputConfigurationResponse*) default initialize members
/// - int soap_read__trt__GetAudioOutputConfigurationResponse(struct soap*, _trt__GetAudioOutputConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputConfigurationResponse(struct soap*, _trt__GetAudioOutputConfigurationResponse*) serialize to a sink
/// - _trt__GetAudioOutputConfigurationResponse* soap_dup__trt__GetAudioOutputConfigurationResponse(struct soap*, _trt__GetAudioOutputConfigurationResponse* dst, _trt__GetAudioOutputConfigurationResponse *src) returns deep copy of _trt__GetAudioOutputConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputConfigurationResponse(_trt__GetAudioOutputConfigurationResponse*) deep deletes _trt__GetAudioOutputConfigurationResponse data members, use only on dst after soap_dup__trt__GetAudioOutputConfigurationResponse(NULL, _trt__GetAudioOutputConfigurationResponse *dst, _trt__GetAudioOutputConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested audio output configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration is a complexType.
///
/// @note struct _trt__GetAudioDecoderConfiguration operations:
/// - _trt__GetAudioDecoderConfiguration* soap_new__trt__GetAudioDecoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioDecoderConfiguration(struct soap*, _trt__GetAudioDecoderConfiguration*) default initialize members
/// - int soap_read__trt__GetAudioDecoderConfiguration(struct soap*, _trt__GetAudioDecoderConfiguration*) deserialize from a source
/// - int soap_write__trt__GetAudioDecoderConfiguration(struct soap*, _trt__GetAudioDecoderConfiguration*) serialize to a sink
/// - _trt__GetAudioDecoderConfiguration* soap_dup__trt__GetAudioDecoderConfiguration(struct soap*, _trt__GetAudioDecoderConfiguration* dst, _trt__GetAudioDecoderConfiguration *src) returns deep copy of _trt__GetAudioDecoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioDecoderConfiguration(_trt__GetAudioDecoderConfiguration*) deep deletes _trt__GetAudioDecoderConfiguration data members, use only on dst after soap_dup__trt__GetAudioDecoderConfiguration(NULL, _trt__GetAudioDecoderConfiguration *dst, _trt__GetAudioDecoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetAudioDecoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio decoder configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse is a complexType.
///
/// @note struct _trt__GetAudioDecoderConfigurationResponse operations:
/// - _trt__GetAudioDecoderConfigurationResponse* soap_new__trt__GetAudioDecoderConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioDecoderConfigurationResponse(struct soap*, _trt__GetAudioDecoderConfigurationResponse*) default initialize members
/// - int soap_read__trt__GetAudioDecoderConfigurationResponse(struct soap*, _trt__GetAudioDecoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioDecoderConfigurationResponse(struct soap*, _trt__GetAudioDecoderConfigurationResponse*) serialize to a sink
/// - _trt__GetAudioDecoderConfigurationResponse* soap_dup__trt__GetAudioDecoderConfigurationResponse(struct soap*, _trt__GetAudioDecoderConfigurationResponse* dst, _trt__GetAudioDecoderConfigurationResponse *src) returns deep copy of _trt__GetAudioDecoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioDecoderConfigurationResponse(_trt__GetAudioDecoderConfigurationResponse*) deep deletes _trt__GetAudioDecoderConfigurationResponse data members, use only on dst after soap_dup__trt__GetAudioDecoderConfigurationResponse(NULL, _trt__GetAudioDecoderConfigurationResponse *dst, _trt__GetAudioDecoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioDecoderConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested audio decoder configuration
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    struct tt__AudioDecoderConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations is a complexType.
///
/// @note struct _trt__GetCompatibleVideoEncoderConfigurations operations:
/// - _trt__GetCompatibleVideoEncoderConfigurations* soap_new__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, _trt__GetCompatibleVideoEncoderConfigurations*) default initialize members
/// - int soap_read__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, _trt__GetCompatibleVideoEncoderConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, _trt__GetCompatibleVideoEncoderConfigurations*) serialize to a sink
/// - _trt__GetCompatibleVideoEncoderConfigurations* soap_dup__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, _trt__GetCompatibleVideoEncoderConfigurations* dst, _trt__GetCompatibleVideoEncoderConfigurations *src) returns deep copy of _trt__GetCompatibleVideoEncoderConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleVideoEncoderConfigurations(_trt__GetCompatibleVideoEncoderConfigurations*) deep deletes _trt__GetCompatibleVideoEncoderConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleVideoEncoderConfigurations(NULL, _trt__GetCompatibleVideoEncoderConfigurations *dst, _trt__GetCompatibleVideoEncoderConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleVideoEncoderConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetCompatibleVideoEncoderConfigurationsResponse operations:
/// - _trt__GetCompatibleVideoEncoderConfigurationsResponse* soap_new__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleVideoEncoderConfigurationsResponse* soap_dup__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse* dst, _trt__GetCompatibleVideoEncoderConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleVideoEncoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleVideoEncoderConfigurationsResponse(_trt__GetCompatibleVideoEncoderConfigurationsResponse*) deep deletes _trt__GetCompatibleVideoEncoderConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleVideoEncoderConfigurationsResponse(NULL, _trt__GetCompatibleVideoEncoderConfigurationsResponse *dst, _trt__GetCompatibleVideoEncoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleVideoEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of video encoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoEncoderConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__VideoEncoderConfiguration* of size 0..unbounded.
    struct tt__VideoEncoderConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations is a complexType.
///
/// @note struct _trt__GetCompatibleVideoSourceConfigurations operations:
/// - _trt__GetCompatibleVideoSourceConfigurations* soap_new__trt__GetCompatibleVideoSourceConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleVideoSourceConfigurations(struct soap*, _trt__GetCompatibleVideoSourceConfigurations*) default initialize members
/// - int soap_read__trt__GetCompatibleVideoSourceConfigurations(struct soap*, _trt__GetCompatibleVideoSourceConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleVideoSourceConfigurations(struct soap*, _trt__GetCompatibleVideoSourceConfigurations*) serialize to a sink
/// - _trt__GetCompatibleVideoSourceConfigurations* soap_dup__trt__GetCompatibleVideoSourceConfigurations(struct soap*, _trt__GetCompatibleVideoSourceConfigurations* dst, _trt__GetCompatibleVideoSourceConfigurations *src) returns deep copy of _trt__GetCompatibleVideoSourceConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleVideoSourceConfigurations(_trt__GetCompatibleVideoSourceConfigurations*) deep deletes _trt__GetCompatibleVideoSourceConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleVideoSourceConfigurations(NULL, _trt__GetCompatibleVideoSourceConfigurations *dst, _trt__GetCompatibleVideoSourceConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleVideoSourceConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetCompatibleVideoSourceConfigurationsResponse operations:
/// - _trt__GetCompatibleVideoSourceConfigurationsResponse* soap_new__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleVideoSourceConfigurationsResponse* soap_dup__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse* dst, _trt__GetCompatibleVideoSourceConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleVideoSourceConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleVideoSourceConfigurationsResponse(_trt__GetCompatibleVideoSourceConfigurationsResponse*) deep deletes _trt__GetCompatibleVideoSourceConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleVideoSourceConfigurationsResponse(NULL, _trt__GetCompatibleVideoSourceConfigurationsResponse *dst, _trt__GetCompatibleVideoSourceConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleVideoSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of video source configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoSourceConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__VideoSourceConfiguration* of size 0..unbounded.
    struct tt__VideoSourceConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations is a complexType.
///
/// @note struct _trt__GetCompatibleAudioEncoderConfigurations operations:
/// - _trt__GetCompatibleAudioEncoderConfigurations* soap_new__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, _trt__GetCompatibleAudioEncoderConfigurations*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, _trt__GetCompatibleAudioEncoderConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, _trt__GetCompatibleAudioEncoderConfigurations*) serialize to a sink
/// - _trt__GetCompatibleAudioEncoderConfigurations* soap_dup__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, _trt__GetCompatibleAudioEncoderConfigurations* dst, _trt__GetCompatibleAudioEncoderConfigurations *src) returns deep copy of _trt__GetCompatibleAudioEncoderConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioEncoderConfigurations(_trt__GetCompatibleAudioEncoderConfigurations*) deep deletes _trt__GetCompatibleAudioEncoderConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleAudioEncoderConfigurations(NULL, _trt__GetCompatibleAudioEncoderConfigurations *dst, _trt__GetCompatibleAudioEncoderConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioEncoderConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetCompatibleAudioEncoderConfigurationsResponse operations:
/// - _trt__GetCompatibleAudioEncoderConfigurationsResponse* soap_new__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleAudioEncoderConfigurationsResponse* soap_dup__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse* dst, _trt__GetCompatibleAudioEncoderConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleAudioEncoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioEncoderConfigurationsResponse(_trt__GetCompatibleAudioEncoderConfigurationsResponse*) deep deletes _trt__GetCompatibleAudioEncoderConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleAudioEncoderConfigurationsResponse(NULL, _trt__GetCompatibleAudioEncoderConfigurationsResponse *dst, _trt__GetCompatibleAudioEncoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio encoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioEncoderConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__AudioEncoderConfiguration* of size 0..unbounded.
    struct tt__AudioEncoderConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations is a complexType.
///
/// @note struct _trt__GetCompatibleAudioSourceConfigurations operations:
/// - _trt__GetCompatibleAudioSourceConfigurations* soap_new__trt__GetCompatibleAudioSourceConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleAudioSourceConfigurations(struct soap*, _trt__GetCompatibleAudioSourceConfigurations*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioSourceConfigurations(struct soap*, _trt__GetCompatibleAudioSourceConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioSourceConfigurations(struct soap*, _trt__GetCompatibleAudioSourceConfigurations*) serialize to a sink
/// - _trt__GetCompatibleAudioSourceConfigurations* soap_dup__trt__GetCompatibleAudioSourceConfigurations(struct soap*, _trt__GetCompatibleAudioSourceConfigurations* dst, _trt__GetCompatibleAudioSourceConfigurations *src) returns deep copy of _trt__GetCompatibleAudioSourceConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioSourceConfigurations(_trt__GetCompatibleAudioSourceConfigurations*) deep deletes _trt__GetCompatibleAudioSourceConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleAudioSourceConfigurations(NULL, _trt__GetCompatibleAudioSourceConfigurations *dst, _trt__GetCompatibleAudioSourceConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioSourceConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetCompatibleAudioSourceConfigurationsResponse operations:
/// - _trt__GetCompatibleAudioSourceConfigurationsResponse* soap_new__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleAudioSourceConfigurationsResponse* soap_dup__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse* dst, _trt__GetCompatibleAudioSourceConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleAudioSourceConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioSourceConfigurationsResponse(_trt__GetCompatibleAudioSourceConfigurationsResponse*) deep deletes _trt__GetCompatibleAudioSourceConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleAudioSourceConfigurationsResponse(NULL, _trt__GetCompatibleAudioSourceConfigurationsResponse *dst, _trt__GetCompatibleAudioSourceConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio source configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioSourceConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__AudioSourceConfiguration* of size 0..unbounded.
    struct tt__AudioSourceConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations is a complexType.
///
/// @note struct _trt__GetCompatibleVideoAnalyticsConfigurations operations:
/// - _trt__GetCompatibleVideoAnalyticsConfigurations* soap_new__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*) default initialize members
/// - int soap_read__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*) serialize to a sink
/// - _trt__GetCompatibleVideoAnalyticsConfigurations* soap_dup__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurations* dst, _trt__GetCompatibleVideoAnalyticsConfigurations *src) returns deep copy of _trt__GetCompatibleVideoAnalyticsConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleVideoAnalyticsConfigurations(_trt__GetCompatibleVideoAnalyticsConfigurations*) deep deletes _trt__GetCompatibleVideoAnalyticsConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleVideoAnalyticsConfigurations(NULL, _trt__GetCompatibleVideoAnalyticsConfigurations *dst, _trt__GetCompatibleVideoAnalyticsConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleVideoAnalyticsConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse operations:
/// - _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* soap_new__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* soap_dup__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* dst, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleVideoAnalyticsConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(_trt__GetCompatibleVideoAnalyticsConfigurationsResponse*) deep deletes _trt__GetCompatibleVideoAnalyticsConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(NULL, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse *dst, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of video analytics configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoAnalyticsConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__VideoAnalyticsConfiguration* of size 0..unbounded.
    struct tt__VideoAnalyticsConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations is a complexType.
///
/// @note struct _trt__GetCompatibleMetadataConfigurations operations:
/// - _trt__GetCompatibleMetadataConfigurations* soap_new__trt__GetCompatibleMetadataConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleMetadataConfigurations(struct soap*, _trt__GetCompatibleMetadataConfigurations*) default initialize members
/// - int soap_read__trt__GetCompatibleMetadataConfigurations(struct soap*, _trt__GetCompatibleMetadataConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleMetadataConfigurations(struct soap*, _trt__GetCompatibleMetadataConfigurations*) serialize to a sink
/// - _trt__GetCompatibleMetadataConfigurations* soap_dup__trt__GetCompatibleMetadataConfigurations(struct soap*, _trt__GetCompatibleMetadataConfigurations* dst, _trt__GetCompatibleMetadataConfigurations *src) returns deep copy of _trt__GetCompatibleMetadataConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleMetadataConfigurations(_trt__GetCompatibleMetadataConfigurations*) deep deletes _trt__GetCompatibleMetadataConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleMetadataConfigurations(NULL, _trt__GetCompatibleMetadataConfigurations *dst, _trt__GetCompatibleMetadataConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleMetadataConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetCompatibleMetadataConfigurationsResponse operations:
/// - _trt__GetCompatibleMetadataConfigurationsResponse* soap_new__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, _trt__GetCompatibleMetadataConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, _trt__GetCompatibleMetadataConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, _trt__GetCompatibleMetadataConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleMetadataConfigurationsResponse* soap_dup__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, _trt__GetCompatibleMetadataConfigurationsResponse* dst, _trt__GetCompatibleMetadataConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleMetadataConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleMetadataConfigurationsResponse(_trt__GetCompatibleMetadataConfigurationsResponse*) deep deletes _trt__GetCompatibleMetadataConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleMetadataConfigurationsResponse(NULL, _trt__GetCompatibleMetadataConfigurationsResponse *dst, _trt__GetCompatibleMetadataConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleMetadataConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of metadata configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__MetadataConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__MetadataConfiguration* of size 0..unbounded.
    struct tt__MetadataConfiguration*    Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations is a complexType.
///
/// @note struct _trt__GetCompatibleAudioOutputConfigurations operations:
/// - _trt__GetCompatibleAudioOutputConfigurations* soap_new__trt__GetCompatibleAudioOutputConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleAudioOutputConfigurations(struct soap*, _trt__GetCompatibleAudioOutputConfigurations*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioOutputConfigurations(struct soap*, _trt__GetCompatibleAudioOutputConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioOutputConfigurations(struct soap*, _trt__GetCompatibleAudioOutputConfigurations*) serialize to a sink
/// - _trt__GetCompatibleAudioOutputConfigurations* soap_dup__trt__GetCompatibleAudioOutputConfigurations(struct soap*, _trt__GetCompatibleAudioOutputConfigurations* dst, _trt__GetCompatibleAudioOutputConfigurations *src) returns deep copy of _trt__GetCompatibleAudioOutputConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioOutputConfigurations(_trt__GetCompatibleAudioOutputConfigurations*) deep deletes _trt__GetCompatibleAudioOutputConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleAudioOutputConfigurations(NULL, _trt__GetCompatibleAudioOutputConfigurations *dst, _trt__GetCompatibleAudioOutputConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioOutputConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetCompatibleAudioOutputConfigurationsResponse operations:
/// - _trt__GetCompatibleAudioOutputConfigurationsResponse* soap_new__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleAudioOutputConfigurationsResponse* soap_dup__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse* dst, _trt__GetCompatibleAudioOutputConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleAudioOutputConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioOutputConfigurationsResponse(_trt__GetCompatibleAudioOutputConfigurationsResponse*) deep deletes _trt__GetCompatibleAudioOutputConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleAudioOutputConfigurationsResponse(NULL, _trt__GetCompatibleAudioOutputConfigurationsResponse *dst, _trt__GetCompatibleAudioOutputConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioOutputConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio output configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioOutputConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__AudioOutputConfiguration* of size 0..unbounded.
    struct tt__AudioOutputConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations is a complexType.
///
/// @note struct _trt__GetCompatibleAudioDecoderConfigurations operations:
/// - _trt__GetCompatibleAudioDecoderConfigurations* soap_new__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, _trt__GetCompatibleAudioDecoderConfigurations*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, _trt__GetCompatibleAudioDecoderConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, _trt__GetCompatibleAudioDecoderConfigurations*) serialize to a sink
/// - _trt__GetCompatibleAudioDecoderConfigurations* soap_dup__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, _trt__GetCompatibleAudioDecoderConfigurations* dst, _trt__GetCompatibleAudioDecoderConfigurations *src) returns deep copy of _trt__GetCompatibleAudioDecoderConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioDecoderConfigurations(_trt__GetCompatibleAudioDecoderConfigurations*) deep deletes _trt__GetCompatibleAudioDecoderConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleAudioDecoderConfigurations(NULL, _trt__GetCompatibleAudioDecoderConfigurations *dst, _trt__GetCompatibleAudioDecoderConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioDecoderConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse is a complexType.
///
/// @note struct _trt__GetCompatibleAudioDecoderConfigurationsResponse operations:
/// - _trt__GetCompatibleAudioDecoderConfigurationsResponse* soap_new__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleAudioDecoderConfigurationsResponse* soap_dup__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse* dst, _trt__GetCompatibleAudioDecoderConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleAudioDecoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioDecoderConfigurationsResponse(_trt__GetCompatibleAudioDecoderConfigurationsResponse*) deep deletes _trt__GetCompatibleAudioDecoderConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleAudioDecoderConfigurationsResponse(NULL, _trt__GetCompatibleAudioDecoderConfigurationsResponse *dst, _trt__GetCompatibleAudioDecoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioDecoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio decoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioDecoderConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__AudioDecoderConfiguration* of size 0..unbounded.
    struct tt__AudioDecoderConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration is a complexType.
///
/// @note struct _trt__SetVideoEncoderConfiguration operations:
/// - _trt__SetVideoEncoderConfiguration* soap_new__trt__SetVideoEncoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetVideoEncoderConfiguration(struct soap*, _trt__SetVideoEncoderConfiguration*) default initialize members
/// - int soap_read__trt__SetVideoEncoderConfiguration(struct soap*, _trt__SetVideoEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__SetVideoEncoderConfiguration(struct soap*, _trt__SetVideoEncoderConfiguration*) serialize to a sink
/// - _trt__SetVideoEncoderConfiguration* soap_dup__trt__SetVideoEncoderConfiguration(struct soap*, _trt__SetVideoEncoderConfiguration* dst, _trt__SetVideoEncoderConfiguration *src) returns deep copy of _trt__SetVideoEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoEncoderConfiguration(_trt__SetVideoEncoderConfiguration*) deep deletes _trt__SetVideoEncoderConfiguration data members, use only on dst after soap_dup__trt__SetVideoEncoderConfiguration(NULL, _trt__SetVideoEncoderConfiguration *dst, _trt__SetVideoEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetVideoEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified video encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse is a complexType.
///
/// @note struct _trt__SetVideoEncoderConfigurationResponse operations:
/// - _trt__SetVideoEncoderConfigurationResponse* soap_new__trt__SetVideoEncoderConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetVideoEncoderConfigurationResponse(struct soap*, _trt__SetVideoEncoderConfigurationResponse*) default initialize members
/// - int soap_read__trt__SetVideoEncoderConfigurationResponse(struct soap*, _trt__SetVideoEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetVideoEncoderConfigurationResponse(struct soap*, _trt__SetVideoEncoderConfigurationResponse*) serialize to a sink
/// - _trt__SetVideoEncoderConfigurationResponse* soap_dup__trt__SetVideoEncoderConfigurationResponse(struct soap*, _trt__SetVideoEncoderConfigurationResponse* dst, _trt__SetVideoEncoderConfigurationResponse *src) returns deep copy of _trt__SetVideoEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoEncoderConfigurationResponse(_trt__SetVideoEncoderConfigurationResponse*) deep deletes _trt__SetVideoEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__SetVideoEncoderConfigurationResponse(NULL, _trt__SetVideoEncoderConfigurationResponse *dst, _trt__SetVideoEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetVideoEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration is a complexType.
///
/// @note struct _trt__SetVideoSourceConfiguration operations:
/// - _trt__SetVideoSourceConfiguration* soap_new__trt__SetVideoSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetVideoSourceConfiguration(struct soap*, _trt__SetVideoSourceConfiguration*) default initialize members
/// - int soap_read__trt__SetVideoSourceConfiguration(struct soap*, _trt__SetVideoSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__SetVideoSourceConfiguration(struct soap*, _trt__SetVideoSourceConfiguration*) serialize to a sink
/// - _trt__SetVideoSourceConfiguration* soap_dup__trt__SetVideoSourceConfiguration(struct soap*, _trt__SetVideoSourceConfiguration* dst, _trt__SetVideoSourceConfiguration *src) returns deep copy of _trt__SetVideoSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoSourceConfiguration(_trt__SetVideoSourceConfiguration*) deep deletes _trt__SetVideoSourceConfiguration data members, use only on dst after soap_dup__trt__SetVideoSourceConfiguration(NULL, _trt__SetVideoSourceConfiguration *dst, _trt__SetVideoSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified video source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse is a complexType.
///
/// @note struct _trt__SetVideoSourceConfigurationResponse operations:
/// - _trt__SetVideoSourceConfigurationResponse* soap_new__trt__SetVideoSourceConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetVideoSourceConfigurationResponse(struct soap*, _trt__SetVideoSourceConfigurationResponse*) default initialize members
/// - int soap_read__trt__SetVideoSourceConfigurationResponse(struct soap*, _trt__SetVideoSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetVideoSourceConfigurationResponse(struct soap*, _trt__SetVideoSourceConfigurationResponse*) serialize to a sink
/// - _trt__SetVideoSourceConfigurationResponse* soap_dup__trt__SetVideoSourceConfigurationResponse(struct soap*, _trt__SetVideoSourceConfigurationResponse* dst, _trt__SetVideoSourceConfigurationResponse *src) returns deep copy of _trt__SetVideoSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoSourceConfigurationResponse(_trt__SetVideoSourceConfigurationResponse*) deep deletes _trt__SetVideoSourceConfigurationResponse data members, use only on dst after soap_dup__trt__SetVideoSourceConfigurationResponse(NULL, _trt__SetVideoSourceConfigurationResponse *dst, _trt__SetVideoSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetVideoSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration is a complexType.
///
/// @note struct _trt__SetAudioEncoderConfiguration operations:
/// - _trt__SetAudioEncoderConfiguration* soap_new__trt__SetAudioEncoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetAudioEncoderConfiguration(struct soap*, _trt__SetAudioEncoderConfiguration*) default initialize members
/// - int soap_read__trt__SetAudioEncoderConfiguration(struct soap*, _trt__SetAudioEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__SetAudioEncoderConfiguration(struct soap*, _trt__SetAudioEncoderConfiguration*) serialize to a sink
/// - _trt__SetAudioEncoderConfiguration* soap_dup__trt__SetAudioEncoderConfiguration(struct soap*, _trt__SetAudioEncoderConfiguration* dst, _trt__SetAudioEncoderConfiguration *src) returns deep copy of _trt__SetAudioEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioEncoderConfiguration(_trt__SetAudioEncoderConfiguration*) deep deletes _trt__SetAudioEncoderConfiguration data members, use only on dst after soap_dup__trt__SetAudioEncoderConfiguration(NULL, _trt__SetAudioEncoderConfiguration *dst, _trt__SetAudioEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetAudioEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    struct tt__AudioEncoderConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse is a complexType.
///
/// @note struct _trt__SetAudioEncoderConfigurationResponse operations:
/// - _trt__SetAudioEncoderConfigurationResponse* soap_new__trt__SetAudioEncoderConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetAudioEncoderConfigurationResponse(struct soap*, _trt__SetAudioEncoderConfigurationResponse*) default initialize members
/// - int soap_read__trt__SetAudioEncoderConfigurationResponse(struct soap*, _trt__SetAudioEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetAudioEncoderConfigurationResponse(struct soap*, _trt__SetAudioEncoderConfigurationResponse*) serialize to a sink
/// - _trt__SetAudioEncoderConfigurationResponse* soap_dup__trt__SetAudioEncoderConfigurationResponse(struct soap*, _trt__SetAudioEncoderConfigurationResponse* dst, _trt__SetAudioEncoderConfigurationResponse *src) returns deep copy of _trt__SetAudioEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioEncoderConfigurationResponse(_trt__SetAudioEncoderConfigurationResponse*) deep deletes _trt__SetAudioEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__SetAudioEncoderConfigurationResponse(NULL, _trt__SetAudioEncoderConfigurationResponse *dst, _trt__SetAudioEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetAudioEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration is a complexType.
///
/// @note struct _trt__SetAudioSourceConfiguration operations:
/// - _trt__SetAudioSourceConfiguration* soap_new__trt__SetAudioSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetAudioSourceConfiguration(struct soap*, _trt__SetAudioSourceConfiguration*) default initialize members
/// - int soap_read__trt__SetAudioSourceConfiguration(struct soap*, _trt__SetAudioSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__SetAudioSourceConfiguration(struct soap*, _trt__SetAudioSourceConfiguration*) serialize to a sink
/// - _trt__SetAudioSourceConfiguration* soap_dup__trt__SetAudioSourceConfiguration(struct soap*, _trt__SetAudioSourceConfiguration* dst, _trt__SetAudioSourceConfiguration *src) returns deep copy of _trt__SetAudioSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioSourceConfiguration(_trt__SetAudioSourceConfiguration*) deep deletes _trt__SetAudioSourceConfiguration data members, use only on dst after soap_dup__trt__SetAudioSourceConfiguration(NULL, _trt__SetAudioSourceConfiguration *dst, _trt__SetAudioSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse is a complexType.
///
/// @note struct _trt__SetAudioSourceConfigurationResponse operations:
/// - _trt__SetAudioSourceConfigurationResponse* soap_new__trt__SetAudioSourceConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetAudioSourceConfigurationResponse(struct soap*, _trt__SetAudioSourceConfigurationResponse*) default initialize members
/// - int soap_read__trt__SetAudioSourceConfigurationResponse(struct soap*, _trt__SetAudioSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetAudioSourceConfigurationResponse(struct soap*, _trt__SetAudioSourceConfigurationResponse*) serialize to a sink
/// - _trt__SetAudioSourceConfigurationResponse* soap_dup__trt__SetAudioSourceConfigurationResponse(struct soap*, _trt__SetAudioSourceConfigurationResponse* dst, _trt__SetAudioSourceConfigurationResponse *src) returns deep copy of _trt__SetAudioSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioSourceConfigurationResponse(_trt__SetAudioSourceConfigurationResponse*) deep deletes _trt__SetAudioSourceConfigurationResponse data members, use only on dst after soap_dup__trt__SetAudioSourceConfigurationResponse(NULL, _trt__SetAudioSourceConfigurationResponse *dst, _trt__SetAudioSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetAudioSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration is a complexType.
///
/// @note struct _trt__SetVideoAnalyticsConfiguration operations:
/// - _trt__SetVideoAnalyticsConfiguration* soap_new__trt__SetVideoAnalyticsConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetVideoAnalyticsConfiguration(struct soap*, _trt__SetVideoAnalyticsConfiguration*) default initialize members
/// - int soap_read__trt__SetVideoAnalyticsConfiguration(struct soap*, _trt__SetVideoAnalyticsConfiguration*) deserialize from a source
/// - int soap_write__trt__SetVideoAnalyticsConfiguration(struct soap*, _trt__SetVideoAnalyticsConfiguration*) serialize to a sink
/// - _trt__SetVideoAnalyticsConfiguration* soap_dup__trt__SetVideoAnalyticsConfiguration(struct soap*, _trt__SetVideoAnalyticsConfiguration* dst, _trt__SetVideoAnalyticsConfiguration *src) returns deep copy of _trt__SetVideoAnalyticsConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoAnalyticsConfiguration(_trt__SetVideoAnalyticsConfiguration*) deep deletes _trt__SetVideoAnalyticsConfiguration data members, use only on dst after soap_dup__trt__SetVideoAnalyticsConfiguration(NULL, _trt__SetVideoAnalyticsConfiguration *dst, _trt__SetVideoAnalyticsConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetVideoAnalyticsConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified video analytics configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse is a complexType.
///
/// @note struct _trt__SetVideoAnalyticsConfigurationResponse operations:
/// - _trt__SetVideoAnalyticsConfigurationResponse* soap_new__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, _trt__SetVideoAnalyticsConfigurationResponse*) default initialize members
/// - int soap_read__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, _trt__SetVideoAnalyticsConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, _trt__SetVideoAnalyticsConfigurationResponse*) serialize to a sink
/// - _trt__SetVideoAnalyticsConfigurationResponse* soap_dup__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, _trt__SetVideoAnalyticsConfigurationResponse* dst, _trt__SetVideoAnalyticsConfigurationResponse *src) returns deep copy of _trt__SetVideoAnalyticsConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoAnalyticsConfigurationResponse(_trt__SetVideoAnalyticsConfigurationResponse*) deep deletes _trt__SetVideoAnalyticsConfigurationResponse data members, use only on dst after soap_dup__trt__SetVideoAnalyticsConfigurationResponse(NULL, _trt__SetVideoAnalyticsConfigurationResponse *dst, _trt__SetVideoAnalyticsConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetVideoAnalyticsConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration is a complexType.
///
/// @note struct _trt__SetMetadataConfiguration operations:
/// - _trt__SetMetadataConfiguration* soap_new__trt__SetMetadataConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetMetadataConfiguration(struct soap*, _trt__SetMetadataConfiguration*) default initialize members
/// - int soap_read__trt__SetMetadataConfiguration(struct soap*, _trt__SetMetadataConfiguration*) deserialize from a source
/// - int soap_write__trt__SetMetadataConfiguration(struct soap*, _trt__SetMetadataConfiguration*) serialize to a sink
/// - _trt__SetMetadataConfiguration* soap_dup__trt__SetMetadataConfiguration(struct soap*, _trt__SetMetadataConfiguration* dst, _trt__SetMetadataConfiguration *src) returns deep copy of _trt__SetMetadataConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetMetadataConfiguration(_trt__SetMetadataConfiguration*) deep deletes _trt__SetMetadataConfiguration data members, use only on dst after soap_dup__trt__SetMetadataConfiguration(NULL, _trt__SetMetadataConfiguration *dst, _trt__SetMetadataConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetMetadataConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified metadata configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    struct tt__MetadataConfiguration*    Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse is a complexType.
///
/// @note struct _trt__SetMetadataConfigurationResponse operations:
/// - _trt__SetMetadataConfigurationResponse* soap_new__trt__SetMetadataConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetMetadataConfigurationResponse(struct soap*, _trt__SetMetadataConfigurationResponse*) default initialize members
/// - int soap_read__trt__SetMetadataConfigurationResponse(struct soap*, _trt__SetMetadataConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetMetadataConfigurationResponse(struct soap*, _trt__SetMetadataConfigurationResponse*) serialize to a sink
/// - _trt__SetMetadataConfigurationResponse* soap_dup__trt__SetMetadataConfigurationResponse(struct soap*, _trt__SetMetadataConfigurationResponse* dst, _trt__SetMetadataConfigurationResponse *src) returns deep copy of _trt__SetMetadataConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetMetadataConfigurationResponse(_trt__SetMetadataConfigurationResponse*) deep deletes _trt__SetMetadataConfigurationResponse data members, use only on dst after soap_dup__trt__SetMetadataConfigurationResponse(NULL, _trt__SetMetadataConfigurationResponse *dst, _trt__SetMetadataConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetMetadataConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration is a complexType.
///
/// @note struct _trt__SetAudioOutputConfiguration operations:
/// - _trt__SetAudioOutputConfiguration* soap_new__trt__SetAudioOutputConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetAudioOutputConfiguration(struct soap*, _trt__SetAudioOutputConfiguration*) default initialize members
/// - int soap_read__trt__SetAudioOutputConfiguration(struct soap*, _trt__SetAudioOutputConfiguration*) deserialize from a source
/// - int soap_write__trt__SetAudioOutputConfiguration(struct soap*, _trt__SetAudioOutputConfiguration*) serialize to a sink
/// - _trt__SetAudioOutputConfiguration* soap_dup__trt__SetAudioOutputConfiguration(struct soap*, _trt__SetAudioOutputConfiguration* dst, _trt__SetAudioOutputConfiguration *src) returns deep copy of _trt__SetAudioOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioOutputConfiguration(_trt__SetAudioOutputConfiguration*) deep deletes _trt__SetAudioOutputConfiguration data members, use only on dst after soap_dup__trt__SetAudioOutputConfiguration(NULL, _trt__SetAudioOutputConfiguration *dst, _trt__SetAudioOutputConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio output configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse is a complexType.
///
/// @note struct _trt__SetAudioOutputConfigurationResponse operations:
/// - _trt__SetAudioOutputConfigurationResponse* soap_new__trt__SetAudioOutputConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetAudioOutputConfigurationResponse(struct soap*, _trt__SetAudioOutputConfigurationResponse*) default initialize members
/// - int soap_read__trt__SetAudioOutputConfigurationResponse(struct soap*, _trt__SetAudioOutputConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetAudioOutputConfigurationResponse(struct soap*, _trt__SetAudioOutputConfigurationResponse*) serialize to a sink
/// - _trt__SetAudioOutputConfigurationResponse* soap_dup__trt__SetAudioOutputConfigurationResponse(struct soap*, _trt__SetAudioOutputConfigurationResponse* dst, _trt__SetAudioOutputConfigurationResponse *src) returns deep copy of _trt__SetAudioOutputConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioOutputConfigurationResponse(_trt__SetAudioOutputConfigurationResponse*) deep deletes _trt__SetAudioOutputConfigurationResponse data members, use only on dst after soap_dup__trt__SetAudioOutputConfigurationResponse(NULL, _trt__SetAudioOutputConfigurationResponse *dst, _trt__SetAudioOutputConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetAudioOutputConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration is a complexType.
///
/// @note struct _trt__SetAudioDecoderConfiguration operations:
/// - _trt__SetAudioDecoderConfiguration* soap_new__trt__SetAudioDecoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetAudioDecoderConfiguration(struct soap*, _trt__SetAudioDecoderConfiguration*) default initialize members
/// - int soap_read__trt__SetAudioDecoderConfiguration(struct soap*, _trt__SetAudioDecoderConfiguration*) deserialize from a source
/// - int soap_write__trt__SetAudioDecoderConfiguration(struct soap*, _trt__SetAudioDecoderConfiguration*) serialize to a sink
/// - _trt__SetAudioDecoderConfiguration* soap_dup__trt__SetAudioDecoderConfiguration(struct soap*, _trt__SetAudioDecoderConfiguration* dst, _trt__SetAudioDecoderConfiguration *src) returns deep copy of _trt__SetAudioDecoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioDecoderConfiguration(_trt__SetAudioDecoderConfiguration*) deep deletes _trt__SetAudioDecoderConfiguration data members, use only on dst after soap_dup__trt__SetAudioDecoderConfiguration(NULL, _trt__SetAudioDecoderConfiguration *dst, _trt__SetAudioDecoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetAudioDecoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio decoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    struct tt__AudioDecoderConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse is a complexType.
///
/// @note struct _trt__SetAudioDecoderConfigurationResponse operations:
/// - _trt__SetAudioDecoderConfigurationResponse* soap_new__trt__SetAudioDecoderConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetAudioDecoderConfigurationResponse(struct soap*, _trt__SetAudioDecoderConfigurationResponse*) default initialize members
/// - int soap_read__trt__SetAudioDecoderConfigurationResponse(struct soap*, _trt__SetAudioDecoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetAudioDecoderConfigurationResponse(struct soap*, _trt__SetAudioDecoderConfigurationResponse*) serialize to a sink
/// - _trt__SetAudioDecoderConfigurationResponse* soap_dup__trt__SetAudioDecoderConfigurationResponse(struct soap*, _trt__SetAudioDecoderConfigurationResponse* dst, _trt__SetAudioDecoderConfigurationResponse *src) returns deep copy of _trt__SetAudioDecoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioDecoderConfigurationResponse(_trt__SetAudioDecoderConfigurationResponse*) deep deletes _trt__SetAudioDecoderConfigurationResponse data members, use only on dst after soap_dup__trt__SetAudioDecoderConfigurationResponse(NULL, _trt__SetAudioDecoderConfigurationResponse *dst, _trt__SetAudioDecoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetAudioDecoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions is a complexType.
///
/// @note struct _trt__GetVideoSourceConfigurationOptions operations:
/// - _trt__GetVideoSourceConfigurationOptions* soap_new__trt__GetVideoSourceConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoSourceConfigurationOptions(struct soap*, _trt__GetVideoSourceConfigurationOptions*) default initialize members
/// - int soap_read__trt__GetVideoSourceConfigurationOptions(struct soap*, _trt__GetVideoSourceConfigurationOptions*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceConfigurationOptions(struct soap*, _trt__GetVideoSourceConfigurationOptions*) serialize to a sink
/// - _trt__GetVideoSourceConfigurationOptions* soap_dup__trt__GetVideoSourceConfigurationOptions(struct soap*, _trt__GetVideoSourceConfigurationOptions* dst, _trt__GetVideoSourceConfigurationOptions *src) returns deep copy of _trt__GetVideoSourceConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceConfigurationOptions(_trt__GetVideoSourceConfigurationOptions*) deep deletes _trt__GetVideoSourceConfigurationOptions data members, use only on dst after soap_dup__trt__GetVideoSourceConfigurationOptions(NULL, _trt__GetVideoSourceConfigurationOptions *dst, _trt__GetVideoSourceConfigurationOptions *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional video source configurationToken that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
///
/// @note struct _trt__GetVideoSourceConfigurationOptionsResponse operations:
/// - _trt__GetVideoSourceConfigurationOptionsResponse* soap_new__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, _trt__GetVideoSourceConfigurationOptionsResponse*) default initialize members
/// - int soap_read__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, _trt__GetVideoSourceConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, _trt__GetVideoSourceConfigurationOptionsResponse*) serialize to a sink
/// - _trt__GetVideoSourceConfigurationOptionsResponse* soap_dup__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, _trt__GetVideoSourceConfigurationOptionsResponse* dst, _trt__GetVideoSourceConfigurationOptionsResponse *src) returns deep copy of _trt__GetVideoSourceConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceConfigurationOptionsResponse(_trt__GetVideoSourceConfigurationOptionsResponse*) deep deletes _trt__GetVideoSourceConfigurationOptionsResponse data members, use only on dst after soap_dup__trt__GetVideoSourceConfigurationOptionsResponse(NULL, _trt__GetVideoSourceConfigurationOptionsResponse *dst, _trt__GetVideoSourceConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the video source configuration options. If a video source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    struct tt__VideoSourceConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions is a complexType.
///
/// @note struct _trt__GetVideoEncoderConfigurationOptions operations:
/// - _trt__GetVideoEncoderConfigurationOptions* soap_new__trt__GetVideoEncoderConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoEncoderConfigurationOptions(struct soap*, _trt__GetVideoEncoderConfigurationOptions*) default initialize members
/// - int soap_read__trt__GetVideoEncoderConfigurationOptions(struct soap*, _trt__GetVideoEncoderConfigurationOptions*) deserialize from a source
/// - int soap_write__trt__GetVideoEncoderConfigurationOptions(struct soap*, _trt__GetVideoEncoderConfigurationOptions*) serialize to a sink
/// - _trt__GetVideoEncoderConfigurationOptions* soap_dup__trt__GetVideoEncoderConfigurationOptions(struct soap*, _trt__GetVideoEncoderConfigurationOptions* dst, _trt__GetVideoEncoderConfigurationOptions *src) returns deep copy of _trt__GetVideoEncoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoEncoderConfigurationOptions(_trt__GetVideoEncoderConfigurationOptions*) deep deletes _trt__GetVideoEncoderConfigurationOptions data members, use only on dst after soap_dup__trt__GetVideoEncoderConfigurationOptions(NULL, _trt__GetVideoEncoderConfigurationOptions *dst, _trt__GetVideoEncoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct _trt__GetVideoEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional video encoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse is a complexType.
///
/// @note struct _trt__GetVideoEncoderConfigurationOptionsResponse operations:
/// - _trt__GetVideoEncoderConfigurationOptionsResponse* soap_new__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*) default initialize members
/// - int soap_read__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*) serialize to a sink
/// - _trt__GetVideoEncoderConfigurationOptionsResponse* soap_dup__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _trt__GetVideoEncoderConfigurationOptionsResponse* dst, _trt__GetVideoEncoderConfigurationOptionsResponse *src) returns deep copy of _trt__GetVideoEncoderConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoEncoderConfigurationOptionsResponse(_trt__GetVideoEncoderConfigurationOptionsResponse*) deep deletes _trt__GetVideoEncoderConfigurationOptionsResponse data members, use only on dst after soap_dup__trt__GetVideoEncoderConfigurationOptionsResponse(NULL, _trt__GetVideoEncoderConfigurationOptionsResponse *dst, _trt__GetVideoEncoderConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoEncoderConfigurationOptionsResponse
{
/// Element "Options" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions.
    struct tt__VideoEncoderConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions is a complexType.
///
/// @note struct _trt__GetAudioSourceConfigurationOptions operations:
/// - _trt__GetAudioSourceConfigurationOptions* soap_new__trt__GetAudioSourceConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioSourceConfigurationOptions(struct soap*, _trt__GetAudioSourceConfigurationOptions*) default initialize members
/// - int soap_read__trt__GetAudioSourceConfigurationOptions(struct soap*, _trt__GetAudioSourceConfigurationOptions*) deserialize from a source
/// - int soap_write__trt__GetAudioSourceConfigurationOptions(struct soap*, _trt__GetAudioSourceConfigurationOptions*) serialize to a sink
/// - _trt__GetAudioSourceConfigurationOptions* soap_dup__trt__GetAudioSourceConfigurationOptions(struct soap*, _trt__GetAudioSourceConfigurationOptions* dst, _trt__GetAudioSourceConfigurationOptions *src) returns deep copy of _trt__GetAudioSourceConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSourceConfigurationOptions(_trt__GetAudioSourceConfigurationOptions*) deep deletes _trt__GetAudioSourceConfigurationOptions data members, use only on dst after soap_dup__trt__GetAudioSourceConfigurationOptions(NULL, _trt__GetAudioSourceConfigurationOptions *dst, _trt__GetAudioSourceConfigurationOptions *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional audio source configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
///
/// @note struct _trt__GetAudioSourceConfigurationOptionsResponse operations:
/// - _trt__GetAudioSourceConfigurationOptionsResponse* soap_new__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, _trt__GetAudioSourceConfigurationOptionsResponse*) default initialize members
/// - int soap_read__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, _trt__GetAudioSourceConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, _trt__GetAudioSourceConfigurationOptionsResponse*) serialize to a sink
/// - _trt__GetAudioSourceConfigurationOptionsResponse* soap_dup__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, _trt__GetAudioSourceConfigurationOptionsResponse* dst, _trt__GetAudioSourceConfigurationOptionsResponse *src) returns deep copy of _trt__GetAudioSourceConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSourceConfigurationOptionsResponse(_trt__GetAudioSourceConfigurationOptionsResponse*) deep deletes _trt__GetAudioSourceConfigurationOptionsResponse data members, use only on dst after soap_dup__trt__GetAudioSourceConfigurationOptionsResponse(NULL, _trt__GetAudioSourceConfigurationOptionsResponse *dst, _trt__GetAudioSourceConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSourceConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio source configuration options. If a audio source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    struct tt__AudioSourceConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions is a complexType.
///
/// @note struct _trt__GetAudioEncoderConfigurationOptions operations:
/// - _trt__GetAudioEncoderConfigurationOptions* soap_new__trt__GetAudioEncoderConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioEncoderConfigurationOptions(struct soap*, _trt__GetAudioEncoderConfigurationOptions*) default initialize members
/// - int soap_read__trt__GetAudioEncoderConfigurationOptions(struct soap*, _trt__GetAudioEncoderConfigurationOptions*) deserialize from a source
/// - int soap_write__trt__GetAudioEncoderConfigurationOptions(struct soap*, _trt__GetAudioEncoderConfigurationOptions*) serialize to a sink
/// - _trt__GetAudioEncoderConfigurationOptions* soap_dup__trt__GetAudioEncoderConfigurationOptions(struct soap*, _trt__GetAudioEncoderConfigurationOptions* dst, _trt__GetAudioEncoderConfigurationOptions *src) returns deep copy of _trt__GetAudioEncoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioEncoderConfigurationOptions(_trt__GetAudioEncoderConfigurationOptions*) deep deletes _trt__GetAudioEncoderConfigurationOptions data members, use only on dst after soap_dup__trt__GetAudioEncoderConfigurationOptions(NULL, _trt__GetAudioEncoderConfigurationOptions *dst, _trt__GetAudioEncoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct _trt__GetAudioEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional audio encoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse is a complexType.
///
/// @note struct _trt__GetAudioEncoderConfigurationOptionsResponse operations:
/// - _trt__GetAudioEncoderConfigurationOptionsResponse* soap_new__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*) default initialize members
/// - int soap_read__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*) serialize to a sink
/// - _trt__GetAudioEncoderConfigurationOptionsResponse* soap_dup__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioEncoderConfigurationOptionsResponse* dst, _trt__GetAudioEncoderConfigurationOptionsResponse *src) returns deep copy of _trt__GetAudioEncoderConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioEncoderConfigurationOptionsResponse(_trt__GetAudioEncoderConfigurationOptionsResponse*) deep deletes _trt__GetAudioEncoderConfigurationOptionsResponse data members, use only on dst after soap_dup__trt__GetAudioEncoderConfigurationOptionsResponse(NULL, _trt__GetAudioEncoderConfigurationOptionsResponse *dst, _trt__GetAudioEncoderConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioEncoderConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio encoder configuration options. If a audio encoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    struct tt__AudioEncoderConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions is a complexType.
///
/// @note struct _trt__GetMetadataConfigurationOptions operations:
/// - _trt__GetMetadataConfigurationOptions* soap_new__trt__GetMetadataConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetMetadataConfigurationOptions(struct soap*, _trt__GetMetadataConfigurationOptions*) default initialize members
/// - int soap_read__trt__GetMetadataConfigurationOptions(struct soap*, _trt__GetMetadataConfigurationOptions*) deserialize from a source
/// - int soap_write__trt__GetMetadataConfigurationOptions(struct soap*, _trt__GetMetadataConfigurationOptions*) serialize to a sink
/// - _trt__GetMetadataConfigurationOptions* soap_dup__trt__GetMetadataConfigurationOptions(struct soap*, _trt__GetMetadataConfigurationOptions* dst, _trt__GetMetadataConfigurationOptions *src) returns deep copy of _trt__GetMetadataConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetMetadataConfigurationOptions(_trt__GetMetadataConfigurationOptions*) deep deletes _trt__GetMetadataConfigurationOptions data members, use only on dst after soap_dup__trt__GetMetadataConfigurationOptions(NULL, _trt__GetMetadataConfigurationOptions *dst, _trt__GetMetadataConfigurationOptions *src) (use soapcpp2 -Ed)
struct _trt__GetMetadataConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional metadata configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse is a complexType.
///
/// @note struct _trt__GetMetadataConfigurationOptionsResponse operations:
/// - _trt__GetMetadataConfigurationOptionsResponse* soap_new__trt__GetMetadataConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetMetadataConfigurationOptionsResponse(struct soap*, _trt__GetMetadataConfigurationOptionsResponse*) default initialize members
/// - int soap_read__trt__GetMetadataConfigurationOptionsResponse(struct soap*, _trt__GetMetadataConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetMetadataConfigurationOptionsResponse(struct soap*, _trt__GetMetadataConfigurationOptionsResponse*) serialize to a sink
/// - _trt__GetMetadataConfigurationOptionsResponse* soap_dup__trt__GetMetadataConfigurationOptionsResponse(struct soap*, _trt__GetMetadataConfigurationOptionsResponse* dst, _trt__GetMetadataConfigurationOptionsResponse *src) returns deep copy of _trt__GetMetadataConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetMetadataConfigurationOptionsResponse(_trt__GetMetadataConfigurationOptionsResponse*) deep deletes _trt__GetMetadataConfigurationOptionsResponse data members, use only on dst after soap_dup__trt__GetMetadataConfigurationOptionsResponse(NULL, _trt__GetMetadataConfigurationOptionsResponse *dst, _trt__GetMetadataConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetMetadataConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the metadata configuration options. If a metadata configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions.
    struct tt__MetadataConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions is a complexType.
///
/// @note struct _trt__GetAudioOutputConfigurationOptions operations:
/// - _trt__GetAudioOutputConfigurationOptions* soap_new__trt__GetAudioOutputConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioOutputConfigurationOptions(struct soap*, _trt__GetAudioOutputConfigurationOptions*) default initialize members
/// - int soap_read__trt__GetAudioOutputConfigurationOptions(struct soap*, _trt__GetAudioOutputConfigurationOptions*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputConfigurationOptions(struct soap*, _trt__GetAudioOutputConfigurationOptions*) serialize to a sink
/// - _trt__GetAudioOutputConfigurationOptions* soap_dup__trt__GetAudioOutputConfigurationOptions(struct soap*, _trt__GetAudioOutputConfigurationOptions* dst, _trt__GetAudioOutputConfigurationOptions *src) returns deep copy of _trt__GetAudioOutputConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputConfigurationOptions(_trt__GetAudioOutputConfigurationOptions*) deep deletes _trt__GetAudioOutputConfigurationOptions data members, use only on dst after soap_dup__trt__GetAudioOutputConfigurationOptions(NULL, _trt__GetAudioOutputConfigurationOptions *dst, _trt__GetAudioOutputConfigurationOptions *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional audio output configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
///
/// @note struct _trt__GetAudioOutputConfigurationOptionsResponse operations:
/// - _trt__GetAudioOutputConfigurationOptionsResponse* soap_new__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, _trt__GetAudioOutputConfigurationOptionsResponse*) default initialize members
/// - int soap_read__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, _trt__GetAudioOutputConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, _trt__GetAudioOutputConfigurationOptionsResponse*) serialize to a sink
/// - _trt__GetAudioOutputConfigurationOptionsResponse* soap_dup__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, _trt__GetAudioOutputConfigurationOptionsResponse* dst, _trt__GetAudioOutputConfigurationOptionsResponse *src) returns deep copy of _trt__GetAudioOutputConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputConfigurationOptionsResponse(_trt__GetAudioOutputConfigurationOptionsResponse*) deep deletes _trt__GetAudioOutputConfigurationOptionsResponse data members, use only on dst after soap_dup__trt__GetAudioOutputConfigurationOptionsResponse(NULL, _trt__GetAudioOutputConfigurationOptionsResponse *dst, _trt__GetAudioOutputConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio output configuration options. If a audio output configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    struct tt__AudioOutputConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions is a complexType.
///
/// @note struct _trt__GetAudioDecoderConfigurationOptions operations:
/// - _trt__GetAudioDecoderConfigurationOptions* soap_new__trt__GetAudioDecoderConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioDecoderConfigurationOptions(struct soap*, _trt__GetAudioDecoderConfigurationOptions*) default initialize members
/// - int soap_read__trt__GetAudioDecoderConfigurationOptions(struct soap*, _trt__GetAudioDecoderConfigurationOptions*) deserialize from a source
/// - int soap_write__trt__GetAudioDecoderConfigurationOptions(struct soap*, _trt__GetAudioDecoderConfigurationOptions*) serialize to a sink
/// - _trt__GetAudioDecoderConfigurationOptions* soap_dup__trt__GetAudioDecoderConfigurationOptions(struct soap*, _trt__GetAudioDecoderConfigurationOptions* dst, _trt__GetAudioDecoderConfigurationOptions *src) returns deep copy of _trt__GetAudioDecoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioDecoderConfigurationOptions(_trt__GetAudioDecoderConfigurationOptions*) deep deletes _trt__GetAudioDecoderConfigurationOptions data members, use only on dst after soap_dup__trt__GetAudioDecoderConfigurationOptions(NULL, _trt__GetAudioDecoderConfigurationOptions *dst, _trt__GetAudioDecoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct _trt__GetAudioDecoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional audio decoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse is a complexType.
///
/// @note struct _trt__GetAudioDecoderConfigurationOptionsResponse operations:
/// - _trt__GetAudioDecoderConfigurationOptionsResponse* soap_new__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*) default initialize members
/// - int soap_read__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*) serialize to a sink
/// - _trt__GetAudioDecoderConfigurationOptionsResponse* soap_dup__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioDecoderConfigurationOptionsResponse* dst, _trt__GetAudioDecoderConfigurationOptionsResponse *src) returns deep copy of _trt__GetAudioDecoderConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioDecoderConfigurationOptionsResponse(_trt__GetAudioDecoderConfigurationOptionsResponse*) deep deletes _trt__GetAudioDecoderConfigurationOptionsResponse data members, use only on dst after soap_dup__trt__GetAudioDecoderConfigurationOptionsResponse(NULL, _trt__GetAudioDecoderConfigurationOptionsResponse *dst, _trt__GetAudioDecoderConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioDecoderConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio decoder configuration options. If a audio decoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    struct tt__AudioDecoderConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances is a complexType.
///
/// @note struct _trt__GetGuaranteedNumberOfVideoEncoderInstances operations:
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances* soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*) default initialize members
/// - int soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*) deserialize from a source
/// - int soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*) serialize to a sink
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances* soap_dup__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances* dst, _trt__GetGuaranteedNumberOfVideoEncoderInstances *src) returns deep copy of _trt__GetGuaranteedNumberOfVideoEncoderInstances src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetGuaranteedNumberOfVideoEncoderInstances(_trt__GetGuaranteedNumberOfVideoEncoderInstances*) deep deletes _trt__GetGuaranteedNumberOfVideoEncoderInstances data members, use only on dst after soap_dup__trt__GetGuaranteedNumberOfVideoEncoderInstances(NULL, _trt__GetGuaranteedNumberOfVideoEncoderInstances *dst, _trt__GetGuaranteedNumberOfVideoEncoderInstances *src) (use soapcpp2 -Ed)
struct _trt__GetGuaranteedNumberOfVideoEncoderInstances
{
/// <PRE><BLOCKQUOTE>
///   Token of the video source configuration
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse is a complexType.
///
/// @note struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse operations:
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) default initialize members
/// - int soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) deserialize from a source
/// - int soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) serialize to a sink
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* soap_dup__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* dst, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse *src) returns deep copy of _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(_trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) deep deletes _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse data members, use only on dst after soap_dup__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(NULL, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse *dst, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse *src) (use soapcpp2 -Ed)
struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
{
/// <PRE><BLOCKQUOTE>
///   The minimum guaranteed total number of encoder instances (applications) per VideoSourceConfiguration. The device is able to deliver the TotalNumber of streams
/// </BLOCKQUOTE></PRE>
///
/// Element "TotalNumber" of type xs:int.
    int                                  TotalNumber                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many Jpeg streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "JPEG" of type xs:int.
    int*                                 JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many H264 streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type xs:int.
    int*                                 H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many Mpeg4 streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type xs:int.
    int*                                 MPEG4                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetStreamUri is a complexType.
///
/// @note struct _trt__GetStreamUri operations:
/// - _trt__GetStreamUri* soap_new__trt__GetStreamUri(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetStreamUri(struct soap*, _trt__GetStreamUri*) default initialize members
/// - int soap_read__trt__GetStreamUri(struct soap*, _trt__GetStreamUri*) deserialize from a source
/// - int soap_write__trt__GetStreamUri(struct soap*, _trt__GetStreamUri*) serialize to a sink
/// - _trt__GetStreamUri* soap_dup__trt__GetStreamUri(struct soap*, _trt__GetStreamUri* dst, _trt__GetStreamUri *src) returns deep copy of _trt__GetStreamUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetStreamUri(_trt__GetStreamUri*) deep deletes _trt__GetStreamUri data members, use only on dst after soap_dup__trt__GetStreamUri(NULL, _trt__GetStreamUri *dst, _trt__GetStreamUri *src) (use soapcpp2 -Ed)
struct _trt__GetStreamUri
{
/// <PRE><BLOCKQUOTE>
///   Stream Setup that should be used with the uri
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamSetup" of type "http://www.onvif.org/ver10/schema":StreamSetup.
    struct tt__StreamSetup*              StreamSetup                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the configuration of the content of the stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse is a complexType.
///
/// @note struct _trt__GetStreamUriResponse operations:
/// - _trt__GetStreamUriResponse* soap_new__trt__GetStreamUriResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetStreamUriResponse(struct soap*, _trt__GetStreamUriResponse*) default initialize members
/// - int soap_read__trt__GetStreamUriResponse(struct soap*, _trt__GetStreamUriResponse*) deserialize from a source
/// - int soap_write__trt__GetStreamUriResponse(struct soap*, _trt__GetStreamUriResponse*) serialize to a sink
/// - _trt__GetStreamUriResponse* soap_dup__trt__GetStreamUriResponse(struct soap*, _trt__GetStreamUriResponse* dst, _trt__GetStreamUriResponse *src) returns deep copy of _trt__GetStreamUriResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetStreamUriResponse(_trt__GetStreamUriResponse*) deep deletes _trt__GetStreamUriResponse data members, use only on dst after soap_dup__trt__GetStreamUriResponse(NULL, _trt__GetStreamUriResponse *dst, _trt__GetStreamUriResponse *src) (use soapcpp2 -Ed)
struct _trt__GetStreamUriResponse
{

/// </BLOCKQUOTE></PRE>
///
/// Element "MediaUri" of type "http://www.onvif.org/ver10/schema":MediaUri.
    struct tt__MediaUri*                 MediaUri                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming
/// @brief "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming is a complexType.
///
/// @note struct _trt__StartMulticastStreaming operations:
/// - _trt__StartMulticastStreaming* soap_new__trt__StartMulticastStreaming(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__StartMulticastStreaming(struct soap*, _trt__StartMulticastStreaming*) default initialize members
/// - int soap_read__trt__StartMulticastStreaming(struct soap*, _trt__StartMulticastStreaming*) deserialize from a source
/// - int soap_write__trt__StartMulticastStreaming(struct soap*, _trt__StartMulticastStreaming*) serialize to a sink
/// - _trt__StartMulticastStreaming* soap_dup__trt__StartMulticastStreaming(struct soap*, _trt__StartMulticastStreaming* dst, _trt__StartMulticastStreaming *src) returns deep copy of _trt__StartMulticastStreaming src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__StartMulticastStreaming(_trt__StartMulticastStreaming*) deep deletes _trt__StartMulticastStreaming data members, use only on dst after soap_dup__trt__StartMulticastStreaming(NULL, _trt__StartMulticastStreaming *dst, _trt__StartMulticastStreaming *src) (use soapcpp2 -Ed)
struct _trt__StartMulticastStreaming
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse is a complexType.
///
/// @note struct _trt__StartMulticastStreamingResponse operations:
/// - _trt__StartMulticastStreamingResponse* soap_new__trt__StartMulticastStreamingResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__StartMulticastStreamingResponse(struct soap*, _trt__StartMulticastStreamingResponse*) default initialize members
/// - int soap_read__trt__StartMulticastStreamingResponse(struct soap*, _trt__StartMulticastStreamingResponse*) deserialize from a source
/// - int soap_write__trt__StartMulticastStreamingResponse(struct soap*, _trt__StartMulticastStreamingResponse*) serialize to a sink
/// - _trt__StartMulticastStreamingResponse* soap_dup__trt__StartMulticastStreamingResponse(struct soap*, _trt__StartMulticastStreamingResponse* dst, _trt__StartMulticastStreamingResponse *src) returns deep copy of _trt__StartMulticastStreamingResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__StartMulticastStreamingResponse(_trt__StartMulticastStreamingResponse*) deep deletes _trt__StartMulticastStreamingResponse data members, use only on dst after soap_dup__trt__StartMulticastStreamingResponse(NULL, _trt__StartMulticastStreamingResponse *dst, _trt__StartMulticastStreamingResponse *src) (use soapcpp2 -Ed)
struct _trt__StartMulticastStreamingResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming
/// @brief "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming is a complexType.
///
/// @note struct _trt__StopMulticastStreaming operations:
/// - _trt__StopMulticastStreaming* soap_new__trt__StopMulticastStreaming(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__StopMulticastStreaming(struct soap*, _trt__StopMulticastStreaming*) default initialize members
/// - int soap_read__trt__StopMulticastStreaming(struct soap*, _trt__StopMulticastStreaming*) deserialize from a source
/// - int soap_write__trt__StopMulticastStreaming(struct soap*, _trt__StopMulticastStreaming*) serialize to a sink
/// - _trt__StopMulticastStreaming* soap_dup__trt__StopMulticastStreaming(struct soap*, _trt__StopMulticastStreaming* dst, _trt__StopMulticastStreaming *src) returns deep copy of _trt__StopMulticastStreaming src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__StopMulticastStreaming(_trt__StopMulticastStreaming*) deep deletes _trt__StopMulticastStreaming data members, use only on dst after soap_dup__trt__StopMulticastStreaming(NULL, _trt__StopMulticastStreaming *dst, _trt__StopMulticastStreaming *src) (use soapcpp2 -Ed)
struct _trt__StopMulticastStreaming
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse is a complexType.
///
/// @note struct _trt__StopMulticastStreamingResponse operations:
/// - _trt__StopMulticastStreamingResponse* soap_new__trt__StopMulticastStreamingResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__StopMulticastStreamingResponse(struct soap*, _trt__StopMulticastStreamingResponse*) default initialize members
/// - int soap_read__trt__StopMulticastStreamingResponse(struct soap*, _trt__StopMulticastStreamingResponse*) deserialize from a source
/// - int soap_write__trt__StopMulticastStreamingResponse(struct soap*, _trt__StopMulticastStreamingResponse*) serialize to a sink
/// - _trt__StopMulticastStreamingResponse* soap_dup__trt__StopMulticastStreamingResponse(struct soap*, _trt__StopMulticastStreamingResponse* dst, _trt__StopMulticastStreamingResponse *src) returns deep copy of _trt__StopMulticastStreamingResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__StopMulticastStreamingResponse(_trt__StopMulticastStreamingResponse*) deep deletes _trt__StopMulticastStreamingResponse data members, use only on dst after soap_dup__trt__StopMulticastStreamingResponse(NULL, _trt__StopMulticastStreamingResponse *dst, _trt__StopMulticastStreamingResponse *src) (use soapcpp2 -Ed)
struct _trt__StopMulticastStreamingResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint is a complexType.
///
/// @note struct _trt__SetSynchronizationPoint operations:
/// - _trt__SetSynchronizationPoint* soap_new__trt__SetSynchronizationPoint(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetSynchronizationPoint(struct soap*, _trt__SetSynchronizationPoint*) default initialize members
/// - int soap_read__trt__SetSynchronizationPoint(struct soap*, _trt__SetSynchronizationPoint*) deserialize from a source
/// - int soap_write__trt__SetSynchronizationPoint(struct soap*, _trt__SetSynchronizationPoint*) serialize to a sink
/// - _trt__SetSynchronizationPoint* soap_dup__trt__SetSynchronizationPoint(struct soap*, _trt__SetSynchronizationPoint* dst, _trt__SetSynchronizationPoint *src) returns deep copy of _trt__SetSynchronizationPoint src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetSynchronizationPoint(_trt__SetSynchronizationPoint*) deep deletes _trt__SetSynchronizationPoint data members, use only on dst after soap_dup__trt__SetSynchronizationPoint(NULL, _trt__SetSynchronizationPoint *dst, _trt__SetSynchronizationPoint *src) (use soapcpp2 -Ed)
struct _trt__SetSynchronizationPoint
{
/// <PRE><BLOCKQUOTE>
///   Contains a Profile reference for which a Synchronization Point is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse is a complexType.
///
/// @note struct _trt__SetSynchronizationPointResponse operations:
/// - _trt__SetSynchronizationPointResponse* soap_new__trt__SetSynchronizationPointResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetSynchronizationPointResponse(struct soap*, _trt__SetSynchronizationPointResponse*) default initialize members
/// - int soap_read__trt__SetSynchronizationPointResponse(struct soap*, _trt__SetSynchronizationPointResponse*) deserialize from a source
/// - int soap_write__trt__SetSynchronizationPointResponse(struct soap*, _trt__SetSynchronizationPointResponse*) serialize to a sink
/// - _trt__SetSynchronizationPointResponse* soap_dup__trt__SetSynchronizationPointResponse(struct soap*, _trt__SetSynchronizationPointResponse* dst, _trt__SetSynchronizationPointResponse *src) returns deep copy of _trt__SetSynchronizationPointResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetSynchronizationPointResponse(_trt__SetSynchronizationPointResponse*) deep deletes _trt__SetSynchronizationPointResponse data members, use only on dst after soap_dup__trt__SetSynchronizationPointResponse(NULL, _trt__SetSynchronizationPointResponse *dst, _trt__SetSynchronizationPointResponse *src) (use soapcpp2 -Ed)
struct _trt__SetSynchronizationPointResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri is a complexType.
///
/// @note struct _trt__GetSnapshotUri operations:
/// - _trt__GetSnapshotUri* soap_new__trt__GetSnapshotUri(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*) default initialize members
/// - int soap_read__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*) deserialize from a source
/// - int soap_write__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*) serialize to a sink
/// - _trt__GetSnapshotUri* soap_dup__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri* dst, _trt__GetSnapshotUri *src) returns deep copy of _trt__GetSnapshotUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetSnapshotUri(_trt__GetSnapshotUri*) deep deletes _trt__GetSnapshotUri data members, use only on dst after soap_dup__trt__GetSnapshotUri(NULL, _trt__GetSnapshotUri *dst, _trt__GetSnapshotUri *src) (use soapcpp2 -Ed)
struct _trt__GetSnapshotUri
{
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the source and dimensions of the snapshot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse is a complexType.
///
/// @note struct _trt__GetSnapshotUriResponse operations:
/// - _trt__GetSnapshotUriResponse* soap_new__trt__GetSnapshotUriResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*) default initialize members
/// - int soap_read__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*) deserialize from a source
/// - int soap_write__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*) serialize to a sink
/// - _trt__GetSnapshotUriResponse* soap_dup__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse* dst, _trt__GetSnapshotUriResponse *src) returns deep copy of _trt__GetSnapshotUriResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetSnapshotUriResponse(_trt__GetSnapshotUriResponse*) deep deletes _trt__GetSnapshotUriResponse data members, use only on dst after soap_dup__trt__GetSnapshotUriResponse(NULL, _trt__GetSnapshotUriResponse *dst, _trt__GetSnapshotUriResponse *src) (use soapcpp2 -Ed)
struct _trt__GetSnapshotUriResponse
{

/// </BLOCKQUOTE></PRE>
///
/// Element "MediaUri" of type "http://www.onvif.org/ver10/schema":MediaUri.
    struct tt__MediaUri*                 MediaUri                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModes
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModes is a complexType.
///
/// @note struct _trt__GetVideoSourceModes operations:
/// - _trt__GetVideoSourceModes* soap_new__trt__GetVideoSourceModes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoSourceModes(struct soap*, _trt__GetVideoSourceModes*) default initialize members
/// - int soap_read__trt__GetVideoSourceModes(struct soap*, _trt__GetVideoSourceModes*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceModes(struct soap*, _trt__GetVideoSourceModes*) serialize to a sink
/// - _trt__GetVideoSourceModes* soap_dup__trt__GetVideoSourceModes(struct soap*, _trt__GetVideoSourceModes* dst, _trt__GetVideoSourceModes *src) returns deep copy of _trt__GetVideoSourceModes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceModes(_trt__GetVideoSourceModes*) deep deletes _trt__GetVideoSourceModes data members, use only on dst after soap_dup__trt__GetVideoSourceModes(NULL, _trt__GetVideoSourceModes *dst, _trt__GetVideoSourceModes *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceModes
{
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModesResponse is a complexType.
///
/// @note struct _trt__GetVideoSourceModesResponse operations:
/// - _trt__GetVideoSourceModesResponse* soap_new__trt__GetVideoSourceModesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetVideoSourceModesResponse(struct soap*, _trt__GetVideoSourceModesResponse*) default initialize members
/// - int soap_read__trt__GetVideoSourceModesResponse(struct soap*, _trt__GetVideoSourceModesResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceModesResponse(struct soap*, _trt__GetVideoSourceModesResponse*) serialize to a sink
/// - _trt__GetVideoSourceModesResponse* soap_dup__trt__GetVideoSourceModesResponse(struct soap*, _trt__GetVideoSourceModesResponse* dst, _trt__GetVideoSourceModesResponse *src) returns deep copy of _trt__GetVideoSourceModesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceModesResponse(_trt__GetVideoSourceModesResponse*) deep deletes _trt__GetVideoSourceModesResponse data members, use only on dst after soap_dup__trt__GetVideoSourceModesResponse(NULL, _trt__GetVideoSourceModesResponse *dst, _trt__GetVideoSourceModesResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceModesResponse
{
/// <PRE><BLOCKQUOTE>
///   Return the information for specified video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct trt__VideoSourceMode* is 1..unbounded.
  $ int                                  __sizeVideoSourceModes         1;
/// Array struct trt__VideoSourceMode* of size 1..unbounded.
    struct trt__VideoSourceMode*         VideoSourceModes               1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceMode
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceMode is a complexType.
///
/// @note struct _trt__SetVideoSourceMode operations:
/// - _trt__SetVideoSourceMode* soap_new__trt__SetVideoSourceMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetVideoSourceMode(struct soap*, _trt__SetVideoSourceMode*) default initialize members
/// - int soap_read__trt__SetVideoSourceMode(struct soap*, _trt__SetVideoSourceMode*) deserialize from a source
/// - int soap_write__trt__SetVideoSourceMode(struct soap*, _trt__SetVideoSourceMode*) serialize to a sink
/// - _trt__SetVideoSourceMode* soap_dup__trt__SetVideoSourceMode(struct soap*, _trt__SetVideoSourceMode* dst, _trt__SetVideoSourceMode *src) returns deep copy of _trt__SetVideoSourceMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoSourceMode(_trt__SetVideoSourceMode*) deep deletes _trt__SetVideoSourceMode data members, use only on dst after soap_dup__trt__SetVideoSourceMode(NULL, _trt__SetVideoSourceMode *dst, _trt__SetVideoSourceMode *src) (use soapcpp2 -Ed)
struct _trt__SetVideoSourceMode
{
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicate video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceModeToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceModeToken           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceModeResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceModeResponse is a complexType.
///
/// @note struct _trt__SetVideoSourceModeResponse operations:
/// - _trt__SetVideoSourceModeResponse* soap_new__trt__SetVideoSourceModeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetVideoSourceModeResponse(struct soap*, _trt__SetVideoSourceModeResponse*) default initialize members
/// - int soap_read__trt__SetVideoSourceModeResponse(struct soap*, _trt__SetVideoSourceModeResponse*) deserialize from a source
/// - int soap_write__trt__SetVideoSourceModeResponse(struct soap*, _trt__SetVideoSourceModeResponse*) serialize to a sink
/// - _trt__SetVideoSourceModeResponse* soap_dup__trt__SetVideoSourceModeResponse(struct soap*, _trt__SetVideoSourceModeResponse* dst, _trt__SetVideoSourceModeResponse *src) returns deep copy of _trt__SetVideoSourceModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoSourceModeResponse(_trt__SetVideoSourceModeResponse*) deep deletes _trt__SetVideoSourceModeResponse data members, use only on dst after soap_dup__trt__SetVideoSourceModeResponse(NULL, _trt__SetVideoSourceModeResponse *dst, _trt__SetVideoSourceModeResponse *src) (use soapcpp2 -Ed)
struct _trt__SetVideoSourceModeResponse
{
/// <PRE><BLOCKQUOTE>
///   The response contains information about rebooting after returning response. When Reboot is set true, a device will reboot automatically after setting mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reboot" of type xs:boolean.
    enum xsd__boolean                    Reboot                         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDs
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDs is a complexType.
///
/// @note struct _trt__GetOSDs operations:
/// - _trt__GetOSDs* soap_new__trt__GetOSDs(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetOSDs(struct soap*, _trt__GetOSDs*) default initialize members
/// - int soap_read__trt__GetOSDs(struct soap*, _trt__GetOSDs*) deserialize from a source
/// - int soap_write__trt__GetOSDs(struct soap*, _trt__GetOSDs*) serialize to a sink
/// - _trt__GetOSDs* soap_dup__trt__GetOSDs(struct soap*, _trt__GetOSDs* dst, _trt__GetOSDs *src) returns deep copy of _trt__GetOSDs src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetOSDs(_trt__GetOSDs*) deep deletes _trt__GetOSDs data members, use only on dst after soap_dup__trt__GetOSDs(NULL, _trt__GetOSDs *dst, _trt__GetOSDs *src) (use soapcpp2 -Ed)
struct _trt__GetOSDs
{
/// <PRE><BLOCKQUOTE>
///   Token of the Video Source Configuration, which has OSDs associated with are requested. If token not exist, request all available OSDs.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDsResponse is a complexType.
///
/// @note struct _trt__GetOSDsResponse operations:
/// - _trt__GetOSDsResponse* soap_new__trt__GetOSDsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetOSDsResponse(struct soap*, _trt__GetOSDsResponse*) default initialize members
/// - int soap_read__trt__GetOSDsResponse(struct soap*, _trt__GetOSDsResponse*) deserialize from a source
/// - int soap_write__trt__GetOSDsResponse(struct soap*, _trt__GetOSDsResponse*) serialize to a sink
/// - _trt__GetOSDsResponse* soap_dup__trt__GetOSDsResponse(struct soap*, _trt__GetOSDsResponse* dst, _trt__GetOSDsResponse *src) returns deep copy of _trt__GetOSDsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetOSDsResponse(_trt__GetOSDsResponse*) deep deletes _trt__GetOSDsResponse data members, use only on dst after soap_dup__trt__GetOSDsResponse(NULL, _trt__GetOSDsResponse *dst, _trt__GetOSDsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetOSDsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of requested OSDs.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__OSDConfiguration* is 0..unbounded.
  $ int                                  __sizeOSDs                     0;
/// Array struct tt__OSDConfiguration* of size 0..unbounded.
    struct tt__OSDConfiguration*         OSDs                           0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSD is a complexType.
///
/// @note struct _trt__GetOSD operations:
/// - _trt__GetOSD* soap_new__trt__GetOSD(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetOSD(struct soap*, _trt__GetOSD*) default initialize members
/// - int soap_read__trt__GetOSD(struct soap*, _trt__GetOSD*) deserialize from a source
/// - int soap_write__trt__GetOSD(struct soap*, _trt__GetOSD*) serialize to a sink
/// - _trt__GetOSD* soap_dup__trt__GetOSD(struct soap*, _trt__GetOSD* dst, _trt__GetOSD *src) returns deep copy of _trt__GetOSD src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetOSD(_trt__GetOSD*) deep deletes _trt__GetOSD data members, use only on dst after soap_dup__trt__GetOSD(NULL, _trt__GetOSD *dst, _trt__GetOSD *src) (use soapcpp2 -Ed)
struct _trt__GetOSD
{
/// <PRE><BLOCKQUOTE>
///   The GetOSD command fetches the OSD configuration if the OSD token is known.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDResponse is a complexType.
///
/// @note struct _trt__GetOSDResponse operations:
/// - _trt__GetOSDResponse* soap_new__trt__GetOSDResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetOSDResponse(struct soap*, _trt__GetOSDResponse*) default initialize members
/// - int soap_read__trt__GetOSDResponse(struct soap*, _trt__GetOSDResponse*) deserialize from a source
/// - int soap_write__trt__GetOSDResponse(struct soap*, _trt__GetOSDResponse*) serialize to a sink
/// - _trt__GetOSDResponse* soap_dup__trt__GetOSDResponse(struct soap*, _trt__GetOSDResponse* dst, _trt__GetOSDResponse *src) returns deep copy of _trt__GetOSDResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetOSDResponse(_trt__GetOSDResponse*) deep deletes _trt__GetOSDResponse data members, use only on dst after soap_dup__trt__GetOSDResponse(NULL, _trt__GetOSDResponse *dst, _trt__GetOSDResponse *src) (use soapcpp2 -Ed)
struct _trt__GetOSDResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested OSD configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSD" of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    struct tt__OSDConfiguration*         OSD                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetOSD is a complexType.
///
/// @note struct _trt__SetOSD operations:
/// - _trt__SetOSD* soap_new__trt__SetOSD(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetOSD(struct soap*, _trt__SetOSD*) default initialize members
/// - int soap_read__trt__SetOSD(struct soap*, _trt__SetOSD*) deserialize from a source
/// - int soap_write__trt__SetOSD(struct soap*, _trt__SetOSD*) serialize to a sink
/// - _trt__SetOSD* soap_dup__trt__SetOSD(struct soap*, _trt__SetOSD* dst, _trt__SetOSD *src) returns deep copy of _trt__SetOSD src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetOSD(_trt__SetOSD*) deep deletes _trt__SetOSD data members, use only on dst after soap_dup__trt__SetOSD(NULL, _trt__SetOSD *dst, _trt__SetOSD *src) (use soapcpp2 -Ed)
struct _trt__SetOSD
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified OSD configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSD" of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    struct tt__OSDConfiguration*         OSD                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetOSDResponse is a complexType.
///
/// @note struct _trt__SetOSDResponse operations:
/// - _trt__SetOSDResponse* soap_new__trt__SetOSDResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__SetOSDResponse(struct soap*, _trt__SetOSDResponse*) default initialize members
/// - int soap_read__trt__SetOSDResponse(struct soap*, _trt__SetOSDResponse*) deserialize from a source
/// - int soap_write__trt__SetOSDResponse(struct soap*, _trt__SetOSDResponse*) serialize to a sink
/// - _trt__SetOSDResponse* soap_dup__trt__SetOSDResponse(struct soap*, _trt__SetOSDResponse* dst, _trt__SetOSDResponse *src) returns deep copy of _trt__SetOSDResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetOSDResponse(_trt__SetOSDResponse*) deep deletes _trt__SetOSDResponse data members, use only on dst after soap_dup__trt__SetOSDResponse(NULL, _trt__SetOSDResponse *dst, _trt__SetOSDResponse *src) (use soapcpp2 -Ed)
struct _trt__SetOSDResponse
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDOptions is a complexType.
///
/// @note struct _trt__GetOSDOptions operations:
/// - _trt__GetOSDOptions* soap_new__trt__GetOSDOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetOSDOptions(struct soap*, _trt__GetOSDOptions*) default initialize members
/// - int soap_read__trt__GetOSDOptions(struct soap*, _trt__GetOSDOptions*) deserialize from a source
/// - int soap_write__trt__GetOSDOptions(struct soap*, _trt__GetOSDOptions*) serialize to a sink
/// - _trt__GetOSDOptions* soap_dup__trt__GetOSDOptions(struct soap*, _trt__GetOSDOptions* dst, _trt__GetOSDOptions *src) returns deep copy of _trt__GetOSDOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetOSDOptions(_trt__GetOSDOptions*) deep deletes _trt__GetOSDOptions data members, use only on dst after soap_dup__trt__GetOSDOptions(NULL, _trt__GetOSDOptions *dst, _trt__GetOSDOptions *src) (use soapcpp2 -Ed)
struct _trt__GetOSDOptions
{
/// <PRE><BLOCKQUOTE>
///   Video Source Configuration Token that specifies an existing video source configuration that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDOptionsResponse is a complexType.
///
/// @note struct _trt__GetOSDOptionsResponse operations:
/// - _trt__GetOSDOptionsResponse* soap_new__trt__GetOSDOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetOSDOptionsResponse(struct soap*, _trt__GetOSDOptionsResponse*) default initialize members
/// - int soap_read__trt__GetOSDOptionsResponse(struct soap*, _trt__GetOSDOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetOSDOptionsResponse(struct soap*, _trt__GetOSDOptionsResponse*) serialize to a sink
/// - _trt__GetOSDOptionsResponse* soap_dup__trt__GetOSDOptionsResponse(struct soap*, _trt__GetOSDOptionsResponse* dst, _trt__GetOSDOptionsResponse *src) returns deep copy of _trt__GetOSDOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetOSDOptionsResponse(_trt__GetOSDOptionsResponse*) deep deletes _trt__GetOSDOptionsResponse data members, use only on dst after soap_dup__trt__GetOSDOptionsResponse(NULL, _trt__GetOSDOptionsResponse *dst, _trt__GetOSDOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetOSDOptionsResponse
{

/// </BLOCKQUOTE></PRE>
///
/// Element "OSDOptions" of type "http://www.onvif.org/ver10/schema":OSDConfigurationOptions.
    struct tt__OSDConfigurationOptions*  OSDOptions                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateOSD is a complexType.
///
/// @note struct _trt__CreateOSD operations:
/// - _trt__CreateOSD* soap_new__trt__CreateOSD(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__CreateOSD(struct soap*, _trt__CreateOSD*) default initialize members
/// - int soap_read__trt__CreateOSD(struct soap*, _trt__CreateOSD*) deserialize from a source
/// - int soap_write__trt__CreateOSD(struct soap*, _trt__CreateOSD*) serialize to a sink
/// - _trt__CreateOSD* soap_dup__trt__CreateOSD(struct soap*, _trt__CreateOSD* dst, _trt__CreateOSD *src) returns deep copy of _trt__CreateOSD src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__CreateOSD(_trt__CreateOSD*) deep deletes _trt__CreateOSD data members, use only on dst after soap_dup__trt__CreateOSD(NULL, _trt__CreateOSD *dst, _trt__CreateOSD *src) (use soapcpp2 -Ed)
struct _trt__CreateOSD
{
/// <PRE><BLOCKQUOTE>
///   Contain the initial OSD configuration for create.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSD" of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    struct tt__OSDConfiguration*         OSD                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateOSDResponse is a complexType.
///
/// @note struct _trt__CreateOSDResponse operations:
/// - _trt__CreateOSDResponse* soap_new__trt__CreateOSDResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__CreateOSDResponse(struct soap*, _trt__CreateOSDResponse*) default initialize members
/// - int soap_read__trt__CreateOSDResponse(struct soap*, _trt__CreateOSDResponse*) deserialize from a source
/// - int soap_write__trt__CreateOSDResponse(struct soap*, _trt__CreateOSDResponse*) serialize to a sink
/// - _trt__CreateOSDResponse* soap_dup__trt__CreateOSDResponse(struct soap*, _trt__CreateOSDResponse* dst, _trt__CreateOSDResponse *src) returns deep copy of _trt__CreateOSDResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__CreateOSDResponse(_trt__CreateOSDResponse*) deep deletes _trt__CreateOSDResponse data members, use only on dst after soap_dup__trt__CreateOSDResponse(NULL, _trt__CreateOSDResponse *dst, _trt__CreateOSDResponse *src) (use soapcpp2 -Ed)
struct _trt__CreateOSDResponse
{
/// <PRE><BLOCKQUOTE>
///   Returns Token of the newly created OSD
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteOSD is a complexType.
///
/// @note struct _trt__DeleteOSD operations:
/// - _trt__DeleteOSD* soap_new__trt__DeleteOSD(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__DeleteOSD(struct soap*, _trt__DeleteOSD*) default initialize members
/// - int soap_read__trt__DeleteOSD(struct soap*, _trt__DeleteOSD*) deserialize from a source
/// - int soap_write__trt__DeleteOSD(struct soap*, _trt__DeleteOSD*) serialize to a sink
/// - _trt__DeleteOSD* soap_dup__trt__DeleteOSD(struct soap*, _trt__DeleteOSD* dst, _trt__DeleteOSD *src) returns deep copy of _trt__DeleteOSD src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__DeleteOSD(_trt__DeleteOSD*) deep deletes _trt__DeleteOSD data members, use only on dst after soap_dup__trt__DeleteOSD(NULL, _trt__DeleteOSD *dst, _trt__DeleteOSD *src) (use soapcpp2 -Ed)
struct _trt__DeleteOSD
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the OSD configuration that should be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteOSDResponse is a complexType.
///
/// @note struct _trt__DeleteOSDResponse operations:
/// - _trt__DeleteOSDResponse* soap_new__trt__DeleteOSDResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__DeleteOSDResponse(struct soap*, _trt__DeleteOSDResponse*) default initialize members
/// - int soap_read__trt__DeleteOSDResponse(struct soap*, _trt__DeleteOSDResponse*) deserialize from a source
/// - int soap_write__trt__DeleteOSDResponse(struct soap*, _trt__DeleteOSDResponse*) serialize to a sink
/// - _trt__DeleteOSDResponse* soap_dup__trt__DeleteOSDResponse(struct soap*, _trt__DeleteOSDResponse* dst, _trt__DeleteOSDResponse *src) returns deep copy of _trt__DeleteOSDResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__DeleteOSDResponse(_trt__DeleteOSDResponse*) deep deletes _trt__DeleteOSDResponse data members, use only on dst after soap_dup__trt__DeleteOSDResponse(NULL, _trt__DeleteOSDResponse *dst, _trt__DeleteOSDResponse *src) (use soapcpp2 -Ed)
struct _trt__DeleteOSDResponse
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/events/wsdl":Capabilities is a complexType.
///
/// @note struct tev__Capabilities operations:
/// - tev__Capabilities* soap_new_tev__Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tev__Capabilities(struct soap*, tev__Capabilities*) default initialize members
/// - int soap_read_tev__Capabilities(struct soap*, tev__Capabilities*) deserialize from a source
/// - int soap_write_tev__Capabilities(struct soap*, tev__Capabilities*) serialize to a sink
/// - tev__Capabilities* soap_dup_tev__Capabilities(struct soap*, tev__Capabilities* dst, tev__Capabilities *src) returns deep copy of tev__Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tev__Capabilities(tev__Capabilities*) deep deletes tev__Capabilities data members, use only on dst after soap_dup_tev__Capabilities(NULL, tev__Capabilities *dst, tev__Capabilities *src) (use soapcpp2 -Ed)
struct tev__Capabilities
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "WSSubscriptionPolicySupport" of type xs:boolean.
  @ enum xsd__boolean*                   WSSubscriptionPolicySupport    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "WSPullPointSupport" of type xs:boolean.
  @ enum xsd__boolean*                   WSPullPointSupport             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "WSPausableSubscriptionManagerInterfaceSupport" of type xs:boolean.
  @ enum xsd__boolean*                   WSPausableSubscriptionManagerInterfaceSupport 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of supported notification producers as defined by WS-BaseNotification.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxNotificationProducers" of type xs:int.
  @ int*                                 MaxNotificationProducers       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum supported number of notification pull points.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxPullPoints" of type xs:int.
  @ int*                                 MaxPullPoints                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication if the device supports persistent notification storage.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PersistentNotificationStorage" of type xs:boolean.
  @ enum xsd__boolean*                   PersistentNotificationStorage  0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities is a complexType.
///
/// @note struct _tev__GetServiceCapabilities operations:
/// - _tev__GetServiceCapabilities* soap_new__tev__GetServiceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities*) default initialize members
/// - int soap_read__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities*) deserialize from a source
/// - int soap_write__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities*) serialize to a sink
/// - _tev__GetServiceCapabilities* soap_dup__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities* dst, _tev__GetServiceCapabilities *src) returns deep copy of _tev__GetServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__GetServiceCapabilities(_tev__GetServiceCapabilities*) deep deletes _tev__GetServiceCapabilities data members, use only on dst after soap_dup__tev__GetServiceCapabilities(NULL, _tev__GetServiceCapabilities *dst, _tev__GetServiceCapabilities *src) (use soapcpp2 -Ed)
struct _tev__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note struct _tev__GetServiceCapabilitiesResponse operations:
/// - _tev__GetServiceCapabilitiesResponse* soap_new__tev__GetServiceCapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse*) default initialize members
/// - int soap_read__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse*) deserialize from a source
/// - int soap_write__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse*) serialize to a sink
/// - _tev__GetServiceCapabilitiesResponse* soap_dup__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse* dst, _tev__GetServiceCapabilitiesResponse *src) returns deep copy of _tev__GetServiceCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__GetServiceCapabilitiesResponse(_tev__GetServiceCapabilitiesResponse*) deep deletes _tev__GetServiceCapabilitiesResponse data members, use only on dst after soap_dup__tev__GetServiceCapabilitiesResponse(NULL, _tev__GetServiceCapabilitiesResponse *dst, _tev__GetServiceCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _tev__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the event service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
    struct tev__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription
/// @brief "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription is a complexType.
///
/// @note struct _tev__CreatePullPointSubscription operations:
/// - _tev__CreatePullPointSubscription* soap_new__tev__CreatePullPointSubscription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription*) default initialize members
/// - int soap_read__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription*) deserialize from a source
/// - int soap_write__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription*) serialize to a sink
/// - _tev__CreatePullPointSubscription* soap_dup__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription* dst, _tev__CreatePullPointSubscription *src) returns deep copy of _tev__CreatePullPointSubscription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__CreatePullPointSubscription(_tev__CreatePullPointSubscription*) deep deletes _tev__CreatePullPointSubscription data members, use only on dst after soap_dup__tev__CreatePullPointSubscription(NULL, _tev__CreatePullPointSubscription *dst, _tev__CreatePullPointSubscription *src) (use soapcpp2 -Ed)
struct _tev__CreatePullPointSubscription
{
/// <PRE><BLOCKQUOTE>
///   Optional XPATH expression to select specific topics.
/// </BLOCKQUOTE></PRE>
///
/// Element "Filter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Initial termination time.
/// </BLOCKQUOTE></PRE>
///
/// Element "InitialTerminationTime" of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     InitialTerminationTime         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a>.
/// </BLOCKQUOTE></PRE>
///
/// @note struct _tev__CreatePullPointSubscription_SubscriptionPolicy operations:
/// - _tev__CreatePullPointSubscription_SubscriptionPolicy* soap_new__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, _tev__CreatePullPointSubscription_SubscriptionPolicy*) default initialize members
/// - int soap_read__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, _tev__CreatePullPointSubscription_SubscriptionPolicy*) deserialize from a source
/// - int soap_write__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, _tev__CreatePullPointSubscription_SubscriptionPolicy*) serialize to a sink
/// - _tev__CreatePullPointSubscription_SubscriptionPolicy* soap_dup__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, _tev__CreatePullPointSubscription_SubscriptionPolicy* dst, _tev__CreatePullPointSubscription_SubscriptionPolicy *src) returns deep copy of _tev__CreatePullPointSubscription_SubscriptionPolicy src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__CreatePullPointSubscription_SubscriptionPolicy(_tev__CreatePullPointSubscription_SubscriptionPolicy*) deep deletes _tev__CreatePullPointSubscription_SubscriptionPolicy data members, use only on dst after soap_dup__tev__CreatePullPointSubscription_SubscriptionPolicy(NULL, _tev__CreatePullPointSubscription_SubscriptionPolicy *dst, _tev__CreatePullPointSubscription_SubscriptionPolicy *src) (use soapcpp2 -Ed)
    struct _tev__CreatePullPointSubscription_SubscriptionPolicy
    {
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse is a complexType.
///
/// @note struct _tev__CreatePullPointSubscriptionResponse operations:
/// - _tev__CreatePullPointSubscriptionResponse* soap_new__tev__CreatePullPointSubscriptionResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse*) default initialize members
/// - int soap_read__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse*) deserialize from a source
/// - int soap_write__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse*) serialize to a sink
/// - _tev__CreatePullPointSubscriptionResponse* soap_dup__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse* dst, _tev__CreatePullPointSubscriptionResponse *src) returns deep copy of _tev__CreatePullPointSubscriptionResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__CreatePullPointSubscriptionResponse(_tev__CreatePullPointSubscriptionResponse*) deep deletes _tev__CreatePullPointSubscriptionResponse data members, use only on dst after soap_dup__tev__CreatePullPointSubscriptionResponse(NULL, _tev__CreatePullPointSubscriptionResponse *dst, _tev__CreatePullPointSubscriptionResponse *src) (use soapcpp2 -Ed)
struct _tev__CreatePullPointSubscriptionResponse
{
/// <PRE><BLOCKQUOTE>
///   Endpoint reference of the subscription to be used for pulling the messages.
/// </BLOCKQUOTE></PRE>
///
/// Element "SubscriptionReference" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current time of the server for synchronization purposes.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:"CurrentTime.
    time_t                               wsnt__CurrentTime              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Date time when the PullPoint will be shut down without further pull requests.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:"TerminationTime.
    time_t                               wsnt__TerminationTime          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessages
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessages is a complexType.
///
/// @note struct _tev__PullMessages operations:
/// - _tev__PullMessages* soap_new__tev__PullMessages(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__PullMessages(struct soap*, _tev__PullMessages*) default initialize members
/// - int soap_read__tev__PullMessages(struct soap*, _tev__PullMessages*) deserialize from a source
/// - int soap_write__tev__PullMessages(struct soap*, _tev__PullMessages*) serialize to a sink
/// - _tev__PullMessages* soap_dup__tev__PullMessages(struct soap*, _tev__PullMessages* dst, _tev__PullMessages *src) returns deep copy of _tev__PullMessages src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__PullMessages(_tev__PullMessages*) deep deletes _tev__PullMessages data members, use only on dst after soap_dup__tev__PullMessages(NULL, _tev__PullMessages *dst, _tev__PullMessages *src) (use soapcpp2 -Ed)
struct _tev__PullMessages
{
/// <PRE><BLOCKQUOTE>
///   Maximum time to block until this method returns.
/// </BLOCKQUOTE></PRE>
///
/// Element "Timeout" of type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Upper limit for the number of messages to return at once. A server implementation may decide to return less messages.
/// </BLOCKQUOTE></PRE>
///
/// Element "MessageLimit" of type xs:int.
    int                                  MessageLimit                   1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse is a complexType.
///
/// @note struct _tev__PullMessagesResponse operations:
/// - _tev__PullMessagesResponse* soap_new__tev__PullMessagesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse*) default initialize members
/// - int soap_read__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse*) deserialize from a source
/// - int soap_write__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse*) serialize to a sink
/// - _tev__PullMessagesResponse* soap_dup__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse* dst, _tev__PullMessagesResponse *src) returns deep copy of _tev__PullMessagesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__PullMessagesResponse(_tev__PullMessagesResponse*) deep deletes _tev__PullMessagesResponse data members, use only on dst after soap_dup__tev__PullMessagesResponse(NULL, _tev__PullMessagesResponse *dst, _tev__PullMessagesResponse *src) (use soapcpp2 -Ed)
struct _tev__PullMessagesResponse
{
/// <PRE><BLOCKQUOTE>
///   The date and time when the messages have been delivered by the web server to the client.
/// </BLOCKQUOTE></PRE>
///
/// Element "CurrentTime" of type xs:dateTime.
    time_t                               CurrentTime                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Date time when the PullPoint will be shut down without further pull requests.
/// </BLOCKQUOTE></PRE>
///
/// Element "TerminationTime" of type xs:dateTime.
    time_t                               TerminationTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of messages. This list shall be empty in case of a timeout.
/// </BLOCKQUOTE></PRE>
///
/// Size of the dynamic array of values of type struct wsnt__NotificationMessageHolderType* is 0..unbounded.
  $ int                                  __sizeNotificationMessage      0;
/// Array struct wsnt__NotificationMessageHolderType* of size 0..unbounded.
    struct wsnt__NotificationMessageHolderType*  wsnt__NotificationMessage      0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse is a complexType.
///
/// @note struct _tev__PullMessagesFaultResponse operations:
/// - _tev__PullMessagesFaultResponse* soap_new__tev__PullMessagesFaultResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse*) default initialize members
/// - int soap_read__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse*) deserialize from a source
/// - int soap_write__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse*) serialize to a sink
/// - _tev__PullMessagesFaultResponse* soap_dup__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse* dst, _tev__PullMessagesFaultResponse *src) returns deep copy of _tev__PullMessagesFaultResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__PullMessagesFaultResponse(_tev__PullMessagesFaultResponse*) deep deletes _tev__PullMessagesFaultResponse data members, use only on dst after soap_dup__tev__PullMessagesFaultResponse(NULL, _tev__PullMessagesFaultResponse *dst, _tev__PullMessagesFaultResponse *src) (use soapcpp2 -Ed)
struct _tev__PullMessagesFaultResponse
{
/// <PRE><BLOCKQUOTE>
///   Maximum timeout supported by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxTimeout" of type xs:duration.
    xsd__duration                        MaxTimeout                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum message limit supported by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxMessageLimit" of type xs:int.
    int                                  MaxMessageLimit                1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":Seek
/// @brief "http://www.onvif.org/ver10/events/wsdl":Seek is a complexType.
///
/// @note struct _tev__Seek operations:
/// - _tev__Seek* soap_new__tev__Seek(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__Seek(struct soap*, _tev__Seek*) default initialize members
/// - int soap_read__tev__Seek(struct soap*, _tev__Seek*) deserialize from a source
/// - int soap_write__tev__Seek(struct soap*, _tev__Seek*) serialize to a sink
/// - _tev__Seek* soap_dup__tev__Seek(struct soap*, _tev__Seek* dst, _tev__Seek *src) returns deep copy of _tev__Seek src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__Seek(_tev__Seek*) deep deletes _tev__Seek data members, use only on dst after soap_dup__tev__Seek(NULL, _tev__Seek *dst, _tev__Seek *src) (use soapcpp2 -Ed)
struct _tev__Seek
{
/// <PRE><BLOCKQUOTE>
///   The date and time to match against stored messages.
/// </BLOCKQUOTE></PRE>
///
/// Element "UtcTime" of type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reverse the pull direction of PullMessages.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reverse" of type xs:boolean.
    enum xsd__boolean*                   Reverse                        0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SeekResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":SeekResponse is a complexType.
///
/// @note struct _tev__SeekResponse operations:
/// - _tev__SeekResponse* soap_new__tev__SeekResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__SeekResponse(struct soap*, _tev__SeekResponse*) default initialize members
/// - int soap_read__tev__SeekResponse(struct soap*, _tev__SeekResponse*) deserialize from a source
/// - int soap_write__tev__SeekResponse(struct soap*, _tev__SeekResponse*) serialize to a sink
/// - _tev__SeekResponse* soap_dup__tev__SeekResponse(struct soap*, _tev__SeekResponse* dst, _tev__SeekResponse *src) returns deep copy of _tev__SeekResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__SeekResponse(_tev__SeekResponse*) deep deletes _tev__SeekResponse data members, use only on dst after soap_dup__tev__SeekResponse(NULL, _tev__SeekResponse *dst, _tev__SeekResponse *src) (use soapcpp2 -Ed)
struct _tev__SeekResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint is a complexType.
///
/// @note struct _tev__SetSynchronizationPoint operations:
/// - _tev__SetSynchronizationPoint* soap_new__tev__SetSynchronizationPoint(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint*) default initialize members
/// - int soap_read__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint*) deserialize from a source
/// - int soap_write__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint*) serialize to a sink
/// - _tev__SetSynchronizationPoint* soap_dup__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint* dst, _tev__SetSynchronizationPoint *src) returns deep copy of _tev__SetSynchronizationPoint src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__SetSynchronizationPoint(_tev__SetSynchronizationPoint*) deep deletes _tev__SetSynchronizationPoint data members, use only on dst after soap_dup__tev__SetSynchronizationPoint(NULL, _tev__SetSynchronizationPoint *dst, _tev__SetSynchronizationPoint *src) (use soapcpp2 -Ed)
struct _tev__SetSynchronizationPoint
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse is a complexType.
///
/// @note struct _tev__SetSynchronizationPointResponse operations:
/// - _tev__SetSynchronizationPointResponse* soap_new__tev__SetSynchronizationPointResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse*) default initialize members
/// - int soap_read__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse*) deserialize from a source
/// - int soap_write__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse*) serialize to a sink
/// - _tev__SetSynchronizationPointResponse* soap_dup__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse* dst, _tev__SetSynchronizationPointResponse *src) returns deep copy of _tev__SetSynchronizationPointResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__SetSynchronizationPointResponse(_tev__SetSynchronizationPointResponse*) deep deletes _tev__SetSynchronizationPointResponse data members, use only on dst after soap_dup__tev__SetSynchronizationPointResponse(NULL, _tev__SetSynchronizationPointResponse *dst, _tev__SetSynchronizationPointResponse *src) (use soapcpp2 -Ed)
struct _tev__SetSynchronizationPointResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventProperties
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventProperties is a complexType.
///
/// @note struct _tev__GetEventProperties operations:
/// - _tev__GetEventProperties* soap_new__tev__GetEventProperties(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__GetEventProperties(struct soap*, _tev__GetEventProperties*) default initialize members
/// - int soap_read__tev__GetEventProperties(struct soap*, _tev__GetEventProperties*) deserialize from a source
/// - int soap_write__tev__GetEventProperties(struct soap*, _tev__GetEventProperties*) serialize to a sink
/// - _tev__GetEventProperties* soap_dup__tev__GetEventProperties(struct soap*, _tev__GetEventProperties* dst, _tev__GetEventProperties *src) returns deep copy of _tev__GetEventProperties src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__GetEventProperties(_tev__GetEventProperties*) deep deletes _tev__GetEventProperties data members, use only on dst after soap_dup__tev__GetEventProperties(NULL, _tev__GetEventProperties *dst, _tev__GetEventProperties *src) (use soapcpp2 -Ed)
struct _tev__GetEventProperties
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse is a complexType.
///
/// @note struct _tev__GetEventPropertiesResponse operations:
/// - _tev__GetEventPropertiesResponse* soap_new__tev__GetEventPropertiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse*) default initialize members
/// - int soap_read__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse*) deserialize from a source
/// - int soap_write__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse*) serialize to a sink
/// - _tev__GetEventPropertiesResponse* soap_dup__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse* dst, _tev__GetEventPropertiesResponse *src) returns deep copy of _tev__GetEventPropertiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__GetEventPropertiesResponse(_tev__GetEventPropertiesResponse*) deep deletes _tev__GetEventPropertiesResponse data members, use only on dst after soap_dup__tev__GetEventPropertiesResponse(NULL, _tev__GetEventPropertiesResponse *dst, _tev__GetEventPropertiesResponse *src) (use soapcpp2 -Ed)
struct _tev__GetEventPropertiesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of topic namespaces supported.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeTopicNamespaceLocation   1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         TopicNamespaceLocation         1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   True when topicset is fixed for all times.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:"FixedTopicSet.
    enum xsd__boolean                    wsnt__FixedTopicSet            1 = xsd__boolean__true_;	///< Required element with default value="true".
/// <PRE><BLOCKQUOTE>
///   Set of topics supported.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:"TopicSet.
    struct wstop__TopicSetType*          wstop__TopicSet                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Defines the XPath expression syntax supported for matching topic expressions. <br/>
///   The following TopicExpressionDialects are mandatory for an ONVIF compliant device :
///   <ul type="disc">
///   <li>http://docs.oasis-open.org/wsn/t-1/TopicExpression/Concrete</li>
///   <li>http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Size of the dynamic array of values of type xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeTopicExpressionDialect   1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         wsnt__TopicExpressionDialect   1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Defines the XPath function set supported for message content filtering.<br/> The following MessageContentFilterDialects should be returned if a device supports the message content filtering:
///   <ul type="disc">
///   <li>http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter.</li>
///   </ul>
///   A device that does not support any MessageContentFilterDialect returns a single empty url.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeMessageContentFilterDialect 1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         MessageContentFilterDialect    1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Optional ProducerPropertiesDialects. Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a> for advanced filtering.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 0..unbounded.
  $ int                                  __sizeProducerPropertiesFilterDialect 0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         ProducerPropertiesFilterDialect 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Message Content Description Language allows referencing
///   of vendor-specific types. In order to ease the integration of such types into a client application,
///   the GetEventPropertiesResponse shall list all URI locations to schema files whose types are
///   used in the description of notifications, with MessageContentSchemaLocation elements.<br/> This list shall at least contain the URI of the ONVIF schema file.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeMessageContentSchemaLocation 1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         MessageContentSchemaLocation   1;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/imaging/wsdl":Capabilities is a complexType.
///
/// @note struct timg__Capabilities operations:
/// - timg__Capabilities* soap_new_timg__Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_timg__Capabilities(struct soap*, timg__Capabilities*) default initialize members
/// - int soap_read_timg__Capabilities(struct soap*, timg__Capabilities*) deserialize from a source
/// - int soap_write_timg__Capabilities(struct soap*, timg__Capabilities*) serialize to a sink
/// - timg__Capabilities* soap_dup_timg__Capabilities(struct soap*, timg__Capabilities* dst, timg__Capabilities *src) returns deep copy of timg__Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_timg__Capabilities(timg__Capabilities*) deep deletes timg__Capabilities data members, use only on dst after soap_dup_timg__Capabilities(NULL, timg__Capabilities *dst, timg__Capabilities *src) (use soapcpp2 -Ed)
struct timg__Capabilities
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not Image Stabilization feature is supported.
///   The use of this capability is deprecated, a client should use GetOption to find out if image stabilization is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ImageStabilization" of type xs:boolean.
  @ enum xsd__boolean*                   ImageStabilization             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not Imaging Presets feature is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Presets" of type xs:boolean.
  @ enum xsd__boolean*                   Presets                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not imaging preset settings can be updated.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AdaptablePreset" of type xs:boolean.
  @ enum xsd__boolean*                   AdaptablePreset                0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver20/imaging/wsdl":ImagingPreset is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the Imaging Preset settings.
/// </BLOCKQUOTE></PRE>
///
/// @note struct timg__ImagingPreset operations:
/// - timg__ImagingPreset* soap_new_timg__ImagingPreset(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_timg__ImagingPreset(struct soap*, timg__ImagingPreset*) default initialize members
/// - int soap_read_timg__ImagingPreset(struct soap*, timg__ImagingPreset*) deserialize from a source
/// - int soap_write_timg__ImagingPreset(struct soap*, timg__ImagingPreset*) serialize to a sink
/// - timg__ImagingPreset* soap_dup_timg__ImagingPreset(struct soap*, timg__ImagingPreset* dst, timg__ImagingPreset *src) returns deep copy of timg__ImagingPreset src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_timg__ImagingPreset(timg__ImagingPreset*) deep deletes timg__ImagingPreset data members, use only on dst after soap_dup_timg__ImagingPreset(NULL, timg__ImagingPreset *dst, timg__ImagingPreset *src) (use soapcpp2 -Ed)
struct timg__ImagingPreset
{
/// <PRE><BLOCKQUOTE>
///   Human readable name of the Imaging Preset.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of this Imaging Preset.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates Imaging Preset Type. Use timg:ImagingPresetType. Used for multi-language support and display.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "type" of type xs:string.
  @ char*                                type                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilities is a complexType.
///
/// @note struct _timg__GetServiceCapabilities operations:
/// - _timg__GetServiceCapabilities* soap_new__timg__GetServiceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__GetServiceCapabilities(struct soap*, _timg__GetServiceCapabilities*) default initialize members
/// - int soap_read__timg__GetServiceCapabilities(struct soap*, _timg__GetServiceCapabilities*) deserialize from a source
/// - int soap_write__timg__GetServiceCapabilities(struct soap*, _timg__GetServiceCapabilities*) serialize to a sink
/// - _timg__GetServiceCapabilities* soap_dup__timg__GetServiceCapabilities(struct soap*, _timg__GetServiceCapabilities* dst, _timg__GetServiceCapabilities *src) returns deep copy of _timg__GetServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__GetServiceCapabilities(_timg__GetServiceCapabilities*) deep deletes _timg__GetServiceCapabilities data members, use only on dst after soap_dup__timg__GetServiceCapabilities(NULL, _timg__GetServiceCapabilities *dst, _timg__GetServiceCapabilities *src) (use soapcpp2 -Ed)
struct _timg__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note struct _timg__GetServiceCapabilitiesResponse operations:
/// - _timg__GetServiceCapabilitiesResponse* soap_new__timg__GetServiceCapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__GetServiceCapabilitiesResponse(struct soap*, _timg__GetServiceCapabilitiesResponse*) default initialize members
/// - int soap_read__timg__GetServiceCapabilitiesResponse(struct soap*, _timg__GetServiceCapabilitiesResponse*) deserialize from a source
/// - int soap_write__timg__GetServiceCapabilitiesResponse(struct soap*, _timg__GetServiceCapabilitiesResponse*) serialize to a sink
/// - _timg__GetServiceCapabilitiesResponse* soap_dup__timg__GetServiceCapabilitiesResponse(struct soap*, _timg__GetServiceCapabilitiesResponse* dst, _timg__GetServiceCapabilitiesResponse *src) returns deep copy of _timg__GetServiceCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__GetServiceCapabilitiesResponse(_timg__GetServiceCapabilitiesResponse*) deep deletes _timg__GetServiceCapabilitiesResponse data members, use only on dst after soap_dup__timg__GetServiceCapabilitiesResponse(NULL, _timg__GetServiceCapabilitiesResponse *dst, _timg__GetServiceCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _timg__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the imaging service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver20/imaging/wsdl":Capabilities.
    struct timg__Capabilities*           Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettings
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettings is a complexType.
///
/// @note struct _timg__GetImagingSettings operations:
/// - _timg__GetImagingSettings* soap_new__timg__GetImagingSettings(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__GetImagingSettings(struct soap*, _timg__GetImagingSettings*) default initialize members
/// - int soap_read__timg__GetImagingSettings(struct soap*, _timg__GetImagingSettings*) deserialize from a source
/// - int soap_write__timg__GetImagingSettings(struct soap*, _timg__GetImagingSettings*) serialize to a sink
/// - _timg__GetImagingSettings* soap_dup__timg__GetImagingSettings(struct soap*, _timg__GetImagingSettings* dst, _timg__GetImagingSettings *src) returns deep copy of _timg__GetImagingSettings src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__GetImagingSettings(_timg__GetImagingSettings*) deep deletes _timg__GetImagingSettings data members, use only on dst after soap_dup__timg__GetImagingSettings(NULL, _timg__GetImagingSettings *dst, _timg__GetImagingSettings *src) (use soapcpp2 -Ed)
struct _timg__GetImagingSettings
{
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource for which the ImagingSettings.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettingsResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettingsResponse is a complexType.
///
/// @note struct _timg__GetImagingSettingsResponse operations:
/// - _timg__GetImagingSettingsResponse* soap_new__timg__GetImagingSettingsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__GetImagingSettingsResponse(struct soap*, _timg__GetImagingSettingsResponse*) default initialize members
/// - int soap_read__timg__GetImagingSettingsResponse(struct soap*, _timg__GetImagingSettingsResponse*) deserialize from a source
/// - int soap_write__timg__GetImagingSettingsResponse(struct soap*, _timg__GetImagingSettingsResponse*) serialize to a sink
/// - _timg__GetImagingSettingsResponse* soap_dup__timg__GetImagingSettingsResponse(struct soap*, _timg__GetImagingSettingsResponse* dst, _timg__GetImagingSettingsResponse *src) returns deep copy of _timg__GetImagingSettingsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__GetImagingSettingsResponse(_timg__GetImagingSettingsResponse*) deep deletes _timg__GetImagingSettingsResponse data members, use only on dst after soap_dup__timg__GetImagingSettingsResponse(NULL, _timg__GetImagingSettingsResponse *dst, _timg__GetImagingSettingsResponse *src) (use soapcpp2 -Ed)
struct _timg__GetImagingSettingsResponse
{
/// <PRE><BLOCKQUOTE>
///   ImagingSettings for the VideoSource that was requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImagingSettings" of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    struct tt__ImagingSettings20*        ImagingSettings                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettings
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettings is a complexType.
///
/// @note struct _timg__SetImagingSettings operations:
/// - _timg__SetImagingSettings* soap_new__timg__SetImagingSettings(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__SetImagingSettings(struct soap*, _timg__SetImagingSettings*) default initialize members
/// - int soap_read__timg__SetImagingSettings(struct soap*, _timg__SetImagingSettings*) deserialize from a source
/// - int soap_write__timg__SetImagingSettings(struct soap*, _timg__SetImagingSettings*) serialize to a sink
/// - _timg__SetImagingSettings* soap_dup__timg__SetImagingSettings(struct soap*, _timg__SetImagingSettings* dst, _timg__SetImagingSettings *src) returns deep copy of _timg__SetImagingSettings src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__SetImagingSettings(_timg__SetImagingSettings*) deep deletes _timg__SetImagingSettings data members, use only on dst after soap_dup__timg__SetImagingSettings(NULL, _timg__SetImagingSettings *dst, _timg__SetImagingSettings *src) (use soapcpp2 -Ed)
struct _timg__SetImagingSettings
{
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// Element "ImagingSettings" of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    struct tt__ImagingSettings20*        ImagingSettings                1;	///< Required element.
/// Element "ForcePersistence" of type xs:boolean.
    enum xsd__boolean*                   ForcePersistence               0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettingsResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettingsResponse is a complexType.
///
/// @note struct _timg__SetImagingSettingsResponse operations:
/// - _timg__SetImagingSettingsResponse* soap_new__timg__SetImagingSettingsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__SetImagingSettingsResponse(struct soap*, _timg__SetImagingSettingsResponse*) default initialize members
/// - int soap_read__timg__SetImagingSettingsResponse(struct soap*, _timg__SetImagingSettingsResponse*) deserialize from a source
/// - int soap_write__timg__SetImagingSettingsResponse(struct soap*, _timg__SetImagingSettingsResponse*) serialize to a sink
/// - _timg__SetImagingSettingsResponse* soap_dup__timg__SetImagingSettingsResponse(struct soap*, _timg__SetImagingSettingsResponse* dst, _timg__SetImagingSettingsResponse *src) returns deep copy of _timg__SetImagingSettingsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__SetImagingSettingsResponse(_timg__SetImagingSettingsResponse*) deep deletes _timg__SetImagingSettingsResponse data members, use only on dst after soap_dup__timg__SetImagingSettingsResponse(NULL, _timg__SetImagingSettingsResponse *dst, _timg__SetImagingSettingsResponse *src) (use soapcpp2 -Ed)
struct _timg__SetImagingSettingsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetOptions
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetOptions is a complexType.
///
/// @note struct _timg__GetOptions operations:
/// - _timg__GetOptions* soap_new__timg__GetOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__GetOptions(struct soap*, _timg__GetOptions*) default initialize members
/// - int soap_read__timg__GetOptions(struct soap*, _timg__GetOptions*) deserialize from a source
/// - int soap_write__timg__GetOptions(struct soap*, _timg__GetOptions*) serialize to a sink
/// - _timg__GetOptions* soap_dup__timg__GetOptions(struct soap*, _timg__GetOptions* dst, _timg__GetOptions *src) returns deep copy of _timg__GetOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__GetOptions(_timg__GetOptions*) deep deletes _timg__GetOptions data members, use only on dst after soap_dup__timg__GetOptions(NULL, _timg__GetOptions *dst, _timg__GetOptions *src) (use soapcpp2 -Ed)
struct _timg__GetOptions
{
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource for which the imaging parameter options are requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetOptionsResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetOptionsResponse is a complexType.
///
/// @note struct _timg__GetOptionsResponse operations:
/// - _timg__GetOptionsResponse* soap_new__timg__GetOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__GetOptionsResponse(struct soap*, _timg__GetOptionsResponse*) default initialize members
/// - int soap_read__timg__GetOptionsResponse(struct soap*, _timg__GetOptionsResponse*) deserialize from a source
/// - int soap_write__timg__GetOptionsResponse(struct soap*, _timg__GetOptionsResponse*) serialize to a sink
/// - _timg__GetOptionsResponse* soap_dup__timg__GetOptionsResponse(struct soap*, _timg__GetOptionsResponse* dst, _timg__GetOptionsResponse *src) returns deep copy of _timg__GetOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__GetOptionsResponse(_timg__GetOptionsResponse*) deep deletes _timg__GetOptionsResponse data members, use only on dst after soap_dup__timg__GetOptionsResponse(NULL, _timg__GetOptionsResponse *dst, _timg__GetOptionsResponse *src) (use soapcpp2 -Ed)
struct _timg__GetOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the imaging parameters that are categorized as device specific.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImagingOptions" of type "http://www.onvif.org/ver10/schema":ImagingOptions20.
    struct tt__ImagingOptions20*         ImagingOptions                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Move
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":Move is a complexType.
///
/// @note struct _timg__Move operations:
/// - _timg__Move* soap_new__timg__Move(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__Move(struct soap*, _timg__Move*) default initialize members
/// - int soap_read__timg__Move(struct soap*, _timg__Move*) deserialize from a source
/// - int soap_write__timg__Move(struct soap*, _timg__Move*) serialize to a sink
/// - _timg__Move* soap_dup__timg__Move(struct soap*, _timg__Move* dst, _timg__Move *src) returns deep copy of _timg__Move src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__Move(_timg__Move*) deep deletes _timg__Move data members, use only on dst after soap_dup__timg__Move(NULL, _timg__Move *dst, _timg__Move *src) (use soapcpp2 -Ed)
struct _timg__Move
{
/// <PRE><BLOCKQUOTE>
///   Reference to the VideoSource for the requested move (focus) operation.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Content of the requested move (focus) operation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Focus" of type "http://www.onvif.org/ver10/schema":FocusMove.
    struct tt__FocusMove*                Focus                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":MoveResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":MoveResponse is a complexType.
///
/// @note struct _timg__MoveResponse operations:
/// - _timg__MoveResponse* soap_new__timg__MoveResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__MoveResponse(struct soap*, _timg__MoveResponse*) default initialize members
/// - int soap_read__timg__MoveResponse(struct soap*, _timg__MoveResponse*) deserialize from a source
/// - int soap_write__timg__MoveResponse(struct soap*, _timg__MoveResponse*) serialize to a sink
/// - _timg__MoveResponse* soap_dup__timg__MoveResponse(struct soap*, _timg__MoveResponse* dst, _timg__MoveResponse *src) returns deep copy of _timg__MoveResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__MoveResponse(_timg__MoveResponse*) deep deletes _timg__MoveResponse data members, use only on dst after soap_dup__timg__MoveResponse(NULL, _timg__MoveResponse *dst, _timg__MoveResponse *src) (use soapcpp2 -Ed)
struct _timg__MoveResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptions
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptions is a complexType.
///
/// @note struct _timg__GetMoveOptions operations:
/// - _timg__GetMoveOptions* soap_new__timg__GetMoveOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__GetMoveOptions(struct soap*, _timg__GetMoveOptions*) default initialize members
/// - int soap_read__timg__GetMoveOptions(struct soap*, _timg__GetMoveOptions*) deserialize from a source
/// - int soap_write__timg__GetMoveOptions(struct soap*, _timg__GetMoveOptions*) serialize to a sink
/// - _timg__GetMoveOptions* soap_dup__timg__GetMoveOptions(struct soap*, _timg__GetMoveOptions* dst, _timg__GetMoveOptions *src) returns deep copy of _timg__GetMoveOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__GetMoveOptions(_timg__GetMoveOptions*) deep deletes _timg__GetMoveOptions data members, use only on dst after soap_dup__timg__GetMoveOptions(NULL, _timg__GetMoveOptions *dst, _timg__GetMoveOptions *src) (use soapcpp2 -Ed)
struct _timg__GetMoveOptions
{
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource for the requested move options.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptionsResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptionsResponse is a complexType.
///
/// @note struct _timg__GetMoveOptionsResponse operations:
/// - _timg__GetMoveOptionsResponse* soap_new__timg__GetMoveOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__GetMoveOptionsResponse(struct soap*, _timg__GetMoveOptionsResponse*) default initialize members
/// - int soap_read__timg__GetMoveOptionsResponse(struct soap*, _timg__GetMoveOptionsResponse*) deserialize from a source
/// - int soap_write__timg__GetMoveOptionsResponse(struct soap*, _timg__GetMoveOptionsResponse*) serialize to a sink
/// - _timg__GetMoveOptionsResponse* soap_dup__timg__GetMoveOptionsResponse(struct soap*, _timg__GetMoveOptionsResponse* dst, _timg__GetMoveOptionsResponse *src) returns deep copy of _timg__GetMoveOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__GetMoveOptionsResponse(_timg__GetMoveOptionsResponse*) deep deletes _timg__GetMoveOptionsResponse data members, use only on dst after soap_dup__timg__GetMoveOptionsResponse(NULL, _timg__GetMoveOptionsResponse *dst, _timg__GetMoveOptionsResponse *src) (use soapcpp2 -Ed)
struct _timg__GetMoveOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the focus lens move options.
/// </BLOCKQUOTE></PRE>
///
/// Element "MoveOptions" of type "http://www.onvif.org/ver10/schema":MoveOptions20.
    struct tt__MoveOptions20*            MoveOptions                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Stop
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":Stop is a complexType.
///
/// @note struct _timg__Stop operations:
/// - _timg__Stop* soap_new__timg__Stop(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__Stop(struct soap*, _timg__Stop*) default initialize members
/// - int soap_read__timg__Stop(struct soap*, _timg__Stop*) deserialize from a source
/// - int soap_write__timg__Stop(struct soap*, _timg__Stop*) serialize to a sink
/// - _timg__Stop* soap_dup__timg__Stop(struct soap*, _timg__Stop* dst, _timg__Stop *src) returns deep copy of _timg__Stop src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__Stop(_timg__Stop*) deep deletes _timg__Stop data members, use only on dst after soap_dup__timg__Stop(NULL, _timg__Stop *dst, _timg__Stop *src) (use soapcpp2 -Ed)
struct _timg__Stop
{
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource where the focus movement should be stopped.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":StopResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":StopResponse is a complexType.
///
/// @note struct _timg__StopResponse operations:
/// - _timg__StopResponse* soap_new__timg__StopResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__StopResponse(struct soap*, _timg__StopResponse*) default initialize members
/// - int soap_read__timg__StopResponse(struct soap*, _timg__StopResponse*) deserialize from a source
/// - int soap_write__timg__StopResponse(struct soap*, _timg__StopResponse*) serialize to a sink
/// - _timg__StopResponse* soap_dup__timg__StopResponse(struct soap*, _timg__StopResponse* dst, _timg__StopResponse *src) returns deep copy of _timg__StopResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__StopResponse(_timg__StopResponse*) deep deletes _timg__StopResponse data members, use only on dst after soap_dup__timg__StopResponse(NULL, _timg__StopResponse *dst, _timg__StopResponse *src) (use soapcpp2 -Ed)
struct _timg__StopResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetStatus
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetStatus is a complexType.
///
/// @note struct _timg__GetStatus operations:
/// - _timg__GetStatus* soap_new__timg__GetStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__GetStatus(struct soap*, _timg__GetStatus*) default initialize members
/// - int soap_read__timg__GetStatus(struct soap*, _timg__GetStatus*) deserialize from a source
/// - int soap_write__timg__GetStatus(struct soap*, _timg__GetStatus*) serialize to a sink
/// - _timg__GetStatus* soap_dup__timg__GetStatus(struct soap*, _timg__GetStatus* dst, _timg__GetStatus *src) returns deep copy of _timg__GetStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__GetStatus(_timg__GetStatus*) deep deletes _timg__GetStatus data members, use only on dst after soap_dup__timg__GetStatus(NULL, _timg__GetStatus *dst, _timg__GetStatus *src) (use soapcpp2 -Ed)
struct _timg__GetStatus
{
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource where the imaging status should be requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetStatusResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetStatusResponse is a complexType.
///
/// @note struct _timg__GetStatusResponse operations:
/// - _timg__GetStatusResponse* soap_new__timg__GetStatusResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__GetStatusResponse(struct soap*, _timg__GetStatusResponse*) default initialize members
/// - int soap_read__timg__GetStatusResponse(struct soap*, _timg__GetStatusResponse*) deserialize from a source
/// - int soap_write__timg__GetStatusResponse(struct soap*, _timg__GetStatusResponse*) serialize to a sink
/// - _timg__GetStatusResponse* soap_dup__timg__GetStatusResponse(struct soap*, _timg__GetStatusResponse* dst, _timg__GetStatusResponse *src) returns deep copy of _timg__GetStatusResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__GetStatusResponse(_timg__GetStatusResponse*) deep deletes _timg__GetStatusResponse data members, use only on dst after soap_dup__timg__GetStatusResponse(NULL, _timg__GetStatusResponse *dst, _timg__GetStatusResponse *src) (use soapcpp2 -Ed)
struct _timg__GetStatusResponse
{
/// <PRE><BLOCKQUOTE>
///   Requested imaging status.
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type "http://www.onvif.org/ver10/schema":ImagingStatus20.
    struct tt__ImagingStatus20*          Status                         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetPresets
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetPresets is a complexType.
///
/// @note struct _timg__GetPresets operations:
/// - _timg__GetPresets* soap_new__timg__GetPresets(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__GetPresets(struct soap*, _timg__GetPresets*) default initialize members
/// - int soap_read__timg__GetPresets(struct soap*, _timg__GetPresets*) deserialize from a source
/// - int soap_write__timg__GetPresets(struct soap*, _timg__GetPresets*) serialize to a sink
/// - _timg__GetPresets* soap_dup__timg__GetPresets(struct soap*, _timg__GetPresets* dst, _timg__GetPresets *src) returns deep copy of _timg__GetPresets src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__GetPresets(_timg__GetPresets*) deep deletes _timg__GetPresets data members, use only on dst after soap_dup__timg__GetPresets(NULL, _timg__GetPresets *dst, _timg__GetPresets *src) (use soapcpp2 -Ed)
struct _timg__GetPresets
{
/// <PRE><BLOCKQUOTE>
///   A reference to the VideoSource where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetPresetsResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetPresetsResponse is a complexType.
///
/// @note struct _timg__GetPresetsResponse operations:
/// - _timg__GetPresetsResponse* soap_new__timg__GetPresetsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__GetPresetsResponse(struct soap*, _timg__GetPresetsResponse*) default initialize members
/// - int soap_read__timg__GetPresetsResponse(struct soap*, _timg__GetPresetsResponse*) deserialize from a source
/// - int soap_write__timg__GetPresetsResponse(struct soap*, _timg__GetPresetsResponse*) serialize to a sink
/// - _timg__GetPresetsResponse* soap_dup__timg__GetPresetsResponse(struct soap*, _timg__GetPresetsResponse* dst, _timg__GetPresetsResponse *src) returns deep copy of _timg__GetPresetsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__GetPresetsResponse(_timg__GetPresetsResponse*) deep deletes _timg__GetPresetsResponse data members, use only on dst after soap_dup__timg__GetPresetsResponse(NULL, _timg__GetPresetsResponse *dst, _timg__GetPresetsResponse *src) (use soapcpp2 -Ed)
struct _timg__GetPresetsResponse
{
/// <PRE><BLOCKQUOTE>
///   List of Imaging Presets which are available for the requested VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct timg__ImagingPreset* is 1..unbounded.
  $ int                                  __sizePreset                   1;
/// Array struct timg__ImagingPreset* of size 1..unbounded.
    struct timg__ImagingPreset*          Preset                         1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetCurrentPreset
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetCurrentPreset is a complexType.
///
/// @note struct _timg__GetCurrentPreset operations:
/// - _timg__GetCurrentPreset* soap_new__timg__GetCurrentPreset(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__GetCurrentPreset(struct soap*, _timg__GetCurrentPreset*) default initialize members
/// - int soap_read__timg__GetCurrentPreset(struct soap*, _timg__GetCurrentPreset*) deserialize from a source
/// - int soap_write__timg__GetCurrentPreset(struct soap*, _timg__GetCurrentPreset*) serialize to a sink
/// - _timg__GetCurrentPreset* soap_dup__timg__GetCurrentPreset(struct soap*, _timg__GetCurrentPreset* dst, _timg__GetCurrentPreset *src) returns deep copy of _timg__GetCurrentPreset src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__GetCurrentPreset(_timg__GetCurrentPreset*) deep deletes _timg__GetCurrentPreset data members, use only on dst after soap_dup__timg__GetCurrentPreset(NULL, _timg__GetCurrentPreset *dst, _timg__GetCurrentPreset *src) (use soapcpp2 -Ed)
struct _timg__GetCurrentPreset
{
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource where the current Imaging Preset should be requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetCurrentPresetResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetCurrentPresetResponse is a complexType.
///
/// @note struct _timg__GetCurrentPresetResponse operations:
/// - _timg__GetCurrentPresetResponse* soap_new__timg__GetCurrentPresetResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__GetCurrentPresetResponse(struct soap*, _timg__GetCurrentPresetResponse*) default initialize members
/// - int soap_read__timg__GetCurrentPresetResponse(struct soap*, _timg__GetCurrentPresetResponse*) deserialize from a source
/// - int soap_write__timg__GetCurrentPresetResponse(struct soap*, _timg__GetCurrentPresetResponse*) serialize to a sink
/// - _timg__GetCurrentPresetResponse* soap_dup__timg__GetCurrentPresetResponse(struct soap*, _timg__GetCurrentPresetResponse* dst, _timg__GetCurrentPresetResponse *src) returns deep copy of _timg__GetCurrentPresetResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__GetCurrentPresetResponse(_timg__GetCurrentPresetResponse*) deep deletes _timg__GetCurrentPresetResponse data members, use only on dst after soap_dup__timg__GetCurrentPresetResponse(NULL, _timg__GetCurrentPresetResponse *dst, _timg__GetCurrentPresetResponse *src) (use soapcpp2 -Ed)
struct _timg__GetCurrentPresetResponse
{
/// <PRE><BLOCKQUOTE>
///   Current Imaging Preset in use for the specified Video Source.
/// </BLOCKQUOTE></PRE>
///
/// Element "Preset" of type "http://www.onvif.org/ver20/imaging/wsdl":ImagingPreset.
    struct timg__ImagingPreset*          Preset                         0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetCurrentPreset
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":SetCurrentPreset is a complexType.
///
/// @note struct _timg__SetCurrentPreset operations:
/// - _timg__SetCurrentPreset* soap_new__timg__SetCurrentPreset(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__SetCurrentPreset(struct soap*, _timg__SetCurrentPreset*) default initialize members
/// - int soap_read__timg__SetCurrentPreset(struct soap*, _timg__SetCurrentPreset*) deserialize from a source
/// - int soap_write__timg__SetCurrentPreset(struct soap*, _timg__SetCurrentPreset*) serialize to a sink
/// - _timg__SetCurrentPreset* soap_dup__timg__SetCurrentPreset(struct soap*, _timg__SetCurrentPreset* dst, _timg__SetCurrentPreset *src) returns deep copy of _timg__SetCurrentPreset src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__SetCurrentPreset(_timg__SetCurrentPreset*) deep deletes _timg__SetCurrentPreset data members, use only on dst after soap_dup__timg__SetCurrentPreset(NULL, _timg__SetCurrentPreset *dst, _timg__SetCurrentPreset *src) (use soapcpp2 -Ed)
struct _timg__SetCurrentPreset
{
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource to which the specified Imaging Preset should be applied.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reference token to the Imaging Preset to be applied to the specified Video Source.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetCurrentPresetResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":SetCurrentPresetResponse is a complexType.
///
/// @note struct _timg__SetCurrentPresetResponse operations:
/// - _timg__SetCurrentPresetResponse* soap_new__timg__SetCurrentPresetResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__timg__SetCurrentPresetResponse(struct soap*, _timg__SetCurrentPresetResponse*) default initialize members
/// - int soap_read__timg__SetCurrentPresetResponse(struct soap*, _timg__SetCurrentPresetResponse*) deserialize from a source
/// - int soap_write__timg__SetCurrentPresetResponse(struct soap*, _timg__SetCurrentPresetResponse*) serialize to a sink
/// - _timg__SetCurrentPresetResponse* soap_dup__timg__SetCurrentPresetResponse(struct soap*, _timg__SetCurrentPresetResponse* dst, _timg__SetCurrentPresetResponse *src) returns deep copy of _timg__SetCurrentPresetResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__timg__SetCurrentPresetResponse(_timg__SetCurrentPresetResponse*) deep deletes _timg__SetCurrentPresetResponse data members, use only on dst after soap_dup__timg__SetCurrentPresetResponse(NULL, _timg__SetCurrentPresetResponse *dst, _timg__SetCurrentPresetResponse *src) (use soapcpp2 -Ed)
struct _timg__SetCurrentPresetResponse
{
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/media/wsdl":Capabilities2 is a complexType.
///
/// @note struct ns1__Capabilities2 operations:
/// - ns1__Capabilities2* soap_new_ns1__Capabilities2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_ns1__Capabilities2(struct soap*, ns1__Capabilities2*) default initialize members
/// - int soap_read_ns1__Capabilities2(struct soap*, ns1__Capabilities2*) deserialize from a source
/// - int soap_write_ns1__Capabilities2(struct soap*, ns1__Capabilities2*) serialize to a sink
/// - ns1__Capabilities2* soap_dup_ns1__Capabilities2(struct soap*, ns1__Capabilities2* dst, ns1__Capabilities2 *src) returns deep copy of ns1__Capabilities2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__Capabilities2(ns1__Capabilities2*) deep deletes ns1__Capabilities2 data members, use only on dst after soap_dup_ns1__Capabilities2(NULL, ns1__Capabilities2 *dst, ns1__Capabilities2 *src) (use soapcpp2 -Ed)
struct ns1__Capabilities2
{
/// <PRE><BLOCKQUOTE>
///   Media profile capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileCapabilities" of type "http://www.onvif.org/ver20/media/wsdl":ProfileCapabilities.
    struct ns1__ProfileCapabilities*     ProfileCapabilities            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamingCapabilities" of type "http://www.onvif.org/ver20/media/wsdl":StreamingCapabilities.
    struct ns1__StreamingCapabilities*   StreamingCapabilities          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indicates if GetSnapshotUri is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SnapshotUri" of type xs:boolean.
  @ enum xsd__boolean*                   SnapshotUri                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not Rotation feature is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Rotation" of type xs:boolean.
  @ enum xsd__boolean*                   Rotation                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for changing video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "VideoSourceMode" of type xs:boolean.
  @ enum xsd__boolean*                   VideoSourceMode                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates if OSD is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "OSD" of type xs:boolean.
  @ enum xsd__boolean*                   OSD                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for temporary osd text configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TemporaryOSDText" of type xs:boolean.
  @ enum xsd__boolean*                   TemporaryOSDText               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates if Masking is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Mask" of type xs:boolean.
  @ enum xsd__boolean*                   Mask                           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that privacy masks are only supported at the video source level and not the video source configuration level. If this is true any addition, deletion or change of a privacy mask done for one video source configuration will automatically be applied by the device to a corresponding privacy mask for all other video source configuration associated with the same video source.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SourceMask" of type xs:boolean.
  @ enum xsd__boolean*                   SourceMask                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":ProfileCapabilities is a complexType.
///
/// @note struct ns1__ProfileCapabilities operations:
/// - ns1__ProfileCapabilities* soap_new_ns1__ProfileCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_ns1__ProfileCapabilities(struct soap*, ns1__ProfileCapabilities*) default initialize members
/// - int soap_read_ns1__ProfileCapabilities(struct soap*, ns1__ProfileCapabilities*) deserialize from a source
/// - int soap_write_ns1__ProfileCapabilities(struct soap*, ns1__ProfileCapabilities*) serialize to a sink
/// - ns1__ProfileCapabilities* soap_dup_ns1__ProfileCapabilities(struct soap*, ns1__ProfileCapabilities* dst, ns1__ProfileCapabilities *src) returns deep copy of ns1__ProfileCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__ProfileCapabilities(ns1__ProfileCapabilities*) deep deletes ns1__ProfileCapabilities data members, use only on dst after soap_dup_ns1__ProfileCapabilities(NULL, ns1__ProfileCapabilities *dst, ns1__ProfileCapabilities *src) (use soapcpp2 -Ed)
struct ns1__ProfileCapabilities
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaximumNumberOfProfiles" of type xs:int.
  @ int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The configurations supported by the device as defined by tr2:ConfigurationEnumeration. The enumeration value "All" shall not be included in this list.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ConfigurationsSupported" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   ConfigurationsSupported        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":StreamingCapabilities is a complexType.
///
/// @note struct ns1__StreamingCapabilities operations:
/// - ns1__StreamingCapabilities* soap_new_ns1__StreamingCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_ns1__StreamingCapabilities(struct soap*, ns1__StreamingCapabilities*) default initialize members
/// - int soap_read_ns1__StreamingCapabilities(struct soap*, ns1__StreamingCapabilities*) deserialize from a source
/// - int soap_write_ns1__StreamingCapabilities(struct soap*, ns1__StreamingCapabilities*) serialize to a sink
/// - ns1__StreamingCapabilities* soap_dup_ns1__StreamingCapabilities(struct soap*, ns1__StreamingCapabilities* dst, ns1__StreamingCapabilities *src) returns deep copy of ns1__StreamingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__StreamingCapabilities(ns1__StreamingCapabilities*) deep deletes ns1__StreamingCapabilities data members, use only on dst after soap_dup_ns1__StreamingCapabilities(NULL, ns1__StreamingCapabilities *dst, ns1__StreamingCapabilities *src) (use soapcpp2 -Ed)
struct ns1__StreamingCapabilities
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indicates support for live media streaming via RTSP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTSPStreaming" of type xs:boolean.
  @ enum xsd__boolean*                   RTSPStreaming                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP multicast.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTPMulticast" of type xs:boolean.
  @ enum xsd__boolean*                   RTPMulticast                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP/RTSP/TCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTP_RTSP_TCP" of type xs:boolean.
  @ enum xsd__boolean*                   RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for non aggregate RTSP control.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "NonAggregateControl" of type xs:boolean.
  @ enum xsd__boolean*                   NonAggregateControl            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If streaming over WebSocket is supported, this shall return the RTSP WebSocket URI as described in Streaming Specification Section 5.1.1.5.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTSPWebSocketUri" of type xs:anyURI.
  @ xsd__anyURI                          RTSPWebSocketUri               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for non-RTSP controlled multicast streaming.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AutoStartMulticast" of type xs:boolean.
  @ enum xsd__boolean*                   AutoStartMulticast             0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":ConfigurationRef is a complexType.
///
/// @note struct ns1__ConfigurationRef operations:
/// - ns1__ConfigurationRef* soap_new_ns1__ConfigurationRef(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_ns1__ConfigurationRef(struct soap*, ns1__ConfigurationRef*) default initialize members
/// - int soap_read_ns1__ConfigurationRef(struct soap*, ns1__ConfigurationRef*) deserialize from a source
/// - int soap_write_ns1__ConfigurationRef(struct soap*, ns1__ConfigurationRef*) serialize to a sink
/// - ns1__ConfigurationRef* soap_dup_ns1__ConfigurationRef(struct soap*, ns1__ConfigurationRef* dst, ns1__ConfigurationRef *src) returns deep copy of ns1__ConfigurationRef src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__ConfigurationRef(ns1__ConfigurationRef*) deep deletes ns1__ConfigurationRef data members, use only on dst after soap_dup_ns1__ConfigurationRef(NULL, ns1__ConfigurationRef *dst, ns1__ConfigurationRef *src) (use soapcpp2 -Ed)
struct ns1__ConfigurationRef
{
/// <PRE><BLOCKQUOTE>
///   Type of the configuration as defined by tr2:ConfigurationEnumeration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type xs:string.
    char*                                Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reference token of an existing configuration.
///   Token shall be included in the AddConfiguration request along with the type.
///   Token shall be included in the CreateProfile request when Configuration elements are included and type is selected.
///   Token is optional for RemoveConfiguration request. If no token is provided in RemoveConfiguration request, device shall
///   remove the configuration of the type included in the profile.
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":ConfigurationSet is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A set of media configurations.
/// </BLOCKQUOTE></PRE>
///
/// @note struct ns1__ConfigurationSet operations:
/// - ns1__ConfigurationSet* soap_new_ns1__ConfigurationSet(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_ns1__ConfigurationSet(struct soap*, ns1__ConfigurationSet*) default initialize members
/// - int soap_read_ns1__ConfigurationSet(struct soap*, ns1__ConfigurationSet*) deserialize from a source
/// - int soap_write_ns1__ConfigurationSet(struct soap*, ns1__ConfigurationSet*) serialize to a sink
/// - ns1__ConfigurationSet* soap_dup_ns1__ConfigurationSet(struct soap*, ns1__ConfigurationSet* dst, ns1__ConfigurationSet *src) returns deep copy of ns1__ConfigurationSet src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__ConfigurationSet(ns1__ConfigurationSet*) deep deletes ns1__ConfigurationSet data members, use only on dst after soap_dup_ns1__ConfigurationSet(NULL, ns1__ConfigurationSet *dst, ns1__ConfigurationSet *src) (use soapcpp2 -Ed)
struct ns1__ConfigurationSet
{
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video input.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSource" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  VideoSource                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio input.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSource" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  AudioSource                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video encoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoEncoder" of type "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration.
    struct tt__VideoEncoder2Configuration*  VideoEncoder                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio encoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioEncoder" of type "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration.
    struct tt__AudioEncoder2Configuration*  AudioEncoder                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the analytics module and rule engine.
/// </BLOCKQUOTE></PRE>
///
/// Element "Analytics" of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the pan tilt zoom unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZ" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    struct tt__PTZConfiguration*         PTZ                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the metadata stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "Metadata" of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    struct tt__MetadataConfiguration*    Metadata                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutput" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  AudioOutput                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio decoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioDecoder" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    struct tt__AudioDecoderConfiguration*  AudioDecoder                   0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":MediaProfile is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A media profile consists of a set of media configurations.
/// </BLOCKQUOTE></PRE>
///
/// @note struct ns1__MediaProfile operations:
/// - ns1__MediaProfile* soap_new_ns1__MediaProfile(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_ns1__MediaProfile(struct soap*, ns1__MediaProfile*) default initialize members
/// - int soap_read_ns1__MediaProfile(struct soap*, ns1__MediaProfile*) deserialize from a source
/// - int soap_write_ns1__MediaProfile(struct soap*, ns1__MediaProfile*) serialize to a sink
/// - ns1__MediaProfile* soap_dup_ns1__MediaProfile(struct soap*, ns1__MediaProfile* dst, ns1__MediaProfile *src) returns deep copy of ns1__MediaProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__MediaProfile(ns1__MediaProfile*) deep deletes ns1__MediaProfile data members, use only on dst after soap_dup_ns1__MediaProfile(NULL, ns1__MediaProfile *dst, ns1__MediaProfile *src) (use soapcpp2 -Ed)
struct ns1__MediaProfile
{
/// <PRE><BLOCKQUOTE>
///   User readable name of the profile.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The configurations assigned to the profile.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configurations" of type "http://www.onvif.org/ver20/media/wsdl":ConfigurationSet.
    struct ns1__ConfigurationSet*        Configurations                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the profile.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A value of true signals that the profile cannot be deleted. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "fixed" of type xs:boolean.
  @ enum xsd__boolean*                   fixed                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":GetConfiguration is a complexType.
///
/// @note struct ns1__GetConfiguration operations:
/// - ns1__GetConfiguration* soap_new_ns1__GetConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_ns1__GetConfiguration(struct soap*, ns1__GetConfiguration*) default initialize members
/// - int soap_read_ns1__GetConfiguration(struct soap*, ns1__GetConfiguration*) deserialize from a source
/// - int soap_write_ns1__GetConfiguration(struct soap*, ns1__GetConfiguration*) serialize to a sink
/// - ns1__GetConfiguration* soap_dup_ns1__GetConfiguration(struct soap*, ns1__GetConfiguration* dst, ns1__GetConfiguration *src) returns deep copy of ns1__GetConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__GetConfiguration(ns1__GetConfiguration*) deep deletes ns1__GetConfiguration data members, use only on dst after soap_dup_ns1__GetConfiguration(NULL, ns1__GetConfiguration *dst, ns1__GetConfiguration *src) (use soapcpp2 -Ed)
struct ns1__GetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse is a complexType.
///
/// @note struct ns1__SetConfigurationResponse operations:
/// - ns1__SetConfigurationResponse* soap_new_ns1__SetConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_ns1__SetConfigurationResponse(struct soap*, ns1__SetConfigurationResponse*) default initialize members
/// - int soap_read_ns1__SetConfigurationResponse(struct soap*, ns1__SetConfigurationResponse*) deserialize from a source
/// - int soap_write_ns1__SetConfigurationResponse(struct soap*, ns1__SetConfigurationResponse*) serialize to a sink
/// - ns1__SetConfigurationResponse* soap_dup_ns1__SetConfigurationResponse(struct soap*, ns1__SetConfigurationResponse* dst, ns1__SetConfigurationResponse *src) returns deep copy of ns1__SetConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__SetConfigurationResponse(ns1__SetConfigurationResponse*) deep deletes ns1__SetConfigurationResponse data members, use only on dst after soap_dup_ns1__SetConfigurationResponse(NULL, ns1__SetConfigurationResponse *dst, ns1__SetConfigurationResponse *src) (use soapcpp2 -Ed)
struct ns1__SetConfigurationResponse
{
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":EncoderInstance is a complexType.
///
/// @note struct ns1__EncoderInstance operations:
/// - ns1__EncoderInstance* soap_new_ns1__EncoderInstance(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_ns1__EncoderInstance(struct soap*, ns1__EncoderInstance*) default initialize members
/// - int soap_read_ns1__EncoderInstance(struct soap*, ns1__EncoderInstance*) deserialize from a source
/// - int soap_write_ns1__EncoderInstance(struct soap*, ns1__EncoderInstance*) serialize to a sink
/// - ns1__EncoderInstance* soap_dup_ns1__EncoderInstance(struct soap*, ns1__EncoderInstance* dst, ns1__EncoderInstance *src) returns deep copy of ns1__EncoderInstance src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__EncoderInstance(ns1__EncoderInstance*) deep deletes ns1__EncoderInstance data members, use only on dst after soap_dup_ns1__EncoderInstance(NULL, ns1__EncoderInstance *dst, ns1__EncoderInstance *src) (use soapcpp2 -Ed)
struct ns1__EncoderInstance
{
/// <PRE><BLOCKQUOTE>
///   Video Media Subtype for the video format. For definitions see tt:VideoEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type xs:string.
    char*                                Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The minimum guaranteed number of encoder instances (applications) for the VideoSourceConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Number" of type xs:int.
    int                                  Number                         1;	///< Required element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":EncoderInstanceInfo is a complexType.
///
/// @note struct ns1__EncoderInstanceInfo operations:
/// - ns1__EncoderInstanceInfo* soap_new_ns1__EncoderInstanceInfo(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_ns1__EncoderInstanceInfo(struct soap*, ns1__EncoderInstanceInfo*) default initialize members
/// - int soap_read_ns1__EncoderInstanceInfo(struct soap*, ns1__EncoderInstanceInfo*) deserialize from a source
/// - int soap_write_ns1__EncoderInstanceInfo(struct soap*, ns1__EncoderInstanceInfo*) serialize to a sink
/// - ns1__EncoderInstanceInfo* soap_dup_ns1__EncoderInstanceInfo(struct soap*, ns1__EncoderInstanceInfo* dst, ns1__EncoderInstanceInfo *src) returns deep copy of ns1__EncoderInstanceInfo src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__EncoderInstanceInfo(ns1__EncoderInstanceInfo*) deep deletes ns1__EncoderInstanceInfo data members, use only on dst after soap_dup_ns1__EncoderInstanceInfo(NULL, ns1__EncoderInstanceInfo *dst, ns1__EncoderInstanceInfo *src) (use soapcpp2 -Ed)
struct ns1__EncoderInstanceInfo
{
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct ns1__EncoderInstance* is 0..unbounded.
  $ int                                  __sizeCodec                    0;
/// Array struct ns1__EncoderInstance* of size 0..unbounded.
    struct ns1__EncoderInstance*         Codec                          0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The minimum guaranteed total number of encoder instances (applications) per VideoSourceConfiguration. The device is able to deliver the Total number of streams
/// </BLOCKQUOTE></PRE>
///
/// Element "Total" of type xs:int.
    int                                  Total                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":StartStopMulticastStreaming is a complexType.
///
/// @note struct ns1__StartStopMulticastStreaming operations:
/// - ns1__StartStopMulticastStreaming* soap_new_ns1__StartStopMulticastStreaming(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_ns1__StartStopMulticastStreaming(struct soap*, ns1__StartStopMulticastStreaming*) default initialize members
/// - int soap_read_ns1__StartStopMulticastStreaming(struct soap*, ns1__StartStopMulticastStreaming*) deserialize from a source
/// - int soap_write_ns1__StartStopMulticastStreaming(struct soap*, ns1__StartStopMulticastStreaming*) serialize to a sink
/// - ns1__StartStopMulticastStreaming* soap_dup_ns1__StartStopMulticastStreaming(struct soap*, ns1__StartStopMulticastStreaming* dst, ns1__StartStopMulticastStreaming *src) returns deep copy of ns1__StartStopMulticastStreaming src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__StartStopMulticastStreaming(ns1__StartStopMulticastStreaming*) deep deletes ns1__StartStopMulticastStreaming data members, use only on dst after soap_dup_ns1__StartStopMulticastStreaming(NULL, ns1__StartStopMulticastStreaming *dst, ns1__StartStopMulticastStreaming *src) (use soapcpp2 -Ed)
struct ns1__StartStopMulticastStreaming
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":VideoSourceMode is a complexType.
///
/// @note struct ns1__VideoSourceMode operations:
/// - ns1__VideoSourceMode* soap_new_ns1__VideoSourceMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_ns1__VideoSourceMode(struct soap*, ns1__VideoSourceMode*) default initialize members
/// - int soap_read_ns1__VideoSourceMode(struct soap*, ns1__VideoSourceMode*) deserialize from a source
/// - int soap_write_ns1__VideoSourceMode(struct soap*, ns1__VideoSourceMode*) serialize to a sink
/// - ns1__VideoSourceMode* soap_dup_ns1__VideoSourceMode(struct soap*, ns1__VideoSourceMode* dst, ns1__VideoSourceMode *src) returns deep copy of ns1__VideoSourceMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__VideoSourceMode(ns1__VideoSourceMode*) deep deletes ns1__VideoSourceMode data members, use only on dst after soap_dup_ns1__VideoSourceMode(NULL, ns1__VideoSourceMode *dst, ns1__VideoSourceMode *src) (use soapcpp2 -Ed)
struct ns1__VideoSourceMode
{
/// <PRE><BLOCKQUOTE>
///   Max frame rate in frames per second for this video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxFramerate" of type xs:float.
    float                                MaxFramerate                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Max horizontal and vertical resolution for this video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxResolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          MaxResolution                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of one or more encodings supported for this video source. For name definitions see tt:VideoEncodingMimeNames, and see <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video">IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encodings" of type "http://www.onvif.org/ver20/media/wsdl":EncodingTypes.
    ns1__EncodingTypes                   Encodings                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   After setting the mode if a device starts to reboot this value is true. If a device change the mode without rebooting this value is false. If true, configured parameters may not be guaranteed by the device after rebooting.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reboot" of type xs:boolean.
    enum xsd__boolean                    Reboot                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of this video source mode. This field should be described in English.
/// </BLOCKQUOTE></PRE>
///
/// Element "Description" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indicate token for video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indication of whether this mode is active. If active this value is true. In case of non-indication, it means as false. The value of true shall be had by only one video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Enabled" of type xs:boolean.
  @ enum xsd__boolean*                   Enabled                        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":Mask is a complexType.
///
/// @note struct ns1__Mask operations:
/// - ns1__Mask* soap_new_ns1__Mask(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_ns1__Mask(struct soap*, ns1__Mask*) default initialize members
/// - int soap_read_ns1__Mask(struct soap*, ns1__Mask*) deserialize from a source
/// - int soap_write_ns1__Mask(struct soap*, ns1__Mask*) serialize to a sink
/// - ns1__Mask* soap_dup_ns1__Mask(struct soap*, ns1__Mask* dst, ns1__Mask *src) returns deep copy of ns1__Mask src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__Mask(ns1__Mask*) deep deletes ns1__Mask data members, use only on dst after soap_dup_ns1__Mask(NULL, ns1__Mask *dst, ns1__Mask *src) (use soapcpp2 -Ed)
struct ns1__Mask
{
/// <PRE><BLOCKQUOTE>
///   Token of the VideoSourceConfiguration the Mask is associated with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Geometric representation of the mask area.
/// </BLOCKQUOTE></PRE>
///
/// Element "Polygon" of type "http://www.onvif.org/ver10/schema":Polygon.
    struct tt__Polygon*                  Polygon                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Type of masking as defined by tr2:MaskType:
///   <ul>
///   <li>Color - The masked area is colored with color defined by the Color field.</li>
///   <li>Pixelated - The masked area is filled in mosaic style to hide details.</li>
///   <li>Blurred - The masked area is low pass filtered to hide details.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type xs:string.
    char*                                Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Color of the masked area.
/// </BLOCKQUOTE></PRE>
///
/// Element "Color" of type "http://www.onvif.org/ver10/schema":Color.
    struct tt__Color*                    Color                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If set the mask will cover the image, otherwise it will be fully transparent.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Token of the mask.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":MaskOptions is a complexType.
///
/// @note struct ns1__MaskOptions operations:
/// - ns1__MaskOptions* soap_new_ns1__MaskOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_ns1__MaskOptions(struct soap*, ns1__MaskOptions*) default initialize members
/// - int soap_read_ns1__MaskOptions(struct soap*, ns1__MaskOptions*) deserialize from a source
/// - int soap_write_ns1__MaskOptions(struct soap*, ns1__MaskOptions*) serialize to a sink
/// - ns1__MaskOptions* soap_dup_ns1__MaskOptions(struct soap*, ns1__MaskOptions* dst, ns1__MaskOptions *src) returns deep copy of ns1__MaskOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__MaskOptions(ns1__MaskOptions*) deep deletes ns1__MaskOptions data members, use only on dst after soap_dup_ns1__MaskOptions(NULL, ns1__MaskOptions *dst, ns1__MaskOptions *src) (use soapcpp2 -Ed)
struct ns1__MaskOptions
{
/// <PRE><BLOCKQUOTE>
///   Maximum supported number of masks per VideoSourceConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxMasks" of type xs:int.
    int                                  MaxMasks                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum supported number of points per mask.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxPoints" of type xs:int.
    int                                  MaxPoints                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Information which types of tr2:MaskType are supported. Valid values are 'Color', 'Pixelated' and 'Blurred'.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char** is 1..unbounded.
  $ int                                  __sizeTypes                    1;
/// Array char** of size 1..unbounded.
    char**                               Types                          1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Colors supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "Color" of type "http://www.onvif.org/ver10/schema":ColorOptions.
    struct tt__ColorOptions*             Color                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Information whether the polygon must have four points and a rectangular shape.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RectangleOnly" of type xs:boolean.
  @ enum xsd__boolean*                   RectangleOnly                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the device capability of change in color of privacy mask for one video source configuration will automatically be applied to all the privacy masks associated with the same video source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SingleColorOnly" of type xs:boolean.
  @ enum xsd__boolean*                   SingleColorOnly                0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetServiceCapabilities is a complexType.
///
/// @note struct _ns1__GetServiceCapabilities operations:
/// - _ns1__GetServiceCapabilities* soap_new__ns1__GetServiceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetServiceCapabilities(struct soap*, _ns1__GetServiceCapabilities*) default initialize members
/// - int soap_read__ns1__GetServiceCapabilities(struct soap*, _ns1__GetServiceCapabilities*) deserialize from a source
/// - int soap_write__ns1__GetServiceCapabilities(struct soap*, _ns1__GetServiceCapabilities*) serialize to a sink
/// - _ns1__GetServiceCapabilities* soap_dup__ns1__GetServiceCapabilities(struct soap*, _ns1__GetServiceCapabilities* dst, _ns1__GetServiceCapabilities *src) returns deep copy of _ns1__GetServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetServiceCapabilities(_ns1__GetServiceCapabilities*) deep deletes _ns1__GetServiceCapabilities data members, use only on dst after soap_dup__ns1__GetServiceCapabilities(NULL, _ns1__GetServiceCapabilities *dst, _ns1__GetServiceCapabilities *src) (use soapcpp2 -Ed)
struct _ns1__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note struct _ns1__GetServiceCapabilitiesResponse operations:
/// - _ns1__GetServiceCapabilitiesResponse* soap_new__ns1__GetServiceCapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetServiceCapabilitiesResponse(struct soap*, _ns1__GetServiceCapabilitiesResponse*) default initialize members
/// - int soap_read__ns1__GetServiceCapabilitiesResponse(struct soap*, _ns1__GetServiceCapabilitiesResponse*) deserialize from a source
/// - int soap_write__ns1__GetServiceCapabilitiesResponse(struct soap*, _ns1__GetServiceCapabilitiesResponse*) serialize to a sink
/// - _ns1__GetServiceCapabilitiesResponse* soap_dup__ns1__GetServiceCapabilitiesResponse(struct soap*, _ns1__GetServiceCapabilitiesResponse* dst, _ns1__GetServiceCapabilitiesResponse *src) returns deep copy of _ns1__GetServiceCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetServiceCapabilitiesResponse(_ns1__GetServiceCapabilitiesResponse*) deep deletes _ns1__GetServiceCapabilitiesResponse data members, use only on dst after soap_dup__ns1__GetServiceCapabilitiesResponse(NULL, _ns1__GetServiceCapabilitiesResponse *dst, _ns1__GetServiceCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the media service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver20/media/wsdl":Capabilities2.
    struct ns1__Capabilities2*           Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":CreateProfile
/// @brief "http://www.onvif.org/ver20/media/wsdl":CreateProfile is a complexType.
///
/// @note struct _ns1__CreateProfile operations:
/// - _ns1__CreateProfile* soap_new__ns1__CreateProfile(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__CreateProfile(struct soap*, _ns1__CreateProfile*) default initialize members
/// - int soap_read__ns1__CreateProfile(struct soap*, _ns1__CreateProfile*) deserialize from a source
/// - int soap_write__ns1__CreateProfile(struct soap*, _ns1__CreateProfile*) serialize to a sink
/// - _ns1__CreateProfile* soap_dup__ns1__CreateProfile(struct soap*, _ns1__CreateProfile* dst, _ns1__CreateProfile *src) returns deep copy of _ns1__CreateProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__CreateProfile(_ns1__CreateProfile*) deep deletes _ns1__CreateProfile data members, use only on dst after soap_dup__ns1__CreateProfile(NULL, _ns1__CreateProfile *dst, _ns1__CreateProfile *src) (use soapcpp2 -Ed)
struct _ns1__CreateProfile
{
/// <PRE><BLOCKQUOTE>
///   friendly name of the profile to be created
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional set of configurations to be assigned to the profile. List entries with tr2:ConfigurationEnumeration value "All" shall be ignored.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct ns1__ConfigurationRef* is 0..unbounded.
  $ int                                  __sizeConfiguration            0;
/// Array struct ns1__ConfigurationRef* of size 0..unbounded.
    struct ns1__ConfigurationRef*        Configuration                  0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":CreateProfileResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":CreateProfileResponse is a complexType.
///
/// @note struct _ns1__CreateProfileResponse operations:
/// - _ns1__CreateProfileResponse* soap_new__ns1__CreateProfileResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__CreateProfileResponse(struct soap*, _ns1__CreateProfileResponse*) default initialize members
/// - int soap_read__ns1__CreateProfileResponse(struct soap*, _ns1__CreateProfileResponse*) deserialize from a source
/// - int soap_write__ns1__CreateProfileResponse(struct soap*, _ns1__CreateProfileResponse*) serialize to a sink
/// - _ns1__CreateProfileResponse* soap_dup__ns1__CreateProfileResponse(struct soap*, _ns1__CreateProfileResponse* dst, _ns1__CreateProfileResponse *src) returns deep copy of _ns1__CreateProfileResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__CreateProfileResponse(_ns1__CreateProfileResponse*) deep deletes _ns1__CreateProfileResponse data members, use only on dst after soap_dup__ns1__CreateProfileResponse(NULL, _ns1__CreateProfileResponse *dst, _ns1__CreateProfileResponse *src) (use soapcpp2 -Ed)
struct _ns1__CreateProfileResponse
{
/// <PRE><BLOCKQUOTE>
///   Token assigned by the device for the newly created profile.
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetProfiles
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetProfiles is a complexType.
///
/// @note struct _ns1__GetProfiles operations:
/// - _ns1__GetProfiles* soap_new__ns1__GetProfiles(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetProfiles(struct soap*, _ns1__GetProfiles*) default initialize members
/// - int soap_read__ns1__GetProfiles(struct soap*, _ns1__GetProfiles*) deserialize from a source
/// - int soap_write__ns1__GetProfiles(struct soap*, _ns1__GetProfiles*) serialize to a sink
/// - _ns1__GetProfiles* soap_dup__ns1__GetProfiles(struct soap*, _ns1__GetProfiles* dst, _ns1__GetProfiles *src) returns deep copy of _ns1__GetProfiles src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetProfiles(_ns1__GetProfiles*) deep deletes _ns1__GetProfiles data members, use only on dst after soap_dup__ns1__GetProfiles(NULL, _ns1__GetProfiles *dst, _ns1__GetProfiles *src) (use soapcpp2 -Ed)
struct _ns1__GetProfiles
{
/// <PRE><BLOCKQUOTE>
///   Optional token of the requested profile.
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The types shall be provided as defined by tr2:ConfigurationEnumeration.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char** is 0..unbounded.
  $ int                                  __sizeType                     0;
/// Array char** of size 0..unbounded.
    char**                               Type                           0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetProfilesResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetProfilesResponse is a complexType.
///
/// @note struct _ns1__GetProfilesResponse operations:
/// - _ns1__GetProfilesResponse* soap_new__ns1__GetProfilesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetProfilesResponse(struct soap*, _ns1__GetProfilesResponse*) default initialize members
/// - int soap_read__ns1__GetProfilesResponse(struct soap*, _ns1__GetProfilesResponse*) deserialize from a source
/// - int soap_write__ns1__GetProfilesResponse(struct soap*, _ns1__GetProfilesResponse*) serialize to a sink
/// - _ns1__GetProfilesResponse* soap_dup__ns1__GetProfilesResponse(struct soap*, _ns1__GetProfilesResponse* dst, _ns1__GetProfilesResponse *src) returns deep copy of _ns1__GetProfilesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetProfilesResponse(_ns1__GetProfilesResponse*) deep deletes _ns1__GetProfilesResponse data members, use only on dst after soap_dup__ns1__GetProfilesResponse(NULL, _ns1__GetProfilesResponse *dst, _ns1__GetProfilesResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetProfilesResponse
{
/// <PRE><BLOCKQUOTE>
///   Lists all profiles that exist in the media service. The response provides the requested types of Configurations as far as available. If a profile doesn't contain a type no error shall be provided.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct ns1__MediaProfile* is 0..unbounded.
  $ int                                  __sizeProfiles                 0;
/// Array struct ns1__MediaProfile* of size 0..unbounded.
    struct ns1__MediaProfile*            Profiles                       0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":AddConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":AddConfiguration is a complexType.
///
/// @note struct _ns1__AddConfiguration operations:
/// - _ns1__AddConfiguration* soap_new__ns1__AddConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__AddConfiguration(struct soap*, _ns1__AddConfiguration*) default initialize members
/// - int soap_read__ns1__AddConfiguration(struct soap*, _ns1__AddConfiguration*) deserialize from a source
/// - int soap_write__ns1__AddConfiguration(struct soap*, _ns1__AddConfiguration*) serialize to a sink
/// - _ns1__AddConfiguration* soap_dup__ns1__AddConfiguration(struct soap*, _ns1__AddConfiguration* dst, _ns1__AddConfiguration *src) returns deep copy of _ns1__AddConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__AddConfiguration(_ns1__AddConfiguration*) deep deletes _ns1__AddConfiguration data members, use only on dst after soap_dup__ns1__AddConfiguration(NULL, _ns1__AddConfiguration *dst, _ns1__AddConfiguration *src) (use soapcpp2 -Ed)
struct _ns1__AddConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional item. If present updates the Name property of the profile.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of configurations to be added. The types shall be provided in the order defined by tr2:ConfigurationEnumeration. List entries with tr2:ConfigurationEnumeration value "All" shall be ignored.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct ns1__ConfigurationRef* is 0..unbounded.
  $ int                                  __sizeConfiguration            0;
/// Array struct ns1__ConfigurationRef* of size 0..unbounded.
    struct ns1__ConfigurationRef*        Configuration                  0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":AddConfigurationResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":AddConfigurationResponse is a complexType.
///
/// @note struct _ns1__AddConfigurationResponse operations:
/// - _ns1__AddConfigurationResponse* soap_new__ns1__AddConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__AddConfigurationResponse(struct soap*, _ns1__AddConfigurationResponse*) default initialize members
/// - int soap_read__ns1__AddConfigurationResponse(struct soap*, _ns1__AddConfigurationResponse*) deserialize from a source
/// - int soap_write__ns1__AddConfigurationResponse(struct soap*, _ns1__AddConfigurationResponse*) serialize to a sink
/// - _ns1__AddConfigurationResponse* soap_dup__ns1__AddConfigurationResponse(struct soap*, _ns1__AddConfigurationResponse* dst, _ns1__AddConfigurationResponse *src) returns deep copy of _ns1__AddConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__AddConfigurationResponse(_ns1__AddConfigurationResponse*) deep deletes _ns1__AddConfigurationResponse data members, use only on dst after soap_dup__ns1__AddConfigurationResponse(NULL, _ns1__AddConfigurationResponse *dst, _ns1__AddConfigurationResponse *src) (use soapcpp2 -Ed)
struct _ns1__AddConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":RemoveConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":RemoveConfiguration is a complexType.
///
/// @note struct _ns1__RemoveConfiguration operations:
/// - _ns1__RemoveConfiguration* soap_new__ns1__RemoveConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__RemoveConfiguration(struct soap*, _ns1__RemoveConfiguration*) default initialize members
/// - int soap_read__ns1__RemoveConfiguration(struct soap*, _ns1__RemoveConfiguration*) deserialize from a source
/// - int soap_write__ns1__RemoveConfiguration(struct soap*, _ns1__RemoveConfiguration*) serialize to a sink
/// - _ns1__RemoveConfiguration* soap_dup__ns1__RemoveConfiguration(struct soap*, _ns1__RemoveConfiguration* dst, _ns1__RemoveConfiguration *src) returns deep copy of _ns1__RemoveConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__RemoveConfiguration(_ns1__RemoveConfiguration*) deep deletes _ns1__RemoveConfiguration data members, use only on dst after soap_dup__ns1__RemoveConfiguration(NULL, _ns1__RemoveConfiguration *dst, _ns1__RemoveConfiguration *src) (use soapcpp2 -Ed)
struct _ns1__RemoveConfiguration
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the media profile from which the AudioDecoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of configurations to be removed. The types shall be provided in the order defined by tr2:ConfigurationEnumeration. Tokens appearing in the configuration list shall be ignored. Presence of the "All" type shall result in an empty profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct ns1__ConfigurationRef* is 1..unbounded.
  $ int                                  __sizeConfiguration            1;
/// Array struct ns1__ConfigurationRef* of size 1..unbounded.
    struct ns1__ConfigurationRef*        Configuration                  1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":RemoveConfigurationResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":RemoveConfigurationResponse is a complexType.
///
/// @note struct _ns1__RemoveConfigurationResponse operations:
/// - _ns1__RemoveConfigurationResponse* soap_new__ns1__RemoveConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__RemoveConfigurationResponse(struct soap*, _ns1__RemoveConfigurationResponse*) default initialize members
/// - int soap_read__ns1__RemoveConfigurationResponse(struct soap*, _ns1__RemoveConfigurationResponse*) deserialize from a source
/// - int soap_write__ns1__RemoveConfigurationResponse(struct soap*, _ns1__RemoveConfigurationResponse*) serialize to a sink
/// - _ns1__RemoveConfigurationResponse* soap_dup__ns1__RemoveConfigurationResponse(struct soap*, _ns1__RemoveConfigurationResponse* dst, _ns1__RemoveConfigurationResponse *src) returns deep copy of _ns1__RemoveConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__RemoveConfigurationResponse(_ns1__RemoveConfigurationResponse*) deep deletes _ns1__RemoveConfigurationResponse data members, use only on dst after soap_dup__ns1__RemoveConfigurationResponse(NULL, _ns1__RemoveConfigurationResponse *dst, _ns1__RemoveConfigurationResponse *src) (use soapcpp2 -Ed)
struct _ns1__RemoveConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":DeleteProfile
/// @brief "http://www.onvif.org/ver20/media/wsdl":DeleteProfile is a complexType.
///
/// @note struct _ns1__DeleteProfile operations:
/// - _ns1__DeleteProfile* soap_new__ns1__DeleteProfile(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__DeleteProfile(struct soap*, _ns1__DeleteProfile*) default initialize members
/// - int soap_read__ns1__DeleteProfile(struct soap*, _ns1__DeleteProfile*) deserialize from a source
/// - int soap_write__ns1__DeleteProfile(struct soap*, _ns1__DeleteProfile*) serialize to a sink
/// - _ns1__DeleteProfile* soap_dup__ns1__DeleteProfile(struct soap*, _ns1__DeleteProfile* dst, _ns1__DeleteProfile *src) returns deep copy of _ns1__DeleteProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__DeleteProfile(_ns1__DeleteProfile*) deep deletes _ns1__DeleteProfile data members, use only on dst after soap_dup__ns1__DeleteProfile(NULL, _ns1__DeleteProfile *dst, _ns1__DeleteProfile *src) (use soapcpp2 -Ed)
struct _ns1__DeleteProfile
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile that should be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":DeleteProfileResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":DeleteProfileResponse is a complexType.
///
/// @note struct _ns1__DeleteProfileResponse operations:
/// - _ns1__DeleteProfileResponse* soap_new__ns1__DeleteProfileResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__DeleteProfileResponse(struct soap*, _ns1__DeleteProfileResponse*) default initialize members
/// - int soap_read__ns1__DeleteProfileResponse(struct soap*, _ns1__DeleteProfileResponse*) deserialize from a source
/// - int soap_write__ns1__DeleteProfileResponse(struct soap*, _ns1__DeleteProfileResponse*) serialize to a sink
/// - _ns1__DeleteProfileResponse* soap_dup__ns1__DeleteProfileResponse(struct soap*, _ns1__DeleteProfileResponse* dst, _ns1__DeleteProfileResponse *src) returns deep copy of _ns1__DeleteProfileResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__DeleteProfileResponse(_ns1__DeleteProfileResponse*) deep deletes _ns1__DeleteProfileResponse data members, use only on dst after soap_dup__ns1__DeleteProfileResponse(NULL, _ns1__DeleteProfileResponse *dst, _ns1__DeleteProfileResponse *src) (use soapcpp2 -Ed)
struct _ns1__DeleteProfileResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderConfigurationsResponse is a complexType.
///
/// @note struct _ns1__GetVideoEncoderConfigurationsResponse operations:
/// - _ns1__GetVideoEncoderConfigurationsResponse* soap_new__ns1__GetVideoEncoderConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetVideoEncoderConfigurationsResponse(struct soap*, _ns1__GetVideoEncoderConfigurationsResponse*) default initialize members
/// - int soap_read__ns1__GetVideoEncoderConfigurationsResponse(struct soap*, _ns1__GetVideoEncoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__ns1__GetVideoEncoderConfigurationsResponse(struct soap*, _ns1__GetVideoEncoderConfigurationsResponse*) serialize to a sink
/// - _ns1__GetVideoEncoderConfigurationsResponse* soap_dup__ns1__GetVideoEncoderConfigurationsResponse(struct soap*, _ns1__GetVideoEncoderConfigurationsResponse* dst, _ns1__GetVideoEncoderConfigurationsResponse *src) returns deep copy of _ns1__GetVideoEncoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetVideoEncoderConfigurationsResponse(_ns1__GetVideoEncoderConfigurationsResponse*) deep deletes _ns1__GetVideoEncoderConfigurationsResponse data members, use only on dst after soap_dup__ns1__GetVideoEncoderConfigurationsResponse(NULL, _ns1__GetVideoEncoderConfigurationsResponse *dst, _ns1__GetVideoEncoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetVideoEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video encoder configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoEncoder2Configuration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__VideoEncoder2Configuration* of size 0..unbounded.
    struct tt__VideoEncoder2Configuration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceConfigurationsResponse is a complexType.
///
/// @note struct _ns1__GetVideoSourceConfigurationsResponse operations:
/// - _ns1__GetVideoSourceConfigurationsResponse* soap_new__ns1__GetVideoSourceConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetVideoSourceConfigurationsResponse(struct soap*, _ns1__GetVideoSourceConfigurationsResponse*) default initialize members
/// - int soap_read__ns1__GetVideoSourceConfigurationsResponse(struct soap*, _ns1__GetVideoSourceConfigurationsResponse*) deserialize from a source
/// - int soap_write__ns1__GetVideoSourceConfigurationsResponse(struct soap*, _ns1__GetVideoSourceConfigurationsResponse*) serialize to a sink
/// - _ns1__GetVideoSourceConfigurationsResponse* soap_dup__ns1__GetVideoSourceConfigurationsResponse(struct soap*, _ns1__GetVideoSourceConfigurationsResponse* dst, _ns1__GetVideoSourceConfigurationsResponse *src) returns deep copy of _ns1__GetVideoSourceConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetVideoSourceConfigurationsResponse(_ns1__GetVideoSourceConfigurationsResponse*) deep deletes _ns1__GetVideoSourceConfigurationsResponse data members, use only on dst after soap_dup__ns1__GetVideoSourceConfigurationsResponse(NULL, _ns1__GetVideoSourceConfigurationsResponse *dst, _ns1__GetVideoSourceConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetVideoSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video source configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoSourceConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__VideoSourceConfiguration* of size 0..unbounded.
    struct tt__VideoSourceConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioEncoderConfigurationsResponse is a complexType.
///
/// @note struct _ns1__GetAudioEncoderConfigurationsResponse operations:
/// - _ns1__GetAudioEncoderConfigurationsResponse* soap_new__ns1__GetAudioEncoderConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetAudioEncoderConfigurationsResponse(struct soap*, _ns1__GetAudioEncoderConfigurationsResponse*) default initialize members
/// - int soap_read__ns1__GetAudioEncoderConfigurationsResponse(struct soap*, _ns1__GetAudioEncoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__ns1__GetAudioEncoderConfigurationsResponse(struct soap*, _ns1__GetAudioEncoderConfigurationsResponse*) serialize to a sink
/// - _ns1__GetAudioEncoderConfigurationsResponse* soap_dup__ns1__GetAudioEncoderConfigurationsResponse(struct soap*, _ns1__GetAudioEncoderConfigurationsResponse* dst, _ns1__GetAudioEncoderConfigurationsResponse *src) returns deep copy of _ns1__GetAudioEncoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetAudioEncoderConfigurationsResponse(_ns1__GetAudioEncoderConfigurationsResponse*) deep deletes _ns1__GetAudioEncoderConfigurationsResponse data members, use only on dst after soap_dup__ns1__GetAudioEncoderConfigurationsResponse(NULL, _ns1__GetAudioEncoderConfigurationsResponse *dst, _ns1__GetAudioEncoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetAudioEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio encoder configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioEncoder2Configuration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__AudioEncoder2Configuration* of size 0..unbounded.
    struct tt__AudioEncoder2Configuration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioSourceConfigurationsResponse is a complexType.
///
/// @note struct _ns1__GetAudioSourceConfigurationsResponse operations:
/// - _ns1__GetAudioSourceConfigurationsResponse* soap_new__ns1__GetAudioSourceConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetAudioSourceConfigurationsResponse(struct soap*, _ns1__GetAudioSourceConfigurationsResponse*) default initialize members
/// - int soap_read__ns1__GetAudioSourceConfigurationsResponse(struct soap*, _ns1__GetAudioSourceConfigurationsResponse*) deserialize from a source
/// - int soap_write__ns1__GetAudioSourceConfigurationsResponse(struct soap*, _ns1__GetAudioSourceConfigurationsResponse*) serialize to a sink
/// - _ns1__GetAudioSourceConfigurationsResponse* soap_dup__ns1__GetAudioSourceConfigurationsResponse(struct soap*, _ns1__GetAudioSourceConfigurationsResponse* dst, _ns1__GetAudioSourceConfigurationsResponse *src) returns deep copy of _ns1__GetAudioSourceConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetAudioSourceConfigurationsResponse(_ns1__GetAudioSourceConfigurationsResponse*) deep deletes _ns1__GetAudioSourceConfigurationsResponse data members, use only on dst after soap_dup__ns1__GetAudioSourceConfigurationsResponse(NULL, _ns1__GetAudioSourceConfigurationsResponse *dst, _ns1__GetAudioSourceConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetAudioSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio source configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioSourceConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__AudioSourceConfiguration* of size 0..unbounded.
    struct tt__AudioSourceConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAnalyticsConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAnalyticsConfigurationsResponse is a complexType.
///
/// @note struct _ns1__GetAnalyticsConfigurationsResponse operations:
/// - _ns1__GetAnalyticsConfigurationsResponse* soap_new__ns1__GetAnalyticsConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetAnalyticsConfigurationsResponse(struct soap*, _ns1__GetAnalyticsConfigurationsResponse*) default initialize members
/// - int soap_read__ns1__GetAnalyticsConfigurationsResponse(struct soap*, _ns1__GetAnalyticsConfigurationsResponse*) deserialize from a source
/// - int soap_write__ns1__GetAnalyticsConfigurationsResponse(struct soap*, _ns1__GetAnalyticsConfigurationsResponse*) serialize to a sink
/// - _ns1__GetAnalyticsConfigurationsResponse* soap_dup__ns1__GetAnalyticsConfigurationsResponse(struct soap*, _ns1__GetAnalyticsConfigurationsResponse* dst, _ns1__GetAnalyticsConfigurationsResponse *src) returns deep copy of _ns1__GetAnalyticsConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetAnalyticsConfigurationsResponse(_ns1__GetAnalyticsConfigurationsResponse*) deep deletes _ns1__GetAnalyticsConfigurationsResponse data members, use only on dst after soap_dup__ns1__GetAnalyticsConfigurationsResponse(NULL, _ns1__GetAnalyticsConfigurationsResponse *dst, _ns1__GetAnalyticsConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetAnalyticsConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of Analytics configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoAnalyticsConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__VideoAnalyticsConfiguration* of size 0..unbounded.
    struct tt__VideoAnalyticsConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetMetadataConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetMetadataConfigurationsResponse is a complexType.
///
/// @note struct _ns1__GetMetadataConfigurationsResponse operations:
/// - _ns1__GetMetadataConfigurationsResponse* soap_new__ns1__GetMetadataConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetMetadataConfigurationsResponse(struct soap*, _ns1__GetMetadataConfigurationsResponse*) default initialize members
/// - int soap_read__ns1__GetMetadataConfigurationsResponse(struct soap*, _ns1__GetMetadataConfigurationsResponse*) deserialize from a source
/// - int soap_write__ns1__GetMetadataConfigurationsResponse(struct soap*, _ns1__GetMetadataConfigurationsResponse*) serialize to a sink
/// - _ns1__GetMetadataConfigurationsResponse* soap_dup__ns1__GetMetadataConfigurationsResponse(struct soap*, _ns1__GetMetadataConfigurationsResponse* dst, _ns1__GetMetadataConfigurationsResponse *src) returns deep copy of _ns1__GetMetadataConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetMetadataConfigurationsResponse(_ns1__GetMetadataConfigurationsResponse*) deep deletes _ns1__GetMetadataConfigurationsResponse data members, use only on dst after soap_dup__ns1__GetMetadataConfigurationsResponse(NULL, _ns1__GetMetadataConfigurationsResponse *dst, _ns1__GetMetadataConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetMetadataConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of metadata configurations
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__MetadataConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__MetadataConfiguration* of size 0..unbounded.
    struct tt__MetadataConfiguration*    Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioOutputConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioOutputConfigurationsResponse is a complexType.
///
/// @note struct _ns1__GetAudioOutputConfigurationsResponse operations:
/// - _ns1__GetAudioOutputConfigurationsResponse* soap_new__ns1__GetAudioOutputConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetAudioOutputConfigurationsResponse(struct soap*, _ns1__GetAudioOutputConfigurationsResponse*) default initialize members
/// - int soap_read__ns1__GetAudioOutputConfigurationsResponse(struct soap*, _ns1__GetAudioOutputConfigurationsResponse*) deserialize from a source
/// - int soap_write__ns1__GetAudioOutputConfigurationsResponse(struct soap*, _ns1__GetAudioOutputConfigurationsResponse*) serialize to a sink
/// - _ns1__GetAudioOutputConfigurationsResponse* soap_dup__ns1__GetAudioOutputConfigurationsResponse(struct soap*, _ns1__GetAudioOutputConfigurationsResponse* dst, _ns1__GetAudioOutputConfigurationsResponse *src) returns deep copy of _ns1__GetAudioOutputConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetAudioOutputConfigurationsResponse(_ns1__GetAudioOutputConfigurationsResponse*) deep deletes _ns1__GetAudioOutputConfigurationsResponse data members, use only on dst after soap_dup__ns1__GetAudioOutputConfigurationsResponse(NULL, _ns1__GetAudioOutputConfigurationsResponse *dst, _ns1__GetAudioOutputConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetAudioOutputConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio output configurations
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioOutputConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__AudioOutputConfiguration* of size 0..unbounded.
    struct tt__AudioOutputConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioDecoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioDecoderConfigurationsResponse is a complexType.
///
/// @note struct _ns1__GetAudioDecoderConfigurationsResponse operations:
/// - _ns1__GetAudioDecoderConfigurationsResponse* soap_new__ns1__GetAudioDecoderConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetAudioDecoderConfigurationsResponse(struct soap*, _ns1__GetAudioDecoderConfigurationsResponse*) default initialize members
/// - int soap_read__ns1__GetAudioDecoderConfigurationsResponse(struct soap*, _ns1__GetAudioDecoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__ns1__GetAudioDecoderConfigurationsResponse(struct soap*, _ns1__GetAudioDecoderConfigurationsResponse*) serialize to a sink
/// - _ns1__GetAudioDecoderConfigurationsResponse* soap_dup__ns1__GetAudioDecoderConfigurationsResponse(struct soap*, _ns1__GetAudioDecoderConfigurationsResponse* dst, _ns1__GetAudioDecoderConfigurationsResponse *src) returns deep copy of _ns1__GetAudioDecoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetAudioDecoderConfigurationsResponse(_ns1__GetAudioDecoderConfigurationsResponse*) deep deletes _ns1__GetAudioDecoderConfigurationsResponse data members, use only on dst after soap_dup__ns1__GetAudioDecoderConfigurationsResponse(NULL, _ns1__GetAudioDecoderConfigurationsResponse *dst, _ns1__GetAudioDecoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetAudioDecoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio decoder configurations
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioDecoderConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Array struct tt__AudioDecoderConfiguration* of size 0..unbounded.
    struct tt__AudioDecoderConfiguration*  Configurations                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetVideoEncoderConfiguration is a complexType.
///
/// @note struct _ns1__SetVideoEncoderConfiguration operations:
/// - _ns1__SetVideoEncoderConfiguration* soap_new__ns1__SetVideoEncoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__SetVideoEncoderConfiguration(struct soap*, _ns1__SetVideoEncoderConfiguration*) default initialize members
/// - int soap_read__ns1__SetVideoEncoderConfiguration(struct soap*, _ns1__SetVideoEncoderConfiguration*) deserialize from a source
/// - int soap_write__ns1__SetVideoEncoderConfiguration(struct soap*, _ns1__SetVideoEncoderConfiguration*) serialize to a sink
/// - _ns1__SetVideoEncoderConfiguration* soap_dup__ns1__SetVideoEncoderConfiguration(struct soap*, _ns1__SetVideoEncoderConfiguration* dst, _ns1__SetVideoEncoderConfiguration *src) returns deep copy of _ns1__SetVideoEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__SetVideoEncoderConfiguration(_ns1__SetVideoEncoderConfiguration*) deep deletes _ns1__SetVideoEncoderConfiguration data members, use only on dst after soap_dup__ns1__SetVideoEncoderConfiguration(NULL, _ns1__SetVideoEncoderConfiguration *dst, _ns1__SetVideoEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _ns1__SetVideoEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified video encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration.
    struct tt__VideoEncoder2Configuration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetVideoSourceConfiguration is a complexType.
///
/// @note struct _ns1__SetVideoSourceConfiguration operations:
/// - _ns1__SetVideoSourceConfiguration* soap_new__ns1__SetVideoSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__SetVideoSourceConfiguration(struct soap*, _ns1__SetVideoSourceConfiguration*) default initialize members
/// - int soap_read__ns1__SetVideoSourceConfiguration(struct soap*, _ns1__SetVideoSourceConfiguration*) deserialize from a source
/// - int soap_write__ns1__SetVideoSourceConfiguration(struct soap*, _ns1__SetVideoSourceConfiguration*) serialize to a sink
/// - _ns1__SetVideoSourceConfiguration* soap_dup__ns1__SetVideoSourceConfiguration(struct soap*, _ns1__SetVideoSourceConfiguration* dst, _ns1__SetVideoSourceConfiguration *src) returns deep copy of _ns1__SetVideoSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__SetVideoSourceConfiguration(_ns1__SetVideoSourceConfiguration*) deep deletes _ns1__SetVideoSourceConfiguration data members, use only on dst after soap_dup__ns1__SetVideoSourceConfiguration(NULL, _ns1__SetVideoSourceConfiguration *dst, _ns1__SetVideoSourceConfiguration *src) (use soapcpp2 -Ed)
struct _ns1__SetVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified video source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetAudioEncoderConfiguration is a complexType.
///
/// @note struct _ns1__SetAudioEncoderConfiguration operations:
/// - _ns1__SetAudioEncoderConfiguration* soap_new__ns1__SetAudioEncoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__SetAudioEncoderConfiguration(struct soap*, _ns1__SetAudioEncoderConfiguration*) default initialize members
/// - int soap_read__ns1__SetAudioEncoderConfiguration(struct soap*, _ns1__SetAudioEncoderConfiguration*) deserialize from a source
/// - int soap_write__ns1__SetAudioEncoderConfiguration(struct soap*, _ns1__SetAudioEncoderConfiguration*) serialize to a sink
/// - _ns1__SetAudioEncoderConfiguration* soap_dup__ns1__SetAudioEncoderConfiguration(struct soap*, _ns1__SetAudioEncoderConfiguration* dst, _ns1__SetAudioEncoderConfiguration *src) returns deep copy of _ns1__SetAudioEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__SetAudioEncoderConfiguration(_ns1__SetAudioEncoderConfiguration*) deep deletes _ns1__SetAudioEncoderConfiguration data members, use only on dst after soap_dup__ns1__SetAudioEncoderConfiguration(NULL, _ns1__SetAudioEncoderConfiguration *dst, _ns1__SetAudioEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _ns1__SetAudioEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration.
    struct tt__AudioEncoder2Configuration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetAudioSourceConfiguration is a complexType.
///
/// @note struct _ns1__SetAudioSourceConfiguration operations:
/// - _ns1__SetAudioSourceConfiguration* soap_new__ns1__SetAudioSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__SetAudioSourceConfiguration(struct soap*, _ns1__SetAudioSourceConfiguration*) default initialize members
/// - int soap_read__ns1__SetAudioSourceConfiguration(struct soap*, _ns1__SetAudioSourceConfiguration*) deserialize from a source
/// - int soap_write__ns1__SetAudioSourceConfiguration(struct soap*, _ns1__SetAudioSourceConfiguration*) serialize to a sink
/// - _ns1__SetAudioSourceConfiguration* soap_dup__ns1__SetAudioSourceConfiguration(struct soap*, _ns1__SetAudioSourceConfiguration* dst, _ns1__SetAudioSourceConfiguration *src) returns deep copy of _ns1__SetAudioSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__SetAudioSourceConfiguration(_ns1__SetAudioSourceConfiguration*) deep deletes _ns1__SetAudioSourceConfiguration data members, use only on dst after soap_dup__ns1__SetAudioSourceConfiguration(NULL, _ns1__SetAudioSourceConfiguration *dst, _ns1__SetAudioSourceConfiguration *src) (use soapcpp2 -Ed)
struct _ns1__SetAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetMetadataConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetMetadataConfiguration is a complexType.
///
/// @note struct _ns1__SetMetadataConfiguration operations:
/// - _ns1__SetMetadataConfiguration* soap_new__ns1__SetMetadataConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__SetMetadataConfiguration(struct soap*, _ns1__SetMetadataConfiguration*) default initialize members
/// - int soap_read__ns1__SetMetadataConfiguration(struct soap*, _ns1__SetMetadataConfiguration*) deserialize from a source
/// - int soap_write__ns1__SetMetadataConfiguration(struct soap*, _ns1__SetMetadataConfiguration*) serialize to a sink
/// - _ns1__SetMetadataConfiguration* soap_dup__ns1__SetMetadataConfiguration(struct soap*, _ns1__SetMetadataConfiguration* dst, _ns1__SetMetadataConfiguration *src) returns deep copy of _ns1__SetMetadataConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__SetMetadataConfiguration(_ns1__SetMetadataConfiguration*) deep deletes _ns1__SetMetadataConfiguration data members, use only on dst after soap_dup__ns1__SetMetadataConfiguration(NULL, _ns1__SetMetadataConfiguration *dst, _ns1__SetMetadataConfiguration *src) (use soapcpp2 -Ed)
struct _ns1__SetMetadataConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified metadata configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    struct tt__MetadataConfiguration*    Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetAudioOutputConfiguration is a complexType.
///
/// @note struct _ns1__SetAudioOutputConfiguration operations:
/// - _ns1__SetAudioOutputConfiguration* soap_new__ns1__SetAudioOutputConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__SetAudioOutputConfiguration(struct soap*, _ns1__SetAudioOutputConfiguration*) default initialize members
/// - int soap_read__ns1__SetAudioOutputConfiguration(struct soap*, _ns1__SetAudioOutputConfiguration*) deserialize from a source
/// - int soap_write__ns1__SetAudioOutputConfiguration(struct soap*, _ns1__SetAudioOutputConfiguration*) serialize to a sink
/// - _ns1__SetAudioOutputConfiguration* soap_dup__ns1__SetAudioOutputConfiguration(struct soap*, _ns1__SetAudioOutputConfiguration* dst, _ns1__SetAudioOutputConfiguration *src) returns deep copy of _ns1__SetAudioOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__SetAudioOutputConfiguration(_ns1__SetAudioOutputConfiguration*) deep deletes _ns1__SetAudioOutputConfiguration data members, use only on dst after soap_dup__ns1__SetAudioOutputConfiguration(NULL, _ns1__SetAudioOutputConfiguration *dst, _ns1__SetAudioOutputConfiguration *src) (use soapcpp2 -Ed)
struct _ns1__SetAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio output configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetAudioDecoderConfiguration is a complexType.
///
/// @note struct _ns1__SetAudioDecoderConfiguration operations:
/// - _ns1__SetAudioDecoderConfiguration* soap_new__ns1__SetAudioDecoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__SetAudioDecoderConfiguration(struct soap*, _ns1__SetAudioDecoderConfiguration*) default initialize members
/// - int soap_read__ns1__SetAudioDecoderConfiguration(struct soap*, _ns1__SetAudioDecoderConfiguration*) deserialize from a source
/// - int soap_write__ns1__SetAudioDecoderConfiguration(struct soap*, _ns1__SetAudioDecoderConfiguration*) serialize to a sink
/// - _ns1__SetAudioDecoderConfiguration* soap_dup__ns1__SetAudioDecoderConfiguration(struct soap*, _ns1__SetAudioDecoderConfiguration* dst, _ns1__SetAudioDecoderConfiguration *src) returns deep copy of _ns1__SetAudioDecoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__SetAudioDecoderConfiguration(_ns1__SetAudioDecoderConfiguration*) deep deletes _ns1__SetAudioDecoderConfiguration data members, use only on dst after soap_dup__ns1__SetAudioDecoderConfiguration(NULL, _ns1__SetAudioDecoderConfiguration *dst, _ns1__SetAudioDecoderConfiguration *src) (use soapcpp2 -Ed)
struct _ns1__SetAudioDecoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio decoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    struct tt__AudioDecoderConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
///
/// @note struct _ns1__GetVideoSourceConfigurationOptionsResponse operations:
/// - _ns1__GetVideoSourceConfigurationOptionsResponse* soap_new__ns1__GetVideoSourceConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetVideoSourceConfigurationOptionsResponse(struct soap*, _ns1__GetVideoSourceConfigurationOptionsResponse*) default initialize members
/// - int soap_read__ns1__GetVideoSourceConfigurationOptionsResponse(struct soap*, _ns1__GetVideoSourceConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__ns1__GetVideoSourceConfigurationOptionsResponse(struct soap*, _ns1__GetVideoSourceConfigurationOptionsResponse*) serialize to a sink
/// - _ns1__GetVideoSourceConfigurationOptionsResponse* soap_dup__ns1__GetVideoSourceConfigurationOptionsResponse(struct soap*, _ns1__GetVideoSourceConfigurationOptionsResponse* dst, _ns1__GetVideoSourceConfigurationOptionsResponse *src) returns deep copy of _ns1__GetVideoSourceConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetVideoSourceConfigurationOptionsResponse(_ns1__GetVideoSourceConfigurationOptionsResponse*) deep deletes _ns1__GetVideoSourceConfigurationOptionsResponse data members, use only on dst after soap_dup__ns1__GetVideoSourceConfigurationOptionsResponse(NULL, _ns1__GetVideoSourceConfigurationOptionsResponse *dst, _ns1__GetVideoSourceConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetVideoSourceConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the video source configuration options. If a video source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    struct tt__VideoSourceConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderConfigurationOptionsResponse is a complexType.
///
/// @note struct _ns1__GetVideoEncoderConfigurationOptionsResponse operations:
/// - _ns1__GetVideoEncoderConfigurationOptionsResponse* soap_new__ns1__GetVideoEncoderConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _ns1__GetVideoEncoderConfigurationOptionsResponse*) default initialize members
/// - int soap_read__ns1__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _ns1__GetVideoEncoderConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__ns1__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _ns1__GetVideoEncoderConfigurationOptionsResponse*) serialize to a sink
/// - _ns1__GetVideoEncoderConfigurationOptionsResponse* soap_dup__ns1__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _ns1__GetVideoEncoderConfigurationOptionsResponse* dst, _ns1__GetVideoEncoderConfigurationOptionsResponse *src) returns deep copy of _ns1__GetVideoEncoderConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetVideoEncoderConfigurationOptionsResponse(_ns1__GetVideoEncoderConfigurationOptionsResponse*) deep deletes _ns1__GetVideoEncoderConfigurationOptionsResponse data members, use only on dst after soap_dup__ns1__GetVideoEncoderConfigurationOptionsResponse(NULL, _ns1__GetVideoEncoderConfigurationOptionsResponse *dst, _ns1__GetVideoEncoderConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetVideoEncoderConfigurationOptionsResponse
{
/// Size of array of struct tt__VideoEncoder2ConfigurationOptions* is 1..unbounded.
  $ int                                  __sizeOptions                  1;
/// Array struct tt__VideoEncoder2ConfigurationOptions* of size 1..unbounded.
    struct tt__VideoEncoder2ConfigurationOptions*  Options                        1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
///
/// @note struct _ns1__GetAudioSourceConfigurationOptionsResponse operations:
/// - _ns1__GetAudioSourceConfigurationOptionsResponse* soap_new__ns1__GetAudioSourceConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetAudioSourceConfigurationOptionsResponse(struct soap*, _ns1__GetAudioSourceConfigurationOptionsResponse*) default initialize members
/// - int soap_read__ns1__GetAudioSourceConfigurationOptionsResponse(struct soap*, _ns1__GetAudioSourceConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__ns1__GetAudioSourceConfigurationOptionsResponse(struct soap*, _ns1__GetAudioSourceConfigurationOptionsResponse*) serialize to a sink
/// - _ns1__GetAudioSourceConfigurationOptionsResponse* soap_dup__ns1__GetAudioSourceConfigurationOptionsResponse(struct soap*, _ns1__GetAudioSourceConfigurationOptionsResponse* dst, _ns1__GetAudioSourceConfigurationOptionsResponse *src) returns deep copy of _ns1__GetAudioSourceConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetAudioSourceConfigurationOptionsResponse(_ns1__GetAudioSourceConfigurationOptionsResponse*) deep deletes _ns1__GetAudioSourceConfigurationOptionsResponse data members, use only on dst after soap_dup__ns1__GetAudioSourceConfigurationOptionsResponse(NULL, _ns1__GetAudioSourceConfigurationOptionsResponse *dst, _ns1__GetAudioSourceConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetAudioSourceConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio source configuration options. If a audio source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    struct tt__AudioSourceConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioEncoderConfigurationOptionsResponse is a complexType.
///
/// @note struct _ns1__GetAudioEncoderConfigurationOptionsResponse operations:
/// - _ns1__GetAudioEncoderConfigurationOptionsResponse* soap_new__ns1__GetAudioEncoderConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _ns1__GetAudioEncoderConfigurationOptionsResponse*) default initialize members
/// - int soap_read__ns1__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _ns1__GetAudioEncoderConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__ns1__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _ns1__GetAudioEncoderConfigurationOptionsResponse*) serialize to a sink
/// - _ns1__GetAudioEncoderConfigurationOptionsResponse* soap_dup__ns1__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _ns1__GetAudioEncoderConfigurationOptionsResponse* dst, _ns1__GetAudioEncoderConfigurationOptionsResponse *src) returns deep copy of _ns1__GetAudioEncoderConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetAudioEncoderConfigurationOptionsResponse(_ns1__GetAudioEncoderConfigurationOptionsResponse*) deep deletes _ns1__GetAudioEncoderConfigurationOptionsResponse data members, use only on dst after soap_dup__ns1__GetAudioEncoderConfigurationOptionsResponse(NULL, _ns1__GetAudioEncoderConfigurationOptionsResponse *dst, _ns1__GetAudioEncoderConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetAudioEncoderConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio encoder configuration options. If a audio encoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioEncoder2ConfigurationOptions* is 1..unbounded.
  $ int                                  __sizeOptions                  1;
/// Array struct tt__AudioEncoder2ConfigurationOptions* of size 1..unbounded.
    struct tt__AudioEncoder2ConfigurationOptions*  Options                        1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetMetadataConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetMetadataConfigurationOptionsResponse is a complexType.
///
/// @note struct _ns1__GetMetadataConfigurationOptionsResponse operations:
/// - _ns1__GetMetadataConfigurationOptionsResponse* soap_new__ns1__GetMetadataConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetMetadataConfigurationOptionsResponse(struct soap*, _ns1__GetMetadataConfigurationOptionsResponse*) default initialize members
/// - int soap_read__ns1__GetMetadataConfigurationOptionsResponse(struct soap*, _ns1__GetMetadataConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__ns1__GetMetadataConfigurationOptionsResponse(struct soap*, _ns1__GetMetadataConfigurationOptionsResponse*) serialize to a sink
/// - _ns1__GetMetadataConfigurationOptionsResponse* soap_dup__ns1__GetMetadataConfigurationOptionsResponse(struct soap*, _ns1__GetMetadataConfigurationOptionsResponse* dst, _ns1__GetMetadataConfigurationOptionsResponse *src) returns deep copy of _ns1__GetMetadataConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetMetadataConfigurationOptionsResponse(_ns1__GetMetadataConfigurationOptionsResponse*) deep deletes _ns1__GetMetadataConfigurationOptionsResponse data members, use only on dst after soap_dup__ns1__GetMetadataConfigurationOptionsResponse(NULL, _ns1__GetMetadataConfigurationOptionsResponse *dst, _ns1__GetMetadataConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetMetadataConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the metadata configuration options. If a metadata configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions.
    struct tt__MetadataConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
///
/// @note struct _ns1__GetAudioOutputConfigurationOptionsResponse operations:
/// - _ns1__GetAudioOutputConfigurationOptionsResponse* soap_new__ns1__GetAudioOutputConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetAudioOutputConfigurationOptionsResponse(struct soap*, _ns1__GetAudioOutputConfigurationOptionsResponse*) default initialize members
/// - int soap_read__ns1__GetAudioOutputConfigurationOptionsResponse(struct soap*, _ns1__GetAudioOutputConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__ns1__GetAudioOutputConfigurationOptionsResponse(struct soap*, _ns1__GetAudioOutputConfigurationOptionsResponse*) serialize to a sink
/// - _ns1__GetAudioOutputConfigurationOptionsResponse* soap_dup__ns1__GetAudioOutputConfigurationOptionsResponse(struct soap*, _ns1__GetAudioOutputConfigurationOptionsResponse* dst, _ns1__GetAudioOutputConfigurationOptionsResponse *src) returns deep copy of _ns1__GetAudioOutputConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetAudioOutputConfigurationOptionsResponse(_ns1__GetAudioOutputConfigurationOptionsResponse*) deep deletes _ns1__GetAudioOutputConfigurationOptionsResponse data members, use only on dst after soap_dup__ns1__GetAudioOutputConfigurationOptionsResponse(NULL, _ns1__GetAudioOutputConfigurationOptionsResponse *dst, _ns1__GetAudioOutputConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetAudioOutputConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio output configuration options. If a audio output configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    struct tt__AudioOutputConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioDecoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioDecoderConfigurationOptionsResponse is a complexType.
///
/// @note struct _ns1__GetAudioDecoderConfigurationOptionsResponse operations:
/// - _ns1__GetAudioDecoderConfigurationOptionsResponse* soap_new__ns1__GetAudioDecoderConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _ns1__GetAudioDecoderConfigurationOptionsResponse*) default initialize members
/// - int soap_read__ns1__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _ns1__GetAudioDecoderConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__ns1__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _ns1__GetAudioDecoderConfigurationOptionsResponse*) serialize to a sink
/// - _ns1__GetAudioDecoderConfigurationOptionsResponse* soap_dup__ns1__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _ns1__GetAudioDecoderConfigurationOptionsResponse* dst, _ns1__GetAudioDecoderConfigurationOptionsResponse *src) returns deep copy of _ns1__GetAudioDecoderConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetAudioDecoderConfigurationOptionsResponse(_ns1__GetAudioDecoderConfigurationOptionsResponse*) deep deletes _ns1__GetAudioDecoderConfigurationOptionsResponse data members, use only on dst after soap_dup__ns1__GetAudioDecoderConfigurationOptionsResponse(NULL, _ns1__GetAudioDecoderConfigurationOptionsResponse *dst, _ns1__GetAudioDecoderConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetAudioDecoderConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio decoder configuration options. If a audio decoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__AudioEncoder2ConfigurationOptions* is 1..unbounded.
  $ int                                  __sizeOptions                  1;
/// Array struct tt__AudioEncoder2ConfigurationOptions* of size 1..unbounded.
    struct tt__AudioEncoder2ConfigurationOptions*  Options                        1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderInstances
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderInstances is a complexType.
///
/// @note struct _ns1__GetVideoEncoderInstances operations:
/// - _ns1__GetVideoEncoderInstances* soap_new__ns1__GetVideoEncoderInstances(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetVideoEncoderInstances(struct soap*, _ns1__GetVideoEncoderInstances*) default initialize members
/// - int soap_read__ns1__GetVideoEncoderInstances(struct soap*, _ns1__GetVideoEncoderInstances*) deserialize from a source
/// - int soap_write__ns1__GetVideoEncoderInstances(struct soap*, _ns1__GetVideoEncoderInstances*) serialize to a sink
/// - _ns1__GetVideoEncoderInstances* soap_dup__ns1__GetVideoEncoderInstances(struct soap*, _ns1__GetVideoEncoderInstances* dst, _ns1__GetVideoEncoderInstances *src) returns deep copy of _ns1__GetVideoEncoderInstances src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetVideoEncoderInstances(_ns1__GetVideoEncoderInstances*) deep deletes _ns1__GetVideoEncoderInstances data members, use only on dst after soap_dup__ns1__GetVideoEncoderInstances(NULL, _ns1__GetVideoEncoderInstances *dst, _ns1__GetVideoEncoderInstances *src) (use soapcpp2 -Ed)
struct _ns1__GetVideoEncoderInstances
{
/// <PRE><BLOCKQUOTE>
///   Token of the video source configuration
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderInstancesResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderInstancesResponse is a complexType.
///
/// @note struct _ns1__GetVideoEncoderInstancesResponse operations:
/// - _ns1__GetVideoEncoderInstancesResponse* soap_new__ns1__GetVideoEncoderInstancesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetVideoEncoderInstancesResponse(struct soap*, _ns1__GetVideoEncoderInstancesResponse*) default initialize members
/// - int soap_read__ns1__GetVideoEncoderInstancesResponse(struct soap*, _ns1__GetVideoEncoderInstancesResponse*) deserialize from a source
/// - int soap_write__ns1__GetVideoEncoderInstancesResponse(struct soap*, _ns1__GetVideoEncoderInstancesResponse*) serialize to a sink
/// - _ns1__GetVideoEncoderInstancesResponse* soap_dup__ns1__GetVideoEncoderInstancesResponse(struct soap*, _ns1__GetVideoEncoderInstancesResponse* dst, _ns1__GetVideoEncoderInstancesResponse *src) returns deep copy of _ns1__GetVideoEncoderInstancesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetVideoEncoderInstancesResponse(_ns1__GetVideoEncoderInstancesResponse*) deep deletes _ns1__GetVideoEncoderInstancesResponse data members, use only on dst after soap_dup__ns1__GetVideoEncoderInstancesResponse(NULL, _ns1__GetVideoEncoderInstancesResponse *dst, _ns1__GetVideoEncoderInstancesResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetVideoEncoderInstancesResponse
{
/// <PRE><BLOCKQUOTE>
///   The minimum guaranteed total number of encoder instances (applications) per VideoSourceConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Info" of type "http://www.onvif.org/ver20/media/wsdl":EncoderInstanceInfo.
    struct ns1__EncoderInstanceInfo*     Info                           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetStreamUri
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetStreamUri is a complexType.
///
/// @note struct _ns1__GetStreamUri operations:
/// - _ns1__GetStreamUri* soap_new__ns1__GetStreamUri(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetStreamUri(struct soap*, _ns1__GetStreamUri*) default initialize members
/// - int soap_read__ns1__GetStreamUri(struct soap*, _ns1__GetStreamUri*) deserialize from a source
/// - int soap_write__ns1__GetStreamUri(struct soap*, _ns1__GetStreamUri*) serialize to a sink
/// - _ns1__GetStreamUri* soap_dup__ns1__GetStreamUri(struct soap*, _ns1__GetStreamUri* dst, _ns1__GetStreamUri *src) returns deep copy of _ns1__GetStreamUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetStreamUri(_ns1__GetStreamUri*) deep deletes _ns1__GetStreamUri data members, use only on dst after soap_dup__ns1__GetStreamUri(NULL, _ns1__GetStreamUri *dst, _ns1__GetStreamUri *src) (use soapcpp2 -Ed)
struct _ns1__GetStreamUri
{
/// <PRE><BLOCKQUOTE>
///   Defines the network protocol for streaming as defined by tr2:TransportProtocol
/// </BLOCKQUOTE></PRE>
///
/// Element "Protocol" of type xs:string.
    char*                                Protocol                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the configuration of the content of the stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetStreamUriResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetStreamUriResponse is a complexType.
///
/// @note struct _ns1__GetStreamUriResponse operations:
/// - _ns1__GetStreamUriResponse* soap_new__ns1__GetStreamUriResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetStreamUriResponse(struct soap*, _ns1__GetStreamUriResponse*) default initialize members
/// - int soap_read__ns1__GetStreamUriResponse(struct soap*, _ns1__GetStreamUriResponse*) deserialize from a source
/// - int soap_write__ns1__GetStreamUriResponse(struct soap*, _ns1__GetStreamUriResponse*) serialize to a sink
/// - _ns1__GetStreamUriResponse* soap_dup__ns1__GetStreamUriResponse(struct soap*, _ns1__GetStreamUriResponse* dst, _ns1__GetStreamUriResponse *src) returns deep copy of _ns1__GetStreamUriResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetStreamUriResponse(_ns1__GetStreamUriResponse*) deep deletes _ns1__GetStreamUriResponse data members, use only on dst after soap_dup__ns1__GetStreamUriResponse(NULL, _ns1__GetStreamUriResponse *dst, _ns1__GetStreamUriResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetStreamUriResponse
{
/// <PRE><BLOCKQUOTE>
///   Stable Uri to be used for requesting the media stream
/// </BLOCKQUOTE></PRE>
///
/// Element "Uri" of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetSynchronizationPoint is a complexType.
///
/// @note struct _ns1__SetSynchronizationPoint operations:
/// - _ns1__SetSynchronizationPoint* soap_new__ns1__SetSynchronizationPoint(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__SetSynchronizationPoint(struct soap*, _ns1__SetSynchronizationPoint*) default initialize members
/// - int soap_read__ns1__SetSynchronizationPoint(struct soap*, _ns1__SetSynchronizationPoint*) deserialize from a source
/// - int soap_write__ns1__SetSynchronizationPoint(struct soap*, _ns1__SetSynchronizationPoint*) serialize to a sink
/// - _ns1__SetSynchronizationPoint* soap_dup__ns1__SetSynchronizationPoint(struct soap*, _ns1__SetSynchronizationPoint* dst, _ns1__SetSynchronizationPoint *src) returns deep copy of _ns1__SetSynchronizationPoint src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__SetSynchronizationPoint(_ns1__SetSynchronizationPoint*) deep deletes _ns1__SetSynchronizationPoint data members, use only on dst after soap_dup__ns1__SetSynchronizationPoint(NULL, _ns1__SetSynchronizationPoint *dst, _ns1__SetSynchronizationPoint *src) (use soapcpp2 -Ed)
struct _ns1__SetSynchronizationPoint
{
/// <PRE><BLOCKQUOTE>
///   Contains a Profile reference for which a Synchronization Point is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetSynchronizationPointResponse is a complexType.
///
/// @note struct _ns1__SetSynchronizationPointResponse operations:
/// - _ns1__SetSynchronizationPointResponse* soap_new__ns1__SetSynchronizationPointResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__SetSynchronizationPointResponse(struct soap*, _ns1__SetSynchronizationPointResponse*) default initialize members
/// - int soap_read__ns1__SetSynchronizationPointResponse(struct soap*, _ns1__SetSynchronizationPointResponse*) deserialize from a source
/// - int soap_write__ns1__SetSynchronizationPointResponse(struct soap*, _ns1__SetSynchronizationPointResponse*) serialize to a sink
/// - _ns1__SetSynchronizationPointResponse* soap_dup__ns1__SetSynchronizationPointResponse(struct soap*, _ns1__SetSynchronizationPointResponse* dst, _ns1__SetSynchronizationPointResponse *src) returns deep copy of _ns1__SetSynchronizationPointResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__SetSynchronizationPointResponse(_ns1__SetSynchronizationPointResponse*) deep deletes _ns1__SetSynchronizationPointResponse data members, use only on dst after soap_dup__ns1__SetSynchronizationPointResponse(NULL, _ns1__SetSynchronizationPointResponse *dst, _ns1__SetSynchronizationPointResponse *src) (use soapcpp2 -Ed)
struct _ns1__SetSynchronizationPointResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetSnapshotUri
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetSnapshotUri is a complexType.
///
/// @note struct _ns1__GetSnapshotUri operations:
/// - _ns1__GetSnapshotUri* soap_new__ns1__GetSnapshotUri(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetSnapshotUri(struct soap*, _ns1__GetSnapshotUri*) default initialize members
/// - int soap_read__ns1__GetSnapshotUri(struct soap*, _ns1__GetSnapshotUri*) deserialize from a source
/// - int soap_write__ns1__GetSnapshotUri(struct soap*, _ns1__GetSnapshotUri*) serialize to a sink
/// - _ns1__GetSnapshotUri* soap_dup__ns1__GetSnapshotUri(struct soap*, _ns1__GetSnapshotUri* dst, _ns1__GetSnapshotUri *src) returns deep copy of _ns1__GetSnapshotUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetSnapshotUri(_ns1__GetSnapshotUri*) deep deletes _ns1__GetSnapshotUri data members, use only on dst after soap_dup__ns1__GetSnapshotUri(NULL, _ns1__GetSnapshotUri *dst, _ns1__GetSnapshotUri *src) (use soapcpp2 -Ed)
struct _ns1__GetSnapshotUri
{
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the source and dimensions of the snapshot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetSnapshotUriResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetSnapshotUriResponse is a complexType.
///
/// @note struct _ns1__GetSnapshotUriResponse operations:
/// - _ns1__GetSnapshotUriResponse* soap_new__ns1__GetSnapshotUriResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetSnapshotUriResponse(struct soap*, _ns1__GetSnapshotUriResponse*) default initialize members
/// - int soap_read__ns1__GetSnapshotUriResponse(struct soap*, _ns1__GetSnapshotUriResponse*) deserialize from a source
/// - int soap_write__ns1__GetSnapshotUriResponse(struct soap*, _ns1__GetSnapshotUriResponse*) serialize to a sink
/// - _ns1__GetSnapshotUriResponse* soap_dup__ns1__GetSnapshotUriResponse(struct soap*, _ns1__GetSnapshotUriResponse* dst, _ns1__GetSnapshotUriResponse *src) returns deep copy of _ns1__GetSnapshotUriResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetSnapshotUriResponse(_ns1__GetSnapshotUriResponse*) deep deletes _ns1__GetSnapshotUriResponse data members, use only on dst after soap_dup__ns1__GetSnapshotUriResponse(NULL, _ns1__GetSnapshotUriResponse *dst, _ns1__GetSnapshotUriResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetSnapshotUriResponse
{
/// <PRE><BLOCKQUOTE>
///   Stable Uri to be used for requesting snapshot images.
/// </BLOCKQUOTE></PRE>
///
/// Element "Uri" of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceModes
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceModes is a complexType.
///
/// @note struct _ns1__GetVideoSourceModes operations:
/// - _ns1__GetVideoSourceModes* soap_new__ns1__GetVideoSourceModes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetVideoSourceModes(struct soap*, _ns1__GetVideoSourceModes*) default initialize members
/// - int soap_read__ns1__GetVideoSourceModes(struct soap*, _ns1__GetVideoSourceModes*) deserialize from a source
/// - int soap_write__ns1__GetVideoSourceModes(struct soap*, _ns1__GetVideoSourceModes*) serialize to a sink
/// - _ns1__GetVideoSourceModes* soap_dup__ns1__GetVideoSourceModes(struct soap*, _ns1__GetVideoSourceModes* dst, _ns1__GetVideoSourceModes *src) returns deep copy of _ns1__GetVideoSourceModes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetVideoSourceModes(_ns1__GetVideoSourceModes*) deep deletes _ns1__GetVideoSourceModes data members, use only on dst after soap_dup__ns1__GetVideoSourceModes(NULL, _ns1__GetVideoSourceModes *dst, _ns1__GetVideoSourceModes *src) (use soapcpp2 -Ed)
struct _ns1__GetVideoSourceModes
{
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceModesResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceModesResponse is a complexType.
///
/// @note struct _ns1__GetVideoSourceModesResponse operations:
/// - _ns1__GetVideoSourceModesResponse* soap_new__ns1__GetVideoSourceModesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetVideoSourceModesResponse(struct soap*, _ns1__GetVideoSourceModesResponse*) default initialize members
/// - int soap_read__ns1__GetVideoSourceModesResponse(struct soap*, _ns1__GetVideoSourceModesResponse*) deserialize from a source
/// - int soap_write__ns1__GetVideoSourceModesResponse(struct soap*, _ns1__GetVideoSourceModesResponse*) serialize to a sink
/// - _ns1__GetVideoSourceModesResponse* soap_dup__ns1__GetVideoSourceModesResponse(struct soap*, _ns1__GetVideoSourceModesResponse* dst, _ns1__GetVideoSourceModesResponse *src) returns deep copy of _ns1__GetVideoSourceModesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetVideoSourceModesResponse(_ns1__GetVideoSourceModesResponse*) deep deletes _ns1__GetVideoSourceModesResponse data members, use only on dst after soap_dup__ns1__GetVideoSourceModesResponse(NULL, _ns1__GetVideoSourceModesResponse *dst, _ns1__GetVideoSourceModesResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetVideoSourceModesResponse
{
/// <PRE><BLOCKQUOTE>
///   Return the information for specified video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct ns1__VideoSourceMode* is 1..unbounded.
  $ int                                  __sizeVideoSourceModes         1;
/// Array struct ns1__VideoSourceMode* of size 1..unbounded.
    struct ns1__VideoSourceMode*         VideoSourceModes               1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetVideoSourceMode
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetVideoSourceMode is a complexType.
///
/// @note struct _ns1__SetVideoSourceMode operations:
/// - _ns1__SetVideoSourceMode* soap_new__ns1__SetVideoSourceMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__SetVideoSourceMode(struct soap*, _ns1__SetVideoSourceMode*) default initialize members
/// - int soap_read__ns1__SetVideoSourceMode(struct soap*, _ns1__SetVideoSourceMode*) deserialize from a source
/// - int soap_write__ns1__SetVideoSourceMode(struct soap*, _ns1__SetVideoSourceMode*) serialize to a sink
/// - _ns1__SetVideoSourceMode* soap_dup__ns1__SetVideoSourceMode(struct soap*, _ns1__SetVideoSourceMode* dst, _ns1__SetVideoSourceMode *src) returns deep copy of _ns1__SetVideoSourceMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__SetVideoSourceMode(_ns1__SetVideoSourceMode*) deep deletes _ns1__SetVideoSourceMode data members, use only on dst after soap_dup__ns1__SetVideoSourceMode(NULL, _ns1__SetVideoSourceMode *dst, _ns1__SetVideoSourceMode *src) (use soapcpp2 -Ed)
struct _ns1__SetVideoSourceMode
{
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicate video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceModeToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceModeToken           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetVideoSourceModeResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetVideoSourceModeResponse is a complexType.
///
/// @note struct _ns1__SetVideoSourceModeResponse operations:
/// - _ns1__SetVideoSourceModeResponse* soap_new__ns1__SetVideoSourceModeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__SetVideoSourceModeResponse(struct soap*, _ns1__SetVideoSourceModeResponse*) default initialize members
/// - int soap_read__ns1__SetVideoSourceModeResponse(struct soap*, _ns1__SetVideoSourceModeResponse*) deserialize from a source
/// - int soap_write__ns1__SetVideoSourceModeResponse(struct soap*, _ns1__SetVideoSourceModeResponse*) serialize to a sink
/// - _ns1__SetVideoSourceModeResponse* soap_dup__ns1__SetVideoSourceModeResponse(struct soap*, _ns1__SetVideoSourceModeResponse* dst, _ns1__SetVideoSourceModeResponse *src) returns deep copy of _ns1__SetVideoSourceModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__SetVideoSourceModeResponse(_ns1__SetVideoSourceModeResponse*) deep deletes _ns1__SetVideoSourceModeResponse data members, use only on dst after soap_dup__ns1__SetVideoSourceModeResponse(NULL, _ns1__SetVideoSourceModeResponse *dst, _ns1__SetVideoSourceModeResponse *src) (use soapcpp2 -Ed)
struct _ns1__SetVideoSourceModeResponse
{
/// <PRE><BLOCKQUOTE>
///   The response contains information about rebooting after returning response. When Reboot is set true, a device will reboot automatically after setting mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reboot" of type xs:boolean.
    enum xsd__boolean                    Reboot                         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetOSDs
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetOSDs is a complexType.
///
/// @note struct _ns1__GetOSDs operations:
/// - _ns1__GetOSDs* soap_new__ns1__GetOSDs(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetOSDs(struct soap*, _ns1__GetOSDs*) default initialize members
/// - int soap_read__ns1__GetOSDs(struct soap*, _ns1__GetOSDs*) deserialize from a source
/// - int soap_write__ns1__GetOSDs(struct soap*, _ns1__GetOSDs*) serialize to a sink
/// - _ns1__GetOSDs* soap_dup__ns1__GetOSDs(struct soap*, _ns1__GetOSDs* dst, _ns1__GetOSDs *src) returns deep copy of _ns1__GetOSDs src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetOSDs(_ns1__GetOSDs*) deep deletes _ns1__GetOSDs data members, use only on dst after soap_dup__ns1__GetOSDs(NULL, _ns1__GetOSDs *dst, _ns1__GetOSDs *src) (use soapcpp2 -Ed)
struct _ns1__GetOSDs
{
/// <PRE><BLOCKQUOTE>
///   The GetOSDs command fetches the OSD configuration if the OSD token is known.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Token of the Video Source Configuration, which has OSDs associated with are requested. If token not exist, request all available OSDs.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetOSDsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetOSDsResponse is a complexType.
///
/// @note struct _ns1__GetOSDsResponse operations:
/// - _ns1__GetOSDsResponse* soap_new__ns1__GetOSDsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetOSDsResponse(struct soap*, _ns1__GetOSDsResponse*) default initialize members
/// - int soap_read__ns1__GetOSDsResponse(struct soap*, _ns1__GetOSDsResponse*) deserialize from a source
/// - int soap_write__ns1__GetOSDsResponse(struct soap*, _ns1__GetOSDsResponse*) serialize to a sink
/// - _ns1__GetOSDsResponse* soap_dup__ns1__GetOSDsResponse(struct soap*, _ns1__GetOSDsResponse* dst, _ns1__GetOSDsResponse *src) returns deep copy of _ns1__GetOSDsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetOSDsResponse(_ns1__GetOSDsResponse*) deep deletes _ns1__GetOSDsResponse data members, use only on dst after soap_dup__ns1__GetOSDsResponse(NULL, _ns1__GetOSDsResponse *dst, _ns1__GetOSDsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetOSDsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of requested OSDs.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__OSDConfiguration* is 0..unbounded.
  $ int                                  __sizeOSDs                     0;
/// Array struct tt__OSDConfiguration* of size 0..unbounded.
    struct tt__OSDConfiguration*         OSDs                           0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetOSD
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetOSD is a complexType.
///
/// @note struct _ns1__SetOSD operations:
/// - _ns1__SetOSD* soap_new__ns1__SetOSD(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__SetOSD(struct soap*, _ns1__SetOSD*) default initialize members
/// - int soap_read__ns1__SetOSD(struct soap*, _ns1__SetOSD*) deserialize from a source
/// - int soap_write__ns1__SetOSD(struct soap*, _ns1__SetOSD*) serialize to a sink
/// - _ns1__SetOSD* soap_dup__ns1__SetOSD(struct soap*, _ns1__SetOSD* dst, _ns1__SetOSD *src) returns deep copy of _ns1__SetOSD src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__SetOSD(_ns1__SetOSD*) deep deletes _ns1__SetOSD data members, use only on dst after soap_dup__ns1__SetOSD(NULL, _ns1__SetOSD *dst, _ns1__SetOSD *src) (use soapcpp2 -Ed)
struct _ns1__SetOSD
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified OSD configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSD" of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    struct tt__OSDConfiguration*         OSD                            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetOSDOptions
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetOSDOptions is a complexType.
///
/// @note struct _ns1__GetOSDOptions operations:
/// - _ns1__GetOSDOptions* soap_new__ns1__GetOSDOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetOSDOptions(struct soap*, _ns1__GetOSDOptions*) default initialize members
/// - int soap_read__ns1__GetOSDOptions(struct soap*, _ns1__GetOSDOptions*) deserialize from a source
/// - int soap_write__ns1__GetOSDOptions(struct soap*, _ns1__GetOSDOptions*) serialize to a sink
/// - _ns1__GetOSDOptions* soap_dup__ns1__GetOSDOptions(struct soap*, _ns1__GetOSDOptions* dst, _ns1__GetOSDOptions *src) returns deep copy of _ns1__GetOSDOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetOSDOptions(_ns1__GetOSDOptions*) deep deletes _ns1__GetOSDOptions data members, use only on dst after soap_dup__ns1__GetOSDOptions(NULL, _ns1__GetOSDOptions *dst, _ns1__GetOSDOptions *src) (use soapcpp2 -Ed)
struct _ns1__GetOSDOptions
{
/// <PRE><BLOCKQUOTE>
///   Video Source Configuration Token that specifies an existing video source configuration that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetOSDOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetOSDOptionsResponse is a complexType.
///
/// @note struct _ns1__GetOSDOptionsResponse operations:
/// - _ns1__GetOSDOptionsResponse* soap_new__ns1__GetOSDOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetOSDOptionsResponse(struct soap*, _ns1__GetOSDOptionsResponse*) default initialize members
/// - int soap_read__ns1__GetOSDOptionsResponse(struct soap*, _ns1__GetOSDOptionsResponse*) deserialize from a source
/// - int soap_write__ns1__GetOSDOptionsResponse(struct soap*, _ns1__GetOSDOptionsResponse*) serialize to a sink
/// - _ns1__GetOSDOptionsResponse* soap_dup__ns1__GetOSDOptionsResponse(struct soap*, _ns1__GetOSDOptionsResponse* dst, _ns1__GetOSDOptionsResponse *src) returns deep copy of _ns1__GetOSDOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetOSDOptionsResponse(_ns1__GetOSDOptionsResponse*) deep deletes _ns1__GetOSDOptionsResponse data members, use only on dst after soap_dup__ns1__GetOSDOptionsResponse(NULL, _ns1__GetOSDOptionsResponse *dst, _ns1__GetOSDOptionsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetOSDOptionsResponse
{

/// </BLOCKQUOTE></PRE>
///
/// Element "OSDOptions" of type "http://www.onvif.org/ver10/schema":OSDConfigurationOptions.
    struct tt__OSDConfigurationOptions*  OSDOptions                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":CreateOSD
/// @brief "http://www.onvif.org/ver20/media/wsdl":CreateOSD is a complexType.
///
/// @note struct _ns1__CreateOSD operations:
/// - _ns1__CreateOSD* soap_new__ns1__CreateOSD(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__CreateOSD(struct soap*, _ns1__CreateOSD*) default initialize members
/// - int soap_read__ns1__CreateOSD(struct soap*, _ns1__CreateOSD*) deserialize from a source
/// - int soap_write__ns1__CreateOSD(struct soap*, _ns1__CreateOSD*) serialize to a sink
/// - _ns1__CreateOSD* soap_dup__ns1__CreateOSD(struct soap*, _ns1__CreateOSD* dst, _ns1__CreateOSD *src) returns deep copy of _ns1__CreateOSD src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__CreateOSD(_ns1__CreateOSD*) deep deletes _ns1__CreateOSD data members, use only on dst after soap_dup__ns1__CreateOSD(NULL, _ns1__CreateOSD *dst, _ns1__CreateOSD *src) (use soapcpp2 -Ed)
struct _ns1__CreateOSD
{
/// <PRE><BLOCKQUOTE>
///   Contain the initial OSD configuration for create.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSD" of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    struct tt__OSDConfiguration*         OSD                            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":CreateOSDResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":CreateOSDResponse is a complexType.
///
/// @note struct _ns1__CreateOSDResponse operations:
/// - _ns1__CreateOSDResponse* soap_new__ns1__CreateOSDResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__CreateOSDResponse(struct soap*, _ns1__CreateOSDResponse*) default initialize members
/// - int soap_read__ns1__CreateOSDResponse(struct soap*, _ns1__CreateOSDResponse*) deserialize from a source
/// - int soap_write__ns1__CreateOSDResponse(struct soap*, _ns1__CreateOSDResponse*) serialize to a sink
/// - _ns1__CreateOSDResponse* soap_dup__ns1__CreateOSDResponse(struct soap*, _ns1__CreateOSDResponse* dst, _ns1__CreateOSDResponse *src) returns deep copy of _ns1__CreateOSDResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__CreateOSDResponse(_ns1__CreateOSDResponse*) deep deletes _ns1__CreateOSDResponse data members, use only on dst after soap_dup__ns1__CreateOSDResponse(NULL, _ns1__CreateOSDResponse *dst, _ns1__CreateOSDResponse *src) (use soapcpp2 -Ed)
struct _ns1__CreateOSDResponse
{
/// <PRE><BLOCKQUOTE>
///   Returns Token of the newly created OSD
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":DeleteOSD
/// @brief "http://www.onvif.org/ver20/media/wsdl":DeleteOSD is a complexType.
///
/// @note struct _ns1__DeleteOSD operations:
/// - _ns1__DeleteOSD* soap_new__ns1__DeleteOSD(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__DeleteOSD(struct soap*, _ns1__DeleteOSD*) default initialize members
/// - int soap_read__ns1__DeleteOSD(struct soap*, _ns1__DeleteOSD*) deserialize from a source
/// - int soap_write__ns1__DeleteOSD(struct soap*, _ns1__DeleteOSD*) serialize to a sink
/// - _ns1__DeleteOSD* soap_dup__ns1__DeleteOSD(struct soap*, _ns1__DeleteOSD* dst, _ns1__DeleteOSD *src) returns deep copy of _ns1__DeleteOSD src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__DeleteOSD(_ns1__DeleteOSD*) deep deletes _ns1__DeleteOSD data members, use only on dst after soap_dup__ns1__DeleteOSD(NULL, _ns1__DeleteOSD *dst, _ns1__DeleteOSD *src) (use soapcpp2 -Ed)
struct _ns1__DeleteOSD
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the OSD configuration that should be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetMasks
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetMasks is a complexType.
///
/// @note struct _ns1__GetMasks operations:
/// - _ns1__GetMasks* soap_new__ns1__GetMasks(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetMasks(struct soap*, _ns1__GetMasks*) default initialize members
/// - int soap_read__ns1__GetMasks(struct soap*, _ns1__GetMasks*) deserialize from a source
/// - int soap_write__ns1__GetMasks(struct soap*, _ns1__GetMasks*) serialize to a sink
/// - _ns1__GetMasks* soap_dup__ns1__GetMasks(struct soap*, _ns1__GetMasks* dst, _ns1__GetMasks *src) returns deep copy of _ns1__GetMasks src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetMasks(_ns1__GetMasks*) deep deletes _ns1__GetMasks data members, use only on dst after soap_dup__ns1__GetMasks(NULL, _ns1__GetMasks *dst, _ns1__GetMasks *src) (use soapcpp2 -Ed)
struct _ns1__GetMasks
{
/// <PRE><BLOCKQUOTE>
///   Optional mask token of an existing mask.
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional token of a Video Source Configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetMasksResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetMasksResponse is a complexType.
///
/// @note struct _ns1__GetMasksResponse operations:
/// - _ns1__GetMasksResponse* soap_new__ns1__GetMasksResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetMasksResponse(struct soap*, _ns1__GetMasksResponse*) default initialize members
/// - int soap_read__ns1__GetMasksResponse(struct soap*, _ns1__GetMasksResponse*) deserialize from a source
/// - int soap_write__ns1__GetMasksResponse(struct soap*, _ns1__GetMasksResponse*) serialize to a sink
/// - _ns1__GetMasksResponse* soap_dup__ns1__GetMasksResponse(struct soap*, _ns1__GetMasksResponse* dst, _ns1__GetMasksResponse *src) returns deep copy of _ns1__GetMasksResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetMasksResponse(_ns1__GetMasksResponse*) deep deletes _ns1__GetMasksResponse data members, use only on dst after soap_dup__ns1__GetMasksResponse(NULL, _ns1__GetMasksResponse *dst, _ns1__GetMasksResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetMasksResponse
{
/// <PRE><BLOCKQUOTE>
///   List of Mask configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct ns1__Mask* is 0..unbounded.
  $ int                                  __sizeMasks                    0;
/// Array struct ns1__Mask* of size 0..unbounded.
    struct ns1__Mask*                    Masks                          0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetMask
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetMask is a complexType.
///
/// @note struct _ns1__SetMask operations:
/// - _ns1__SetMask* soap_new__ns1__SetMask(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__SetMask(struct soap*, _ns1__SetMask*) default initialize members
/// - int soap_read__ns1__SetMask(struct soap*, _ns1__SetMask*) deserialize from a source
/// - int soap_write__ns1__SetMask(struct soap*, _ns1__SetMask*) serialize to a sink
/// - _ns1__SetMask* soap_dup__ns1__SetMask(struct soap*, _ns1__SetMask* dst, _ns1__SetMask *src) returns deep copy of _ns1__SetMask src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__SetMask(_ns1__SetMask*) deep deletes _ns1__SetMask data members, use only on dst after soap_dup__ns1__SetMask(NULL, _ns1__SetMask *dst, _ns1__SetMask *src) (use soapcpp2 -Ed)
struct _ns1__SetMask
{
/// <PRE><BLOCKQUOTE>
///   Mask to be updated.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mask" of type "http://www.onvif.org/ver20/media/wsdl":Mask.
    struct ns1__Mask*                    Mask                           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetMaskOptions
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetMaskOptions is a complexType.
///
/// @note struct _ns1__GetMaskOptions operations:
/// - _ns1__GetMaskOptions* soap_new__ns1__GetMaskOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetMaskOptions(struct soap*, _ns1__GetMaskOptions*) default initialize members
/// - int soap_read__ns1__GetMaskOptions(struct soap*, _ns1__GetMaskOptions*) deserialize from a source
/// - int soap_write__ns1__GetMaskOptions(struct soap*, _ns1__GetMaskOptions*) serialize to a sink
/// - _ns1__GetMaskOptions* soap_dup__ns1__GetMaskOptions(struct soap*, _ns1__GetMaskOptions* dst, _ns1__GetMaskOptions *src) returns deep copy of _ns1__GetMaskOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetMaskOptions(_ns1__GetMaskOptions*) deep deletes _ns1__GetMaskOptions data members, use only on dst after soap_dup__ns1__GetMaskOptions(NULL, _ns1__GetMaskOptions *dst, _ns1__GetMaskOptions *src) (use soapcpp2 -Ed)
struct _ns1__GetMaskOptions
{
/// <PRE><BLOCKQUOTE>
///   Video Source Configuration Token that specifies an existing video source configuration that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetMaskOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetMaskOptionsResponse is a complexType.
///
/// @note struct _ns1__GetMaskOptionsResponse operations:
/// - _ns1__GetMaskOptionsResponse* soap_new__ns1__GetMaskOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__GetMaskOptionsResponse(struct soap*, _ns1__GetMaskOptionsResponse*) default initialize members
/// - int soap_read__ns1__GetMaskOptionsResponse(struct soap*, _ns1__GetMaskOptionsResponse*) deserialize from a source
/// - int soap_write__ns1__GetMaskOptionsResponse(struct soap*, _ns1__GetMaskOptionsResponse*) serialize to a sink
/// - _ns1__GetMaskOptionsResponse* soap_dup__ns1__GetMaskOptionsResponse(struct soap*, _ns1__GetMaskOptionsResponse* dst, _ns1__GetMaskOptionsResponse *src) returns deep copy of _ns1__GetMaskOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__GetMaskOptionsResponse(_ns1__GetMaskOptionsResponse*) deep deletes _ns1__GetMaskOptionsResponse data members, use only on dst after soap_dup__ns1__GetMaskOptionsResponse(NULL, _ns1__GetMaskOptionsResponse *dst, _ns1__GetMaskOptionsResponse *src) (use soapcpp2 -Ed)
struct _ns1__GetMaskOptionsResponse
{

/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver20/media/wsdl":MaskOptions.
    struct ns1__MaskOptions*             Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":CreateMask
/// @brief "http://www.onvif.org/ver20/media/wsdl":CreateMask is a complexType.
///
/// @note struct _ns1__CreateMask operations:
/// - _ns1__CreateMask* soap_new__ns1__CreateMask(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__CreateMask(struct soap*, _ns1__CreateMask*) default initialize members
/// - int soap_read__ns1__CreateMask(struct soap*, _ns1__CreateMask*) deserialize from a source
/// - int soap_write__ns1__CreateMask(struct soap*, _ns1__CreateMask*) serialize to a sink
/// - _ns1__CreateMask* soap_dup__ns1__CreateMask(struct soap*, _ns1__CreateMask* dst, _ns1__CreateMask *src) returns deep copy of _ns1__CreateMask src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__CreateMask(_ns1__CreateMask*) deep deletes _ns1__CreateMask data members, use only on dst after soap_dup__ns1__CreateMask(NULL, _ns1__CreateMask *dst, _ns1__CreateMask *src) (use soapcpp2 -Ed)
struct _ns1__CreateMask
{
/// <PRE><BLOCKQUOTE>
///   Contain the initial mask configuration for create.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mask" of type "http://www.onvif.org/ver20/media/wsdl":Mask.
    struct ns1__Mask*                    Mask                           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":CreateMaskResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":CreateMaskResponse is a complexType.
///
/// @note struct _ns1__CreateMaskResponse operations:
/// - _ns1__CreateMaskResponse* soap_new__ns1__CreateMaskResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__CreateMaskResponse(struct soap*, _ns1__CreateMaskResponse*) default initialize members
/// - int soap_read__ns1__CreateMaskResponse(struct soap*, _ns1__CreateMaskResponse*) deserialize from a source
/// - int soap_write__ns1__CreateMaskResponse(struct soap*, _ns1__CreateMaskResponse*) serialize to a sink
/// - _ns1__CreateMaskResponse* soap_dup__ns1__CreateMaskResponse(struct soap*, _ns1__CreateMaskResponse* dst, _ns1__CreateMaskResponse *src) returns deep copy of _ns1__CreateMaskResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__CreateMaskResponse(_ns1__CreateMaskResponse*) deep deletes _ns1__CreateMaskResponse data members, use only on dst after soap_dup__ns1__CreateMaskResponse(NULL, _ns1__CreateMaskResponse *dst, _ns1__CreateMaskResponse *src) (use soapcpp2 -Ed)
struct _ns1__CreateMaskResponse
{
/// <PRE><BLOCKQUOTE>
///   Returns Token of the newly created Mask
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":DeleteMask
/// @brief "http://www.onvif.org/ver20/media/wsdl":DeleteMask is a complexType.
///
/// @note struct _ns1__DeleteMask operations:
/// - _ns1__DeleteMask* soap_new__ns1__DeleteMask(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__ns1__DeleteMask(struct soap*, _ns1__DeleteMask*) default initialize members
/// - int soap_read__ns1__DeleteMask(struct soap*, _ns1__DeleteMask*) deserialize from a source
/// - int soap_write__ns1__DeleteMask(struct soap*, _ns1__DeleteMask*) serialize to a sink
/// - _ns1__DeleteMask* soap_dup__ns1__DeleteMask(struct soap*, _ns1__DeleteMask* dst, _ns1__DeleteMask *src) returns deep copy of _ns1__DeleteMask src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__ns1__DeleteMask(_ns1__DeleteMask*) deep deletes _ns1__DeleteMask data members, use only on dst after soap_dup__ns1__DeleteMask(NULL, _ns1__DeleteMask *dst, _ns1__DeleteMask *src) (use soapcpp2 -Ed)
struct _ns1__DeleteMask
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the Mask configuration that should be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/ptz/wsdl":Capabilities is a complexType.
///
/// @note struct tptz__Capabilities operations:
/// - tptz__Capabilities* soap_new_tptz__Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tptz__Capabilities(struct soap*, tptz__Capabilities*) default initialize members
/// - int soap_read_tptz__Capabilities(struct soap*, tptz__Capabilities*) deserialize from a source
/// - int soap_write_tptz__Capabilities(struct soap*, tptz__Capabilities*) serialize to a sink
/// - tptz__Capabilities* soap_dup_tptz__Capabilities(struct soap*, tptz__Capabilities* dst, tptz__Capabilities *src) returns deep copy of tptz__Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tptz__Capabilities(tptz__Capabilities*) deep deletes tptz__Capabilities data members, use only on dst after soap_dup_tptz__Capabilities(NULL, tptz__Capabilities *dst, tptz__Capabilities *src) (use soapcpp2 -Ed)
struct tptz__Capabilities
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not EFlip is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "EFlip" of type xs:boolean.
  @ enum xsd__boolean*                   EFlip                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not reversing of PT control direction is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Reverse" of type xs:boolean.
  @ enum xsd__boolean*                   Reverse                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for the GetCompatibleConfigurations command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GetCompatibleConfigurations" of type xs:boolean.
  @ enum xsd__boolean*                   GetCompatibleConfigurations    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the PTZStatus includes MoveStatus information.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MoveStatus" of type xs:boolean.
  @ enum xsd__boolean*                   MoveStatus                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the PTZStatus includes Position information.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StatusPosition" of type xs:boolean.
  @ enum xsd__boolean*                   StatusPosition                 0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities is a complexType.
///
/// @note struct _tptz__GetServiceCapabilities operations:
/// - _tptz__GetServiceCapabilities* soap_new__tptz__GetServiceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities*) default initialize members
/// - int soap_read__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities*) deserialize from a source
/// - int soap_write__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities*) serialize to a sink
/// - _tptz__GetServiceCapabilities* soap_dup__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities* dst, _tptz__GetServiceCapabilities *src) returns deep copy of _tptz__GetServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetServiceCapabilities(_tptz__GetServiceCapabilities*) deep deletes _tptz__GetServiceCapabilities data members, use only on dst after soap_dup__tptz__GetServiceCapabilities(NULL, _tptz__GetServiceCapabilities *dst, _tptz__GetServiceCapabilities *src) (use soapcpp2 -Ed)
struct _tptz__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note struct _tptz__GetServiceCapabilitiesResponse operations:
/// - _tptz__GetServiceCapabilitiesResponse* soap_new__tptz__GetServiceCapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse*) default initialize members
/// - int soap_read__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse*) deserialize from a source
/// - int soap_write__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse*) serialize to a sink
/// - _tptz__GetServiceCapabilitiesResponse* soap_dup__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse* dst, _tptz__GetServiceCapabilitiesResponse *src) returns deep copy of _tptz__GetServiceCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetServiceCapabilitiesResponse(_tptz__GetServiceCapabilitiesResponse*) deep deletes _tptz__GetServiceCapabilitiesResponse data members, use only on dst after soap_dup__tptz__GetServiceCapabilitiesResponse(NULL, _tptz__GetServiceCapabilitiesResponse *dst, _tptz__GetServiceCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _tptz__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the PTZ service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
    struct tptz__Capabilities*           Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodes
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodes is a complexType.
///
/// @note struct _tptz__GetNodes operations:
/// - _tptz__GetNodes* soap_new__tptz__GetNodes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetNodes(struct soap*, _tptz__GetNodes*) default initialize members
/// - int soap_read__tptz__GetNodes(struct soap*, _tptz__GetNodes*) deserialize from a source
/// - int soap_write__tptz__GetNodes(struct soap*, _tptz__GetNodes*) serialize to a sink
/// - _tptz__GetNodes* soap_dup__tptz__GetNodes(struct soap*, _tptz__GetNodes* dst, _tptz__GetNodes *src) returns deep copy of _tptz__GetNodes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetNodes(_tptz__GetNodes*) deep deletes _tptz__GetNodes data members, use only on dst after soap_dup__tptz__GetNodes(NULL, _tptz__GetNodes *dst, _tptz__GetNodes *src) (use soapcpp2 -Ed)
struct _tptz__GetNodes
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse is a complexType.
///
/// @note struct _tptz__GetNodesResponse operations:
/// - _tptz__GetNodesResponse* soap_new__tptz__GetNodesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse*) default initialize members
/// - int soap_read__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse*) deserialize from a source
/// - int soap_write__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse*) serialize to a sink
/// - _tptz__GetNodesResponse* soap_dup__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse* dst, _tptz__GetNodesResponse *src) returns deep copy of _tptz__GetNodesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetNodesResponse(_tptz__GetNodesResponse*) deep deletes _tptz__GetNodesResponse data members, use only on dst after soap_dup__tptz__GetNodesResponse(NULL, _tptz__GetNodesResponse *dst, _tptz__GetNodesResponse *src) (use soapcpp2 -Ed)
struct _tptz__GetNodesResponse
{
/// <PRE><BLOCKQUOTE>
///   A list of the existing PTZ Nodes on the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PTZNode* is 0..unbounded.
  $ int                                  __sizePTZNode                  0;
/// Array struct tt__PTZNode* of size 0..unbounded.
    struct tt__PTZNode*                  PTZNode                        0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNode
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNode is a complexType.
///
/// @note struct _tptz__GetNode operations:
/// - _tptz__GetNode* soap_new__tptz__GetNode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetNode(struct soap*, _tptz__GetNode*) default initialize members
/// - int soap_read__tptz__GetNode(struct soap*, _tptz__GetNode*) deserialize from a source
/// - int soap_write__tptz__GetNode(struct soap*, _tptz__GetNode*) serialize to a sink
/// - _tptz__GetNode* soap_dup__tptz__GetNode(struct soap*, _tptz__GetNode* dst, _tptz__GetNode *src) returns deep copy of _tptz__GetNode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetNode(_tptz__GetNode*) deep deletes _tptz__GetNode data members, use only on dst after soap_dup__tptz__GetNode(NULL, _tptz__GetNode *dst, _tptz__GetNode *src) (use soapcpp2 -Ed)
struct _tptz__GetNode
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested PTZNode.
/// </BLOCKQUOTE></PRE>
///
/// Element "NodeToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse is a complexType.
///
/// @note struct _tptz__GetNodeResponse operations:
/// - _tptz__GetNodeResponse* soap_new__tptz__GetNodeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse*) default initialize members
/// - int soap_read__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse*) deserialize from a source
/// - int soap_write__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse*) serialize to a sink
/// - _tptz__GetNodeResponse* soap_dup__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse* dst, _tptz__GetNodeResponse *src) returns deep copy of _tptz__GetNodeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetNodeResponse(_tptz__GetNodeResponse*) deep deletes _tptz__GetNodeResponse data members, use only on dst after soap_dup__tptz__GetNodeResponse(NULL, _tptz__GetNodeResponse *dst, _tptz__GetNodeResponse *src) (use soapcpp2 -Ed)
struct _tptz__GetNodeResponse
{
/// <PRE><BLOCKQUOTE>
///   A requested PTZNode.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZNode" of type "http://www.onvif.org/ver10/schema":PTZNode.
    struct tt__PTZNode*                  PTZNode                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations is a complexType.
///
/// @note struct _tptz__GetConfigurations operations:
/// - _tptz__GetConfigurations* soap_new__tptz__GetConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations*) default initialize members
/// - int soap_read__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations*) deserialize from a source
/// - int soap_write__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations*) serialize to a sink
/// - _tptz__GetConfigurations* soap_dup__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations* dst, _tptz__GetConfigurations *src) returns deep copy of _tptz__GetConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetConfigurations(_tptz__GetConfigurations*) deep deletes _tptz__GetConfigurations data members, use only on dst after soap_dup__tptz__GetConfigurations(NULL, _tptz__GetConfigurations *dst, _tptz__GetConfigurations *src) (use soapcpp2 -Ed)
struct _tptz__GetConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse is a complexType.
///
/// @note struct _tptz__GetConfigurationsResponse operations:
/// - _tptz__GetConfigurationsResponse* soap_new__tptz__GetConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse*) default initialize members
/// - int soap_read__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse*) deserialize from a source
/// - int soap_write__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse*) serialize to a sink
/// - _tptz__GetConfigurationsResponse* soap_dup__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse* dst, _tptz__GetConfigurationsResponse *src) returns deep copy of _tptz__GetConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetConfigurationsResponse(_tptz__GetConfigurationsResponse*) deep deletes _tptz__GetConfigurationsResponse data members, use only on dst after soap_dup__tptz__GetConfigurationsResponse(NULL, _tptz__GetConfigurationsResponse *dst, _tptz__GetConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tptz__GetConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   A list of all existing PTZConfigurations on the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PTZConfiguration* is 0..unbounded.
  $ int                                  __sizePTZConfiguration         0;
/// Array struct tt__PTZConfiguration* of size 0..unbounded.
    struct tt__PTZConfiguration*         PTZConfiguration               0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration is a complexType.
///
/// @note struct _tptz__GetConfiguration operations:
/// - _tptz__GetConfiguration* soap_new__tptz__GetConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration*) default initialize members
/// - int soap_read__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration*) deserialize from a source
/// - int soap_write__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration*) serialize to a sink
/// - _tptz__GetConfiguration* soap_dup__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration* dst, _tptz__GetConfiguration *src) returns deep copy of _tptz__GetConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetConfiguration(_tptz__GetConfiguration*) deep deletes _tptz__GetConfiguration data members, use only on dst after soap_dup__tptz__GetConfiguration(NULL, _tptz__GetConfiguration *dst, _tptz__GetConfiguration *src) (use soapcpp2 -Ed)
struct _tptz__GetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested PTZConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PTZConfigurationToken          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse is a complexType.
///
/// @note struct _tptz__GetConfigurationResponse operations:
/// - _tptz__GetConfigurationResponse* soap_new__tptz__GetConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse*) default initialize members
/// - int soap_read__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse*) deserialize from a source
/// - int soap_write__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse*) serialize to a sink
/// - _tptz__GetConfigurationResponse* soap_dup__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse* dst, _tptz__GetConfigurationResponse *src) returns deep copy of _tptz__GetConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetConfigurationResponse(_tptz__GetConfigurationResponse*) deep deletes _tptz__GetConfigurationResponse data members, use only on dst after soap_dup__tptz__GetConfigurationResponse(NULL, _tptz__GetConfigurationResponse *dst, _tptz__GetConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tptz__GetConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   A requested PTZConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfiguration" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    struct tt__PTZConfiguration*         PTZConfiguration               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration is a complexType.
///
/// @note struct _tptz__SetConfiguration operations:
/// - _tptz__SetConfiguration* soap_new__tptz__SetConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration*) default initialize members
/// - int soap_read__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration*) deserialize from a source
/// - int soap_write__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration*) serialize to a sink
/// - _tptz__SetConfiguration* soap_dup__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration* dst, _tptz__SetConfiguration *src) returns deep copy of _tptz__SetConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__SetConfiguration(_tptz__SetConfiguration*) deep deletes _tptz__SetConfiguration data members, use only on dst after soap_dup__tptz__SetConfiguration(NULL, _tptz__SetConfiguration *dst, _tptz__SetConfiguration *src) (use soapcpp2 -Ed)
struct _tptz__SetConfiguration
{

/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfiguration" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    struct tt__PTZConfiguration*         PTZConfiguration               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Flag that makes configuration persistent. Example: User wants the configuration to exist after reboot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse is a complexType.
///
/// @note struct _tptz__SetConfigurationResponse operations:
/// - _tptz__SetConfigurationResponse* soap_new__tptz__SetConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse*) default initialize members
/// - int soap_read__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse*) deserialize from a source
/// - int soap_write__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse*) serialize to a sink
/// - _tptz__SetConfigurationResponse* soap_dup__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse* dst, _tptz__SetConfigurationResponse *src) returns deep copy of _tptz__SetConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__SetConfigurationResponse(_tptz__SetConfigurationResponse*) deep deletes _tptz__SetConfigurationResponse data members, use only on dst after soap_dup__tptz__SetConfigurationResponse(NULL, _tptz__SetConfigurationResponse *dst, _tptz__SetConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tptz__SetConfigurationResponse
{
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    struct __tptz__SetConfigurationResponse_sequence
    {
    }                                   *__SetConfigurationResponse_sequence 0;
//  END OF SEQUENCE
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions is a complexType.
///
/// @note struct _tptz__GetConfigurationOptions operations:
/// - _tptz__GetConfigurationOptions* soap_new__tptz__GetConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions*) default initialize members
/// - int soap_read__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions*) deserialize from a source
/// - int soap_write__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions*) serialize to a sink
/// - _tptz__GetConfigurationOptions* soap_dup__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions* dst, _tptz__GetConfigurationOptions *src) returns deep copy of _tptz__GetConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetConfigurationOptions(_tptz__GetConfigurationOptions*) deep deletes _tptz__GetConfigurationOptions data members, use only on dst after soap_dup__tptz__GetConfigurationOptions(NULL, _tptz__GetConfigurationOptions *dst, _tptz__GetConfigurationOptions *src) (use soapcpp2 -Ed)
struct _tptz__GetConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Token of an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse is a complexType.
///
/// @note struct _tptz__GetConfigurationOptionsResponse operations:
/// - _tptz__GetConfigurationOptionsResponse* soap_new__tptz__GetConfigurationOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse*) default initialize members
/// - int soap_read__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse*) serialize to a sink
/// - _tptz__GetConfigurationOptionsResponse* soap_dup__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse* dst, _tptz__GetConfigurationOptionsResponse *src) returns deep copy of _tptz__GetConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetConfigurationOptionsResponse(_tptz__GetConfigurationOptionsResponse*) deep deletes _tptz__GetConfigurationOptionsResponse data members, use only on dst after soap_dup__tptz__GetConfigurationOptionsResponse(NULL, _tptz__GetConfigurationOptionsResponse *dst, _tptz__GetConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _tptz__GetConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested PTZ configuration options.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfigurationOptions" of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions.
    struct tt__PTZConfigurationOptions*  PTZConfigurationOptions        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand is a complexType.
///
/// @note struct _tptz__SendAuxiliaryCommand operations:
/// - _tptz__SendAuxiliaryCommand* soap_new__tptz__SendAuxiliaryCommand(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand*) default initialize members
/// - int soap_read__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand*) deserialize from a source
/// - int soap_write__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand*) serialize to a sink
/// - _tptz__SendAuxiliaryCommand* soap_dup__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand* dst, _tptz__SendAuxiliaryCommand *src) returns deep copy of _tptz__SendAuxiliaryCommand src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__SendAuxiliaryCommand(_tptz__SendAuxiliaryCommand*) deep deletes _tptz__SendAuxiliaryCommand data members, use only on dst after soap_dup__tptz__SendAuxiliaryCommand(NULL, _tptz__SendAuxiliaryCommand *dst, _tptz__SendAuxiliaryCommand *src) (use soapcpp2 -Ed)
struct _tptz__SendAuxiliaryCommand
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The Auxiliary request data.
/// </BLOCKQUOTE></PRE>
///
/// Element "AuxiliaryData" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryData                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
/// @note struct _tptz__SendAuxiliaryCommandResponse operations:
/// - _tptz__SendAuxiliaryCommandResponse* soap_new__tptz__SendAuxiliaryCommandResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse*) default initialize members
/// - int soap_read__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse*) deserialize from a source
/// - int soap_write__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse*) serialize to a sink
/// - _tptz__SendAuxiliaryCommandResponse* soap_dup__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse* dst, _tptz__SendAuxiliaryCommandResponse *src) returns deep copy of _tptz__SendAuxiliaryCommandResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__SendAuxiliaryCommandResponse(_tptz__SendAuxiliaryCommandResponse*) deep deletes _tptz__SendAuxiliaryCommandResponse data members, use only on dst after soap_dup__tptz__SendAuxiliaryCommandResponse(NULL, _tptz__SendAuxiliaryCommandResponse *dst, _tptz__SendAuxiliaryCommandResponse *src) (use soapcpp2 -Ed)
struct _tptz__SendAuxiliaryCommandResponse
{
/// <PRE><BLOCKQUOTE>
///   The response contains the auxiliary response.
/// </BLOCKQUOTE></PRE>
///
/// Element "AuxiliaryResponse" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryResponse              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresets
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresets is a complexType.
///
/// @note struct _tptz__GetPresets operations:
/// - _tptz__GetPresets* soap_new__tptz__GetPresets(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetPresets(struct soap*, _tptz__GetPresets*) default initialize members
/// - int soap_read__tptz__GetPresets(struct soap*, _tptz__GetPresets*) deserialize from a source
/// - int soap_write__tptz__GetPresets(struct soap*, _tptz__GetPresets*) serialize to a sink
/// - _tptz__GetPresets* soap_dup__tptz__GetPresets(struct soap*, _tptz__GetPresets* dst, _tptz__GetPresets *src) returns deep copy of _tptz__GetPresets src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetPresets(_tptz__GetPresets*) deep deletes _tptz__GetPresets data members, use only on dst after soap_dup__tptz__GetPresets(NULL, _tptz__GetPresets *dst, _tptz__GetPresets *src) (use soapcpp2 -Ed)
struct _tptz__GetPresets
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse is a complexType.
///
/// @note struct _tptz__GetPresetsResponse operations:
/// - _tptz__GetPresetsResponse* soap_new__tptz__GetPresetsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse*) default initialize members
/// - int soap_read__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse*) deserialize from a source
/// - int soap_write__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse*) serialize to a sink
/// - _tptz__GetPresetsResponse* soap_dup__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse* dst, _tptz__GetPresetsResponse *src) returns deep copy of _tptz__GetPresetsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetPresetsResponse(_tptz__GetPresetsResponse*) deep deletes _tptz__GetPresetsResponse data members, use only on dst after soap_dup__tptz__GetPresetsResponse(NULL, _tptz__GetPresetsResponse *dst, _tptz__GetPresetsResponse *src) (use soapcpp2 -Ed)
struct _tptz__GetPresetsResponse
{
/// <PRE><BLOCKQUOTE>
///   A list of presets which are available for the requested MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PTZPreset* is 0..unbounded.
  $ int                                  __sizePreset                   0;
/// Array struct tt__PTZPreset* of size 0..unbounded.
    struct tt__PTZPreset*                Preset                         0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetPreset is a complexType.
///
/// @note struct _tptz__SetPreset operations:
/// - _tptz__SetPreset* soap_new__tptz__SetPreset(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__SetPreset(struct soap*, _tptz__SetPreset*) default initialize members
/// - int soap_read__tptz__SetPreset(struct soap*, _tptz__SetPreset*) deserialize from a source
/// - int soap_write__tptz__SetPreset(struct soap*, _tptz__SetPreset*) serialize to a sink
/// - _tptz__SetPreset* soap_dup__tptz__SetPreset(struct soap*, _tptz__SetPreset* dst, _tptz__SetPreset *src) returns deep copy of _tptz__SetPreset src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__SetPreset(_tptz__SetPreset*) deep deletes _tptz__SetPreset data members, use only on dst after soap_dup__tptz__SetPreset(NULL, _tptz__SetPreset *dst, _tptz__SetPreset *src) (use soapcpp2 -Ed)
struct _tptz__SetPreset
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset name.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetName" of type xs:string.
    char*                                PresetName                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse is a complexType.
///
/// @note struct _tptz__SetPresetResponse operations:
/// - _tptz__SetPresetResponse* soap_new__tptz__SetPresetResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse*) default initialize members
/// - int soap_read__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse*) deserialize from a source
/// - int soap_write__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse*) serialize to a sink
/// - _tptz__SetPresetResponse* soap_dup__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse* dst, _tptz__SetPresetResponse *src) returns deep copy of _tptz__SetPresetResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__SetPresetResponse(_tptz__SetPresetResponse*) deep deletes _tptz__SetPresetResponse data members, use only on dst after soap_dup__tptz__SetPresetResponse(NULL, _tptz__SetPresetResponse *dst, _tptz__SetPresetResponse *src) (use soapcpp2 -Ed)
struct _tptz__SetPresetResponse
{
/// <PRE><BLOCKQUOTE>
///   A token to the Preset which has been set.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset is a complexType.
///
/// @note struct _tptz__RemovePreset operations:
/// - _tptz__RemovePreset* soap_new__tptz__RemovePreset(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__RemovePreset(struct soap*, _tptz__RemovePreset*) default initialize members
/// - int soap_read__tptz__RemovePreset(struct soap*, _tptz__RemovePreset*) deserialize from a source
/// - int soap_write__tptz__RemovePreset(struct soap*, _tptz__RemovePreset*) serialize to a sink
/// - _tptz__RemovePreset* soap_dup__tptz__RemovePreset(struct soap*, _tptz__RemovePreset* dst, _tptz__RemovePreset *src) returns deep copy of _tptz__RemovePreset src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__RemovePreset(_tptz__RemovePreset*) deep deletes _tptz__RemovePreset data members, use only on dst after soap_dup__tptz__RemovePreset(NULL, _tptz__RemovePreset *dst, _tptz__RemovePreset *src) (use soapcpp2 -Ed)
struct _tptz__RemovePreset
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse is a complexType.
///
/// @note struct _tptz__RemovePresetResponse operations:
/// - _tptz__RemovePresetResponse* soap_new__tptz__RemovePresetResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse*) default initialize members
/// - int soap_read__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse*) deserialize from a source
/// - int soap_write__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse*) serialize to a sink
/// - _tptz__RemovePresetResponse* soap_dup__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse* dst, _tptz__RemovePresetResponse *src) returns deep copy of _tptz__RemovePresetResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__RemovePresetResponse(_tptz__RemovePresetResponse*) deep deletes _tptz__RemovePresetResponse data members, use only on dst after soap_dup__tptz__RemovePresetResponse(NULL, _tptz__RemovePresetResponse *dst, _tptz__RemovePresetResponse *src) (use soapcpp2 -Ed)
struct _tptz__RemovePresetResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset is a complexType.
///
/// @note struct _tptz__GotoPreset operations:
/// - _tptz__GotoPreset* soap_new__tptz__GotoPreset(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GotoPreset(struct soap*, _tptz__GotoPreset*) default initialize members
/// - int soap_read__tptz__GotoPreset(struct soap*, _tptz__GotoPreset*) deserialize from a source
/// - int soap_write__tptz__GotoPreset(struct soap*, _tptz__GotoPreset*) serialize to a sink
/// - _tptz__GotoPreset* soap_dup__tptz__GotoPreset(struct soap*, _tptz__GotoPreset* dst, _tptz__GotoPreset *src) returns deep copy of _tptz__GotoPreset src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GotoPreset(_tptz__GotoPreset*) deep deletes _tptz__GotoPreset data members, use only on dst after soap_dup__tptz__GotoPreset(NULL, _tptz__GotoPreset *dst, _tptz__GotoPreset *src) (use soapcpp2 -Ed)
struct _tptz__GotoPreset
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Speed                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse is a complexType.
///
/// @note struct _tptz__GotoPresetResponse operations:
/// - _tptz__GotoPresetResponse* soap_new__tptz__GotoPresetResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse*) default initialize members
/// - int soap_read__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse*) deserialize from a source
/// - int soap_write__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse*) serialize to a sink
/// - _tptz__GotoPresetResponse* soap_dup__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse* dst, _tptz__GotoPresetResponse *src) returns deep copy of _tptz__GotoPresetResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GotoPresetResponse(_tptz__GotoPresetResponse*) deep deletes _tptz__GotoPresetResponse data members, use only on dst after soap_dup__tptz__GotoPresetResponse(NULL, _tptz__GotoPresetResponse *dst, _tptz__GotoPresetResponse *src) (use soapcpp2 -Ed)
struct _tptz__GotoPresetResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatus
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetStatus is a complexType.
///
/// @note struct _tptz__GetStatus operations:
/// - _tptz__GetStatus* soap_new__tptz__GetStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetStatus(struct soap*, _tptz__GetStatus*) default initialize members
/// - int soap_read__tptz__GetStatus(struct soap*, _tptz__GetStatus*) deserialize from a source
/// - int soap_write__tptz__GetStatus(struct soap*, _tptz__GetStatus*) serialize to a sink
/// - _tptz__GetStatus* soap_dup__tptz__GetStatus(struct soap*, _tptz__GetStatus* dst, _tptz__GetStatus *src) returns deep copy of _tptz__GetStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetStatus(_tptz__GetStatus*) deep deletes _tptz__GetStatus data members, use only on dst after soap_dup__tptz__GetStatus(NULL, _tptz__GetStatus *dst, _tptz__GetStatus *src) (use soapcpp2 -Ed)
struct _tptz__GetStatus
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the PTZStatus should be requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse is a complexType.
///
/// @note struct _tptz__GetStatusResponse operations:
/// - _tptz__GetStatusResponse* soap_new__tptz__GetStatusResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse*) default initialize members
/// - int soap_read__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse*) deserialize from a source
/// - int soap_write__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse*) serialize to a sink
/// - _tptz__GetStatusResponse* soap_dup__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse* dst, _tptz__GetStatusResponse *src) returns deep copy of _tptz__GetStatusResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetStatusResponse(_tptz__GetStatusResponse*) deep deletes _tptz__GetStatusResponse data members, use only on dst after soap_dup__tptz__GetStatusResponse(NULL, _tptz__GetStatusResponse *dst, _tptz__GetStatusResponse *src) (use soapcpp2 -Ed)
struct _tptz__GetStatusResponse
{
/// <PRE><BLOCKQUOTE>
///   The PTZStatus for the requested MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZStatus" of type "http://www.onvif.org/ver10/schema":PTZStatus.
    struct tt__PTZStatus*                PTZStatus                      1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition is a complexType.
///
/// @note struct _tptz__GotoHomePosition operations:
/// - _tptz__GotoHomePosition* soap_new__tptz__GotoHomePosition(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition*) default initialize members
/// - int soap_read__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition*) deserialize from a source
/// - int soap_write__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition*) serialize to a sink
/// - _tptz__GotoHomePosition* soap_dup__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition* dst, _tptz__GotoHomePosition *src) returns deep copy of _tptz__GotoHomePosition src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GotoHomePosition(_tptz__GotoHomePosition*) deep deletes _tptz__GotoHomePosition data members, use only on dst after soap_dup__tptz__GotoHomePosition(NULL, _tptz__GotoHomePosition *dst, _tptz__GotoHomePosition *src) (use soapcpp2 -Ed)
struct _tptz__GotoHomePosition
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Speed                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse is a complexType.
///
/// @note struct _tptz__GotoHomePositionResponse operations:
/// - _tptz__GotoHomePositionResponse* soap_new__tptz__GotoHomePositionResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse*) default initialize members
/// - int soap_read__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse*) deserialize from a source
/// - int soap_write__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse*) serialize to a sink
/// - _tptz__GotoHomePositionResponse* soap_dup__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse* dst, _tptz__GotoHomePositionResponse *src) returns deep copy of _tptz__GotoHomePositionResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GotoHomePositionResponse(_tptz__GotoHomePositionResponse*) deep deletes _tptz__GotoHomePositionResponse data members, use only on dst after soap_dup__tptz__GotoHomePositionResponse(NULL, _tptz__GotoHomePositionResponse *dst, _tptz__GotoHomePositionResponse *src) (use soapcpp2 -Ed)
struct _tptz__GotoHomePositionResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition is a complexType.
///
/// @note struct _tptz__SetHomePosition operations:
/// - _tptz__SetHomePosition* soap_new__tptz__SetHomePosition(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition*) default initialize members
/// - int soap_read__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition*) deserialize from a source
/// - int soap_write__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition*) serialize to a sink
/// - _tptz__SetHomePosition* soap_dup__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition* dst, _tptz__SetHomePosition *src) returns deep copy of _tptz__SetHomePosition src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__SetHomePosition(_tptz__SetHomePosition*) deep deletes _tptz__SetHomePosition data members, use only on dst after soap_dup__tptz__SetHomePosition(NULL, _tptz__SetHomePosition *dst, _tptz__SetHomePosition *src) (use soapcpp2 -Ed)
struct _tptz__SetHomePosition
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the home position should be set.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse is a complexType.
///
/// @note struct _tptz__SetHomePositionResponse operations:
/// - _tptz__SetHomePositionResponse* soap_new__tptz__SetHomePositionResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse*) default initialize members
/// - int soap_read__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse*) deserialize from a source
/// - int soap_write__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse*) serialize to a sink
/// - _tptz__SetHomePositionResponse* soap_dup__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse* dst, _tptz__SetHomePositionResponse *src) returns deep copy of _tptz__SetHomePositionResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__SetHomePositionResponse(_tptz__SetHomePositionResponse*) deep deletes _tptz__SetHomePositionResponse data members, use only on dst after soap_dup__tptz__SetHomePositionResponse(NULL, _tptz__SetHomePositionResponse *dst, _tptz__SetHomePositionResponse *src) (use soapcpp2 -Ed)
struct _tptz__SetHomePositionResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove is a complexType.
///
/// @note struct _tptz__ContinuousMove operations:
/// - _tptz__ContinuousMove* soap_new__tptz__ContinuousMove(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove*) default initialize members
/// - int soap_read__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove*) deserialize from a source
/// - int soap_write__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove*) serialize to a sink
/// - _tptz__ContinuousMove* soap_dup__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove* dst, _tptz__ContinuousMove *src) returns deep copy of _tptz__ContinuousMove src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__ContinuousMove(_tptz__ContinuousMove*) deep deletes _tptz__ContinuousMove data members, use only on dst after soap_dup__tptz__ContinuousMove(NULL, _tptz__ContinuousMove *dst, _tptz__ContinuousMove *src) (use soapcpp2 -Ed)
struct _tptz__ContinuousMove
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A Velocity vector specifying the velocity of pan, tilt and zoom.
/// </BLOCKQUOTE></PRE>
///
/// Element "Velocity" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Velocity                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Timeout parameter.
/// </BLOCKQUOTE></PRE>
///
/// Element "Timeout" of type xs:duration.
    xsd__duration                        Timeout                        0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse is a complexType.
///
/// @note struct _tptz__ContinuousMoveResponse operations:
/// - _tptz__ContinuousMoveResponse* soap_new__tptz__ContinuousMoveResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse*) default initialize members
/// - int soap_read__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse*) deserialize from a source
/// - int soap_write__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse*) serialize to a sink
/// - _tptz__ContinuousMoveResponse* soap_dup__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse* dst, _tptz__ContinuousMoveResponse *src) returns deep copy of _tptz__ContinuousMoveResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__ContinuousMoveResponse(_tptz__ContinuousMoveResponse*) deep deletes _tptz__ContinuousMoveResponse data members, use only on dst after soap_dup__tptz__ContinuousMoveResponse(NULL, _tptz__ContinuousMoveResponse *dst, _tptz__ContinuousMoveResponse *src) (use soapcpp2 -Ed)
struct _tptz__ContinuousMoveResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove is a complexType.
///
/// @note struct _tptz__RelativeMove operations:
/// - _tptz__RelativeMove* soap_new__tptz__RelativeMove(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__RelativeMove(struct soap*, _tptz__RelativeMove*) default initialize members
/// - int soap_read__tptz__RelativeMove(struct soap*, _tptz__RelativeMove*) deserialize from a source
/// - int soap_write__tptz__RelativeMove(struct soap*, _tptz__RelativeMove*) serialize to a sink
/// - _tptz__RelativeMove* soap_dup__tptz__RelativeMove(struct soap*, _tptz__RelativeMove* dst, _tptz__RelativeMove *src) returns deep copy of _tptz__RelativeMove src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__RelativeMove(_tptz__RelativeMove*) deep deletes _tptz__RelativeMove data members, use only on dst after soap_dup__tptz__RelativeMove(NULL, _tptz__RelativeMove *dst, _tptz__RelativeMove *src) (use soapcpp2 -Ed)
struct _tptz__RelativeMove
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A positional Translation relative to the current position
/// </BLOCKQUOTE></PRE>
///
/// Element "Translation" of type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                Translation                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed parameter.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Speed                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse is a complexType.
///
/// @note struct _tptz__RelativeMoveResponse operations:
/// - _tptz__RelativeMoveResponse* soap_new__tptz__RelativeMoveResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse*) default initialize members
/// - int soap_read__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse*) deserialize from a source
/// - int soap_write__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse*) serialize to a sink
/// - _tptz__RelativeMoveResponse* soap_dup__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse* dst, _tptz__RelativeMoveResponse *src) returns deep copy of _tptz__RelativeMoveResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__RelativeMoveResponse(_tptz__RelativeMoveResponse*) deep deletes _tptz__RelativeMoveResponse data members, use only on dst after soap_dup__tptz__RelativeMoveResponse(NULL, _tptz__RelativeMoveResponse *dst, _tptz__RelativeMoveResponse *src) (use soapcpp2 -Ed)
struct _tptz__RelativeMoveResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove is a complexType.
///
/// @note struct _tptz__AbsoluteMove operations:
/// - _tptz__AbsoluteMove* soap_new__tptz__AbsoluteMove(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove*) default initialize members
/// - int soap_read__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove*) deserialize from a source
/// - int soap_write__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove*) serialize to a sink
/// - _tptz__AbsoluteMove* soap_dup__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove* dst, _tptz__AbsoluteMove *src) returns deep copy of _tptz__AbsoluteMove src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__AbsoluteMove(_tptz__AbsoluteMove*) deep deletes _tptz__AbsoluteMove data members, use only on dst after soap_dup__tptz__AbsoluteMove(NULL, _tptz__AbsoluteMove *dst, _tptz__AbsoluteMove *src) (use soapcpp2 -Ed)
struct _tptz__AbsoluteMove
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A Position vector specifying the absolute target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Speed                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse is a complexType.
///
/// @note struct _tptz__AbsoluteMoveResponse operations:
/// - _tptz__AbsoluteMoveResponse* soap_new__tptz__AbsoluteMoveResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse*) default initialize members
/// - int soap_read__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse*) deserialize from a source
/// - int soap_write__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse*) serialize to a sink
/// - _tptz__AbsoluteMoveResponse* soap_dup__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse* dst, _tptz__AbsoluteMoveResponse *src) returns deep copy of _tptz__AbsoluteMoveResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__AbsoluteMoveResponse(_tptz__AbsoluteMoveResponse*) deep deletes _tptz__AbsoluteMoveResponse data members, use only on dst after soap_dup__tptz__AbsoluteMoveResponse(NULL, _tptz__AbsoluteMoveResponse *dst, _tptz__AbsoluteMoveResponse *src) (use soapcpp2 -Ed)
struct _tptz__AbsoluteMoveResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GeoMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GeoMove is a complexType.
///
/// @note struct _tptz__GeoMove operations:
/// - _tptz__GeoMove* soap_new__tptz__GeoMove(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GeoMove(struct soap*, _tptz__GeoMove*) default initialize members
/// - int soap_read__tptz__GeoMove(struct soap*, _tptz__GeoMove*) deserialize from a source
/// - int soap_write__tptz__GeoMove(struct soap*, _tptz__GeoMove*) serialize to a sink
/// - _tptz__GeoMove* soap_dup__tptz__GeoMove(struct soap*, _tptz__GeoMove* dst, _tptz__GeoMove *src) returns deep copy of _tptz__GeoMove src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GeoMove(_tptz__GeoMove*) deep deletes _tptz__GeoMove data members, use only on dst after soap_dup__tptz__GeoMove(NULL, _tptz__GeoMove *dst, _tptz__GeoMove *src) (use soapcpp2 -Ed)
struct _tptz__GeoMove
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The geolocation of the target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Target" of type "http://www.onvif.org/ver10/schema":GeoLocation.
    struct tt__GeoLocation*              Target                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An optional indication of the height of the target/area.
/// </BLOCKQUOTE></PRE>
///
/// Element "AreaHeight" of type xs:float.
    float*                               AreaHeight                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An optional indication of the width of the target/area.
/// </BLOCKQUOTE></PRE>
///
/// Element "AreaWidth" of type xs:float.
    float*                               AreaWidth                      0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GeoMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GeoMoveResponse is a complexType.
///
/// @note struct _tptz__GeoMoveResponse operations:
/// - _tptz__GeoMoveResponse* soap_new__tptz__GeoMoveResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GeoMoveResponse(struct soap*, _tptz__GeoMoveResponse*) default initialize members
/// - int soap_read__tptz__GeoMoveResponse(struct soap*, _tptz__GeoMoveResponse*) deserialize from a source
/// - int soap_write__tptz__GeoMoveResponse(struct soap*, _tptz__GeoMoveResponse*) serialize to a sink
/// - _tptz__GeoMoveResponse* soap_dup__tptz__GeoMoveResponse(struct soap*, _tptz__GeoMoveResponse* dst, _tptz__GeoMoveResponse *src) returns deep copy of _tptz__GeoMoveResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GeoMoveResponse(_tptz__GeoMoveResponse*) deep deletes _tptz__GeoMoveResponse data members, use only on dst after soap_dup__tptz__GeoMoveResponse(NULL, _tptz__GeoMoveResponse *dst, _tptz__GeoMoveResponse *src) (use soapcpp2 -Ed)
struct _tptz__GeoMoveResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Stop
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":Stop is a complexType.
///
/// @note struct _tptz__Stop operations:
/// - _tptz__Stop* soap_new__tptz__Stop(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__Stop(struct soap*, _tptz__Stop*) default initialize members
/// - int soap_read__tptz__Stop(struct soap*, _tptz__Stop*) deserialize from a source
/// - int soap_write__tptz__Stop(struct soap*, _tptz__Stop*) serialize to a sink
/// - _tptz__Stop* soap_dup__tptz__Stop(struct soap*, _tptz__Stop* dst, _tptz__Stop *src) returns deep copy of _tptz__Stop src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__Stop(_tptz__Stop*) deep deletes _tptz__Stop data members, use only on dst after soap_dup__tptz__Stop(NULL, _tptz__Stop *dst, _tptz__Stop *src) (use soapcpp2 -Ed)
struct _tptz__Stop
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile that indicate what should be stopped.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Set true when we want to stop ongoing pan and tilt movements.If PanTilt arguments are not present, this command stops these movements.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type xs:boolean.
    enum xsd__boolean*                   PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Set true when we want to stop ongoing zoom movement.If Zoom arguments are not present, this command stops ongoing zoom movement.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type xs:boolean.
    enum xsd__boolean*                   Zoom                           0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":StopResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":StopResponse is a complexType.
///
/// @note struct _tptz__StopResponse operations:
/// - _tptz__StopResponse* soap_new__tptz__StopResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__StopResponse(struct soap*, _tptz__StopResponse*) default initialize members
/// - int soap_read__tptz__StopResponse(struct soap*, _tptz__StopResponse*) deserialize from a source
/// - int soap_write__tptz__StopResponse(struct soap*, _tptz__StopResponse*) serialize to a sink
/// - _tptz__StopResponse* soap_dup__tptz__StopResponse(struct soap*, _tptz__StopResponse* dst, _tptz__StopResponse *src) returns deep copy of _tptz__StopResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__StopResponse(_tptz__StopResponse*) deep deletes _tptz__StopResponse data members, use only on dst after soap_dup__tptz__StopResponse(NULL, _tptz__StopResponse *dst, _tptz__StopResponse *src) (use soapcpp2 -Ed)
struct _tptz__StopResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours is a complexType.
///
/// @note struct _tptz__GetPresetTours operations:
/// - _tptz__GetPresetTours* soap_new__tptz__GetPresetTours(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours*) default initialize members
/// - int soap_read__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours*) deserialize from a source
/// - int soap_write__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours*) serialize to a sink
/// - _tptz__GetPresetTours* soap_dup__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours* dst, _tptz__GetPresetTours *src) returns deep copy of _tptz__GetPresetTours src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetPresetTours(_tptz__GetPresetTours*) deep deletes _tptz__GetPresetTours data members, use only on dst after soap_dup__tptz__GetPresetTours(NULL, _tptz__GetPresetTours *dst, _tptz__GetPresetTours *src) (use soapcpp2 -Ed)
struct _tptz__GetPresetTours
{
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse is a complexType.
///
/// @note struct _tptz__GetPresetToursResponse operations:
/// - _tptz__GetPresetToursResponse* soap_new__tptz__GetPresetToursResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse*) default initialize members
/// - int soap_read__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse*) deserialize from a source
/// - int soap_write__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse*) serialize to a sink
/// - _tptz__GetPresetToursResponse* soap_dup__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse* dst, _tptz__GetPresetToursResponse *src) returns deep copy of _tptz__GetPresetToursResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetPresetToursResponse(_tptz__GetPresetToursResponse*) deep deletes _tptz__GetPresetToursResponse data members, use only on dst after soap_dup__tptz__GetPresetToursResponse(NULL, _tptz__GetPresetToursResponse *dst, _tptz__GetPresetToursResponse *src) (use soapcpp2 -Ed)
struct _tptz__GetPresetToursResponse
{
/// Size of array of struct tt__PresetTour* is 0..unbounded.
  $ int                                  __sizePresetTour               0;
/// Array struct tt__PresetTour* of size 0..unbounded.
    struct tt__PresetTour*               PresetTour                     0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour is a complexType.
///
/// @note struct _tptz__GetPresetTour operations:
/// - _tptz__GetPresetTour* soap_new__tptz__GetPresetTour(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour*) default initialize members
/// - int soap_read__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour*) deserialize from a source
/// - int soap_write__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour*) serialize to a sink
/// - _tptz__GetPresetTour* soap_dup__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour* dst, _tptz__GetPresetTour *src) returns deep copy of _tptz__GetPresetTour src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetPresetTour(_tptz__GetPresetTour*) deep deletes _tptz__GetPresetTour data members, use only on dst after soap_dup__tptz__GetPresetTour(NULL, _tptz__GetPresetTour *dst, _tptz__GetPresetTour *src) (use soapcpp2 -Ed)
struct _tptz__GetPresetTour
{
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse is a complexType.
///
/// @note struct _tptz__GetPresetTourResponse operations:
/// - _tptz__GetPresetTourResponse* soap_new__tptz__GetPresetTourResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse*) default initialize members
/// - int soap_read__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse*) deserialize from a source
/// - int soap_write__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse*) serialize to a sink
/// - _tptz__GetPresetTourResponse* soap_dup__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse* dst, _tptz__GetPresetTourResponse *src) returns deep copy of _tptz__GetPresetTourResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetPresetTourResponse(_tptz__GetPresetTourResponse*) deep deletes _tptz__GetPresetTourResponse data members, use only on dst after soap_dup__tptz__GetPresetTourResponse(NULL, _tptz__GetPresetTourResponse *dst, _tptz__GetPresetTourResponse *src) (use soapcpp2 -Ed)
struct _tptz__GetPresetTourResponse
{
/// Element "PresetTour" of type "http://www.onvif.org/ver10/schema":PresetTour.
    struct tt__PresetTour*               PresetTour                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions is a complexType.
///
/// @note struct _tptz__GetPresetTourOptions operations:
/// - _tptz__GetPresetTourOptions* soap_new__tptz__GetPresetTourOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions*) default initialize members
/// - int soap_read__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions*) deserialize from a source
/// - int soap_write__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions*) serialize to a sink
/// - _tptz__GetPresetTourOptions* soap_dup__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions* dst, _tptz__GetPresetTourOptions *src) returns deep copy of _tptz__GetPresetTourOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetPresetTourOptions(_tptz__GetPresetTourOptions*) deep deletes _tptz__GetPresetTourOptions data members, use only on dst after soap_dup__tptz__GetPresetTourOptions(NULL, _tptz__GetPresetTourOptions *dst, _tptz__GetPresetTourOptions *src) (use soapcpp2 -Ed)
struct _tptz__GetPresetTourOptions
{
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse is a complexType.
///
/// @note struct _tptz__GetPresetTourOptionsResponse operations:
/// - _tptz__GetPresetTourOptionsResponse* soap_new__tptz__GetPresetTourOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse*) default initialize members
/// - int soap_read__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse*) deserialize from a source
/// - int soap_write__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse*) serialize to a sink
/// - _tptz__GetPresetTourOptionsResponse* soap_dup__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse* dst, _tptz__GetPresetTourOptionsResponse *src) returns deep copy of _tptz__GetPresetTourOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetPresetTourOptionsResponse(_tptz__GetPresetTourOptionsResponse*) deep deletes _tptz__GetPresetTourOptionsResponse data members, use only on dst after soap_dup__tptz__GetPresetTourOptionsResponse(NULL, _tptz__GetPresetTourOptionsResponse *dst, _tptz__GetPresetTourOptionsResponse *src) (use soapcpp2 -Ed)
struct _tptz__GetPresetTourOptionsResponse
{
/// Element "Options" of type "http://www.onvif.org/ver10/schema":PTZPresetTourOptions.
    struct tt__PTZPresetTourOptions*     Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour is a complexType.
///
/// @note struct _tptz__CreatePresetTour operations:
/// - _tptz__CreatePresetTour* soap_new__tptz__CreatePresetTour(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour*) default initialize members
/// - int soap_read__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour*) deserialize from a source
/// - int soap_write__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour*) serialize to a sink
/// - _tptz__CreatePresetTour* soap_dup__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour* dst, _tptz__CreatePresetTour *src) returns deep copy of _tptz__CreatePresetTour src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__CreatePresetTour(_tptz__CreatePresetTour*) deep deletes _tptz__CreatePresetTour data members, use only on dst after soap_dup__tptz__CreatePresetTour(NULL, _tptz__CreatePresetTour *dst, _tptz__CreatePresetTour *src) (use soapcpp2 -Ed)
struct _tptz__CreatePresetTour
{
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse is a complexType.
///
/// @note struct _tptz__CreatePresetTourResponse operations:
/// - _tptz__CreatePresetTourResponse* soap_new__tptz__CreatePresetTourResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse*) default initialize members
/// - int soap_read__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse*) deserialize from a source
/// - int soap_write__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse*) serialize to a sink
/// - _tptz__CreatePresetTourResponse* soap_dup__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse* dst, _tptz__CreatePresetTourResponse *src) returns deep copy of _tptz__CreatePresetTourResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__CreatePresetTourResponse(_tptz__CreatePresetTourResponse*) deep deletes _tptz__CreatePresetTourResponse data members, use only on dst after soap_dup__tptz__CreatePresetTourResponse(NULL, _tptz__CreatePresetTourResponse *dst, _tptz__CreatePresetTourResponse *src) (use soapcpp2 -Ed)
struct _tptz__CreatePresetTourResponse
{
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour is a complexType.
///
/// @note struct _tptz__ModifyPresetTour operations:
/// - _tptz__ModifyPresetTour* soap_new__tptz__ModifyPresetTour(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour*) default initialize members
/// - int soap_read__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour*) deserialize from a source
/// - int soap_write__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour*) serialize to a sink
/// - _tptz__ModifyPresetTour* soap_dup__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour* dst, _tptz__ModifyPresetTour *src) returns deep copy of _tptz__ModifyPresetTour src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__ModifyPresetTour(_tptz__ModifyPresetTour*) deep deletes _tptz__ModifyPresetTour data members, use only on dst after soap_dup__tptz__ModifyPresetTour(NULL, _tptz__ModifyPresetTour *dst, _tptz__ModifyPresetTour *src) (use soapcpp2 -Ed)
struct _tptz__ModifyPresetTour
{
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTour" of type "http://www.onvif.org/ver10/schema":PresetTour.
    struct tt__PresetTour*               PresetTour                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse is a complexType.
///
/// @note struct _tptz__ModifyPresetTourResponse operations:
/// - _tptz__ModifyPresetTourResponse* soap_new__tptz__ModifyPresetTourResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse*) default initialize members
/// - int soap_read__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse*) deserialize from a source
/// - int soap_write__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse*) serialize to a sink
/// - _tptz__ModifyPresetTourResponse* soap_dup__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse* dst, _tptz__ModifyPresetTourResponse *src) returns deep copy of _tptz__ModifyPresetTourResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__ModifyPresetTourResponse(_tptz__ModifyPresetTourResponse*) deep deletes _tptz__ModifyPresetTourResponse data members, use only on dst after soap_dup__tptz__ModifyPresetTourResponse(NULL, _tptz__ModifyPresetTourResponse *dst, _tptz__ModifyPresetTourResponse *src) (use soapcpp2 -Ed)
struct _tptz__ModifyPresetTourResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour is a complexType.
///
/// @note struct _tptz__OperatePresetTour operations:
/// - _tptz__OperatePresetTour* soap_new__tptz__OperatePresetTour(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour*) default initialize members
/// - int soap_read__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour*) deserialize from a source
/// - int soap_write__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour*) serialize to a sink
/// - _tptz__OperatePresetTour* soap_dup__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour* dst, _tptz__OperatePresetTour *src) returns deep copy of _tptz__OperatePresetTour src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__OperatePresetTour(_tptz__OperatePresetTour*) deep deletes _tptz__OperatePresetTour data members, use only on dst after soap_dup__tptz__OperatePresetTour(NULL, _tptz__OperatePresetTour *dst, _tptz__OperatePresetTour *src) (use soapcpp2 -Ed)
struct _tptz__OperatePresetTour
{
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Element "Operation" of type "http://www.onvif.org/ver10/schema":PTZPresetTourOperation.
    enum tt__PTZPresetTourOperation      Operation                      1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse is a complexType.
///
/// @note struct _tptz__OperatePresetTourResponse operations:
/// - _tptz__OperatePresetTourResponse* soap_new__tptz__OperatePresetTourResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse*) default initialize members
/// - int soap_read__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse*) deserialize from a source
/// - int soap_write__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse*) serialize to a sink
/// - _tptz__OperatePresetTourResponse* soap_dup__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse* dst, _tptz__OperatePresetTourResponse *src) returns deep copy of _tptz__OperatePresetTourResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__OperatePresetTourResponse(_tptz__OperatePresetTourResponse*) deep deletes _tptz__OperatePresetTourResponse data members, use only on dst after soap_dup__tptz__OperatePresetTourResponse(NULL, _tptz__OperatePresetTourResponse *dst, _tptz__OperatePresetTourResponse *src) (use soapcpp2 -Ed)
struct _tptz__OperatePresetTourResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour is a complexType.
///
/// @note struct _tptz__RemovePresetTour operations:
/// - _tptz__RemovePresetTour* soap_new__tptz__RemovePresetTour(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour*) default initialize members
/// - int soap_read__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour*) deserialize from a source
/// - int soap_write__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour*) serialize to a sink
/// - _tptz__RemovePresetTour* soap_dup__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour* dst, _tptz__RemovePresetTour *src) returns deep copy of _tptz__RemovePresetTour src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__RemovePresetTour(_tptz__RemovePresetTour*) deep deletes _tptz__RemovePresetTour data members, use only on dst after soap_dup__tptz__RemovePresetTour(NULL, _tptz__RemovePresetTour *dst, _tptz__RemovePresetTour *src) (use soapcpp2 -Ed)
struct _tptz__RemovePresetTour
{
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse is a complexType.
///
/// @note struct _tptz__RemovePresetTourResponse operations:
/// - _tptz__RemovePresetTourResponse* soap_new__tptz__RemovePresetTourResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse*) default initialize members
/// - int soap_read__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse*) deserialize from a source
/// - int soap_write__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse*) serialize to a sink
/// - _tptz__RemovePresetTourResponse* soap_dup__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse* dst, _tptz__RemovePresetTourResponse *src) returns deep copy of _tptz__RemovePresetTourResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__RemovePresetTourResponse(_tptz__RemovePresetTourResponse*) deep deletes _tptz__RemovePresetTourResponse data members, use only on dst after soap_dup__tptz__RemovePresetTourResponse(NULL, _tptz__RemovePresetTourResponse *dst, _tptz__RemovePresetTourResponse *src) (use soapcpp2 -Ed)
struct _tptz__RemovePresetTourResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurations
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurations is a complexType.
///
/// @note struct _tptz__GetCompatibleConfigurations operations:
/// - _tptz__GetCompatibleConfigurations* soap_new__tptz__GetCompatibleConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations*) default initialize members
/// - int soap_read__tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations*) deserialize from a source
/// - int soap_write__tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations*) serialize to a sink
/// - _tptz__GetCompatibleConfigurations* soap_dup__tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations* dst, _tptz__GetCompatibleConfigurations *src) returns deep copy of _tptz__GetCompatibleConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetCompatibleConfigurations(_tptz__GetCompatibleConfigurations*) deep deletes _tptz__GetCompatibleConfigurations data members, use only on dst after soap_dup__tptz__GetCompatibleConfigurations(NULL, _tptz__GetCompatibleConfigurations *dst, _tptz__GetCompatibleConfigurations *src) (use soapcpp2 -Ed)
struct _tptz__GetCompatibleConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurationsResponse is a complexType.
///
/// @note struct _tptz__GetCompatibleConfigurationsResponse operations:
/// - _tptz__GetCompatibleConfigurationsResponse* soap_new__tptz__GetCompatibleConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tptz__GetCompatibleConfigurationsResponse(struct soap*, _tptz__GetCompatibleConfigurationsResponse*) default initialize members
/// - int soap_read__tptz__GetCompatibleConfigurationsResponse(struct soap*, _tptz__GetCompatibleConfigurationsResponse*) deserialize from a source
/// - int soap_write__tptz__GetCompatibleConfigurationsResponse(struct soap*, _tptz__GetCompatibleConfigurationsResponse*) serialize to a sink
/// - _tptz__GetCompatibleConfigurationsResponse* soap_dup__tptz__GetCompatibleConfigurationsResponse(struct soap*, _tptz__GetCompatibleConfigurationsResponse* dst, _tptz__GetCompatibleConfigurationsResponse *src) returns deep copy of _tptz__GetCompatibleConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tptz__GetCompatibleConfigurationsResponse(_tptz__GetCompatibleConfigurationsResponse*) deep deletes _tptz__GetCompatibleConfigurationsResponse data members, use only on dst after soap_dup__tptz__GetCompatibleConfigurationsResponse(NULL, _tptz__GetCompatibleConfigurationsResponse *dst, _tptz__GetCompatibleConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tptz__GetCompatibleConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   A list of all existing PTZConfigurations on the NVT that is suitable to be added to the addressed media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PTZConfiguration* is 0..unbounded.
  $ int                                  __sizePTZConfiguration         0;
/// Array struct tt__PTZConfiguration* of size 0..unbounded.
    struct tt__PTZConfiguration*         PTZConfiguration               0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPort is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Lists all available serial ports of a device
/// </BLOCKQUOTE></PRE>
///
/// @note struct tmd__SerialPort operations:
/// - tmd__SerialPort* soap_new_tmd__SerialPort(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tmd__SerialPort(struct soap*, tmd__SerialPort*) default initialize members
/// - int soap_read_tmd__SerialPort(struct soap*, tmd__SerialPort*) deserialize from a source
/// - int soap_write_tmd__SerialPort(struct soap*, tmd__SerialPort*) serialize to a sink
/// - tmd__SerialPort* soap_dup_tmd__SerialPort(struct soap*, tmd__SerialPort* dst, tmd__SerialPort *src) returns deep copy of tmd__SerialPort src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tmd__SerialPort(tmd__SerialPort*) deep deletes tmd__SerialPort data members, use only on dst after soap_dup_tmd__SerialPort(NULL, tmd__SerialPort *dst, tmd__SerialPort *src) (use soapcpp2 -Ed)
struct tmd__SerialPort
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   :token                         1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note struct tds__StorageConfiguration operations:
/// - tds__StorageConfiguration* soap_new_tds__StorageConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__StorageConfiguration(struct soap*, tds__StorageConfiguration*) default initialize members
/// - int soap_read_tds__StorageConfiguration(struct soap*, tds__StorageConfiguration*) deserialize from a source
/// - int soap_write_tds__StorageConfiguration(struct soap*, tds__StorageConfiguration*) serialize to a sink
/// - tds__StorageConfiguration* soap_dup_tds__StorageConfiguration(struct soap*, tds__StorageConfiguration* dst, tds__StorageConfiguration *src) returns deep copy of tds__StorageConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__StorageConfiguration(tds__StorageConfiguration*) deep deletes tds__StorageConfiguration data members, use only on dst after soap_dup_tds__StorageConfiguration(NULL, tds__StorageConfiguration *dst, tds__StorageConfiguration *src) (use soapcpp2 -Ed)
struct tds__StorageConfiguration
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   :token                         1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// Element "Data" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    struct tds__StorageConfigurationData*  Data                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSource is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical video input.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__VideoSource operations:
/// - tt__VideoSource* soap_new_tt__VideoSource(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoSource(struct soap*, tt__VideoSource*) default initialize members
/// - int soap_read_tt__VideoSource(struct soap*, tt__VideoSource*) deserialize from a source
/// - int soap_write_tt__VideoSource(struct soap*, tt__VideoSource*) serialize to a sink
/// - tt__VideoSource* soap_dup_tt__VideoSource(struct soap*, tt__VideoSource* dst, tt__VideoSource *src) returns deep copy of tt__VideoSource src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSource(tt__VideoSource*) deep deletes tt__VideoSource data members, use only on dst after soap_dup_tt__VideoSource(NULL, tt__VideoSource *dst, tt__VideoSource *src) (use soapcpp2 -Ed)
struct tt__VideoSource
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   Frame rate in frames per second.
/// </BLOCKQUOTE></PRE>
///
/// Element "Framerate" of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Horizontal and vertical resolution
/// </BLOCKQUOTE></PRE>
///
/// Element "Resolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor.
/// </BLOCKQUOTE></PRE>
///
/// Element "Imaging" of type "http://www.onvif.org/ver10/schema":ImagingSettings.
    struct tt__ImagingSettings*          Imaging                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceExtension.
    struct tt__VideoSourceExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSource is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio input.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__AudioSource operations:
/// - tt__AudioSource* soap_new_tt__AudioSource(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioSource(struct soap*, tt__AudioSource*) default initialize members
/// - int soap_read_tt__AudioSource(struct soap*, tt__AudioSource*) deserialize from a source
/// - int soap_write_tt__AudioSource(struct soap*, tt__AudioSource*) serialize to a sink
/// - tt__AudioSource* soap_dup_tt__AudioSource(struct soap*, tt__AudioSource* dst, tt__AudioSource *src) returns deep copy of tt__AudioSource src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioSource(tt__AudioSource*) deep deletes tt__AudioSource data members, use only on dst after soap_dup_tt__AudioSource(NULL, tt__AudioSource *dst, tt__AudioSource *src) (use soapcpp2 -Ed)
struct tt__AudioSource
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   number of available audio channels. (1: mono, 2: stereo)
/// </BLOCKQUOTE></PRE>
///
/// Element "Channels" of type xs:int.
    int                                  Channels                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__VideoSourceConfiguration operations:
/// - tt__VideoSourceConfiguration* soap_new_tt__VideoSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoSourceConfiguration(struct soap*, tt__VideoSourceConfiguration*) default initialize members
/// - int soap_read_tt__VideoSourceConfiguration(struct soap*, tt__VideoSourceConfiguration*) deserialize from a source
/// - int soap_write_tt__VideoSourceConfiguration(struct soap*, tt__VideoSourceConfiguration*) serialize to a sink
/// - tt__VideoSourceConfiguration* soap_dup_tt__VideoSourceConfiguration(struct soap*, tt__VideoSourceConfiguration* dst, tt__VideoSourceConfiguration *src) returns deep copy of tt__VideoSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceConfiguration(tt__VideoSourceConfiguration*) deep deletes tt__VideoSourceConfiguration data members, use only on dst after soap_dup_tt__VideoSourceConfiguration(NULL, tt__VideoSourceConfiguration *dst, tt__VideoSourceConfiguration *src) (use soapcpp2 -Ed)
struct tt__VideoSourceConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Reference to the physical input.
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangle specifying the Video capturing area. The capturing area shall not be larger than the whole Video source area.
/// </BLOCKQUOTE></PRE>
///
/// Element "Bounds" of type "http://www.onvif.org/ver10/schema":IntRectangle.
    struct tt__IntRectangle*             Bounds                         1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension.
    struct tt__VideoSourceConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Readonly parameter signalling Source configuration's view mode, for devices supporting different view modes as defined in tt:viewModes.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ViewMode" of type xs:string.
  @ char*                                ViewMode                       0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__VideoEncoderConfiguration operations:
/// - tt__VideoEncoderConfiguration* soap_new_tt__VideoEncoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration*) default initialize members
/// - int soap_read_tt__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration*) deserialize from a source
/// - int soap_write_tt__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration*) serialize to a sink
/// - tt__VideoEncoderConfiguration* soap_dup_tt__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration* dst, tt__VideoEncoderConfiguration *src) returns deep copy of tt__VideoEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoderConfiguration(tt__VideoEncoderConfiguration*) deep deletes tt__VideoEncoderConfiguration data members, use only on dst after soap_dup_tt__VideoEncoderConfiguration(NULL, tt__VideoEncoderConfiguration *dst, tt__VideoEncoderConfiguration *src) (use soapcpp2 -Ed)
struct tt__VideoEncoderConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Used video codec, either Jpeg, H.264 or Mpeg4
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configured video resolution
/// </BLOCKQUOTE></PRE>
///
/// Element "Resolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// </BLOCKQUOTE></PRE>
///
/// Element "Quality" of type xs:float.
    float                                Quality                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rate control related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "RateControl" of type "http://www.onvif.org/ver10/schema":VideoRateControl.
    struct tt__VideoRateControl*         RateControl                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Mpeg4 related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type "http://www.onvif.org/ver10/schema":Mpeg4Configuration.
    struct tt__Mpeg4Configuration*       MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure H.264 related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type "http://www.onvif.org/ver10/schema":H264Configuration.
    struct tt__H264Configuration*        H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related video stream
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   A value of true indicates that frame rate is a fixed value rather than an upper limit,
///   and that the video encoder shall prioritize frame rate over all other adaptable
///   configuration values such as bitrate. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GuaranteedFrameRate" of type xs:boolean.
  @ enum xsd__boolean*                   GuaranteedFrameRate            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":JpegOptions.
///
/// @note struct tt__JpegOptions2 operations:
/// - tt__JpegOptions2* soap_new_tt__JpegOptions2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__JpegOptions2(struct soap*, tt__JpegOptions2*) default initialize members
/// - int soap_read_tt__JpegOptions2(struct soap*, tt__JpegOptions2*) deserialize from a source
/// - int soap_write_tt__JpegOptions2(struct soap*, tt__JpegOptions2*) serialize to a sink
/// - tt__JpegOptions2* soap_dup_tt__JpegOptions2(struct soap*, tt__JpegOptions2* dst, tt__JpegOptions2 *src) returns deep copy of tt__JpegOptions2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__JpegOptions2(tt__JpegOptions2*) deep deletes tt__JpegOptions2 data members, use only on dst after soap_dup_tt__JpegOptions2(NULL, tt__JpegOptions2 *dst, tt__JpegOptions2 *src) (use soapcpp2 -Ed)
struct tt__JpegOptions2
{
/// INHERITED FROM tt__JpegOptions:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
//  END OF INHERITED FROM tt__JpegOptions
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":Mpeg4Options.
///
/// @note struct tt__Mpeg4Options2 operations:
/// - tt__Mpeg4Options2* soap_new_tt__Mpeg4Options2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Mpeg4Options2(struct soap*, tt__Mpeg4Options2*) default initialize members
/// - int soap_read_tt__Mpeg4Options2(struct soap*, tt__Mpeg4Options2*) deserialize from a source
/// - int soap_write_tt__Mpeg4Options2(struct soap*, tt__Mpeg4Options2*) serialize to a sink
/// - tt__Mpeg4Options2* soap_dup_tt__Mpeg4Options2(struct soap*, tt__Mpeg4Options2* dst, tt__Mpeg4Options2 *src) returns deep copy of tt__Mpeg4Options2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Mpeg4Options2(tt__Mpeg4Options2*) deep deletes tt__Mpeg4Options2 data members, use only on dst after soap_dup_tt__Mpeg4Options2(NULL, tt__Mpeg4Options2 *dst, tt__Mpeg4Options2 *src) (use soapcpp2 -Ed)
struct tt__Mpeg4Options2
{
/// INHERITED FROM tt__Mpeg4Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__Mpeg4Profile* is 1..unbounded.
  $ int                                  __sizeMpeg4ProfilesSupported   1;
/// Array enum tt__Mpeg4Profile* of size 1..unbounded.
    enum tt__Mpeg4Profile*               Mpeg4ProfilesSupported         1;	///< Multiple elements.
//  END OF INHERITED FROM tt__Mpeg4Options
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":H264Options.
///
/// @note struct tt__H264Options2 operations:
/// - tt__H264Options2* soap_new_tt__H264Options2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__H264Options2(struct soap*, tt__H264Options2*) default initialize members
/// - int soap_read_tt__H264Options2(struct soap*, tt__H264Options2*) deserialize from a source
/// - int soap_write_tt__H264Options2(struct soap*, tt__H264Options2*) serialize to a sink
/// - tt__H264Options2* soap_dup_tt__H264Options2(struct soap*, tt__H264Options2* dst, tt__H264Options2 *src) returns deep copy of tt__H264Options2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__H264Options2(tt__H264Options2*) deep deletes tt__H264Options2 data members, use only on dst after soap_dup_tt__H264Options2(NULL, tt__H264Options2 *dst, tt__H264Options2 *src) (use soapcpp2 -Ed)
struct tt__H264Options2
{
/// INHERITED FROM tt__H264Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__H264Profile* is 1..unbounded.
  $ int                                  __sizeH264ProfilesSupported    1;
/// Array enum tt__H264Profile* of size 1..unbounded.
    enum tt__H264Profile*                H264ProfilesSupported          1;	///< Multiple elements.
//  END OF INHERITED FROM tt__H264Options
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__VideoEncoder2Configuration operations:
/// - tt__VideoEncoder2Configuration* soap_new_tt__VideoEncoder2Configuration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoEncoder2Configuration(struct soap*, tt__VideoEncoder2Configuration*) default initialize members
/// - int soap_read_tt__VideoEncoder2Configuration(struct soap*, tt__VideoEncoder2Configuration*) deserialize from a source
/// - int soap_write_tt__VideoEncoder2Configuration(struct soap*, tt__VideoEncoder2Configuration*) serialize to a sink
/// - tt__VideoEncoder2Configuration* soap_dup_tt__VideoEncoder2Configuration(struct soap*, tt__VideoEncoder2Configuration* dst, tt__VideoEncoder2Configuration *src) returns deep copy of tt__VideoEncoder2Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoder2Configuration(tt__VideoEncoder2Configuration*) deep deletes tt__VideoEncoder2Configuration data members, use only on dst after soap_dup_tt__VideoEncoder2Configuration(NULL, tt__VideoEncoder2Configuration *dst, tt__VideoEncoder2Configuration *src) (use soapcpp2 -Ed)
struct tt__VideoEncoder2Configuration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Video Media Subtype for the video format. For definitions see tt:VideoEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type xs:string.
    char*                                Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configured video resolution
/// </BLOCKQUOTE></PRE>
///
/// Element "Resolution" of type "http://www.onvif.org/ver10/schema":VideoResolution2.
    struct tt__VideoResolution2*         Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rate control related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "RateControl" of type "http://www.onvif.org/ver10/schema":VideoRateControl2.
    struct tt__VideoRateControl2*        RateControl                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// </BLOCKQUOTE></PRE>
///
/// Element "Quality" of type xs:float.
    float                                Quality                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GovLength" of type xs:int.
  @ int*                                 GovLength                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The encoder profile as defined in tt:VideoEncodingProfiles.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Profile" of type xs:string.
  @ char*                                Profile                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   A value of true indicates that frame rate is a fixed value rather than an upper limit,
///   and that the video encoder shall prioritize frame rate over all other adaptable
///   configuration values such as bitrate. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GuaranteedFrameRate" of type xs:boolean.
  @ enum xsd__boolean*                   GuaranteedFrameRate            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__AudioSourceConfiguration operations:
/// - tt__AudioSourceConfiguration* soap_new_tt__AudioSourceConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioSourceConfiguration(struct soap*, tt__AudioSourceConfiguration*) default initialize members
/// - int soap_read_tt__AudioSourceConfiguration(struct soap*, tt__AudioSourceConfiguration*) deserialize from a source
/// - int soap_write_tt__AudioSourceConfiguration(struct soap*, tt__AudioSourceConfiguration*) serialize to a sink
/// - tt__AudioSourceConfiguration* soap_dup_tt__AudioSourceConfiguration(struct soap*, tt__AudioSourceConfiguration* dst, tt__AudioSourceConfiguration *src) returns deep copy of tt__AudioSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioSourceConfiguration(tt__AudioSourceConfiguration*) deep deletes tt__AudioSourceConfiguration data members, use only on dst after soap_dup_tt__AudioSourceConfiguration(NULL, tt__AudioSourceConfiguration *dst, tt__AudioSourceConfiguration *src) (use soapcpp2 -Ed)
struct tt__AudioSourceConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the Audio Source the configuration applies to
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__AudioEncoderConfiguration operations:
/// - tt__AudioEncoderConfiguration* soap_new_tt__AudioEncoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioEncoderConfiguration(struct soap*, tt__AudioEncoderConfiguration*) default initialize members
/// - int soap_read_tt__AudioEncoderConfiguration(struct soap*, tt__AudioEncoderConfiguration*) deserialize from a source
/// - int soap_write_tt__AudioEncoderConfiguration(struct soap*, tt__AudioEncoderConfiguration*) serialize to a sink
/// - tt__AudioEncoderConfiguration* soap_dup_tt__AudioEncoderConfiguration(struct soap*, tt__AudioEncoderConfiguration* dst, tt__AudioEncoderConfiguration *src) returns deep copy of tt__AudioEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioEncoderConfiguration(tt__AudioEncoderConfiguration*) deep deletes tt__AudioEncoderConfiguration data members, use only on dst after soap_dup_tt__AudioEncoderConfiguration(NULL, tt__AudioEncoderConfiguration *dst, tt__AudioEncoderConfiguration *src) (use soapcpp2 -Ed)
struct tt__AudioEncoderConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Audio codec used for encoding the audio input (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output sample rate in kHz.
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRate" of type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__AudioEncoder2Configuration operations:
/// - tt__AudioEncoder2Configuration* soap_new_tt__AudioEncoder2Configuration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioEncoder2Configuration(struct soap*, tt__AudioEncoder2Configuration*) default initialize members
/// - int soap_read_tt__AudioEncoder2Configuration(struct soap*, tt__AudioEncoder2Configuration*) deserialize from a source
/// - int soap_write_tt__AudioEncoder2Configuration(struct soap*, tt__AudioEncoder2Configuration*) serialize to a sink
/// - tt__AudioEncoder2Configuration* soap_dup_tt__AudioEncoder2Configuration(struct soap*, tt__AudioEncoder2Configuration* dst, tt__AudioEncoder2Configuration *src) returns deep copy of tt__AudioEncoder2Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioEncoder2Configuration(tt__AudioEncoder2Configuration*) deep deletes tt__AudioEncoder2Configuration data members, use only on dst after soap_dup_tt__AudioEncoder2Configuration(NULL, tt__AudioEncoder2Configuration *dst, tt__AudioEncoder2Configuration *src) (use soapcpp2 -Ed)
struct tt__AudioEncoder2Configuration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Audio Media Subtype for the audio format. For definitions see tt:AudioEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#audio"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type xs:string.
    char*                                Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional multicast configuration of the audio stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The output bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output sample rate in kHz.
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRate" of type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__VideoAnalyticsConfiguration operations:
/// - tt__VideoAnalyticsConfiguration* soap_new_tt__VideoAnalyticsConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoAnalyticsConfiguration(struct soap*, tt__VideoAnalyticsConfiguration*) default initialize members
/// - int soap_read_tt__VideoAnalyticsConfiguration(struct soap*, tt__VideoAnalyticsConfiguration*) deserialize from a source
/// - int soap_write_tt__VideoAnalyticsConfiguration(struct soap*, tt__VideoAnalyticsConfiguration*) serialize to a sink
/// - tt__VideoAnalyticsConfiguration* soap_dup_tt__VideoAnalyticsConfiguration(struct soap*, tt__VideoAnalyticsConfiguration* dst, tt__VideoAnalyticsConfiguration *src) returns deep copy of tt__VideoAnalyticsConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoAnalyticsConfiguration(tt__VideoAnalyticsConfiguration*) deep deletes tt__VideoAnalyticsConfiguration data members, use only on dst after soap_dup_tt__VideoAnalyticsConfiguration(NULL, tt__VideoAnalyticsConfiguration *dst, tt__VideoAnalyticsConfiguration *src) (use soapcpp2 -Ed)
struct tt__VideoAnalyticsConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// Element "AnalyticsEngineConfiguration" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    struct tt__AnalyticsEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// Element "RuleEngineConfiguration" of type "http://www.onvif.org/ver10/schema":RuleEngineConfiguration.
    struct tt__RuleEngineConfiguration*  RuleEngineConfiguration        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__MetadataConfiguration operations:
/// - tt__MetadataConfiguration* soap_new_tt__MetadataConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MetadataConfiguration(struct soap*, tt__MetadataConfiguration*) default initialize members
/// - int soap_read_tt__MetadataConfiguration(struct soap*, tt__MetadataConfiguration*) deserialize from a source
/// - int soap_write_tt__MetadataConfiguration(struct soap*, tt__MetadataConfiguration*) serialize to a sink
/// - tt__MetadataConfiguration* soap_dup_tt__MetadataConfiguration(struct soap*, tt__MetadataConfiguration* dst, tt__MetadataConfiguration *src) returns deep copy of tt__MetadataConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataConfiguration(tt__MetadataConfiguration*) deep deletes tt__MetadataConfiguration data members, use only on dst after soap_dup_tt__MetadataConfiguration(NULL, tt__MetadataConfiguration *dst, tt__MetadataConfiguration *src) (use soapcpp2 -Ed)
struct tt__MetadataConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   optional element to configure which PTZ related data is to include in the metadata stream
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZStatus" of type "http://www.onvif.org/ver10/schema":PTZFilter.
    struct tt__PTZFilter*                PTZStatus                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure the streaming of events. A client might be interested in receiving all, none or some of the events produced by the device:<ul>
///   <li>To get all events: Include the Events element but do not include a filter.</li>
///   <li>To get no events: Do not include the Events element.</li>
///   <li>To get only some events: Include the Events element and include a filter in the element.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Events" of type "http://www.onvif.org/ver10/schema":EventSubscription.
    struct tt__EventSubscription*        Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines whether the streamed metadata will include metadata from the analytics engines (video, cell motion, audio etc.)
/// </BLOCKQUOTE></PRE>
///
/// Element "Analytics" of type xs:boolean.
    enum xsd__boolean*                   Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream (when using Media2 Service, this value is deprecated and ignored)
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indication which AnalyticsModules shall output metadata.
///   Note that the streaming behavior is undefined if the list includes items that are not part of the associated AnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "AnalyticsEngineConfiguration" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    struct tt__AnalyticsEngineConfiguration*  AnalyticsEngineConfiguration   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension.
    struct tt__MetadataConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure compression type of Metadata payload. Use values from enumeration MetadataCompressionType.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "CompressionType" of type xs:string.
  @ char*                                CompressionType                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure if the metadata stream shall contain the Geo Location coordinates of each target.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoLocation" of type xs:boolean.
  @ enum xsd__boolean*                   GeoLocation                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical video outputs.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__VideoOutput operations:
/// - tt__VideoOutput* soap_new_tt__VideoOutput(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoOutput(struct soap*, tt__VideoOutput*) default initialize members
/// - int soap_read_tt__VideoOutput(struct soap*, tt__VideoOutput*) deserialize from a source
/// - int soap_write_tt__VideoOutput(struct soap*, tt__VideoOutput*) serialize to a sink
/// - tt__VideoOutput* soap_dup_tt__VideoOutput(struct soap*, tt__VideoOutput* dst, tt__VideoOutput *src) returns deep copy of tt__VideoOutput src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoOutput(tt__VideoOutput*) deep deletes tt__VideoOutput data members, use only on dst after soap_dup_tt__VideoOutput(NULL, tt__VideoOutput *dst, tt__VideoOutput *src) (use soapcpp2 -Ed)
struct tt__VideoOutput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// Element "Layout" of type "http://www.onvif.org/ver10/schema":Layout.
    struct tt__Layout*                   Layout                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Resolution of the display in Pixel.
/// </BLOCKQUOTE></PRE>
///
/// Element "Resolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          Resolution                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Refresh rate of the display in Hertz.
/// </BLOCKQUOTE></PRE>
///
/// Element "RefreshRate" of type xs:float.
    float*                               RefreshRate                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Aspect ratio of the display as physical extent of width divided by height.
/// </BLOCKQUOTE></PRE>
///
/// Element "AspectRatio" of type xs:float.
    float*                               AspectRatio                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoOutputExtension.
    struct tt__VideoOutputExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__VideoOutputConfiguration operations:
/// - tt__VideoOutputConfiguration* soap_new_tt__VideoOutputConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoOutputConfiguration(struct soap*, tt__VideoOutputConfiguration*) default initialize members
/// - int soap_read_tt__VideoOutputConfiguration(struct soap*, tt__VideoOutputConfiguration*) deserialize from a source
/// - int soap_write_tt__VideoOutputConfiguration(struct soap*, tt__VideoOutputConfiguration*) serialize to a sink
/// - tt__VideoOutputConfiguration* soap_dup_tt__VideoOutputConfiguration(struct soap*, tt__VideoOutputConfiguration* dst, tt__VideoOutputConfiguration *src) returns deep copy of tt__VideoOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoOutputConfiguration(tt__VideoOutputConfiguration*) deep deletes tt__VideoOutputConfiguration data members, use only on dst after soap_dup_tt__VideoOutputConfiguration(NULL, tt__VideoOutputConfiguration *dst, tt__VideoOutputConfiguration *src) (use soapcpp2 -Ed)
struct tt__VideoOutputConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output the configuration applies to
/// </BLOCKQUOTE></PRE>
///
/// Element "OutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio outputs.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__AudioOutput operations:
/// - tt__AudioOutput* soap_new_tt__AudioOutput(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioOutput(struct soap*, tt__AudioOutput*) default initialize members
/// - int soap_read_tt__AudioOutput(struct soap*, tt__AudioOutput*) deserialize from a source
/// - int soap_write_tt__AudioOutput(struct soap*, tt__AudioOutput*) serialize to a sink
/// - tt__AudioOutput* soap_dup_tt__AudioOutput(struct soap*, tt__AudioOutput* dst, tt__AudioOutput *src) returns deep copy of tt__AudioOutput src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioOutput(tt__AudioOutput*) deep deletes tt__AudioOutput data members, use only on dst after soap_dup_tt__AudioOutput(NULL, tt__AudioOutput *dst, tt__AudioOutput *src) (use soapcpp2 -Ed)
struct tt__AudioOutput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__AudioOutputConfiguration operations:
/// - tt__AudioOutputConfiguration* soap_new_tt__AudioOutputConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioOutputConfiguration(struct soap*, tt__AudioOutputConfiguration*) default initialize members
/// - int soap_read_tt__AudioOutputConfiguration(struct soap*, tt__AudioOutputConfiguration*) deserialize from a source
/// - int soap_write_tt__AudioOutputConfiguration(struct soap*, tt__AudioOutputConfiguration*) serialize to a sink
/// - tt__AudioOutputConfiguration* soap_dup_tt__AudioOutputConfiguration(struct soap*, tt__AudioOutputConfiguration* dst, tt__AudioOutputConfiguration *src) returns deep copy of tt__AudioOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioOutputConfiguration(tt__AudioOutputConfiguration*) deep deletes tt__AudioOutputConfiguration data members, use only on dst after soap_dup_tt__AudioOutputConfiguration(NULL, tt__AudioOutputConfiguration *dst, tt__AudioOutputConfiguration *src) (use soapcpp2 -Ed)
struct tt__AudioOutputConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the phsycial Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "OutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An audio channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
///
/// Element "SendPrimacy" of type xs:anyURI.
    xsd__anyURI                          SendPrimacy                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.OutputLevelRange.
/// </BLOCKQUOTE></PRE>
///
/// Element "OutputLevel" of type xs:int.
    int                                  OutputLevel                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// <PRE><BLOCKQUOTE>
///   The Audio Decoder Configuration does not contain any that parameter to configure the
///   decoding .A decoder shall decode every data it receives (according to its capabilities).
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__AudioDecoderConfiguration operations:
/// - tt__AudioDecoderConfiguration* soap_new_tt__AudioDecoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AudioDecoderConfiguration(struct soap*, tt__AudioDecoderConfiguration*) default initialize members
/// - int soap_read_tt__AudioDecoderConfiguration(struct soap*, tt__AudioDecoderConfiguration*) deserialize from a source
/// - int soap_write_tt__AudioDecoderConfiguration(struct soap*, tt__AudioDecoderConfiguration*) serialize to a sink
/// - tt__AudioDecoderConfiguration* soap_dup_tt__AudioDecoderConfiguration(struct soap*, tt__AudioDecoderConfiguration* dst, tt__AudioDecoderConfiguration *src) returns deep copy of tt__AudioDecoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioDecoderConfiguration(tt__AudioDecoderConfiguration*) deep deletes tt__AudioDecoderConfiguration data members, use only on dst after soap_dup_tt__AudioDecoderConfiguration(NULL, tt__AudioDecoderConfiguration *dst, tt__AudioDecoderConfiguration *src) (use soapcpp2 -Ed)
struct tt__AudioDecoderConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterface is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note struct tt__NetworkInterface operations:
/// - tt__NetworkInterface* soap_new_tt__NetworkInterface(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterface(struct soap*, tt__NetworkInterface*) default initialize members
/// - int soap_read_tt__NetworkInterface(struct soap*, tt__NetworkInterface*) deserialize from a source
/// - int soap_write_tt__NetworkInterface(struct soap*, tt__NetworkInterface*) serialize to a sink
/// - tt__NetworkInterface* soap_dup_tt__NetworkInterface(struct soap*, tt__NetworkInterface* dst, tt__NetworkInterface *src) returns deep copy of tt__NetworkInterface src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterface(tt__NetworkInterface*) deep deletes tt__NetworkInterface data members, use only on dst after soap_dup_tt__NetworkInterface(NULL, tt__NetworkInterface *dst, tt__NetworkInterface *src) (use soapcpp2 -Ed)
struct tt__NetworkInterface
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface information
/// </BLOCKQUOTE></PRE>
///
/// Element "Info" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo.
    struct tt__NetworkInterfaceInfo*     Info                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Link" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceLink.
    struct tt__NetworkInterfaceLink*     Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4" of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterface.
    struct tt__IPv4NetworkInterface*     IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6" of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterface.
    struct tt__IPv6NetworkInterface*     IPv6                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension.
    struct tt__NetworkInterfaceExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateUsage is a complexType with simpleContent extension of type xs:string.
///
/// @note struct tt__CertificateUsage operations:
/// - tt__CertificateUsage* soap_new_tt__CertificateUsage(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CertificateUsage(struct soap*, tt__CertificateUsage*) default initialize members
/// - int soap_read_tt__CertificateUsage(struct soap*, tt__CertificateUsage*) deserialize from a source
/// - int soap_write_tt__CertificateUsage(struct soap*, tt__CertificateUsage*) serialize to a sink
/// - tt__CertificateUsage* soap_dup_tt__CertificateUsage(struct soap*, tt__CertificateUsage* dst, tt__CertificateUsage *src) returns deep copy of tt__CertificateUsage src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateUsage(tt__CertificateUsage*) deep deletes tt__CertificateUsage data members, use only on dst after soap_dup_tt__CertificateUsage(NULL, tt__CertificateUsage *dst, tt__CertificateUsage *src) (use soapcpp2 -Ed)
struct tt__CertificateUsage
{
/// INHERITED FROM tt__CertificateUsage:
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Attribute "Critical" of type xs:boolean.
  @ enum xsd__boolean                    Critical                       1;	///< Required attribute.
//  END OF INHERITED FROM tt__CertificateUsage
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note struct tt__RelayOutput operations:
/// - tt__RelayOutput* soap_new_tt__RelayOutput(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RelayOutput(struct soap*, tt__RelayOutput*) default initialize members
/// - int soap_read_tt__RelayOutput(struct soap*, tt__RelayOutput*) deserialize from a source
/// - int soap_write_tt__RelayOutput(struct soap*, tt__RelayOutput*) serialize to a sink
/// - tt__RelayOutput* soap_dup_tt__RelayOutput(struct soap*, tt__RelayOutput* dst, tt__RelayOutput *src) returns deep copy of tt__RelayOutput src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RelayOutput(tt__RelayOutput*) deep deletes tt__RelayOutput data members, use only on dst after soap_dup_tt__RelayOutput(NULL, tt__RelayOutput *dst, tt__RelayOutput *src) (use soapcpp2 -Ed)
struct tt__RelayOutput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// Element "Properties" of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    struct tt__RelayOutputSettings*      Properties                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DigitalInput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note struct tt__DigitalInput operations:
/// - tt__DigitalInput* soap_new_tt__DigitalInput(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DigitalInput(struct soap*, tt__DigitalInput*) default initialize members
/// - int soap_read_tt__DigitalInput(struct soap*, tt__DigitalInput*) deserialize from a source
/// - int soap_write_tt__DigitalInput(struct soap*, tt__DigitalInput*) serialize to a sink
/// - tt__DigitalInput* soap_dup_tt__DigitalInput(struct soap*, tt__DigitalInput* dst, tt__DigitalInput *src) returns deep copy of tt__DigitalInput src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DigitalInput(tt__DigitalInput*) deep deletes tt__DigitalInput data members, use only on dst after soap_dup_tt__DigitalInput(NULL, tt__DigitalInput *dst, tt__DigitalInput *src) (use soapcpp2 -Ed)
struct tt__DigitalInput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indicate the Digital IdleState status.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IdleState" of type "http://www.onvif.org/ver10/schema":DigitalIdleState.
  @ enum tt__DigitalIdleState*           IdleState                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNode is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note struct tt__PTZNode operations:
/// - tt__PTZNode* soap_new_tt__PTZNode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZNode(struct soap*, tt__PTZNode*) default initialize members
/// - int soap_read_tt__PTZNode(struct soap*, tt__PTZNode*) deserialize from a source
/// - int soap_write_tt__PTZNode(struct soap*, tt__PTZNode*) serialize to a sink
/// - tt__PTZNode* soap_dup_tt__PTZNode(struct soap*, tt__PTZNode* dst, tt__PTZNode *src) returns deep copy of tt__PTZNode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZNode(tt__PTZNode*) deep deletes tt__PTZNode data members, use only on dst after soap_dup_tt__PTZNode(NULL, tt__PTZNode *dst, tt__PTZNode *src) (use soapcpp2 -Ed)
struct tt__PTZNode
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   A unique identifier that is used to reference PTZ Nodes.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of Coordinate Systems available for the PTZ Node. For each Coordinate System, the PTZ Node MUST specify its allowed range.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedPTZSpaces" of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    struct tt__PTZSpaces*                SupportedPTZSpaces             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   All preset operations MUST be available for this PTZ Node if one preset is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfPresets" of type xs:int.
    int                                  MaximumNumberOfPresets         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A boolean operator specifying the availability of a home position. If set to true, the Home Position Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "HomeSupported" of type xs:boolean.
    enum xsd__boolean                    HomeSupported                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of supported Auxiliary commands. If the list is not empty, the Auxiliary Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__AuxiliaryData* is 0..unbounded.
  $ int                                  __sizeAuxiliaryCommands        0;
/// Array tt__AuxiliaryData* of size 0..unbounded.
    tt__AuxiliaryData*                   AuxiliaryCommands              0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZNodeExtension.
    struct tt__PTZNodeExtension*         Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indication whether the HomePosition of a Node is fixed or it can be changed via the SetHomePosition command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FixedHomePosition" of type xs:boolean.
  @ enum xsd__boolean*                   FixedHomePosition              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication whether the Node supports the geo-referenced move command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoMove" of type xs:boolean.
  @ enum xsd__boolean*                   GeoMove                        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__PTZConfiguration operations:
/// - tt__PTZConfiguration* soap_new_tt__PTZConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZConfiguration(struct soap*, tt__PTZConfiguration*) default initialize members
/// - int soap_read_tt__PTZConfiguration(struct soap*, tt__PTZConfiguration*) deserialize from a source
/// - int soap_write_tt__PTZConfiguration(struct soap*, tt__PTZConfiguration*) serialize to a sink
/// - tt__PTZConfiguration* soap_dup_tt__PTZConfiguration(struct soap*, tt__PTZConfiguration* dst, tt__PTZConfiguration *src) returns deep copy of tt__PTZConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZConfiguration(tt__PTZConfiguration*) deep deletes tt__PTZConfiguration data members, use only on dst after soap_dup_tt__PTZConfiguration(NULL, tt__PTZConfiguration *dst, tt__PTZConfiguration *src) (use soapcpp2 -Ed)
struct tt__PTZConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   A mandatory reference to the PTZ Node that the PTZ Configuration belongs to.
/// </BLOCKQUOTE></PRE>
///
/// Element "NodeToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute Pan/Tilt movements, it shall specify one Absolute Pan/Tilt Position Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultAbsolutePantTiltPositionSpace" of type xs:anyURI.
    xsd__anyURI                          DefaultAbsolutePantTiltPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute zoom movements, it shall specify one Absolute Zoom Position Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultAbsoluteZoomPositionSpace" of type xs:anyURI.
    xsd__anyURI                          DefaultAbsoluteZoomPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative Pan/Tilt movements, it shall specify one RelativePan/Tilt Translation Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultRelativePanTiltTranslationSpace" of type xs:anyURI.
    xsd__anyURI                          DefaultRelativePanTiltTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative zoom movements, it shall specify one Relative Zoom Translation Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultRelativeZoomTranslationSpace" of type xs:anyURI.
    xsd__anyURI                          DefaultRelativeZoomTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous Pan/Tilt movements, it shall specify one Continuous Pan/Tilt Velocity Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultContinuousPanTiltVelocitySpace" of type xs:anyURI.
    xsd__anyURI                          DefaultContinuousPanTiltVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous zoom movements, it shall specify one Continuous Zoom Velocity Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultContinuousZoomVelocitySpace" of type xs:anyURI.
    xsd__anyURI                          DefaultContinuousZoomVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute or relative PTZ movements, it shall specify corresponding default Pan/Tilt and Zoom speeds.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultPTZSpeed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 DefaultPTZSpeed                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous movements, it shall specify a default timeout, after which the movement stops.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultPTZTimeout" of type xs:duration.
    xsd__duration                        DefaultPTZTimeout              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Pan/Tilt limits element should be present for a PTZ Node that supports an absolute Pan/Tilt. If the element is present it signals the support for configurable Pan/Tilt limits. If limits are enabled, the Pan/Tilt movements shall always stay within the specified range. The Pan/Tilt limits are disabled by setting the limits to INF or +INF.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTiltLimits" of type "http://www.onvif.org/ver10/schema":PanTiltLimits.
    struct tt__PanTiltLimits*            PanTiltLimits                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Zoom limits element should be present for a PTZ Node that supports absolute zoom. If the element is present it signals the supports for configurable Zoom limits. If limits are enabled the zoom movements shall always stay within the specified range. The Zoom limits are disabled by settings the limits to -INF and +INF.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZoomLimits" of type "http://www.onvif.org/ver10/schema":ZoomLimits.
    struct tt__ZoomLimits*               ZoomLimits                     0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension.
    struct tt__PTZConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when moving.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MoveRamp" of type xs:int.
  @ int*                                 MoveRamp                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when recalling presets.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PresetRamp" of type xs:int.
  @ int*                                 PresetRamp                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when executing PresetTours.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PresetTourRamp" of type xs:int.
  @ int*                                 PresetTourRamp                 0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":EventFilter is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
///
/// @note struct tt__EventFilter operations:
/// - tt__EventFilter* soap_new_tt__EventFilter(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__EventFilter(struct soap*, tt__EventFilter*) default initialize members
/// - int soap_read_tt__EventFilter(struct soap*, tt__EventFilter*) deserialize from a source
/// - int soap_write_tt__EventFilter(struct soap*, tt__EventFilter*) serialize to a sink
/// - tt__EventFilter* soap_dup_tt__EventFilter(struct soap*, tt__EventFilter* dst, tt__EventFilter *src) returns deep copy of tt__EventFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EventFilter(tt__EventFilter*) deep deletes tt__EventFilter data members, use only on dst after soap_dup_tt__EventFilter(NULL, tt__EventFilter *dst, tt__EventFilter *src) (use soapcpp2 -Ed)
struct tt__EventFilter
{
/// INHERITED FROM wsnt__FilterType:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
//  END OF INHERITED FROM wsnt__FilterType
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngine is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__AnalyticsEngine operations:
/// - tt__AnalyticsEngine* soap_new_tt__AnalyticsEngine(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsEngine(struct soap*, tt__AnalyticsEngine*) default initialize members
/// - int soap_read_tt__AnalyticsEngine(struct soap*, tt__AnalyticsEngine*) deserialize from a source
/// - int soap_write_tt__AnalyticsEngine(struct soap*, tt__AnalyticsEngine*) serialize to a sink
/// - tt__AnalyticsEngine* soap_dup_tt__AnalyticsEngine(struct soap*, tt__AnalyticsEngine* dst, tt__AnalyticsEngine *src) returns deep copy of tt__AnalyticsEngine src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsEngine(tt__AnalyticsEngine*) deep deletes tt__AnalyticsEngine data members, use only on dst after soap_dup_tt__AnalyticsEngine(NULL, tt__AnalyticsEngine *dst, tt__AnalyticsEngine *src) (use soapcpp2 -Ed)
struct tt__AnalyticsEngine
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// Element "AnalyticsEngineConfiguration" of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration.
    struct tt__AnalyticsDeviceEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__AnalyticsEngineInput operations:
/// - tt__AnalyticsEngineInput* soap_new_tt__AnalyticsEngineInput(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsEngineInput(struct soap*, tt__AnalyticsEngineInput*) default initialize members
/// - int soap_read_tt__AnalyticsEngineInput(struct soap*, tt__AnalyticsEngineInput*) deserialize from a source
/// - int soap_write_tt__AnalyticsEngineInput(struct soap*, tt__AnalyticsEngineInput*) serialize to a sink
/// - tt__AnalyticsEngineInput* soap_dup_tt__AnalyticsEngineInput(struct soap*, tt__AnalyticsEngineInput* dst, tt__AnalyticsEngineInput *src) returns deep copy of tt__AnalyticsEngineInput src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsEngineInput(tt__AnalyticsEngineInput*) deep deletes tt__AnalyticsEngineInput data members, use only on dst after soap_dup_tt__AnalyticsEngineInput(NULL, tt__AnalyticsEngineInput *dst, tt__AnalyticsEngineInput *src) (use soapcpp2 -Ed)
struct tt__AnalyticsEngineInput
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// Element "SourceIdentification" of type "http://www.onvif.org/ver10/schema":SourceIdentification.
    struct tt__SourceIdentification*     SourceIdentification           1;	///< Required element.
/// Element "VideoInput" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  VideoInput                     1;	///< Required element.
/// Element "MetadataInput" of type "http://www.onvif.org/ver10/schema":MetadataInput.
    struct tt__MetadataInput*            MetadataInput                  1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineControl is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__AnalyticsEngineControl operations:
/// - tt__AnalyticsEngineControl* soap_new_tt__AnalyticsEngineControl(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsEngineControl(struct soap*, tt__AnalyticsEngineControl*) default initialize members
/// - int soap_read_tt__AnalyticsEngineControl(struct soap*, tt__AnalyticsEngineControl*) deserialize from a source
/// - int soap_write_tt__AnalyticsEngineControl(struct soap*, tt__AnalyticsEngineControl*) serialize to a sink
/// - tt__AnalyticsEngineControl* soap_dup_tt__AnalyticsEngineControl(struct soap*, tt__AnalyticsEngineControl* dst, tt__AnalyticsEngineControl *src) returns deep copy of tt__AnalyticsEngineControl src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsEngineControl(tt__AnalyticsEngineControl*) deep deletes tt__AnalyticsEngineControl data members, use only on dst after soap_dup_tt__AnalyticsEngineControl(NULL, tt__AnalyticsEngineControl *dst, tt__AnalyticsEngineControl *src) (use soapcpp2 -Ed)
struct tt__AnalyticsEngineControl
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the analytics engine (AnalyticsEngine) being controlled.
/// </BLOCKQUOTE></PRE>
///
/// Element "EngineToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the analytics engine configuration (VideoAnalyticsConfiguration) in effect.
/// </BLOCKQUOTE></PRE>
///
/// Element "EngineConfigToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineConfigToken              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Tokens of the input (AnalyticsEngineInput) configuration applied.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__ReferenceToken* is 1..unbounded.
  $ int                                  __sizeInputToken               1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  InputToken                     1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Tokens of the receiver providing media input data. The order of ReceiverToken shall exactly match the order of InputToken.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__ReferenceToken* is 1..unbounded.
  $ int                                  __sizeReceiverToken            1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  ReceiverToken                  1;	///< Multiple elements.
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      0;	///< Optional element.
/// Element "Subscription" of type "http://www.onvif.org/ver10/schema":Config.
    struct tt__Config*                   Subscription                   1;	///< Required element.
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ModeOfOperation.
    enum tt__ModeOfOperation             Mode                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note struct tt__OSDConfiguration operations:
/// - tt__OSDConfiguration* soap_new_tt__OSDConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDConfiguration(struct soap*, tt__OSDConfiguration*) default initialize members
/// - int soap_read_tt__OSDConfiguration(struct soap*, tt__OSDConfiguration*) deserialize from a source
/// - int soap_write_tt__OSDConfiguration(struct soap*, tt__OSDConfiguration*) serialize to a sink
/// - tt__OSDConfiguration* soap_dup_tt__OSDConfiguration(struct soap*, tt__OSDConfiguration* dst, tt__OSDConfiguration *src) returns deep copy of tt__OSDConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDConfiguration(tt__OSDConfiguration*) deep deletes tt__OSDConfiguration data members, use only on dst after soap_dup_tt__OSDConfiguration(NULL, tt__OSDConfiguration *dst, tt__OSDConfiguration *src) (use soapcpp2 -Ed)
struct tt__OSDConfiguration
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   Reference to the video source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceConfigurationToken" of type "http://www.onvif.org/ver10/schema":OSDReference.
    struct tt__OSDReference*             VideoSourceConfigurationToken  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Type of OSD.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":OSDType.
    enum tt__OSDType                     Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Position configuration of OSD.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":OSDPosConfiguration.
    struct tt__OSDPosConfiguration*      Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Text configuration of OSD. It shall be present when the value of Type field is Text.
/// </BLOCKQUOTE></PRE>
///
/// Element "TextString" of type "http://www.onvif.org/ver10/schema":OSDTextConfiguration.
    struct tt__OSDTextConfiguration*     TextString                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image configuration of OSD. It shall be present when the value of Type field is Image
/// </BLOCKQUOTE></PRE>
///
/// Element "Image" of type "http://www.onvif.org/ver10/schema":OSDImgConfiguration.
    struct tt__OSDImgConfiguration*      Image                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDConfigurationExtension.
    struct tt__OSDConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__SubscribeCreationFailedFaultType operations:
/// - wsnt__SubscribeCreationFailedFaultType* soap_new_wsnt__SubscribeCreationFailedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__SubscribeCreationFailedFaultType(struct soap*, wsnt__SubscribeCreationFailedFaultType*) default initialize members
/// - int soap_read_wsnt__SubscribeCreationFailedFaultType(struct soap*, wsnt__SubscribeCreationFailedFaultType*) deserialize from a source
/// - int soap_write_wsnt__SubscribeCreationFailedFaultType(struct soap*, wsnt__SubscribeCreationFailedFaultType*) serialize to a sink
/// - wsnt__SubscribeCreationFailedFaultType* soap_dup_wsnt__SubscribeCreationFailedFaultType(struct soap*, wsnt__SubscribeCreationFailedFaultType* dst, wsnt__SubscribeCreationFailedFaultType *src) returns deep copy of wsnt__SubscribeCreationFailedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__SubscribeCreationFailedFaultType(wsnt__SubscribeCreationFailedFaultType*) deep deletes wsnt__SubscribeCreationFailedFaultType data members, use only on dst after soap_dup_wsnt__SubscribeCreationFailedFaultType(NULL, wsnt__SubscribeCreationFailedFaultType *dst, wsnt__SubscribeCreationFailedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__SubscribeCreationFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode operations:
/// - _wsnt__SubscribeCreationFailedFaultType_ErrorCode* soap_new__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__SubscribeCreationFailedFaultType_ErrorCode* soap_dup__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode* dst, _wsnt__SubscribeCreationFailedFaultType_ErrorCode *src) returns deep copy of _wsnt__SubscribeCreationFailedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeCreationFailedFaultType_ErrorCode(_wsnt__SubscribeCreationFailedFaultType_ErrorCode*) deep deletes _wsnt__SubscribeCreationFailedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__SubscribeCreationFailedFaultType_ErrorCode(NULL, _wsnt__SubscribeCreationFailedFaultType_ErrorCode *dst, _wsnt__SubscribeCreationFailedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__SubscribeCreationFailedFaultType_Description operations:
/// - _wsnt__SubscribeCreationFailedFaultType_Description* soap_new__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, _wsnt__SubscribeCreationFailedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, _wsnt__SubscribeCreationFailedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, _wsnt__SubscribeCreationFailedFaultType_Description*) serialize to a sink
/// - _wsnt__SubscribeCreationFailedFaultType_Description* soap_dup__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, _wsnt__SubscribeCreationFailedFaultType_Description* dst, _wsnt__SubscribeCreationFailedFaultType_Description *src) returns deep copy of _wsnt__SubscribeCreationFailedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeCreationFailedFaultType_Description(_wsnt__SubscribeCreationFailedFaultType_Description*) deep deletes _wsnt__SubscribeCreationFailedFaultType_Description data members, use only on dst after soap_dup__wsnt__SubscribeCreationFailedFaultType_Description(NULL, _wsnt__SubscribeCreationFailedFaultType_Description *dst, _wsnt__SubscribeCreationFailedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__SubscribeCreationFailedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__SubscribeCreationFailedFaultType_FaultCause operations:
/// - _wsnt__SubscribeCreationFailedFaultType_FaultCause* soap_new__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__SubscribeCreationFailedFaultType_FaultCause* soap_dup__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause* dst, _wsnt__SubscribeCreationFailedFaultType_FaultCause *src) returns deep copy of _wsnt__SubscribeCreationFailedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeCreationFailedFaultType_FaultCause(_wsnt__SubscribeCreationFailedFaultType_FaultCause*) deep deletes _wsnt__SubscribeCreationFailedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__SubscribeCreationFailedFaultType_FaultCause(NULL, _wsnt__SubscribeCreationFailedFaultType_FaultCause *dst, _wsnt__SubscribeCreationFailedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__SubscribeCreationFailedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__InvalidFilterFaultType operations:
/// - wsnt__InvalidFilterFaultType* soap_new_wsnt__InvalidFilterFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__InvalidFilterFaultType(struct soap*, wsnt__InvalidFilterFaultType*) default initialize members
/// - int soap_read_wsnt__InvalidFilterFaultType(struct soap*, wsnt__InvalidFilterFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidFilterFaultType(struct soap*, wsnt__InvalidFilterFaultType*) serialize to a sink
/// - wsnt__InvalidFilterFaultType* soap_dup_wsnt__InvalidFilterFaultType(struct soap*, wsnt__InvalidFilterFaultType* dst, wsnt__InvalidFilterFaultType *src) returns deep copy of wsnt__InvalidFilterFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidFilterFaultType(wsnt__InvalidFilterFaultType*) deep deletes wsnt__InvalidFilterFaultType data members, use only on dst after soap_dup_wsnt__InvalidFilterFaultType(NULL, wsnt__InvalidFilterFaultType *dst, wsnt__InvalidFilterFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidFilterFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__InvalidFilterFaultType_ErrorCode operations:
/// - _wsnt__InvalidFilterFaultType_ErrorCode* soap_new__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, _wsnt__InvalidFilterFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, _wsnt__InvalidFilterFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, _wsnt__InvalidFilterFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidFilterFaultType_ErrorCode* soap_dup__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, _wsnt__InvalidFilterFaultType_ErrorCode* dst, _wsnt__InvalidFilterFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidFilterFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidFilterFaultType_ErrorCode(_wsnt__InvalidFilterFaultType_ErrorCode*) deep deletes _wsnt__InvalidFilterFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidFilterFaultType_ErrorCode(NULL, _wsnt__InvalidFilterFaultType_ErrorCode *dst, _wsnt__InvalidFilterFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidFilterFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__InvalidFilterFaultType_Description operations:
/// - _wsnt__InvalidFilterFaultType_Description* soap_new__wsnt__InvalidFilterFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidFilterFaultType_Description(struct soap*, _wsnt__InvalidFilterFaultType_Description*) default initialize members
/// - int soap_read__wsnt__InvalidFilterFaultType_Description(struct soap*, _wsnt__InvalidFilterFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidFilterFaultType_Description(struct soap*, _wsnt__InvalidFilterFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidFilterFaultType_Description* soap_dup__wsnt__InvalidFilterFaultType_Description(struct soap*, _wsnt__InvalidFilterFaultType_Description* dst, _wsnt__InvalidFilterFaultType_Description *src) returns deep copy of _wsnt__InvalidFilterFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidFilterFaultType_Description(_wsnt__InvalidFilterFaultType_Description*) deep deletes _wsnt__InvalidFilterFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidFilterFaultType_Description(NULL, _wsnt__InvalidFilterFaultType_Description *dst, _wsnt__InvalidFilterFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidFilterFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__InvalidFilterFaultType_FaultCause operations:
/// - _wsnt__InvalidFilterFaultType_FaultCause* soap_new__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, _wsnt__InvalidFilterFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, _wsnt__InvalidFilterFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, _wsnt__InvalidFilterFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidFilterFaultType_FaultCause* soap_dup__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, _wsnt__InvalidFilterFaultType_FaultCause* dst, _wsnt__InvalidFilterFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidFilterFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidFilterFaultType_FaultCause(_wsnt__InvalidFilterFaultType_FaultCause*) deep deletes _wsnt__InvalidFilterFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidFilterFaultType_FaultCause(NULL, _wsnt__InvalidFilterFaultType_FaultCause *dst, _wsnt__InvalidFilterFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidFilterFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 1..unbounded.
  $ int                                  __sizeUnknownFilter            1;
/// Array _QName* of size 1..unbounded.
    _QName*                              UnknownFilter                  1;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__TopicExpressionDialectUnknownFaultType operations:
/// - wsnt__TopicExpressionDialectUnknownFaultType* soap_new_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, wsnt__TopicExpressionDialectUnknownFaultType*) default initialize members
/// - int soap_read_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, wsnt__TopicExpressionDialectUnknownFaultType*) deserialize from a source
/// - int soap_write_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, wsnt__TopicExpressionDialectUnknownFaultType*) serialize to a sink
/// - wsnt__TopicExpressionDialectUnknownFaultType* soap_dup_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, wsnt__TopicExpressionDialectUnknownFaultType* dst, wsnt__TopicExpressionDialectUnknownFaultType *src) returns deep copy of wsnt__TopicExpressionDialectUnknownFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__TopicExpressionDialectUnknownFaultType(wsnt__TopicExpressionDialectUnknownFaultType*) deep deletes wsnt__TopicExpressionDialectUnknownFaultType data members, use only on dst after soap_dup_wsnt__TopicExpressionDialectUnknownFaultType(NULL, wsnt__TopicExpressionDialectUnknownFaultType *dst, wsnt__TopicExpressionDialectUnknownFaultType *src) (use soapcpp2 -Ed)
struct wsnt__TopicExpressionDialectUnknownFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode operations:
/// - _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode* soap_new__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode* soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode* dst, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *src) returns deep copy of _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) deep deletes _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(NULL, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *dst, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__TopicExpressionDialectUnknownFaultType_Description operations:
/// - _wsnt__TopicExpressionDialectUnknownFaultType_Description* soap_new__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description*) default initialize members
/// - int soap_read__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description*) serialize to a sink
/// - _wsnt__TopicExpressionDialectUnknownFaultType_Description* soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description* dst, _wsnt__TopicExpressionDialectUnknownFaultType_Description *src) returns deep copy of _wsnt__TopicExpressionDialectUnknownFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicExpressionDialectUnknownFaultType_Description(_wsnt__TopicExpressionDialectUnknownFaultType_Description*) deep deletes _wsnt__TopicExpressionDialectUnknownFaultType_Description data members, use only on dst after soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_Description(NULL, _wsnt__TopicExpressionDialectUnknownFaultType_Description *dst, _wsnt__TopicExpressionDialectUnknownFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicExpressionDialectUnknownFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause operations:
/// - _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause* soap_new__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) serialize to a sink
/// - _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause* soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause* dst, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *src) returns deep copy of _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) deep deletes _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(NULL, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *dst, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__InvalidTopicExpressionFaultType operations:
/// - wsnt__InvalidTopicExpressionFaultType* soap_new_wsnt__InvalidTopicExpressionFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__InvalidTopicExpressionFaultType(struct soap*, wsnt__InvalidTopicExpressionFaultType*) default initialize members
/// - int soap_read_wsnt__InvalidTopicExpressionFaultType(struct soap*, wsnt__InvalidTopicExpressionFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidTopicExpressionFaultType(struct soap*, wsnt__InvalidTopicExpressionFaultType*) serialize to a sink
/// - wsnt__InvalidTopicExpressionFaultType* soap_dup_wsnt__InvalidTopicExpressionFaultType(struct soap*, wsnt__InvalidTopicExpressionFaultType* dst, wsnt__InvalidTopicExpressionFaultType *src) returns deep copy of wsnt__InvalidTopicExpressionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidTopicExpressionFaultType(wsnt__InvalidTopicExpressionFaultType*) deep deletes wsnt__InvalidTopicExpressionFaultType data members, use only on dst after soap_dup_wsnt__InvalidTopicExpressionFaultType(NULL, wsnt__InvalidTopicExpressionFaultType *dst, wsnt__InvalidTopicExpressionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidTopicExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode operations:
/// - _wsnt__InvalidTopicExpressionFaultType_ErrorCode* soap_new__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidTopicExpressionFaultType_ErrorCode* soap_dup__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode* dst, _wsnt__InvalidTopicExpressionFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidTopicExpressionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidTopicExpressionFaultType_ErrorCode(_wsnt__InvalidTopicExpressionFaultType_ErrorCode*) deep deletes _wsnt__InvalidTopicExpressionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidTopicExpressionFaultType_ErrorCode(NULL, _wsnt__InvalidTopicExpressionFaultType_ErrorCode *dst, _wsnt__InvalidTopicExpressionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__InvalidTopicExpressionFaultType_Description operations:
/// - _wsnt__InvalidTopicExpressionFaultType_Description* soap_new__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, _wsnt__InvalidTopicExpressionFaultType_Description*) default initialize members
/// - int soap_read__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, _wsnt__InvalidTopicExpressionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, _wsnt__InvalidTopicExpressionFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidTopicExpressionFaultType_Description* soap_dup__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, _wsnt__InvalidTopicExpressionFaultType_Description* dst, _wsnt__InvalidTopicExpressionFaultType_Description *src) returns deep copy of _wsnt__InvalidTopicExpressionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidTopicExpressionFaultType_Description(_wsnt__InvalidTopicExpressionFaultType_Description*) deep deletes _wsnt__InvalidTopicExpressionFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidTopicExpressionFaultType_Description(NULL, _wsnt__InvalidTopicExpressionFaultType_Description *dst, _wsnt__InvalidTopicExpressionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidTopicExpressionFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__InvalidTopicExpressionFaultType_FaultCause operations:
/// - _wsnt__InvalidTopicExpressionFaultType_FaultCause* soap_new__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidTopicExpressionFaultType_FaultCause* soap_dup__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause* dst, _wsnt__InvalidTopicExpressionFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidTopicExpressionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidTopicExpressionFaultType_FaultCause(_wsnt__InvalidTopicExpressionFaultType_FaultCause*) deep deletes _wsnt__InvalidTopicExpressionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidTopicExpressionFaultType_FaultCause(NULL, _wsnt__InvalidTopicExpressionFaultType_FaultCause *dst, _wsnt__InvalidTopicExpressionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidTopicExpressionFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__TopicNotSupportedFaultType operations:
/// - wsnt__TopicNotSupportedFaultType* soap_new_wsnt__TopicNotSupportedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__TopicNotSupportedFaultType(struct soap*, wsnt__TopicNotSupportedFaultType*) default initialize members
/// - int soap_read_wsnt__TopicNotSupportedFaultType(struct soap*, wsnt__TopicNotSupportedFaultType*) deserialize from a source
/// - int soap_write_wsnt__TopicNotSupportedFaultType(struct soap*, wsnt__TopicNotSupportedFaultType*) serialize to a sink
/// - wsnt__TopicNotSupportedFaultType* soap_dup_wsnt__TopicNotSupportedFaultType(struct soap*, wsnt__TopicNotSupportedFaultType* dst, wsnt__TopicNotSupportedFaultType *src) returns deep copy of wsnt__TopicNotSupportedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__TopicNotSupportedFaultType(wsnt__TopicNotSupportedFaultType*) deep deletes wsnt__TopicNotSupportedFaultType data members, use only on dst after soap_dup_wsnt__TopicNotSupportedFaultType(NULL, wsnt__TopicNotSupportedFaultType *dst, wsnt__TopicNotSupportedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__TopicNotSupportedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__TopicNotSupportedFaultType_ErrorCode operations:
/// - _wsnt__TopicNotSupportedFaultType_ErrorCode* soap_new__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__TopicNotSupportedFaultType_ErrorCode* soap_dup__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode* dst, _wsnt__TopicNotSupportedFaultType_ErrorCode *src) returns deep copy of _wsnt__TopicNotSupportedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicNotSupportedFaultType_ErrorCode(_wsnt__TopicNotSupportedFaultType_ErrorCode*) deep deletes _wsnt__TopicNotSupportedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__TopicNotSupportedFaultType_ErrorCode(NULL, _wsnt__TopicNotSupportedFaultType_ErrorCode *dst, _wsnt__TopicNotSupportedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicNotSupportedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__TopicNotSupportedFaultType_Description operations:
/// - _wsnt__TopicNotSupportedFaultType_Description* soap_new__wsnt__TopicNotSupportedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicNotSupportedFaultType_Description(struct soap*, _wsnt__TopicNotSupportedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__TopicNotSupportedFaultType_Description(struct soap*, _wsnt__TopicNotSupportedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__TopicNotSupportedFaultType_Description(struct soap*, _wsnt__TopicNotSupportedFaultType_Description*) serialize to a sink
/// - _wsnt__TopicNotSupportedFaultType_Description* soap_dup__wsnt__TopicNotSupportedFaultType_Description(struct soap*, _wsnt__TopicNotSupportedFaultType_Description* dst, _wsnt__TopicNotSupportedFaultType_Description *src) returns deep copy of _wsnt__TopicNotSupportedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicNotSupportedFaultType_Description(_wsnt__TopicNotSupportedFaultType_Description*) deep deletes _wsnt__TopicNotSupportedFaultType_Description data members, use only on dst after soap_dup__wsnt__TopicNotSupportedFaultType_Description(NULL, _wsnt__TopicNotSupportedFaultType_Description *dst, _wsnt__TopicNotSupportedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicNotSupportedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__TopicNotSupportedFaultType_FaultCause operations:
/// - _wsnt__TopicNotSupportedFaultType_FaultCause* soap_new__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, _wsnt__TopicNotSupportedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, _wsnt__TopicNotSupportedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, _wsnt__TopicNotSupportedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__TopicNotSupportedFaultType_FaultCause* soap_dup__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, _wsnt__TopicNotSupportedFaultType_FaultCause* dst, _wsnt__TopicNotSupportedFaultType_FaultCause *src) returns deep copy of _wsnt__TopicNotSupportedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicNotSupportedFaultType_FaultCause(_wsnt__TopicNotSupportedFaultType_FaultCause*) deep deletes _wsnt__TopicNotSupportedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__TopicNotSupportedFaultType_FaultCause(NULL, _wsnt__TopicNotSupportedFaultType_FaultCause *dst, _wsnt__TopicNotSupportedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicNotSupportedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__MultipleTopicsSpecifiedFaultType operations:
/// - wsnt__MultipleTopicsSpecifiedFaultType* soap_new_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, wsnt__MultipleTopicsSpecifiedFaultType*) default initialize members
/// - int soap_read_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, wsnt__MultipleTopicsSpecifiedFaultType*) deserialize from a source
/// - int soap_write_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, wsnt__MultipleTopicsSpecifiedFaultType*) serialize to a sink
/// - wsnt__MultipleTopicsSpecifiedFaultType* soap_dup_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, wsnt__MultipleTopicsSpecifiedFaultType* dst, wsnt__MultipleTopicsSpecifiedFaultType *src) returns deep copy of wsnt__MultipleTopicsSpecifiedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__MultipleTopicsSpecifiedFaultType(wsnt__MultipleTopicsSpecifiedFaultType*) deep deletes wsnt__MultipleTopicsSpecifiedFaultType data members, use only on dst after soap_dup_wsnt__MultipleTopicsSpecifiedFaultType(NULL, wsnt__MultipleTopicsSpecifiedFaultType *dst, wsnt__MultipleTopicsSpecifiedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__MultipleTopicsSpecifiedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode operations:
/// - _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode* soap_new__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode* soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode* dst, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *src) returns deep copy of _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) deep deletes _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(NULL, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *dst, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__MultipleTopicsSpecifiedFaultType_Description operations:
/// - _wsnt__MultipleTopicsSpecifiedFaultType_Description* soap_new__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description*) serialize to a sink
/// - _wsnt__MultipleTopicsSpecifiedFaultType_Description* soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description* dst, _wsnt__MultipleTopicsSpecifiedFaultType_Description *src) returns deep copy of _wsnt__MultipleTopicsSpecifiedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__MultipleTopicsSpecifiedFaultType_Description(_wsnt__MultipleTopicsSpecifiedFaultType_Description*) deep deletes _wsnt__MultipleTopicsSpecifiedFaultType_Description data members, use only on dst after soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_Description(NULL, _wsnt__MultipleTopicsSpecifiedFaultType_Description *dst, _wsnt__MultipleTopicsSpecifiedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__MultipleTopicsSpecifiedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause operations:
/// - _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause* soap_new__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause* soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause* dst, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *src) returns deep copy of _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) deep deletes _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(NULL, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *dst, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__InvalidProducerPropertiesExpressionFaultType operations:
/// - wsnt__InvalidProducerPropertiesExpressionFaultType* soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) default initialize members
/// - int soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) serialize to a sink
/// - wsnt__InvalidProducerPropertiesExpressionFaultType* soap_dup_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, wsnt__InvalidProducerPropertiesExpressionFaultType* dst, wsnt__InvalidProducerPropertiesExpressionFaultType *src) returns deep copy of wsnt__InvalidProducerPropertiesExpressionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidProducerPropertiesExpressionFaultType(wsnt__InvalidProducerPropertiesExpressionFaultType*) deep deletes wsnt__InvalidProducerPropertiesExpressionFaultType data members, use only on dst after soap_dup_wsnt__InvalidProducerPropertiesExpressionFaultType(NULL, wsnt__InvalidProducerPropertiesExpressionFaultType *dst, wsnt__InvalidProducerPropertiesExpressionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidProducerPropertiesExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode operations:
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode* soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode* soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode* dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) deep deletes _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(NULL, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description operations:
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_Description* soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) default initialize members
/// - int soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_Description* soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description* dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *src) returns deep copy of _wsnt__InvalidProducerPropertiesExpressionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(_wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) deep deletes _wsnt__InvalidProducerPropertiesExpressionFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(NULL, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause operations:
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause* soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause* soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause* dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) deep deletes _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(NULL, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__InvalidMessageContentExpressionFaultType operations:
/// - wsnt__InvalidMessageContentExpressionFaultType* soap_new_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, wsnt__InvalidMessageContentExpressionFaultType*) default initialize members
/// - int soap_read_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, wsnt__InvalidMessageContentExpressionFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, wsnt__InvalidMessageContentExpressionFaultType*) serialize to a sink
/// - wsnt__InvalidMessageContentExpressionFaultType* soap_dup_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, wsnt__InvalidMessageContentExpressionFaultType* dst, wsnt__InvalidMessageContentExpressionFaultType *src) returns deep copy of wsnt__InvalidMessageContentExpressionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidMessageContentExpressionFaultType(wsnt__InvalidMessageContentExpressionFaultType*) deep deletes wsnt__InvalidMessageContentExpressionFaultType data members, use only on dst after soap_dup_wsnt__InvalidMessageContentExpressionFaultType(NULL, wsnt__InvalidMessageContentExpressionFaultType *dst, wsnt__InvalidMessageContentExpressionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidMessageContentExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode operations:
/// - _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode* soap_new__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode* soap_dup__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode* dst, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) deep deletes _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(NULL, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *dst, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__InvalidMessageContentExpressionFaultType_Description operations:
/// - _wsnt__InvalidMessageContentExpressionFaultType_Description* soap_new__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description*) default initialize members
/// - int soap_read__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidMessageContentExpressionFaultType_Description* soap_dup__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description* dst, _wsnt__InvalidMessageContentExpressionFaultType_Description *src) returns deep copy of _wsnt__InvalidMessageContentExpressionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidMessageContentExpressionFaultType_Description(_wsnt__InvalidMessageContentExpressionFaultType_Description*) deep deletes _wsnt__InvalidMessageContentExpressionFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidMessageContentExpressionFaultType_Description(NULL, _wsnt__InvalidMessageContentExpressionFaultType_Description *dst, _wsnt__InvalidMessageContentExpressionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidMessageContentExpressionFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause operations:
/// - _wsnt__InvalidMessageContentExpressionFaultType_FaultCause* soap_new__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidMessageContentExpressionFaultType_FaultCause* soap_dup__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause* dst, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidMessageContentExpressionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(_wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) deep deletes _wsnt__InvalidMessageContentExpressionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(NULL, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *dst, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnrecognizedPolicyRequestFaultType operations:
/// - wsnt__UnrecognizedPolicyRequestFaultType* soap_new_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, wsnt__UnrecognizedPolicyRequestFaultType*) default initialize members
/// - int soap_read_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, wsnt__UnrecognizedPolicyRequestFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, wsnt__UnrecognizedPolicyRequestFaultType*) serialize to a sink
/// - wsnt__UnrecognizedPolicyRequestFaultType* soap_dup_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, wsnt__UnrecognizedPolicyRequestFaultType* dst, wsnt__UnrecognizedPolicyRequestFaultType *src) returns deep copy of wsnt__UnrecognizedPolicyRequestFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnrecognizedPolicyRequestFaultType(wsnt__UnrecognizedPolicyRequestFaultType*) deep deletes wsnt__UnrecognizedPolicyRequestFaultType data members, use only on dst after soap_dup_wsnt__UnrecognizedPolicyRequestFaultType(NULL, wsnt__UnrecognizedPolicyRequestFaultType *dst, wsnt__UnrecognizedPolicyRequestFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnrecognizedPolicyRequestFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode operations:
/// - _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode* soap_new__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode* soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode* dst, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *src) returns deep copy of _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) deep deletes _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(NULL, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *dst, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnrecognizedPolicyRequestFaultType_Description operations:
/// - _wsnt__UnrecognizedPolicyRequestFaultType_Description* soap_new__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description*) serialize to a sink
/// - _wsnt__UnrecognizedPolicyRequestFaultType_Description* soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description* dst, _wsnt__UnrecognizedPolicyRequestFaultType_Description *src) returns deep copy of _wsnt__UnrecognizedPolicyRequestFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnrecognizedPolicyRequestFaultType_Description(_wsnt__UnrecognizedPolicyRequestFaultType_Description*) deep deletes _wsnt__UnrecognizedPolicyRequestFaultType_Description data members, use only on dst after soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_Description(NULL, _wsnt__UnrecognizedPolicyRequestFaultType_Description *dst, _wsnt__UnrecognizedPolicyRequestFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnrecognizedPolicyRequestFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause operations:
/// - _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause* soap_new__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause* soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause* dst, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *src) returns deep copy of _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) deep deletes _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(NULL, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *dst, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 0..unbounded.
  $ int                                  __sizeUnrecognizedPolicy       0;
/// Array _QName* of size 0..unbounded.
    _QName*                              UnrecognizedPolicy             0;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnsupportedPolicyRequestFaultType operations:
/// - wsnt__UnsupportedPolicyRequestFaultType* soap_new_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, wsnt__UnsupportedPolicyRequestFaultType*) default initialize members
/// - int soap_read_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, wsnt__UnsupportedPolicyRequestFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, wsnt__UnsupportedPolicyRequestFaultType*) serialize to a sink
/// - wsnt__UnsupportedPolicyRequestFaultType* soap_dup_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, wsnt__UnsupportedPolicyRequestFaultType* dst, wsnt__UnsupportedPolicyRequestFaultType *src) returns deep copy of wsnt__UnsupportedPolicyRequestFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnsupportedPolicyRequestFaultType(wsnt__UnsupportedPolicyRequestFaultType*) deep deletes wsnt__UnsupportedPolicyRequestFaultType data members, use only on dst after soap_dup_wsnt__UnsupportedPolicyRequestFaultType(NULL, wsnt__UnsupportedPolicyRequestFaultType *dst, wsnt__UnsupportedPolicyRequestFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnsupportedPolicyRequestFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode operations:
/// - _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode* soap_new__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode* soap_dup__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode* dst, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *src) returns deep copy of _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) deep deletes _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(NULL, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *dst, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnsupportedPolicyRequestFaultType_Description operations:
/// - _wsnt__UnsupportedPolicyRequestFaultType_Description* soap_new__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description*) serialize to a sink
/// - _wsnt__UnsupportedPolicyRequestFaultType_Description* soap_dup__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description* dst, _wsnt__UnsupportedPolicyRequestFaultType_Description *src) returns deep copy of _wsnt__UnsupportedPolicyRequestFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsupportedPolicyRequestFaultType_Description(_wsnt__UnsupportedPolicyRequestFaultType_Description*) deep deletes _wsnt__UnsupportedPolicyRequestFaultType_Description data members, use only on dst after soap_dup__wsnt__UnsupportedPolicyRequestFaultType_Description(NULL, _wsnt__UnsupportedPolicyRequestFaultType_Description *dst, _wsnt__UnsupportedPolicyRequestFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnsupportedPolicyRequestFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause operations:
/// - _wsnt__UnsupportedPolicyRequestFaultType_FaultCause* soap_new__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnsupportedPolicyRequestFaultType_FaultCause* soap_dup__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause* dst, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *src) returns deep copy of _wsnt__UnsupportedPolicyRequestFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(_wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) deep deletes _wsnt__UnsupportedPolicyRequestFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(NULL, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *dst, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 0..unbounded.
  $ int                                  __sizeUnsupportedPolicy        0;
/// Array _QName* of size 0..unbounded.
    _QName*                              UnsupportedPolicy              0;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__NotifyMessageNotSupportedFaultType operations:
/// - wsnt__NotifyMessageNotSupportedFaultType* soap_new_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, wsnt__NotifyMessageNotSupportedFaultType*) default initialize members
/// - int soap_read_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, wsnt__NotifyMessageNotSupportedFaultType*) deserialize from a source
/// - int soap_write_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, wsnt__NotifyMessageNotSupportedFaultType*) serialize to a sink
/// - wsnt__NotifyMessageNotSupportedFaultType* soap_dup_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, wsnt__NotifyMessageNotSupportedFaultType* dst, wsnt__NotifyMessageNotSupportedFaultType *src) returns deep copy of wsnt__NotifyMessageNotSupportedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__NotifyMessageNotSupportedFaultType(wsnt__NotifyMessageNotSupportedFaultType*) deep deletes wsnt__NotifyMessageNotSupportedFaultType data members, use only on dst after soap_dup_wsnt__NotifyMessageNotSupportedFaultType(NULL, wsnt__NotifyMessageNotSupportedFaultType *dst, wsnt__NotifyMessageNotSupportedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__NotifyMessageNotSupportedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode operations:
/// - _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode* soap_new__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode* soap_dup__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode* dst, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *src) returns deep copy of _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) deep deletes _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(NULL, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *dst, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__NotifyMessageNotSupportedFaultType_Description operations:
/// - _wsnt__NotifyMessageNotSupportedFaultType_Description* soap_new__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description*) serialize to a sink
/// - _wsnt__NotifyMessageNotSupportedFaultType_Description* soap_dup__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description* dst, _wsnt__NotifyMessageNotSupportedFaultType_Description *src) returns deep copy of _wsnt__NotifyMessageNotSupportedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotifyMessageNotSupportedFaultType_Description(_wsnt__NotifyMessageNotSupportedFaultType_Description*) deep deletes _wsnt__NotifyMessageNotSupportedFaultType_Description data members, use only on dst after soap_dup__wsnt__NotifyMessageNotSupportedFaultType_Description(NULL, _wsnt__NotifyMessageNotSupportedFaultType_Description *dst, _wsnt__NotifyMessageNotSupportedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__NotifyMessageNotSupportedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause operations:
/// - _wsnt__NotifyMessageNotSupportedFaultType_FaultCause* soap_new__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__NotifyMessageNotSupportedFaultType_FaultCause* soap_dup__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause* dst, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *src) returns deep copy of _wsnt__NotifyMessageNotSupportedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(_wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) deep deletes _wsnt__NotifyMessageNotSupportedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(NULL, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *dst, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnacceptableInitialTerminationTimeFaultType operations:
/// - wsnt__UnacceptableInitialTerminationTimeFaultType* soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) default initialize members
/// - int soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) serialize to a sink
/// - wsnt__UnacceptableInitialTerminationTimeFaultType* soap_dup_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, wsnt__UnacceptableInitialTerminationTimeFaultType* dst, wsnt__UnacceptableInitialTerminationTimeFaultType *src) returns deep copy of wsnt__UnacceptableInitialTerminationTimeFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnacceptableInitialTerminationTimeFaultType(wsnt__UnacceptableInitialTerminationTimeFaultType*) deep deletes wsnt__UnacceptableInitialTerminationTimeFaultType data members, use only on dst after soap_dup_wsnt__UnacceptableInitialTerminationTimeFaultType(NULL, wsnt__UnacceptableInitialTerminationTimeFaultType *dst, wsnt__UnacceptableInitialTerminationTimeFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnacceptableInitialTerminationTimeFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode operations:
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode* soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode* soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode* dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *src) returns deep copy of _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) deep deletes _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(NULL, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description operations:
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_Description* soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) serialize to a sink
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_Description* soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description* dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *src) returns deep copy of _wsnt__UnacceptableInitialTerminationTimeFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(_wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) deep deletes _wsnt__UnacceptableInitialTerminationTimeFaultType_Description data members, use only on dst after soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(NULL, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause operations:
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause* soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause* soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause* dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *src) returns deep copy of _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) deep deletes _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(NULL, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Element "MinimumTime" of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__NoCurrentMessageOnTopicFaultType operations:
/// - wsnt__NoCurrentMessageOnTopicFaultType* soap_new_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, wsnt__NoCurrentMessageOnTopicFaultType*) default initialize members
/// - int soap_read_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, wsnt__NoCurrentMessageOnTopicFaultType*) deserialize from a source
/// - int soap_write_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, wsnt__NoCurrentMessageOnTopicFaultType*) serialize to a sink
/// - wsnt__NoCurrentMessageOnTopicFaultType* soap_dup_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, wsnt__NoCurrentMessageOnTopicFaultType* dst, wsnt__NoCurrentMessageOnTopicFaultType *src) returns deep copy of wsnt__NoCurrentMessageOnTopicFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__NoCurrentMessageOnTopicFaultType(wsnt__NoCurrentMessageOnTopicFaultType*) deep deletes wsnt__NoCurrentMessageOnTopicFaultType data members, use only on dst after soap_dup_wsnt__NoCurrentMessageOnTopicFaultType(NULL, wsnt__NoCurrentMessageOnTopicFaultType *dst, wsnt__NoCurrentMessageOnTopicFaultType *src) (use soapcpp2 -Ed)
struct wsnt__NoCurrentMessageOnTopicFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode operations:
/// - _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode* soap_new__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode* soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode* dst, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *src) returns deep copy of _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) deep deletes _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(NULL, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *dst, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__NoCurrentMessageOnTopicFaultType_Description operations:
/// - _wsnt__NoCurrentMessageOnTopicFaultType_Description* soap_new__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description*) default initialize members
/// - int soap_read__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description*) serialize to a sink
/// - _wsnt__NoCurrentMessageOnTopicFaultType_Description* soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description* dst, _wsnt__NoCurrentMessageOnTopicFaultType_Description *src) returns deep copy of _wsnt__NoCurrentMessageOnTopicFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NoCurrentMessageOnTopicFaultType_Description(_wsnt__NoCurrentMessageOnTopicFaultType_Description*) deep deletes _wsnt__NoCurrentMessageOnTopicFaultType_Description data members, use only on dst after soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_Description(NULL, _wsnt__NoCurrentMessageOnTopicFaultType_Description *dst, _wsnt__NoCurrentMessageOnTopicFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__NoCurrentMessageOnTopicFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause operations:
/// - _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause* soap_new__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) serialize to a sink
/// - _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause* soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause* dst, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *src) returns deep copy of _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) deep deletes _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(NULL, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *dst, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnableToGetMessagesFaultType operations:
/// - wsnt__UnableToGetMessagesFaultType* soap_new_wsnt__UnableToGetMessagesFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnableToGetMessagesFaultType(struct soap*, wsnt__UnableToGetMessagesFaultType*) default initialize members
/// - int soap_read_wsnt__UnableToGetMessagesFaultType(struct soap*, wsnt__UnableToGetMessagesFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToGetMessagesFaultType(struct soap*, wsnt__UnableToGetMessagesFaultType*) serialize to a sink
/// - wsnt__UnableToGetMessagesFaultType* soap_dup_wsnt__UnableToGetMessagesFaultType(struct soap*, wsnt__UnableToGetMessagesFaultType* dst, wsnt__UnableToGetMessagesFaultType *src) returns deep copy of wsnt__UnableToGetMessagesFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToGetMessagesFaultType(wsnt__UnableToGetMessagesFaultType*) deep deletes wsnt__UnableToGetMessagesFaultType data members, use only on dst after soap_dup_wsnt__UnableToGetMessagesFaultType(NULL, wsnt__UnableToGetMessagesFaultType *dst, wsnt__UnableToGetMessagesFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToGetMessagesFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnableToGetMessagesFaultType_ErrorCode operations:
/// - _wsnt__UnableToGetMessagesFaultType_ErrorCode* soap_new__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToGetMessagesFaultType_ErrorCode* soap_dup__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode* dst, _wsnt__UnableToGetMessagesFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToGetMessagesFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToGetMessagesFaultType_ErrorCode(_wsnt__UnableToGetMessagesFaultType_ErrorCode*) deep deletes _wsnt__UnableToGetMessagesFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToGetMessagesFaultType_ErrorCode(NULL, _wsnt__UnableToGetMessagesFaultType_ErrorCode *dst, _wsnt__UnableToGetMessagesFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToGetMessagesFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnableToGetMessagesFaultType_Description operations:
/// - _wsnt__UnableToGetMessagesFaultType_Description* soap_new__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, _wsnt__UnableToGetMessagesFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, _wsnt__UnableToGetMessagesFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, _wsnt__UnableToGetMessagesFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToGetMessagesFaultType_Description* soap_dup__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, _wsnt__UnableToGetMessagesFaultType_Description* dst, _wsnt__UnableToGetMessagesFaultType_Description *src) returns deep copy of _wsnt__UnableToGetMessagesFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToGetMessagesFaultType_Description(_wsnt__UnableToGetMessagesFaultType_Description*) deep deletes _wsnt__UnableToGetMessagesFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToGetMessagesFaultType_Description(NULL, _wsnt__UnableToGetMessagesFaultType_Description *dst, _wsnt__UnableToGetMessagesFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToGetMessagesFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnableToGetMessagesFaultType_FaultCause operations:
/// - _wsnt__UnableToGetMessagesFaultType_FaultCause* soap_new__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToGetMessagesFaultType_FaultCause* soap_dup__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause* dst, _wsnt__UnableToGetMessagesFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToGetMessagesFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToGetMessagesFaultType_FaultCause(_wsnt__UnableToGetMessagesFaultType_FaultCause*) deep deletes _wsnt__UnableToGetMessagesFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToGetMessagesFaultType_FaultCause(NULL, _wsnt__UnableToGetMessagesFaultType_FaultCause *dst, _wsnt__UnableToGetMessagesFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToGetMessagesFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnableToDestroyPullPointFaultType operations:
/// - wsnt__UnableToDestroyPullPointFaultType* soap_new_wsnt__UnableToDestroyPullPointFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnableToDestroyPullPointFaultType(struct soap*, wsnt__UnableToDestroyPullPointFaultType*) default initialize members
/// - int soap_read_wsnt__UnableToDestroyPullPointFaultType(struct soap*, wsnt__UnableToDestroyPullPointFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToDestroyPullPointFaultType(struct soap*, wsnt__UnableToDestroyPullPointFaultType*) serialize to a sink
/// - wsnt__UnableToDestroyPullPointFaultType* soap_dup_wsnt__UnableToDestroyPullPointFaultType(struct soap*, wsnt__UnableToDestroyPullPointFaultType* dst, wsnt__UnableToDestroyPullPointFaultType *src) returns deep copy of wsnt__UnableToDestroyPullPointFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToDestroyPullPointFaultType(wsnt__UnableToDestroyPullPointFaultType*) deep deletes wsnt__UnableToDestroyPullPointFaultType data members, use only on dst after soap_dup_wsnt__UnableToDestroyPullPointFaultType(NULL, wsnt__UnableToDestroyPullPointFaultType *dst, wsnt__UnableToDestroyPullPointFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToDestroyPullPointFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode operations:
/// - _wsnt__UnableToDestroyPullPointFaultType_ErrorCode* soap_new__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToDestroyPullPointFaultType_ErrorCode* soap_dup__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode* dst, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToDestroyPullPointFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(_wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) deep deletes _wsnt__UnableToDestroyPullPointFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(NULL, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *dst, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnableToDestroyPullPointFaultType_Description operations:
/// - _wsnt__UnableToDestroyPullPointFaultType_Description* soap_new__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToDestroyPullPointFaultType_Description* soap_dup__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_Description* dst, _wsnt__UnableToDestroyPullPointFaultType_Description *src) returns deep copy of _wsnt__UnableToDestroyPullPointFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroyPullPointFaultType_Description(_wsnt__UnableToDestroyPullPointFaultType_Description*) deep deletes _wsnt__UnableToDestroyPullPointFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToDestroyPullPointFaultType_Description(NULL, _wsnt__UnableToDestroyPullPointFaultType_Description *dst, _wsnt__UnableToDestroyPullPointFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroyPullPointFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause operations:
/// - _wsnt__UnableToDestroyPullPointFaultType_FaultCause* soap_new__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToDestroyPullPointFaultType_FaultCause* soap_dup__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause* dst, _wsnt__UnableToDestroyPullPointFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToDestroyPullPointFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroyPullPointFaultType_FaultCause(_wsnt__UnableToDestroyPullPointFaultType_FaultCause*) deep deletes _wsnt__UnableToDestroyPullPointFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToDestroyPullPointFaultType_FaultCause(NULL, _wsnt__UnableToDestroyPullPointFaultType_FaultCause *dst, _wsnt__UnableToDestroyPullPointFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnableToCreatePullPointFaultType operations:
/// - wsnt__UnableToCreatePullPointFaultType* soap_new_wsnt__UnableToCreatePullPointFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnableToCreatePullPointFaultType(struct soap*, wsnt__UnableToCreatePullPointFaultType*) default initialize members
/// - int soap_read_wsnt__UnableToCreatePullPointFaultType(struct soap*, wsnt__UnableToCreatePullPointFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToCreatePullPointFaultType(struct soap*, wsnt__UnableToCreatePullPointFaultType*) serialize to a sink
/// - wsnt__UnableToCreatePullPointFaultType* soap_dup_wsnt__UnableToCreatePullPointFaultType(struct soap*, wsnt__UnableToCreatePullPointFaultType* dst, wsnt__UnableToCreatePullPointFaultType *src) returns deep copy of wsnt__UnableToCreatePullPointFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToCreatePullPointFaultType(wsnt__UnableToCreatePullPointFaultType*) deep deletes wsnt__UnableToCreatePullPointFaultType data members, use only on dst after soap_dup_wsnt__UnableToCreatePullPointFaultType(NULL, wsnt__UnableToCreatePullPointFaultType *dst, wsnt__UnableToCreatePullPointFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToCreatePullPointFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode operations:
/// - _wsnt__UnableToCreatePullPointFaultType_ErrorCode* soap_new__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToCreatePullPointFaultType_ErrorCode* soap_dup__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode* dst, _wsnt__UnableToCreatePullPointFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToCreatePullPointFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToCreatePullPointFaultType_ErrorCode(_wsnt__UnableToCreatePullPointFaultType_ErrorCode*) deep deletes _wsnt__UnableToCreatePullPointFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToCreatePullPointFaultType_ErrorCode(NULL, _wsnt__UnableToCreatePullPointFaultType_ErrorCode *dst, _wsnt__UnableToCreatePullPointFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnableToCreatePullPointFaultType_Description operations:
/// - _wsnt__UnableToCreatePullPointFaultType_Description* soap_new__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, _wsnt__UnableToCreatePullPointFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, _wsnt__UnableToCreatePullPointFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, _wsnt__UnableToCreatePullPointFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToCreatePullPointFaultType_Description* soap_dup__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, _wsnt__UnableToCreatePullPointFaultType_Description* dst, _wsnt__UnableToCreatePullPointFaultType_Description *src) returns deep copy of _wsnt__UnableToCreatePullPointFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToCreatePullPointFaultType_Description(_wsnt__UnableToCreatePullPointFaultType_Description*) deep deletes _wsnt__UnableToCreatePullPointFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToCreatePullPointFaultType_Description(NULL, _wsnt__UnableToCreatePullPointFaultType_Description *dst, _wsnt__UnableToCreatePullPointFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToCreatePullPointFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnableToCreatePullPointFaultType_FaultCause operations:
/// - _wsnt__UnableToCreatePullPointFaultType_FaultCause* soap_new__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToCreatePullPointFaultType_FaultCause* soap_dup__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause* dst, _wsnt__UnableToCreatePullPointFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToCreatePullPointFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToCreatePullPointFaultType_FaultCause(_wsnt__UnableToCreatePullPointFaultType_FaultCause*) deep deletes _wsnt__UnableToCreatePullPointFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToCreatePullPointFaultType_FaultCause(NULL, _wsnt__UnableToCreatePullPointFaultType_FaultCause *dst, _wsnt__UnableToCreatePullPointFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToCreatePullPointFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnacceptableTerminationTimeFaultType operations:
/// - wsnt__UnacceptableTerminationTimeFaultType* soap_new_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, wsnt__UnacceptableTerminationTimeFaultType*) default initialize members
/// - int soap_read_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, wsnt__UnacceptableTerminationTimeFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, wsnt__UnacceptableTerminationTimeFaultType*) serialize to a sink
/// - wsnt__UnacceptableTerminationTimeFaultType* soap_dup_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, wsnt__UnacceptableTerminationTimeFaultType* dst, wsnt__UnacceptableTerminationTimeFaultType *src) returns deep copy of wsnt__UnacceptableTerminationTimeFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnacceptableTerminationTimeFaultType(wsnt__UnacceptableTerminationTimeFaultType*) deep deletes wsnt__UnacceptableTerminationTimeFaultType data members, use only on dst after soap_dup_wsnt__UnacceptableTerminationTimeFaultType(NULL, wsnt__UnacceptableTerminationTimeFaultType *dst, wsnt__UnacceptableTerminationTimeFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnacceptableTerminationTimeFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode operations:
/// - _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode* soap_new__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode* soap_dup__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode* dst, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *src) returns deep copy of _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) deep deletes _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(NULL, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *dst, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnacceptableTerminationTimeFaultType_Description operations:
/// - _wsnt__UnacceptableTerminationTimeFaultType_Description* soap_new__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description*) serialize to a sink
/// - _wsnt__UnacceptableTerminationTimeFaultType_Description* soap_dup__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description* dst, _wsnt__UnacceptableTerminationTimeFaultType_Description *src) returns deep copy of _wsnt__UnacceptableTerminationTimeFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableTerminationTimeFaultType_Description(_wsnt__UnacceptableTerminationTimeFaultType_Description*) deep deletes _wsnt__UnacceptableTerminationTimeFaultType_Description data members, use only on dst after soap_dup__wsnt__UnacceptableTerminationTimeFaultType_Description(NULL, _wsnt__UnacceptableTerminationTimeFaultType_Description *dst, _wsnt__UnacceptableTerminationTimeFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableTerminationTimeFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause operations:
/// - _wsnt__UnacceptableTerminationTimeFaultType_FaultCause* soap_new__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnacceptableTerminationTimeFaultType_FaultCause* soap_dup__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause* dst, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *src) returns deep copy of _wsnt__UnacceptableTerminationTimeFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(_wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) deep deletes _wsnt__UnacceptableTerminationTimeFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(NULL, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *dst, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Element "MinimumTime" of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnableToDestroySubscriptionFaultType operations:
/// - wsnt__UnableToDestroySubscriptionFaultType* soap_new_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, wsnt__UnableToDestroySubscriptionFaultType*) default initialize members
/// - int soap_read_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, wsnt__UnableToDestroySubscriptionFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, wsnt__UnableToDestroySubscriptionFaultType*) serialize to a sink
/// - wsnt__UnableToDestroySubscriptionFaultType* soap_dup_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, wsnt__UnableToDestroySubscriptionFaultType* dst, wsnt__UnableToDestroySubscriptionFaultType *src) returns deep copy of wsnt__UnableToDestroySubscriptionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToDestroySubscriptionFaultType(wsnt__UnableToDestroySubscriptionFaultType*) deep deletes wsnt__UnableToDestroySubscriptionFaultType data members, use only on dst after soap_dup_wsnt__UnableToDestroySubscriptionFaultType(NULL, wsnt__UnableToDestroySubscriptionFaultType *dst, wsnt__UnableToDestroySubscriptionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToDestroySubscriptionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode operations:
/// - _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode* soap_new__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode* soap_dup__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode* dst, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) deep deletes _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(NULL, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *dst, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnableToDestroySubscriptionFaultType_Description operations:
/// - _wsnt__UnableToDestroySubscriptionFaultType_Description* soap_new__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToDestroySubscriptionFaultType_Description* soap_dup__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description* dst, _wsnt__UnableToDestroySubscriptionFaultType_Description *src) returns deep copy of _wsnt__UnableToDestroySubscriptionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroySubscriptionFaultType_Description(_wsnt__UnableToDestroySubscriptionFaultType_Description*) deep deletes _wsnt__UnableToDestroySubscriptionFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToDestroySubscriptionFaultType_Description(NULL, _wsnt__UnableToDestroySubscriptionFaultType_Description *dst, _wsnt__UnableToDestroySubscriptionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroySubscriptionFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause operations:
/// - _wsnt__UnableToDestroySubscriptionFaultType_FaultCause* soap_new__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToDestroySubscriptionFaultType_FaultCause* soap_dup__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause* dst, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToDestroySubscriptionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(_wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) deep deletes _wsnt__UnableToDestroySubscriptionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(NULL, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *dst, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__PauseFailedFaultType operations:
/// - wsnt__PauseFailedFaultType* soap_new_wsnt__PauseFailedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__PauseFailedFaultType(struct soap*, wsnt__PauseFailedFaultType*) default initialize members
/// - int soap_read_wsnt__PauseFailedFaultType(struct soap*, wsnt__PauseFailedFaultType*) deserialize from a source
/// - int soap_write_wsnt__PauseFailedFaultType(struct soap*, wsnt__PauseFailedFaultType*) serialize to a sink
/// - wsnt__PauseFailedFaultType* soap_dup_wsnt__PauseFailedFaultType(struct soap*, wsnt__PauseFailedFaultType* dst, wsnt__PauseFailedFaultType *src) returns deep copy of wsnt__PauseFailedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__PauseFailedFaultType(wsnt__PauseFailedFaultType*) deep deletes wsnt__PauseFailedFaultType data members, use only on dst after soap_dup_wsnt__PauseFailedFaultType(NULL, wsnt__PauseFailedFaultType *dst, wsnt__PauseFailedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__PauseFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__PauseFailedFaultType_ErrorCode operations:
/// - _wsnt__PauseFailedFaultType_ErrorCode* soap_new__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, _wsnt__PauseFailedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, _wsnt__PauseFailedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, _wsnt__PauseFailedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__PauseFailedFaultType_ErrorCode* soap_dup__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, _wsnt__PauseFailedFaultType_ErrorCode* dst, _wsnt__PauseFailedFaultType_ErrorCode *src) returns deep copy of _wsnt__PauseFailedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseFailedFaultType_ErrorCode(_wsnt__PauseFailedFaultType_ErrorCode*) deep deletes _wsnt__PauseFailedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__PauseFailedFaultType_ErrorCode(NULL, _wsnt__PauseFailedFaultType_ErrorCode *dst, _wsnt__PauseFailedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__PauseFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__PauseFailedFaultType_Description operations:
/// - _wsnt__PauseFailedFaultType_Description* soap_new__wsnt__PauseFailedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseFailedFaultType_Description(struct soap*, _wsnt__PauseFailedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__PauseFailedFaultType_Description(struct soap*, _wsnt__PauseFailedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__PauseFailedFaultType_Description(struct soap*, _wsnt__PauseFailedFaultType_Description*) serialize to a sink
/// - _wsnt__PauseFailedFaultType_Description* soap_dup__wsnt__PauseFailedFaultType_Description(struct soap*, _wsnt__PauseFailedFaultType_Description* dst, _wsnt__PauseFailedFaultType_Description *src) returns deep copy of _wsnt__PauseFailedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseFailedFaultType_Description(_wsnt__PauseFailedFaultType_Description*) deep deletes _wsnt__PauseFailedFaultType_Description data members, use only on dst after soap_dup__wsnt__PauseFailedFaultType_Description(NULL, _wsnt__PauseFailedFaultType_Description *dst, _wsnt__PauseFailedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__PauseFailedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__PauseFailedFaultType_FaultCause operations:
/// - _wsnt__PauseFailedFaultType_FaultCause* soap_new__wsnt__PauseFailedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseFailedFaultType_FaultCause(struct soap*, _wsnt__PauseFailedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__PauseFailedFaultType_FaultCause(struct soap*, _wsnt__PauseFailedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__PauseFailedFaultType_FaultCause(struct soap*, _wsnt__PauseFailedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__PauseFailedFaultType_FaultCause* soap_dup__wsnt__PauseFailedFaultType_FaultCause(struct soap*, _wsnt__PauseFailedFaultType_FaultCause* dst, _wsnt__PauseFailedFaultType_FaultCause *src) returns deep copy of _wsnt__PauseFailedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseFailedFaultType_FaultCause(_wsnt__PauseFailedFaultType_FaultCause*) deep deletes _wsnt__PauseFailedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__PauseFailedFaultType_FaultCause(NULL, _wsnt__PauseFailedFaultType_FaultCause *dst, _wsnt__PauseFailedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__PauseFailedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__ResumeFailedFaultType operations:
/// - wsnt__ResumeFailedFaultType* soap_new_wsnt__ResumeFailedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__ResumeFailedFaultType(struct soap*, wsnt__ResumeFailedFaultType*) default initialize members
/// - int soap_read_wsnt__ResumeFailedFaultType(struct soap*, wsnt__ResumeFailedFaultType*) deserialize from a source
/// - int soap_write_wsnt__ResumeFailedFaultType(struct soap*, wsnt__ResumeFailedFaultType*) serialize to a sink
/// - wsnt__ResumeFailedFaultType* soap_dup_wsnt__ResumeFailedFaultType(struct soap*, wsnt__ResumeFailedFaultType* dst, wsnt__ResumeFailedFaultType *src) returns deep copy of wsnt__ResumeFailedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__ResumeFailedFaultType(wsnt__ResumeFailedFaultType*) deep deletes wsnt__ResumeFailedFaultType data members, use only on dst after soap_dup_wsnt__ResumeFailedFaultType(NULL, wsnt__ResumeFailedFaultType *dst, wsnt__ResumeFailedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__ResumeFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__ResumeFailedFaultType_ErrorCode operations:
/// - _wsnt__ResumeFailedFaultType_ErrorCode* soap_new__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, _wsnt__ResumeFailedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, _wsnt__ResumeFailedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, _wsnt__ResumeFailedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__ResumeFailedFaultType_ErrorCode* soap_dup__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, _wsnt__ResumeFailedFaultType_ErrorCode* dst, _wsnt__ResumeFailedFaultType_ErrorCode *src) returns deep copy of _wsnt__ResumeFailedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeFailedFaultType_ErrorCode(_wsnt__ResumeFailedFaultType_ErrorCode*) deep deletes _wsnt__ResumeFailedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__ResumeFailedFaultType_ErrorCode(NULL, _wsnt__ResumeFailedFaultType_ErrorCode *dst, _wsnt__ResumeFailedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__ResumeFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__ResumeFailedFaultType_Description operations:
/// - _wsnt__ResumeFailedFaultType_Description* soap_new__wsnt__ResumeFailedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeFailedFaultType_Description(struct soap*, _wsnt__ResumeFailedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__ResumeFailedFaultType_Description(struct soap*, _wsnt__ResumeFailedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__ResumeFailedFaultType_Description(struct soap*, _wsnt__ResumeFailedFaultType_Description*) serialize to a sink
/// - _wsnt__ResumeFailedFaultType_Description* soap_dup__wsnt__ResumeFailedFaultType_Description(struct soap*, _wsnt__ResumeFailedFaultType_Description* dst, _wsnt__ResumeFailedFaultType_Description *src) returns deep copy of _wsnt__ResumeFailedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeFailedFaultType_Description(_wsnt__ResumeFailedFaultType_Description*) deep deletes _wsnt__ResumeFailedFaultType_Description data members, use only on dst after soap_dup__wsnt__ResumeFailedFaultType_Description(NULL, _wsnt__ResumeFailedFaultType_Description *dst, _wsnt__ResumeFailedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__ResumeFailedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__ResumeFailedFaultType_FaultCause operations:
/// - _wsnt__ResumeFailedFaultType_FaultCause* soap_new__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, _wsnt__ResumeFailedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, _wsnt__ResumeFailedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, _wsnt__ResumeFailedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__ResumeFailedFaultType_FaultCause* soap_dup__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, _wsnt__ResumeFailedFaultType_FaultCause* dst, _wsnt__ResumeFailedFaultType_FaultCause *src) returns deep copy of _wsnt__ResumeFailedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeFailedFaultType_FaultCause(_wsnt__ResumeFailedFaultType_FaultCause*) deep deletes _wsnt__ResumeFailedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__ResumeFailedFaultType_FaultCause(NULL, _wsnt__ResumeFailedFaultType_FaultCause *dst, _wsnt__ResumeFailedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__ResumeFailedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// @note struct wstop__TopicNamespaceType operations:
/// - wstop__TopicNamespaceType* soap_new_wstop__TopicNamespaceType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__TopicNamespaceType(struct soap*, wstop__TopicNamespaceType*) default initialize members
/// - int soap_read_wstop__TopicNamespaceType(struct soap*, wstop__TopicNamespaceType*) deserialize from a source
/// - int soap_write_wstop__TopicNamespaceType(struct soap*, wstop__TopicNamespaceType*) serialize to a sink
/// - wstop__TopicNamespaceType* soap_dup_wstop__TopicNamespaceType(struct soap*, wstop__TopicNamespaceType* dst, wstop__TopicNamespaceType *src) returns deep copy of wstop__TopicNamespaceType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__TopicNamespaceType(wstop__TopicNamespaceType*) deep deletes wstop__TopicNamespaceType data members, use only on dst after soap_dup_wstop__TopicNamespaceType(NULL, wstop__TopicNamespaceType *dst, wstop__TopicNamespaceType *src) (use soapcpp2 -Ed)
struct wstop__TopicNamespaceType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// Size of Topic array is 0..unbounded.
  $ int                                  __sizeTopic                    0;
/// @note struct _wstop__TopicNamespaceType_Topic operations:
/// - _wstop__TopicNamespaceType_Topic* soap_new__wstop__TopicNamespaceType_Topic(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wstop__TopicNamespaceType_Topic(struct soap*, _wstop__TopicNamespaceType_Topic*) default initialize members
/// - int soap_read__wstop__TopicNamespaceType_Topic(struct soap*, _wstop__TopicNamespaceType_Topic*) deserialize from a source
/// - int soap_write__wstop__TopicNamespaceType_Topic(struct soap*, _wstop__TopicNamespaceType_Topic*) serialize to a sink
/// - _wstop__TopicNamespaceType_Topic* soap_dup__wstop__TopicNamespaceType_Topic(struct soap*, _wstop__TopicNamespaceType_Topic* dst, _wstop__TopicNamespaceType_Topic *src) returns deep copy of _wstop__TopicNamespaceType_Topic src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wstop__TopicNamespaceType_Topic(_wstop__TopicNamespaceType_Topic*) deep deletes _wstop__TopicNamespaceType_Topic data members, use only on dst after soap_dup__wstop__TopicNamespaceType_Topic(NULL, _wstop__TopicNamespaceType_Topic *dst, _wstop__TopicNamespaceType_Topic *src) (use soapcpp2 -Ed)
    struct _wstop__TopicNamespaceType_Topic
    {
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// INHERITED FROM wstop__TopicType:
/// Element "MessagePattern" of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    struct wstop__QueryExpressionType*   MessagePattern                 0;	///< Optional element.
/// Size of array of struct wstop__TopicType* is 0..unbounded.
  $ int                                  __sizeTopic                    0;
/// Array struct wstop__TopicType* of size 0..unbounded.
    struct wstop__TopicType*             Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Attribute "name" of type xs:NCName.
  @ xsd__NCName                          name                           1;	///< Required attribute.
@    _QName                                                             

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of type xs:boolean.
  @ enum xsd__boolean                    final_                         0 = xsd__boolean__false_;	///< Optional attribute with default value="false".
//  END OF INHERITED FROM wstop__TopicType
/// Attribute "parent" of type "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression.
  @ wstop__ConcreteTopicExpression       parent                         0;	///< Optional attribute.
    }                                   *Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Attribute "name" of type xs:NCName.
  @ xsd__NCName                          name                           0;	///< Optional attribute.
/// Attribute "targetNamespace" of type xs:anyURI.
  @ xsd__anyURI                          targetNamespace                1;	///< Required attribute.
/// Attribute "final" of type xs:boolean.
  @ enum xsd__boolean                    final_                         0 = xsd__boolean__false_;	///< Optional attribute with default value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// @note struct wstop__TopicType operations:
/// - wstop__TopicType* soap_new_wstop__TopicType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__TopicType(struct soap*, wstop__TopicType*) default initialize members
/// - int soap_read_wstop__TopicType(struct soap*, wstop__TopicType*) deserialize from a source
/// - int soap_write_wstop__TopicType(struct soap*, wstop__TopicType*) serialize to a sink
/// - wstop__TopicType* soap_dup_wstop__TopicType(struct soap*, wstop__TopicType* dst, wstop__TopicType *src) returns deep copy of wstop__TopicType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__TopicType(wstop__TopicType*) deep deletes wstop__TopicType data members, use only on dst after soap_dup_wstop__TopicType(NULL, wstop__TopicType *dst, wstop__TopicType *src) (use soapcpp2 -Ed)
struct wstop__TopicType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// Element "MessagePattern" of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    struct wstop__QueryExpressionType*   MessagePattern                 0;	///< Optional element.
/// Size of array of struct wstop__TopicType* is 0..unbounded.
  $ int                                  __sizeTopic                    0;
/// Array struct wstop__TopicType* of size 0..unbounded.
    struct wstop__TopicType*             Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Attribute "name" of type xs:NCName.
  @ xsd__NCName                          name                           1;	///< Required attribute.
@    _QName                                                             

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of type xs:boolean.
  @ enum xsd__boolean                    final_                         0 = xsd__boolean__false_;	///< Optional attribute with default value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicSetType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// @note struct wstop__TopicSetType operations:
/// - wstop__TopicSetType* soap_new_wstop__TopicSetType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__TopicSetType(struct soap*, wstop__TopicSetType*) default initialize members
/// - int soap_read_wstop__TopicSetType(struct soap*, wstop__TopicSetType*) deserialize from a source
/// - int soap_write_wstop__TopicSetType(struct soap*, wstop__TopicSetType*) serialize to a sink
/// - wstop__TopicSetType* soap_dup_wstop__TopicSetType(struct soap*, wstop__TopicSetType* dst, wstop__TopicSetType *src) returns deep copy of wstop__TopicSetType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__TopicSetType(wstop__TopicSetType*) deep deletes wstop__TopicSetType data members, use only on dst after soap_dup_wstop__TopicSetType(NULL, wstop__TopicSetType *dst, wstop__TopicSetType *src) (use soapcpp2 -Ed)
struct wstop__TopicSetType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsrfr__ResourceUnknownFaultType operations:
/// - wsrfr__ResourceUnknownFaultType* soap_new_wsrfr__ResourceUnknownFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsrfr__ResourceUnknownFaultType(struct soap*, wsrfr__ResourceUnknownFaultType*) default initialize members
/// - int soap_read_wsrfr__ResourceUnknownFaultType(struct soap*, wsrfr__ResourceUnknownFaultType*) deserialize from a source
/// - int soap_write_wsrfr__ResourceUnknownFaultType(struct soap*, wsrfr__ResourceUnknownFaultType*) serialize to a sink
/// - wsrfr__ResourceUnknownFaultType* soap_dup_wsrfr__ResourceUnknownFaultType(struct soap*, wsrfr__ResourceUnknownFaultType* dst, wsrfr__ResourceUnknownFaultType *src) returns deep copy of wsrfr__ResourceUnknownFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsrfr__ResourceUnknownFaultType(wsrfr__ResourceUnknownFaultType*) deep deletes wsrfr__ResourceUnknownFaultType data members, use only on dst after soap_dup_wsrfr__ResourceUnknownFaultType(NULL, wsrfr__ResourceUnknownFaultType *dst, wsrfr__ResourceUnknownFaultType *src) (use soapcpp2 -Ed)
struct wsrfr__ResourceUnknownFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsrfr__ResourceUnknownFaultType_ErrorCode operations:
/// - _wsrfr__ResourceUnknownFaultType_ErrorCode* soap_new__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnknownFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnknownFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnknownFaultType_ErrorCode*) serialize to a sink
/// - _wsrfr__ResourceUnknownFaultType_ErrorCode* soap_dup__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnknownFaultType_ErrorCode* dst, _wsrfr__ResourceUnknownFaultType_ErrorCode *src) returns deep copy of _wsrfr__ResourceUnknownFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfr__ResourceUnknownFaultType_ErrorCode(_wsrfr__ResourceUnknownFaultType_ErrorCode*) deep deletes _wsrfr__ResourceUnknownFaultType_ErrorCode data members, use only on dst after soap_dup__wsrfr__ResourceUnknownFaultType_ErrorCode(NULL, _wsrfr__ResourceUnknownFaultType_ErrorCode *dst, _wsrfr__ResourceUnknownFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsrfr__ResourceUnknownFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsrfr__ResourceUnknownFaultType_Description operations:
/// - _wsrfr__ResourceUnknownFaultType_Description* soap_new__wsrfr__ResourceUnknownFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfr__ResourceUnknownFaultType_Description(struct soap*, _wsrfr__ResourceUnknownFaultType_Description*) default initialize members
/// - int soap_read__wsrfr__ResourceUnknownFaultType_Description(struct soap*, _wsrfr__ResourceUnknownFaultType_Description*) deserialize from a source
/// - int soap_write__wsrfr__ResourceUnknownFaultType_Description(struct soap*, _wsrfr__ResourceUnknownFaultType_Description*) serialize to a sink
/// - _wsrfr__ResourceUnknownFaultType_Description* soap_dup__wsrfr__ResourceUnknownFaultType_Description(struct soap*, _wsrfr__ResourceUnknownFaultType_Description* dst, _wsrfr__ResourceUnknownFaultType_Description *src) returns deep copy of _wsrfr__ResourceUnknownFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfr__ResourceUnknownFaultType_Description(_wsrfr__ResourceUnknownFaultType_Description*) deep deletes _wsrfr__ResourceUnknownFaultType_Description data members, use only on dst after soap_dup__wsrfr__ResourceUnknownFaultType_Description(NULL, _wsrfr__ResourceUnknownFaultType_Description *dst, _wsrfr__ResourceUnknownFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsrfr__ResourceUnknownFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsrfr__ResourceUnknownFaultType_FaultCause operations:
/// - _wsrfr__ResourceUnknownFaultType_FaultCause* soap_new__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnknownFaultType_FaultCause*) default initialize members
/// - int soap_read__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnknownFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnknownFaultType_FaultCause*) serialize to a sink
/// - _wsrfr__ResourceUnknownFaultType_FaultCause* soap_dup__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnknownFaultType_FaultCause* dst, _wsrfr__ResourceUnknownFaultType_FaultCause *src) returns deep copy of _wsrfr__ResourceUnknownFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfr__ResourceUnknownFaultType_FaultCause(_wsrfr__ResourceUnknownFaultType_FaultCause*) deep deletes _wsrfr__ResourceUnknownFaultType_FaultCause data members, use only on dst after soap_dup__wsrfr__ResourceUnknownFaultType_FaultCause(NULL, _wsrfr__ResourceUnknownFaultType_FaultCause *dst, _wsrfr__ResourceUnknownFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsrfr__ResourceUnknownFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsrfr__ResourceUnavailableFaultType operations:
/// - wsrfr__ResourceUnavailableFaultType* soap_new_wsrfr__ResourceUnavailableFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsrfr__ResourceUnavailableFaultType(struct soap*, wsrfr__ResourceUnavailableFaultType*) default initialize members
/// - int soap_read_wsrfr__ResourceUnavailableFaultType(struct soap*, wsrfr__ResourceUnavailableFaultType*) deserialize from a source
/// - int soap_write_wsrfr__ResourceUnavailableFaultType(struct soap*, wsrfr__ResourceUnavailableFaultType*) serialize to a sink
/// - wsrfr__ResourceUnavailableFaultType* soap_dup_wsrfr__ResourceUnavailableFaultType(struct soap*, wsrfr__ResourceUnavailableFaultType* dst, wsrfr__ResourceUnavailableFaultType *src) returns deep copy of wsrfr__ResourceUnavailableFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsrfr__ResourceUnavailableFaultType(wsrfr__ResourceUnavailableFaultType*) deep deletes wsrfr__ResourceUnavailableFaultType data members, use only on dst after soap_dup_wsrfr__ResourceUnavailableFaultType(NULL, wsrfr__ResourceUnavailableFaultType *dst, wsrfr__ResourceUnavailableFaultType *src) (use soapcpp2 -Ed)
struct wsrfr__ResourceUnavailableFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsrfr__ResourceUnavailableFaultType_ErrorCode operations:
/// - _wsrfr__ResourceUnavailableFaultType_ErrorCode* soap_new__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnavailableFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnavailableFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnavailableFaultType_ErrorCode*) serialize to a sink
/// - _wsrfr__ResourceUnavailableFaultType_ErrorCode* soap_dup__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnavailableFaultType_ErrorCode* dst, _wsrfr__ResourceUnavailableFaultType_ErrorCode *src) returns deep copy of _wsrfr__ResourceUnavailableFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfr__ResourceUnavailableFaultType_ErrorCode(_wsrfr__ResourceUnavailableFaultType_ErrorCode*) deep deletes _wsrfr__ResourceUnavailableFaultType_ErrorCode data members, use only on dst after soap_dup__wsrfr__ResourceUnavailableFaultType_ErrorCode(NULL, _wsrfr__ResourceUnavailableFaultType_ErrorCode *dst, _wsrfr__ResourceUnavailableFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsrfr__ResourceUnavailableFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsrfr__ResourceUnavailableFaultType_Description operations:
/// - _wsrfr__ResourceUnavailableFaultType_Description* soap_new__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, _wsrfr__ResourceUnavailableFaultType_Description*) default initialize members
/// - int soap_read__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, _wsrfr__ResourceUnavailableFaultType_Description*) deserialize from a source
/// - int soap_write__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, _wsrfr__ResourceUnavailableFaultType_Description*) serialize to a sink
/// - _wsrfr__ResourceUnavailableFaultType_Description* soap_dup__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, _wsrfr__ResourceUnavailableFaultType_Description* dst, _wsrfr__ResourceUnavailableFaultType_Description *src) returns deep copy of _wsrfr__ResourceUnavailableFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfr__ResourceUnavailableFaultType_Description(_wsrfr__ResourceUnavailableFaultType_Description*) deep deletes _wsrfr__ResourceUnavailableFaultType_Description data members, use only on dst after soap_dup__wsrfr__ResourceUnavailableFaultType_Description(NULL, _wsrfr__ResourceUnavailableFaultType_Description *dst, _wsrfr__ResourceUnavailableFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsrfr__ResourceUnavailableFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsrfr__ResourceUnavailableFaultType_FaultCause operations:
/// - _wsrfr__ResourceUnavailableFaultType_FaultCause* soap_new__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnavailableFaultType_FaultCause*) default initialize members
/// - int soap_read__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnavailableFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnavailableFaultType_FaultCause*) serialize to a sink
/// - _wsrfr__ResourceUnavailableFaultType_FaultCause* soap_dup__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnavailableFaultType_FaultCause* dst, _wsrfr__ResourceUnavailableFaultType_FaultCause *src) returns deep copy of _wsrfr__ResourceUnavailableFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfr__ResourceUnavailableFaultType_FaultCause(_wsrfr__ResourceUnavailableFaultType_FaultCause*) deep deletes _wsrfr__ResourceUnavailableFaultType_FaultCause data members, use only on dst after soap_dup__wsrfr__ResourceUnavailableFaultType_FaultCause(NULL, _wsrfr__ResourceUnavailableFaultType_FaultCause *dst, _wsrfr__ResourceUnavailableFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsrfr__ResourceUnavailableFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://www.onvif.org/ver10/schema":OSDReference is a complexType with simpleContent extension of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
/// @note struct tt__OSDReference operations:
/// - tt__OSDReference* soap_new_tt__OSDReference(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OSDReference(struct soap*, tt__OSDReference*) default initialize members
/// - int soap_read_tt__OSDReference(struct soap*, tt__OSDReference*) deserialize from a source
/// - int soap_write_tt__OSDReference(struct soap*, tt__OSDReference*) serialize to a sink
/// - tt__OSDReference* soap_dup_tt__OSDReference(struct soap*, tt__OSDReference* dst, tt__OSDReference *src) returns deep copy of tt__OSDReference src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDReference(tt__OSDReference*) deep deletes tt__OSDReference data members, use only on dst after soap_dup_tt__OSDReference(NULL, tt__OSDReference *dst, tt__OSDReference *src) (use soapcpp2 -Ed)
struct tt__OSDReference
{
/// INHERITED FROM tt__OSDReference:
/// __item wraps simpleContent of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   __item                        ;
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM tt__OSDReference
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Hello of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":HelloType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":HelloResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Probe of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":ProbeResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchesType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Bye of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ByeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":ByeResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities of type "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSources of type "http://www.onvif.org/ver10/deviceIO/wsdl":Get.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourcesResponse of type "http://www.onvif.org/ver10/deviceIO/wsdl":GetResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSources of type "http://www.onvif.org/ver10/deviceIO/wsdl":Get.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourcesResponse of type "http://www.onvif.org/ver10/deviceIO/wsdl":GetResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputs of type "http://www.onvif.org/ver10/deviceIO/wsdl":Get.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputsResponse of type "http://www.onvif.org/ver10/deviceIO/wsdl":GetResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":Capabilities of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":StringList of type "http://www.onvif.org/ver10/schema":StringList.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntRange of type "http://www.onvif.org/ver10/schema":IntRange.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntList of type "http://www.onvif.org/ver10/schema":IntAttrList.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":FloatRange of type "http://www.onvif.org/ver10/schema":FloatRange.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":FloatList of type "http://www.onvif.org/ver10/schema":FloatAttrList.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":DurationRange of type "http://www.onvif.org/ver10/schema":DurationRange.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntRectangleRange of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polyline of type "http://www.onvif.org/ver10/schema":Polyline.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polygon of type "http://www.onvif.org/ver10/schema":Polygon.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":Capabilities of type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":Capabilities of type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Capabilities of type "http://www.onvif.org/ver20/imaging/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":Capabilities of type "http://www.onvif.org/ver20/media/wsdl":Capabilities2.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":ConfigurationEnumeration of type "http://www.onvif.org/ver20/media/wsdl":ConfigurationEnumeration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderConfigurations of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceConfigurations of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioEncoderConfigurations of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioSourceConfigurations of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAnalyticsConfigurations of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetMetadataConfigurations of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioOutputConfigurations of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioDecoderConfigurations of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetVideoEncoderConfigurationResponse of type "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetVideoSourceConfigurationResponse of type "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetAudioEncoderConfigurationResponse of type "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetAudioSourceConfigurationResponse of type "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetMetadataConfigurationResponse of type "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetAudioOutputConfigurationResponse of type "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetAudioDecoderConfigurationResponse of type "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceConfigurationOptions of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderConfigurationOptions of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioSourceConfigurationOptions of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioEncoderConfigurationOptions of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetMetadataConfigurationOptions of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioOutputConfigurationOptions of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioDecoderConfigurationOptions of type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":StartMulticastStreaming of type "http://www.onvif.org/ver20/media/wsdl":StartStopMulticastStreaming.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":StartMulticastStreamingResponse of type "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":StopMulticastStreaming of type "http://www.onvif.org/ver20/media/wsdl":StartStopMulticastStreaming.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":StopMulticastStreamingResponse of type "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetOSDResponse of type "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":DeleteOSDResponse of type "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetMaskResponse of type "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":DeleteMaskResponse of type "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Capabilities of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap ns1  service name:	Media2Binding 
//gsoap ns1  service type:	Media2 
//gsoap ns1  service namespace:	http://www.onvif.org/ver20/media/wsdl 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tdn  service name:	RemoteDiscoveryBinding 
//gsoap tdn  service type:	RemoteDiscoveryPort 
//gsoap tdn  service namespace:	http://www.onvif.org/ver10/network/wsdl 
//gsoap tdn  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tds  service name:	DeviceBinding 
//gsoap tds  service type:	Device 
//gsoap tds  service namespace:	http://www.onvif.org/ver10/device/wsdl 
//gsoap tds  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tev  service name:	PullPointSubscriptionBinding 
//gsoap tev  service type:	PullPointSubscription 
//gsoap tev  service namespace:	http://www.onvif.org/ver10/events/wsdl 
//gsoap tev  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap timg service name:	ImagingBinding 
//gsoap timg service type:	ImagingPort 
//gsoap timg service namespace:	http://www.onvif.org/ver20/imaging/wsdl 
//gsoap timg service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tmd  service name:	DeviceIOBinding 
//gsoap tmd  service type:	DeviceIOPort 
//gsoap tmd  service namespace:	http://www.onvif.org/ver10/deviceIO/wsdl 
//gsoap tmd  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tptz service name:	PTZBinding 
//gsoap tptz service type:	PTZ 
//gsoap tptz service namespace:	http://www.onvif.org/ver20/ptz/wsdl 
//gsoap tptz service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trt  service name:	MediaBinding 
//gsoap trt  service type:	Media 
//gsoap trt  service namespace:	http://www.onvif.org/ver10/media/wsdl 
//gsoap trt  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage WSDL Definitions

@section WSDL_bindings Service Bindings

  - @ref Media2Binding

  - @ref RemoteDiscoveryBinding

  - @ref DeviceBinding

  - @ref PullPointSubscriptionBinding

  - @ref ImagingBinding

  - @ref DeviceIOBinding

  - @ref PTZBinding

  - @ref MediaBinding

@section WSDL_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/** @page Media2Binding Binding "Media2Binding"

@section Media2Binding_operations Operations of Binding "Media2Binding"

  - @ref __ns1__GetServiceCapabilities

  - @ref __ns1__CreateProfile

  - @ref __ns1__GetProfiles

  - @ref __ns1__AddConfiguration

  - @ref __ns1__RemoveConfiguration

  - @ref __ns1__DeleteProfile

  - @ref __ns1__GetVideoSourceConfigurations

  - @ref __ns1__GetVideoEncoderConfigurations

  - @ref __ns1__GetAudioSourceConfigurations

  - @ref __ns1__GetAudioEncoderConfigurations

  - @ref __ns1__GetAnalyticsConfigurations

  - @ref __ns1__GetMetadataConfigurations

  - @ref __ns1__GetAudioOutputConfigurations

  - @ref __ns1__GetAudioDecoderConfigurations

  - @ref __ns1__SetVideoSourceConfiguration

  - @ref __ns1__SetVideoEncoderConfiguration

  - @ref __ns1__SetAudioSourceConfiguration

  - @ref __ns1__SetAudioEncoderConfiguration

  - @ref __ns1__SetMetadataConfiguration

  - @ref __ns1__SetAudioOutputConfiguration

  - @ref __ns1__SetAudioDecoderConfiguration

  - @ref __ns1__GetVideoSourceConfigurationOptions

  - @ref __ns1__GetVideoEncoderConfigurationOptions

  - @ref __ns1__GetAudioSourceConfigurationOptions

  - @ref __ns1__GetAudioEncoderConfigurationOptions

  - @ref __ns1__GetMetadataConfigurationOptions

  - @ref __ns1__GetAudioOutputConfigurationOptions

  - @ref __ns1__GetAudioDecoderConfigurationOptions

  - @ref __ns1__GetVideoEncoderInstances

  - @ref __ns1__GetStreamUri

  - @ref __ns1__StartMulticastStreaming

  - @ref __ns1__StopMulticastStreaming

  - @ref __ns1__SetSynchronizationPoint

  - @ref __ns1__GetSnapshotUri

  - @ref __ns1__GetVideoSourceModes

  - @ref __ns1__SetVideoSourceMode

  - @ref __ns1__GetOSDs

  - @ref __ns1__GetOSDOptions

  - @ref __ns1__SetOSD

  - @ref __ns1__CreateOSD

  - @ref __ns1__DeleteOSD

  - @ref __ns1__GetMasks

  - @ref __ns1__GetMaskOptions

  - @ref __ns1__SetMask

  - @ref __ns1__CreateMask

  - @ref __ns1__DeleteMask

@section Media2Binding_ports Default endpoints of Binding "Media2Binding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/** @page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_operations Operations of Binding "RemoteDiscoveryBinding"

  - @ref __tdn__Hello

  - @ref __tdn__Bye

  - @ref __tdn__Probe

@section RemoteDiscoveryBinding_ports Default endpoints of Binding "RemoteDiscoveryBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/** @page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_operations Operations of Binding "DeviceBinding"

  - @ref __tds__GetServices

  - @ref __tds__GetServiceCapabilities

  - @ref __tds__GetDeviceInformation

  - @ref __tds__SetSystemDateAndTime

  - @ref __tds__GetSystemDateAndTime

  - @ref __tds__SetSystemFactoryDefault

  - @ref __tds__UpgradeSystemFirmware

  - @ref __tds__SystemReboot

  - @ref __tds__RestoreSystem

  - @ref __tds__GetSystemBackup

  - @ref __tds__GetSystemLog

  - @ref __tds__GetSystemSupportInformation

  - @ref __tds__GetScopes

  - @ref __tds__SetScopes

  - @ref __tds__AddScopes

  - @ref __tds__RemoveScopes

  - @ref __tds__GetDiscoveryMode

  - @ref __tds__SetDiscoveryMode

  - @ref __tds__GetRemoteDiscoveryMode

  - @ref __tds__SetRemoteDiscoveryMode

  - @ref __tds__GetDPAddresses

  - @ref __tds__GetEndpointReference

  - @ref __tds__GetRemoteUser

  - @ref __tds__SetRemoteUser

  - @ref __tds__GetUsers

  - @ref __tds__CreateUsers

  - @ref __tds__DeleteUsers

  - @ref __tds__SetUser

  - @ref __tds__GetWsdlUrl

  - @ref __tds__GetCapabilities

  - @ref __tds__SetDPAddresses

  - @ref __tds__GetHostname

  - @ref __tds__SetHostname

  - @ref __tds__SetHostnameFromDHCP

  - @ref __tds__GetDNS

  - @ref __tds__SetDNS

  - @ref __tds__GetNTP

  - @ref __tds__SetNTP

  - @ref __tds__GetDynamicDNS

  - @ref __tds__SetDynamicDNS

  - @ref __tds__GetNetworkInterfaces

  - @ref __tds__SetNetworkInterfaces

  - @ref __tds__GetNetworkProtocols

  - @ref __tds__SetNetworkProtocols

  - @ref __tds__GetNetworkDefaultGateway

  - @ref __tds__SetNetworkDefaultGateway

  - @ref __tds__GetZeroConfiguration

  - @ref __tds__SetZeroConfiguration

  - @ref __tds__GetIPAddressFilter

  - @ref __tds__SetIPAddressFilter

  - @ref __tds__AddIPAddressFilter

  - @ref __tds__RemoveIPAddressFilter

  - @ref __tds__GetAccessPolicy

  - @ref __tds__SetAccessPolicy

  - @ref __tds__CreateCertificate

  - @ref __tds__GetCertificates

  - @ref __tds__GetCertificatesStatus

  - @ref __tds__SetCertificatesStatus

  - @ref __tds__DeleteCertificates

  - @ref __tds__GetPkcs10Request

  - @ref __tds__LoadCertificates

  - @ref __tds__GetClientCertificateMode

  - @ref __tds__SetClientCertificateMode

  - @ref __tds__GetRelayOutputs

  - @ref __tds__SetRelayOutputSettings

  - @ref __tds__SetRelayOutputState

  - @ref __tds__SendAuxiliaryCommand

  - @ref __tds__GetCACertificates

  - @ref __tds__LoadCertificateWithPrivateKey

  - @ref __tds__GetCertificateInformation

  - @ref __tds__LoadCACertificates

  - @ref __tds__CreateDot1XConfiguration

  - @ref __tds__SetDot1XConfiguration

  - @ref __tds__GetDot1XConfiguration

  - @ref __tds__GetDot1XConfigurations

  - @ref __tds__DeleteDot1XConfiguration

  - @ref __tds__GetDot11Capabilities

  - @ref __tds__GetDot11Status

  - @ref __tds__ScanAvailableDot11Networks

  - @ref __tds__GetSystemUris

  - @ref __tds__StartFirmwareUpgrade

  - @ref __tds__StartSystemRestore

  - @ref __tds__GetStorageConfigurations

  - @ref __tds__CreateStorageConfiguration

  - @ref __tds__GetStorageConfiguration

  - @ref __tds__SetStorageConfiguration

  - @ref __tds__DeleteStorageConfiguration

  - @ref __tds__GetGeoLocation

  - @ref __tds__SetGeoLocation

  - @ref __tds__DeleteGeoLocation

@section DeviceBinding_ports Default endpoints of Binding "DeviceBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/** @page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_operations Operations of Binding "PullPointSubscriptionBinding"

  - @ref __tev__PullMessages

  - @ref __tev__Seek

  - @ref __tev__SetSynchronizationPoint

  - @ref __tev__Unsubscribe

  - @ref __tev__GetServiceCapabilities

  - @ref __tev__CreatePullPointSubscription

  - @ref __tev__GetEventProperties

  - @ref __tev__Renew

  - @ref __tev__Unsubscribe_

  - @ref __tev__Subscribe

  - @ref __tev__GetCurrentMessage

  - @ref __tev__Notify

  - @ref __tev__GetMessages

  - @ref __tev__DestroyPullPoint

  - @ref __tev__Notify_

  - @ref __tev__CreatePullPoint

  - @ref __tev__Renew_

  - @ref __tev__Unsubscribe__

  - @ref __tev__PauseSubscription

  - @ref __tev__ResumeSubscription

@section PullPointSubscriptionBinding_ports Default endpoints of Binding "PullPointSubscriptionBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/** @page ImagingBinding Binding "ImagingBinding"

@section ImagingBinding_operations Operations of Binding "ImagingBinding"

  - @ref __timg__GetServiceCapabilities

  - @ref __timg__GetImagingSettings

  - @ref __timg__SetImagingSettings

  - @ref __timg__GetOptions

  - @ref __timg__Move

  - @ref __timg__Stop

  - @ref __timg__GetStatus

  - @ref __timg__GetMoveOptions

  - @ref __timg__GetPresets

  - @ref __timg__GetCurrentPreset

  - @ref __timg__SetCurrentPreset

@section ImagingBinding_ports Default endpoints of Binding "ImagingBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/** @page DeviceIOBinding Binding "DeviceIOBinding"

@section DeviceIOBinding_operations Operations of Binding "DeviceIOBinding"

  - @ref __tmd__GetServiceCapabilities

  - @ref __tmd__GetRelayOutputOptions

  - @ref __tmd__GetAudioSources

  - @ref __tmd__GetAudioOutputs

  - @ref __tmd__GetVideoSources

  - @ref __tmd__GetVideoOutputs

  - @ref __tmd__GetVideoSourceConfiguration

  - @ref __tmd__GetVideoOutputConfiguration

  - @ref __tmd__GetAudioSourceConfiguration

  - @ref __tmd__GetAudioOutputConfiguration

  - @ref __tmd__SetVideoSourceConfiguration

  - @ref __tmd__SetVideoOutputConfiguration

  - @ref __tmd__SetAudioSourceConfiguration

  - @ref __tmd__SetAudioOutputConfiguration

  - @ref __tmd__GetVideoSourceConfigurationOptions

  - @ref __tmd__GetVideoOutputConfigurationOptions

  - @ref __tmd__GetAudioSourceConfigurationOptions

  - @ref __tmd__GetAudioOutputConfigurationOptions

  - @ref __tmd__GetRelayOutputs

  - @ref __tmd__SetRelayOutputSettings

  - @ref __tmd__SetRelayOutputState

  - @ref __tmd__GetDigitalInputs

  - @ref __tmd__GetDigitalInputConfigurationOptions

  - @ref __tmd__SetDigitalInputConfigurations

  - @ref __tmd__GetSerialPorts

  - @ref __tmd__GetSerialPortConfiguration

  - @ref __tmd__SetSerialPortConfiguration

  - @ref __tmd__GetSerialPortConfigurationOptions

  - @ref __tmd__SendReceiveSerialCommand

@section DeviceIOBinding_ports Default endpoints of Binding "DeviceIOBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/** @page PTZBinding Binding "PTZBinding"

@section PTZBinding_operations Operations of Binding "PTZBinding"

  - @ref __tptz__GetServiceCapabilities

  - @ref __tptz__GetConfigurations

  - @ref __tptz__GetPresets

  - @ref __tptz__SetPreset

  - @ref __tptz__RemovePreset

  - @ref __tptz__GotoPreset

  - @ref __tptz__GetStatus

  - @ref __tptz__GetConfiguration

  - @ref __tptz__GetNodes

  - @ref __tptz__GetNode

  - @ref __tptz__SetConfiguration

  - @ref __tptz__GetConfigurationOptions

  - @ref __tptz__GotoHomePosition

  - @ref __tptz__SetHomePosition

  - @ref __tptz__ContinuousMove

  - @ref __tptz__RelativeMove

  - @ref __tptz__SendAuxiliaryCommand

  - @ref __tptz__AbsoluteMove

  - @ref __tptz__GeoMove

  - @ref __tptz__Stop

  - @ref __tptz__GetPresetTours

  - @ref __tptz__GetPresetTour

  - @ref __tptz__GetPresetTourOptions

  - @ref __tptz__CreatePresetTour

  - @ref __tptz__ModifyPresetTour

  - @ref __tptz__OperatePresetTour

  - @ref __tptz__RemovePresetTour

  - @ref __tptz__GetCompatibleConfigurations

@section PTZBinding_ports Default endpoints of Binding "PTZBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/** @page MediaBinding Binding "MediaBinding"

@section MediaBinding_operations Operations of Binding "MediaBinding"

  - @ref __trt__GetServiceCapabilities

  - @ref __trt__GetVideoSources

  - @ref __trt__GetAudioSources

  - @ref __trt__GetAudioOutputs

  - @ref __trt__CreateProfile

  - @ref __trt__GetProfile

  - @ref __trt__GetProfiles

  - @ref __trt__AddVideoEncoderConfiguration

  - @ref __trt__AddVideoSourceConfiguration

  - @ref __trt__AddAudioEncoderConfiguration

  - @ref __trt__AddAudioSourceConfiguration

  - @ref __trt__AddPTZConfiguration

  - @ref __trt__AddVideoAnalyticsConfiguration

  - @ref __trt__AddMetadataConfiguration

  - @ref __trt__AddAudioOutputConfiguration

  - @ref __trt__AddAudioDecoderConfiguration

  - @ref __trt__RemoveVideoEncoderConfiguration

  - @ref __trt__RemoveVideoSourceConfiguration

  - @ref __trt__RemoveAudioEncoderConfiguration

  - @ref __trt__RemoveAudioSourceConfiguration

  - @ref __trt__RemovePTZConfiguration

  - @ref __trt__RemoveVideoAnalyticsConfiguration

  - @ref __trt__RemoveMetadataConfiguration

  - @ref __trt__RemoveAudioOutputConfiguration

  - @ref __trt__RemoveAudioDecoderConfiguration

  - @ref __trt__DeleteProfile

  - @ref __trt__GetVideoSourceConfigurations

  - @ref __trt__GetVideoEncoderConfigurations

  - @ref __trt__GetAudioSourceConfigurations

  - @ref __trt__GetAudioEncoderConfigurations

  - @ref __trt__GetVideoAnalyticsConfigurations

  - @ref __trt__GetMetadataConfigurations

  - @ref __trt__GetAudioOutputConfigurations

  - @ref __trt__GetAudioDecoderConfigurations

  - @ref __trt__GetVideoSourceConfiguration

  - @ref __trt__GetVideoEncoderConfiguration

  - @ref __trt__GetAudioSourceConfiguration

  - @ref __trt__GetAudioEncoderConfiguration

  - @ref __trt__GetVideoAnalyticsConfiguration

  - @ref __trt__GetMetadataConfiguration

  - @ref __trt__GetAudioOutputConfiguration

  - @ref __trt__GetAudioDecoderConfiguration

  - @ref __trt__GetCompatibleVideoEncoderConfigurations

  - @ref __trt__GetCompatibleVideoSourceConfigurations

  - @ref __trt__GetCompatibleAudioEncoderConfigurations

  - @ref __trt__GetCompatibleAudioSourceConfigurations

  - @ref __trt__GetCompatibleVideoAnalyticsConfigurations

  - @ref __trt__GetCompatibleMetadataConfigurations

  - @ref __trt__GetCompatibleAudioOutputConfigurations

  - @ref __trt__GetCompatibleAudioDecoderConfigurations

  - @ref __trt__SetVideoSourceConfiguration

  - @ref __trt__SetVideoEncoderConfiguration

  - @ref __trt__SetAudioSourceConfiguration

  - @ref __trt__SetAudioEncoderConfiguration

  - @ref __trt__SetVideoAnalyticsConfiguration

  - @ref __trt__SetMetadataConfiguration

  - @ref __trt__SetAudioOutputConfiguration

  - @ref __trt__SetAudioDecoderConfiguration

  - @ref __trt__GetVideoSourceConfigurationOptions

  - @ref __trt__GetVideoEncoderConfigurationOptions

  - @ref __trt__GetAudioSourceConfigurationOptions

  - @ref __trt__GetAudioEncoderConfigurationOptions

  - @ref __trt__GetMetadataConfigurationOptions

  - @ref __trt__GetAudioOutputConfigurationOptions

  - @ref __trt__GetAudioDecoderConfigurationOptions

  - @ref __trt__GetGuaranteedNumberOfVideoEncoderInstances

  - @ref __trt__GetStreamUri

  - @ref __trt__StartMulticastStreaming

  - @ref __trt__StopMulticastStreaming

  - @ref __trt__SetSynchronizationPoint

  - @ref __trt__GetSnapshotUri

  - @ref __trt__GetVideoSourceModes

  - @ref __trt__SetVideoSourceMode

  - @ref __trt__GetOSDs

  - @ref __trt__GetOSD

  - @ref __trt__GetOSDOptions

  - @ref __trt__SetOSD

  - @ref __trt__CreateOSD

  - @ref __trt__DeleteOSD

@section MediaBinding_ports Default endpoints of Binding "MediaBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use wsdl2h option -j to omit these declarations.

*/
mutable struct SOAP_ENV__Detail
{
/// xsd:anyAttribute omitted: to parse attribute content of the Detail element into DOM anyAttribute, use wsdl2h option -d.
/// SOAP Fault message "InvalidFilterFault" part "InvalidFilterFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault".
    struct wsnt__InvalidFilterFaultType*  wsnt__InvalidFilterFault      ;
/// SOAP Fault message "InvalidMessageContentExpressionFault" part "InvalidMessageContentExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault".
    struct wsnt__InvalidMessageContentExpressionFaultType*  wsnt__InvalidMessageContentExpressionFault;
/// SOAP Fault message "InvalidProducerPropertiesExpressionFault" part "InvalidProducerPropertiesExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault".
    struct wsnt__InvalidProducerPropertiesExpressionFaultType*  wsnt__InvalidProducerPropertiesExpressionFault;
/// SOAP Fault message "InvalidTopicExpressionFault" part "InvalidTopicExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault".
    struct wsnt__InvalidTopicExpressionFaultType*  wsnt__InvalidTopicExpressionFault;
/// SOAP Fault message "MultipleTopicsSpecifiedFault" part "MultipleTopicsSpecifiedFault" element ""http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault".
    struct wsnt__MultipleTopicsSpecifiedFaultType*  wsnt__MultipleTopicsSpecifiedFault;
/// SOAP Fault message "NoCurrentMessageOnTopicFault" part "NoCurrentMessageOnTopicFault" element ""http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault".
    struct wsnt__NoCurrentMessageOnTopicFaultType*  wsnt__NoCurrentMessageOnTopicFault;
/// SOAP Fault message "NotifyMessageNotSupportedFault" part "NotifyMessageNotSupportedFault" element ""http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault".
    struct wsnt__NotifyMessageNotSupportedFaultType*  wsnt__NotifyMessageNotSupportedFault;
/// SOAP Fault message "PauseFailedFault" part "PauseFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":PauseFailedFault".
    struct wsnt__PauseFailedFaultType*   wsnt__PauseFailedFault        ;
/// SOAP Fault message "PullMessagesFaultResponse" part "parameters" element ""http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse".
    struct _tev__PullMessagesFaultResponse*  tev__PullMessagesFaultResponse;
/// SOAP Fault message "ResourceUnknownFault" part "ResourceUnknownFault" element ""http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault".
    struct wsrfr__ResourceUnknownFaultType*  wsrfr__ResourceUnknownFault   ;
/// SOAP Fault message "ResumeFailedFault" part "ResumeFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault".
    struct wsnt__ResumeFailedFaultType*  wsnt__ResumeFailedFault       ;
/// SOAP Fault message "SubscribeCreationFailedFault" part "SubscribeCreationFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault".
    struct wsnt__SubscribeCreationFailedFaultType*  wsnt__SubscribeCreationFailedFault;
/// SOAP Fault message "TopicExpressionDialectUnknownFault" part "TopicExpressionDialectUnknownFault" element ""http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault".
    struct wsnt__TopicExpressionDialectUnknownFaultType*  wsnt__TopicExpressionDialectUnknownFault;
/// SOAP Fault message "TopicNotSupportedFault" part "TopicNotSupportedFault" element ""http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault".
    struct wsnt__TopicNotSupportedFaultType*  wsnt__TopicNotSupportedFault  ;
/// SOAP Fault message "UnableToCreatePullPointFault" part "UnableToCreatePullPointFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault".
    struct wsnt__UnableToCreatePullPointFaultType*  wsnt__UnableToCreatePullPointFault;
/// SOAP Fault message "UnableToDestroyPullPointFault" part "UnableToDestroyPullPointFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault".
    struct wsnt__UnableToDestroyPullPointFaultType*  wsnt__UnableToDestroyPullPointFault;
/// SOAP Fault message "UnableToDestroySubscriptionFault" part "UnableToDestroySubscriptionFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault".
    struct wsnt__UnableToDestroySubscriptionFaultType*  wsnt__UnableToDestroySubscriptionFault;
/// SOAP Fault message "UnableToGetMessagesFault" part "UnableToGetMessagesFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault".
    struct wsnt__UnableToGetMessagesFaultType*  wsnt__UnableToGetMessagesFault;
/// SOAP Fault message "UnacceptableInitialTerminationTimeFault" part "UnacceptableInitialTerminationTimeFault" element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault".
    struct wsnt__UnacceptableInitialTerminationTimeFaultType*  wsnt__UnacceptableInitialTerminationTimeFault;
/// SOAP Fault message "UnacceptableTerminationTimeFault" part "UnacceptableTerminationTimeFault" element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault".
    struct wsnt__UnacceptableTerminationTimeFaultType*  wsnt__UnacceptableTerminationTimeFault;
/// SOAP Fault message "UnrecognizedPolicyRequestFault" part "UnrecognizedPolicyRequestFault" element ""http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault".
    struct wsnt__UnrecognizedPolicyRequestFaultType*  wsnt__UnrecognizedPolicyRequestFault;
/// SOAP Fault message "UnsupportedPolicyRequestFault" part "UnsupportedPolicyRequestFault" element ""http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault".
    struct wsnt__UnsupportedPolicyRequestFaultType*  wsnt__UnsupportedPolicyRequestFault;
    int                                  __type                        ;	///< set to SOAP_TYPE_T for a serializable type T
    void                                *fault                         ;	///< points to serializable value of type T or NULL
    _XML                                 __any                         ;	///< Catch any other content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   Media2Binding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetServiceCapabilities" of service binding "Media2Binding".
Returns the capabilities of the media service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetServiceCapabilities* ns1__GetServiceCapabilities,
    // output parameters:
    struct _ns1__GetServiceCapabilitiesResponse*ns1__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetServiceCapabilities* ns1__GetServiceCapabilities,
    // output parameters:
    struct _ns1__GetServiceCapabilitiesResponse*ns1__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetServiceCapabilities SOAP
//gsoap ns1  service method-style:	GetServiceCapabilities document
//gsoap ns1  service method-encoding:	GetServiceCapabilities literal
//gsoap ns1  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilities
//gsoap ns1  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilitiesResponse
int __ns1__GetServiceCapabilities(
    struct _ns1__GetServiceCapabilities* ns1__GetServiceCapabilities,	///< Input parameter
    struct _ns1__GetServiceCapabilitiesResponse*ns1__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__CreateProfile" of service binding "Media2Binding".
This operation creates a new media profile. 
				A created profile created via this method may be
deleted via the DeleteProfile method.
				Optionally Configurations can be assinged to the
profile on creation. For details regarding profile assignement
				check also the method AddConfiguration.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/CreateProfile"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/CreateProfile"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/CreateProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__CreateProfile*         ns1__CreateProfile,
    // output parameters:
    struct _ns1__CreateProfileResponse *ns1__CreateProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateProfile(
    struct soap *soap,
    // input parameters:
    struct _ns1__CreateProfile*         ns1__CreateProfile,
    // output parameters:
    struct _ns1__CreateProfileResponse *ns1__CreateProfileResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	CreateProfile SOAP
//gsoap ns1  service method-style:	CreateProfile document
//gsoap ns1  service method-encoding:	CreateProfile literal
//gsoap ns1  service method-input-action:	CreateProfile http://www.onvif.org/ver20/media/wsdl/CreateProfile
//gsoap ns1  service method-output-action:	CreateProfile http://www.onvif.org/ver20/media/wsdl/CreateProfileResponse
int __ns1__CreateProfile(
    struct _ns1__CreateProfile*         ns1__CreateProfile,	///< Input parameter
    struct _ns1__CreateProfileResponse *ns1__CreateProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetProfiles                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetProfiles" of service binding "Media2Binding".
Retrieve the profile with the specified token or all defined media profiles.
				<ul>
					<li>If no Type is provided the returned
profiles shall contain no configuration information.</li>
					<li>If a single Type with value 'All' is
provided the returned profiles shall include all associated configurations.</li>
					<li>Otherwise the requested list of configurations
shall for each profile include the configurations present as Type.</li>
				</ul>
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetProfiles"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetProfiles"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetProfiles*           ns1__GetProfiles,
    // output parameters:
    struct _ns1__GetProfilesResponse   *ns1__GetProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetProfiles(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetProfiles*           ns1__GetProfiles,
    // output parameters:
    struct _ns1__GetProfilesResponse   *ns1__GetProfilesResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetProfiles SOAP
//gsoap ns1  service method-style:	GetProfiles document
//gsoap ns1  service method-encoding:	GetProfiles literal
//gsoap ns1  service method-input-action:	GetProfiles http://www.onvif.org/ver20/media/wsdl/GetProfiles
//gsoap ns1  service method-output-action:	GetProfiles http://www.onvif.org/ver20/media/wsdl/GetProfilesResponse
int __ns1__GetProfiles(
    struct _ns1__GetProfiles*           ns1__GetProfiles,	///< Input parameter
    struct _ns1__GetProfilesResponse   *ns1__GetProfilesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__AddConfiguration                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__AddConfiguration" of service binding "Media2Binding".
This operation adds one or more Configurations to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. A device shall
support adding a compatible Configuration to a Profile containing a VideoSourceConfiguration
and shall
support streaming video data of such a profile.<br/>
				Note that OSD elements must be added via the CreateOSD
command.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/AddConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/AddConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/AddConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__AddConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__AddConfiguration*      ns1__AddConfiguration,
    // output parameters:
    struct _ns1__AddConfigurationResponse*ns1__AddConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__AddConfiguration(
    struct soap *soap,
    // input parameters:
    struct _ns1__AddConfiguration*      ns1__AddConfiguration,
    // output parameters:
    struct _ns1__AddConfigurationResponse*ns1__AddConfigurationResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	AddConfiguration SOAP
//gsoap ns1  service method-style:	AddConfiguration document
//gsoap ns1  service method-encoding:	AddConfiguration literal
//gsoap ns1  service method-input-action:	AddConfiguration http://www.onvif.org/ver20/media/wsdl/AddConfiguration
//gsoap ns1  service method-output-action:	AddConfiguration http://www.onvif.org/ver20/media/wsdl/AddConfigurationResponse
int __ns1__AddConfiguration(
    struct _ns1__AddConfiguration*      ns1__AddConfiguration,	///< Input parameter
    struct _ns1__AddConfigurationResponse*ns1__AddConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__RemoveConfiguration                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__RemoveConfiguration" of service binding "Media2Binding".
This operation removes the listed configurations from an existing media profile.
If the
				media profile does not contain one of the listed
configurations that item shall be ignored.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/RemoveConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/RemoveConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/RemoveConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__RemoveConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__RemoveConfiguration*   ns1__RemoveConfiguration,
    // output parameters:
    struct _ns1__RemoveConfigurationResponse*ns1__RemoveConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__RemoveConfiguration(
    struct soap *soap,
    // input parameters:
    struct _ns1__RemoveConfiguration*   ns1__RemoveConfiguration,
    // output parameters:
    struct _ns1__RemoveConfigurationResponse*ns1__RemoveConfigurationResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	RemoveConfiguration SOAP
//gsoap ns1  service method-style:	RemoveConfiguration document
//gsoap ns1  service method-encoding:	RemoveConfiguration literal
//gsoap ns1  service method-input-action:	RemoveConfiguration http://www.onvif.org/ver20/media/wsdl/RemoveConfiguration
//gsoap ns1  service method-output-action:	RemoveConfiguration http://www.onvif.org/ver20/media/wsdl/RemoveConfigurationResponse
int __ns1__RemoveConfiguration(
    struct _ns1__RemoveConfiguration*   ns1__RemoveConfiguration,	///< Input parameter
    struct _ns1__RemoveConfigurationResponse*ns1__RemoveConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__DeleteProfile" of service binding "Media2Binding".
This operation deletes a profile. Deletion of a profile is only possible for non-fixed
profiles

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/DeleteProfile"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/DeleteProfile"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/DeleteProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__DeleteProfile*         ns1__DeleteProfile,
    // output parameters:
    struct _ns1__DeleteProfileResponse *ns1__DeleteProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteProfile(
    struct soap *soap,
    // input parameters:
    struct _ns1__DeleteProfile*         ns1__DeleteProfile,
    // output parameters:
    struct _ns1__DeleteProfileResponse *ns1__DeleteProfileResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	DeleteProfile SOAP
//gsoap ns1  service method-style:	DeleteProfile document
//gsoap ns1  service method-encoding:	DeleteProfile literal
//gsoap ns1  service method-input-action:	DeleteProfile http://www.onvif.org/ver20/media/wsdl/DeleteProfile
//gsoap ns1  service method-output-action:	DeleteProfile http://www.onvif.org/ver20/media/wsdl/DeleteProfileResponse
int __ns1__DeleteProfile(
    struct _ns1__DeleteProfile*         ns1__DeleteProfile,	///< Input parameter
    struct _ns1__DeleteProfileResponse *ns1__DeleteProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetVideoSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetVideoSourceConfigurations" of service binding "Media2Binding".
By default this operation lists all existing video source configurations for a device.
Provide a profile token to list only configurations that are compatible with the
profile. If a configuration token is provided only a single configuration will
be returned.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetVideoSourceConfigurations,
    // output parameters:
    struct _ns1__GetVideoSourceConfigurationsResponse*ns1__GetVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetVideoSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetVideoSourceConfigurations,
    // output parameters:
    struct _ns1__GetVideoSourceConfigurationsResponse*ns1__GetVideoSourceConfigurationsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetVideoSourceConfigurations SOAP
//gsoap ns1  service method-style:	GetVideoSourceConfigurations document
//gsoap ns1  service method-encoding:	GetVideoSourceConfigurations literal
//gsoap ns1  service method-input-action:	GetVideoSourceConfigurations http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurations
//gsoap ns1  service method-output-action:	GetVideoSourceConfigurations http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationsResponse
int __ns1__GetVideoSourceConfigurations(
    struct ns1__GetConfiguration*       ns1__GetVideoSourceConfigurations,	///< Input parameter
    struct _ns1__GetVideoSourceConfigurationsResponse*ns1__GetVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetVideoEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetVideoEncoderConfigurations" of service binding "Media2Binding".
By default this operation lists all existing video encoder configurations for a
device. Provide a profile token to list only configurations that are compatible
with the profile. If a configuration token is provided only a single configuration
will be returned.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetVideoEncoderConfigurations,
    // output parameters:
    struct _ns1__GetVideoEncoderConfigurationsResponse*ns1__GetVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetVideoEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetVideoEncoderConfigurations,
    // output parameters:
    struct _ns1__GetVideoEncoderConfigurationsResponse*ns1__GetVideoEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetVideoEncoderConfigurations SOAP
//gsoap ns1  service method-style:	GetVideoEncoderConfigurations document
//gsoap ns1  service method-encoding:	GetVideoEncoderConfigurations literal
//gsoap ns1  service method-input-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurations
//gsoap ns1  service method-output-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationsResponse
int __ns1__GetVideoEncoderConfigurations(
    struct ns1__GetConfiguration*       ns1__GetVideoEncoderConfigurations,	///< Input parameter
    struct _ns1__GetVideoEncoderConfigurationsResponse*ns1__GetVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAudioSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetAudioSourceConfigurations" of service binding "Media2Binding".
By default this operation lists all existing audio source configurations for a device.
Provide a profile token to list only configurations that are compatible with the
profile. If a configuration token is provided only a single configuration will
be returned.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurations/"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurations/"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurations/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioSourceConfigurations,
    // output parameters:
    struct _ns1__GetAudioSourceConfigurationsResponse*ns1__GetAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAudioSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioSourceConfigurations,
    // output parameters:
    struct _ns1__GetAudioSourceConfigurationsResponse*ns1__GetAudioSourceConfigurationsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetAudioSourceConfigurations SOAP
//gsoap ns1  service method-style:	GetAudioSourceConfigurations document
//gsoap ns1  service method-encoding:	GetAudioSourceConfigurations literal
//gsoap ns1  service method-input-action:	GetAudioSourceConfigurations http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurations/
//gsoap ns1  service method-output-action:	GetAudioSourceConfigurations http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurations/Response
int __ns1__GetAudioSourceConfigurations(
    struct ns1__GetConfiguration*       ns1__GetAudioSourceConfigurations,	///< Input parameter
    struct _ns1__GetAudioSourceConfigurationsResponse*ns1__GetAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAudioEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetAudioEncoderConfigurations" of service binding "Media2Binding".
By default this operation lists all existing audio encoder configurations for a
device. Provide a profile token to list only configurations that are compatible
with the profile. If a configuration token is provided only a single configuration
will be returned.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioEncoderConfigurations,
    // output parameters:
    struct _ns1__GetAudioEncoderConfigurationsResponse*ns1__GetAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAudioEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioEncoderConfigurations,
    // output parameters:
    struct _ns1__GetAudioEncoderConfigurationsResponse*ns1__GetAudioEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetAudioEncoderConfigurations SOAP
//gsoap ns1  service method-style:	GetAudioEncoderConfigurations document
//gsoap ns1  service method-encoding:	GetAudioEncoderConfigurations literal
//gsoap ns1  service method-input-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurations
//gsoap ns1  service method-output-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationsResponse
int __ns1__GetAudioEncoderConfigurations(
    struct ns1__GetConfiguration*       ns1__GetAudioEncoderConfigurations,	///< Input parameter
    struct _ns1__GetAudioEncoderConfigurationsResponse*ns1__GetAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAnalyticsConfigurations                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetAnalyticsConfigurations" of service binding "Media2Binding".
By default this operation lists all existing video analytics configurations for
a device. Provide a profile token to list only configurations that are compatible
with the profile. If a configuration token is provided only a single configuration
will be returned.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAnalyticsConfigurations,
    // output parameters:
    struct _ns1__GetAnalyticsConfigurationsResponse*ns1__GetAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAnalyticsConfigurations(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAnalyticsConfigurations,
    // output parameters:
    struct _ns1__GetAnalyticsConfigurationsResponse*ns1__GetAnalyticsConfigurationsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetAnalyticsConfigurations SOAP
//gsoap ns1  service method-style:	GetAnalyticsConfigurations document
//gsoap ns1  service method-encoding:	GetAnalyticsConfigurations literal
//gsoap ns1  service method-input-action:	GetAnalyticsConfigurations http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurations
//gsoap ns1  service method-output-action:	GetAnalyticsConfigurations http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurationsResponse
int __ns1__GetAnalyticsConfigurations(
    struct ns1__GetConfiguration*       ns1__GetAnalyticsConfigurations,	///< Input parameter
    struct _ns1__GetAnalyticsConfigurationsResponse*ns1__GetAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetMetadataConfigurations                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetMetadataConfigurations" of service binding "Media2Binding".
By default this operation lists all existing metadata configurations for a device.
Provide a profile token to list only configurations that are compatible with the
profile. If a configuration token is provided only a single configuration will
be returned.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetMetadataConfigurations,
    // output parameters:
    struct _ns1__GetMetadataConfigurationsResponse*ns1__GetMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetMetadataConfigurations(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetMetadataConfigurations,
    // output parameters:
    struct _ns1__GetMetadataConfigurationsResponse*ns1__GetMetadataConfigurationsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetMetadataConfigurations SOAP
//gsoap ns1  service method-style:	GetMetadataConfigurations document
//gsoap ns1  service method-encoding:	GetMetadataConfigurations literal
//gsoap ns1  service method-input-action:	GetMetadataConfigurations http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurations
//gsoap ns1  service method-output-action:	GetMetadataConfigurations http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationsResponse
int __ns1__GetMetadataConfigurations(
    struct ns1__GetConfiguration*       ns1__GetMetadataConfigurations,	///< Input parameter
    struct _ns1__GetMetadataConfigurationsResponse*ns1__GetMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAudioOutputConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetAudioOutputConfigurations" of service binding "Media2Binding".
By default this operation lists all existing audio output configurations for a device.
Provide a profile token to list only configurations that are compatible with the
profile. If a configuration token is provided only a single configuration will
be returned.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioOutputConfigurations,
    // output parameters:
    struct _ns1__GetAudioOutputConfigurationsResponse*ns1__GetAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAudioOutputConfigurations(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioOutputConfigurations,
    // output parameters:
    struct _ns1__GetAudioOutputConfigurationsResponse*ns1__GetAudioOutputConfigurationsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetAudioOutputConfigurations SOAP
//gsoap ns1  service method-style:	GetAudioOutputConfigurations document
//gsoap ns1  service method-encoding:	GetAudioOutputConfigurations literal
//gsoap ns1  service method-input-action:	GetAudioOutputConfigurations http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurations
//gsoap ns1  service method-output-action:	GetAudioOutputConfigurations http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationsResponse
int __ns1__GetAudioOutputConfigurations(
    struct ns1__GetConfiguration*       ns1__GetAudioOutputConfigurations,	///< Input parameter
    struct _ns1__GetAudioOutputConfigurationsResponse*ns1__GetAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAudioDecoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetAudioDecoderConfigurations" of service binding "Media2Binding".
By default this operation lists all existing audio decoder configurations for a
device. Provide a profile token to list only configurations that are compatible
with the profile. If a configuration token is provided only a single configuration
will be returned.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioDecoderConfigurations,
    // output parameters:
    struct _ns1__GetAudioDecoderConfigurationsResponse*ns1__GetAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAudioDecoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioDecoderConfigurations,
    // output parameters:
    struct _ns1__GetAudioDecoderConfigurationsResponse*ns1__GetAudioDecoderConfigurationsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetAudioDecoderConfigurations SOAP
//gsoap ns1  service method-style:	GetAudioDecoderConfigurations document
//gsoap ns1  service method-encoding:	GetAudioDecoderConfigurations literal
//gsoap ns1  service method-input-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurations
//gsoap ns1  service method-output-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationsResponse
int __ns1__GetAudioDecoderConfigurations(
    struct ns1__GetConfiguration*       ns1__GetAudioDecoderConfigurations,	///< Input parameter
    struct _ns1__GetAudioDecoderConfigurationsResponse*ns1__GetAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__SetVideoSourceConfiguration" of service binding "Media2Binding".
This operation modifies a video source configuration. Running streams using this
configuration may be immediately updated according to the new settings. The changes
are not guaranteed to take effect unless the client requests a new stream URI and
restarts any affected stream. NVC methods for changing a running stream are out
of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__SetVideoSourceConfiguration* ns1__SetVideoSourceConfiguration,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _ns1__SetVideoSourceConfiguration* ns1__SetVideoSourceConfiguration,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	SetVideoSourceConfiguration SOAP
//gsoap ns1  service method-style:	SetVideoSourceConfiguration document
//gsoap ns1  service method-encoding:	SetVideoSourceConfiguration literal
//gsoap ns1  service method-input-action:	SetVideoSourceConfiguration http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfiguration
//gsoap ns1  service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfigurationResponse
int __ns1__SetVideoSourceConfiguration(
    struct _ns1__SetVideoSourceConfiguration* ns1__SetVideoSourceConfiguration,	///< Input parameter
    struct ns1__SetConfigurationResponse*ns1__SetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__SetVideoEncoderConfiguration" of service binding "Media2Binding".
This operation modifies a video encoder configuration. Running streams using this
configuration may be immediately updated according to the new settings. The changes
are not guaranteed to take effect unless the client requests a new stream URI and
restarts any affected stream. NVC methods for changing a running stream are out
of scope for this specification. <br/>SessionTimeout is provided as a hint for
keeping rtsp session by a device. If necessary the device may adapt parameter values
for SessionTimeout elements without returning an error. For the time between keep
alive calls the client shall adhere to the timeout value signaled via RTSP.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__SetVideoEncoderConfiguration* ns1__SetVideoEncoderConfiguration,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _ns1__SetVideoEncoderConfiguration* ns1__SetVideoEncoderConfiguration,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetVideoEncoderConfigurationResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	SetVideoEncoderConfiguration SOAP
//gsoap ns1  service method-style:	SetVideoEncoderConfiguration document
//gsoap ns1  service method-encoding:	SetVideoEncoderConfiguration literal
//gsoap ns1  service method-input-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfiguration
//gsoap ns1  service method-output-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfigurationResponse
int __ns1__SetVideoEncoderConfiguration(
    struct _ns1__SetVideoEncoderConfiguration* ns1__SetVideoEncoderConfiguration,	///< Input parameter
    struct ns1__SetConfigurationResponse*ns1__SetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__SetAudioSourceConfiguration" of service binding "Media2Binding".
This operation modifies an audio source configuration. Running streams using this
configuration
				may be immediately updated according to the new
settings. The changes are not guaranteed
				to take effect unless the client requests a new
stream URI and restarts any affected stream
				NVC methods for changing a running stream are out
of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__SetAudioSourceConfiguration* ns1__SetAudioSourceConfiguration,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _ns1__SetAudioSourceConfiguration* ns1__SetAudioSourceConfiguration,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	SetAudioSourceConfiguration SOAP
//gsoap ns1  service method-style:	SetAudioSourceConfiguration document
//gsoap ns1  service method-encoding:	SetAudioSourceConfiguration literal
//gsoap ns1  service method-input-action:	SetAudioSourceConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfiguration
//gsoap ns1  service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfigurationResponse
int __ns1__SetAudioSourceConfiguration(
    struct _ns1__SetAudioSourceConfiguration* ns1__SetAudioSourceConfiguration,	///< Input parameter
    struct ns1__SetConfigurationResponse*ns1__SetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__SetAudioEncoderConfiguration" of service binding "Media2Binding".
This operation modifies an audio encoder configuration. Running streams using this
configuration may be immediately updated
				according to the new settings. The changes are not
guaranteed to take effect unless the client
				requests a new stream URI and restarts any affected
streams. NVC methods for changing a
				running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__SetAudioEncoderConfiguration* ns1__SetAudioEncoderConfiguration,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _ns1__SetAudioEncoderConfiguration* ns1__SetAudioEncoderConfiguration,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetAudioEncoderConfigurationResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	SetAudioEncoderConfiguration SOAP
//gsoap ns1  service method-style:	SetAudioEncoderConfiguration document
//gsoap ns1  service method-encoding:	SetAudioEncoderConfiguration literal
//gsoap ns1  service method-input-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfiguration
//gsoap ns1  service method-output-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfigurationResponse
int __ns1__SetAudioEncoderConfiguration(
    struct _ns1__SetAudioEncoderConfiguration* ns1__SetAudioEncoderConfiguration,	///< Input parameter
    struct ns1__SetConfigurationResponse*ns1__SetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__SetMetadataConfiguration" of service binding "Media2Binding".
This operation modifies a metadata configuration. Running streams using this configuration
may be updated immediately
				according to the new settings. The changes are not
guaranteed to take effect unless the client
				requests a new stream URI and restarts any affected
streams. NVC methods for changing a
				running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/SetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__SetMetadataConfiguration* ns1__SetMetadataConfiguration,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    struct _ns1__SetMetadataConfiguration* ns1__SetMetadataConfiguration,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetMetadataConfigurationResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	SetMetadataConfiguration SOAP
//gsoap ns1  service method-style:	SetMetadataConfiguration document
//gsoap ns1  service method-encoding:	SetMetadataConfiguration literal
//gsoap ns1  service method-input-action:	SetMetadataConfiguration http://www.onvif.org/ver20/media/wsdl/SetMetadataConfiguration
//gsoap ns1  service method-output-action:	SetMetadataConfiguration http://www.onvif.org/ver20/media/wsdl/SetMetadataConfigurationResponse
int __ns1__SetMetadataConfiguration(
    struct _ns1__SetMetadataConfiguration* ns1__SetMetadataConfiguration,	///< Input parameter
    struct ns1__SetConfigurationResponse*ns1__SetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__SetAudioOutputConfiguration" of service binding "Media2Binding".
This operation modifies an audio output configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__SetAudioOutputConfiguration* ns1__SetAudioOutputConfiguration,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _ns1__SetAudioOutputConfiguration* ns1__SetAudioOutputConfiguration,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	SetAudioOutputConfiguration SOAP
//gsoap ns1  service method-style:	SetAudioOutputConfiguration document
//gsoap ns1  service method-encoding:	SetAudioOutputConfiguration literal
//gsoap ns1  service method-input-action:	SetAudioOutputConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfiguration
//gsoap ns1  service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfigurationResponse
int __ns1__SetAudioOutputConfiguration(
    struct _ns1__SetAudioOutputConfiguration* ns1__SetAudioOutputConfiguration,	///< Input parameter
    struct ns1__SetConfigurationResponse*ns1__SetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__SetAudioDecoderConfiguration" of service binding "Media2Binding".
This operation modifies an audio decoder configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__SetAudioDecoderConfiguration* ns1__SetAudioDecoderConfiguration,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _ns1__SetAudioDecoderConfiguration* ns1__SetAudioDecoderConfiguration,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetAudioDecoderConfigurationResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	SetAudioDecoderConfiguration SOAP
//gsoap ns1  service method-style:	SetAudioDecoderConfiguration document
//gsoap ns1  service method-encoding:	SetAudioDecoderConfiguration literal
//gsoap ns1  service method-input-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfiguration
//gsoap ns1  service method-output-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfigurationResponse
int __ns1__SetAudioDecoderConfiguration(
    struct _ns1__SetAudioDecoderConfiguration* ns1__SetAudioDecoderConfiguration,	///< Input parameter
    struct ns1__SetConfigurationResponse*ns1__SetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetVideoSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetVideoSourceConfigurationOptions" of service binding "Media2Binding".
This operation returns the available options  (supported values and ranges for video
source configuration parameters) when the video source parameters are
				reconfigured If a video source configuration is
specified, the options shall concern that
				particular configuration. If a media profile is
specified, the options shall be compatible with
				that media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationOptions/"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationOptions/"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationOptions/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetVideoSourceConfigurationOptions,
    // output parameters:
    struct _ns1__GetVideoSourceConfigurationOptionsResponse*ns1__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetVideoSourceConfigurationOptions,
    // output parameters:
    struct _ns1__GetVideoSourceConfigurationOptionsResponse*ns1__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetVideoSourceConfigurationOptions SOAP
//gsoap ns1  service method-style:	GetVideoSourceConfigurationOptions document
//gsoap ns1  service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap ns1  service method-input-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationOptions/
//gsoap ns1  service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationOptions/Response
int __ns1__GetVideoSourceConfigurationOptions(
    struct ns1__GetConfiguration*       ns1__GetVideoSourceConfigurationOptions,	///< Input parameter
    struct _ns1__GetVideoSourceConfigurationOptionsResponse*ns1__GetVideoSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetVideoEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetVideoEncoderConfigurationOptions" of service binding "Media2Binding".
This operation returns the available options (supported values and ranges for video
encoder 
				configuration parameters) when the video encoder
parameters are reconfigured. <br/>
				This response contains the available video encoder
configuration options. If a video encoder configuration is specified, 
				the options shall concern that particular configuration.
If a media profile is specified, the options shall be 
				compatible with that media profile. If no tokens
are specified, the options shall be considered generic for the device.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetVideoEncoderConfigurationOptions,
    // output parameters:
    struct _ns1__GetVideoEncoderConfigurationOptionsResponse*ns1__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetVideoEncoderConfigurationOptions,
    // output parameters:
    struct _ns1__GetVideoEncoderConfigurationOptionsResponse*ns1__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetVideoEncoderConfigurationOptions SOAP
//gsoap ns1  service method-style:	GetVideoEncoderConfigurationOptions document
//gsoap ns1  service method-encoding:	GetVideoEncoderConfigurationOptions literal
//gsoap ns1  service method-input-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptions
//gsoap ns1  service method-output-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptionsResponse
int __ns1__GetVideoEncoderConfigurationOptions(
    struct ns1__GetConfiguration*       ns1__GetVideoEncoderConfigurationOptions,	///< Input parameter
    struct _ns1__GetVideoEncoderConfigurationOptionsResponse*ns1__GetVideoEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAudioSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetAudioSourceConfigurationOptions" of service binding "Media2Binding".
This operation returns the available options (supported values and ranges for audio
source configuration parameters) when the audio source parameters are
				reconfigured. If an audio source configuration is
specified, the options shall concern that
				particular configuration. If a media profile is
specified, the options shall be compatible with
				that media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioSourceConfigurationOptions,
    // output parameters:
    struct _ns1__GetAudioSourceConfigurationOptionsResponse*ns1__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioSourceConfigurationOptions,
    // output parameters:
    struct _ns1__GetAudioSourceConfigurationOptionsResponse*ns1__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetAudioSourceConfigurationOptions SOAP
//gsoap ns1  service method-style:	GetAudioSourceConfigurationOptions document
//gsoap ns1  service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap ns1  service method-input-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptions
//gsoap ns1  service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptionsResponse
int __ns1__GetAudioSourceConfigurationOptions(
    struct ns1__GetConfiguration*       ns1__GetAudioSourceConfigurationOptions,	///< Input parameter
    struct _ns1__GetAudioSourceConfigurationOptionsResponse*ns1__GetAudioSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAudioEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetAudioEncoderConfigurationOptions" of service binding "Media2Binding".
This operation returns the available options  (supported values and ranges for audio
encoder configuration parameters) when the audio encoder parameters are
				reconfigured.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioEncoderConfigurationOptions,
    // output parameters:
    struct _ns1__GetAudioEncoderConfigurationOptionsResponse*ns1__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioEncoderConfigurationOptions,
    // output parameters:
    struct _ns1__GetAudioEncoderConfigurationOptionsResponse*ns1__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetAudioEncoderConfigurationOptions SOAP
//gsoap ns1  service method-style:	GetAudioEncoderConfigurationOptions document
//gsoap ns1  service method-encoding:	GetAudioEncoderConfigurationOptions literal
//gsoap ns1  service method-input-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptions
//gsoap ns1  service method-output-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptionsResponse
int __ns1__GetAudioEncoderConfigurationOptions(
    struct ns1__GetConfiguration*       ns1__GetAudioEncoderConfigurationOptions,	///< Input parameter
    struct _ns1__GetAudioEncoderConfigurationOptionsResponse*ns1__GetAudioEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetMetadataConfigurationOptions                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetMetadataConfigurationOptions" of service binding "Media2Binding".
This operation returns the available options (supported values and ranges for metadata
configuration parameters) for changing the metadata configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetMetadataConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetMetadataConfigurationOptions,
    // output parameters:
    struct _ns1__GetMetadataConfigurationOptionsResponse*ns1__GetMetadataConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetMetadataConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetMetadataConfigurationOptions,
    // output parameters:
    struct _ns1__GetMetadataConfigurationOptionsResponse*ns1__GetMetadataConfigurationOptionsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetMetadataConfigurationOptions SOAP
//gsoap ns1  service method-style:	GetMetadataConfigurationOptions document
//gsoap ns1  service method-encoding:	GetMetadataConfigurationOptions literal
//gsoap ns1  service method-input-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptions
//gsoap ns1  service method-output-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptionsResponse
int __ns1__GetMetadataConfigurationOptions(
    struct ns1__GetConfiguration*       ns1__GetMetadataConfigurationOptions,	///< Input parameter
    struct _ns1__GetMetadataConfigurationOptionsResponse*ns1__GetMetadataConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAudioOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetAudioOutputConfigurationOptions" of service binding "Media2Binding".
This operation returns the available options (supported values and ranges for audio
output configuration parameters) for configuring an audio output.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioOutputConfigurationOptions,
    // output parameters:
    struct _ns1__GetAudioOutputConfigurationOptionsResponse*ns1__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioOutputConfigurationOptions,
    // output parameters:
    struct _ns1__GetAudioOutputConfigurationOptionsResponse*ns1__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetAudioOutputConfigurationOptions SOAP
//gsoap ns1  service method-style:	GetAudioOutputConfigurationOptions document
//gsoap ns1  service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap ns1  service method-input-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptions
//gsoap ns1  service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptionsResponse
int __ns1__GetAudioOutputConfigurationOptions(
    struct ns1__GetConfiguration*       ns1__GetAudioOutputConfigurationOptions,	///< Input parameter
    struct _ns1__GetAudioOutputConfigurationOptionsResponse*ns1__GetAudioOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAudioDecoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetAudioDecoderConfigurationOptions" of service binding "Media2Binding".
This command list the audio decoding capabilities for a given profile and configuration
of a
				device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioDecoderConfigurationOptions,
    // output parameters:
    struct _ns1__GetAudioDecoderConfigurationOptionsResponse*ns1__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct ns1__GetConfiguration*       ns1__GetAudioDecoderConfigurationOptions,
    // output parameters:
    struct _ns1__GetAudioDecoderConfigurationOptionsResponse*ns1__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetAudioDecoderConfigurationOptions SOAP
//gsoap ns1  service method-style:	GetAudioDecoderConfigurationOptions document
//gsoap ns1  service method-encoding:	GetAudioDecoderConfigurationOptions literal
//gsoap ns1  service method-input-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptions
//gsoap ns1  service method-output-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptionsResponse
int __ns1__GetAudioDecoderConfigurationOptions(
    struct ns1__GetConfiguration*       ns1__GetAudioDecoderConfigurationOptions,	///< Input parameter
    struct _ns1__GetAudioDecoderConfigurationOptionsResponse*ns1__GetAudioDecoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetVideoEncoderInstances                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetVideoEncoderInstances" of service binding "Media2Binding".
The GetVideoEncoderInstances command can be used to request the
				minimum number of guaranteed video encoder instances
(applications) per Video Source
				Configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderInstances"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderInstances"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderInstancesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetVideoEncoderInstances(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetVideoEncoderInstances* ns1__GetVideoEncoderInstances,
    // output parameters:
    struct _ns1__GetVideoEncoderInstancesResponse*ns1__GetVideoEncoderInstancesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetVideoEncoderInstances(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetVideoEncoderInstances* ns1__GetVideoEncoderInstances,
    // output parameters:
    struct _ns1__GetVideoEncoderInstancesResponse*ns1__GetVideoEncoderInstancesResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetVideoEncoderInstances SOAP
//gsoap ns1  service method-style:	GetVideoEncoderInstances document
//gsoap ns1  service method-encoding:	GetVideoEncoderInstances literal
//gsoap ns1  service method-input-action:	GetVideoEncoderInstances http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderInstances
//gsoap ns1  service method-output-action:	GetVideoEncoderInstances http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderInstancesResponse
int __ns1__GetVideoEncoderInstances(
    struct _ns1__GetVideoEncoderInstances* ns1__GetVideoEncoderInstances,	///< Input parameter
    struct _ns1__GetVideoEncoderInstancesResponse*ns1__GetVideoEncoderInstancesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetStreamUri                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetStreamUri" of service binding "Media2Binding".
This operation requests a URI that can be used to initiate a live media stream using
RTSP as
				the control protocol. The returned URI shall remain
valid indefinitely even if the profile is changed. <br/>
				Defined stream types are
				 <ul>
				 	<li>RtspUnicast		RTSP streaming RTP
as UDP Unicast.</li>
				 	<li>RtspMulticast	RTSP streaming RTP
as UDP Multicast.</li>
				 	<li>RTSP			RTSP streaming
RTP over TCP.</li>
				 	<li>RtspOverHttp	Tunneling both the
RTSP control channel and the RTP stream over HTTP or HTTPS.</li>
				 </ul>
				If a multicast stream is requested at least one
of VideoEncoder2Configuration, AudioEncoder2Configuration and MetadataConfiguration
shall have a valid multicast setting.<br/>
				For full compatibility with other ONVIF services
a device should not generate Uris longer than
				128 octets.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetStreamUri"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetStreamUri"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetStreamUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetStreamUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetStreamUri*          ns1__GetStreamUri,
    // output parameters:
    struct _ns1__GetStreamUriResponse  *ns1__GetStreamUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetStreamUri(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetStreamUri*          ns1__GetStreamUri,
    // output parameters:
    struct _ns1__GetStreamUriResponse  *ns1__GetStreamUriResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetStreamUri SOAP
//gsoap ns1  service method-style:	GetStreamUri document
//gsoap ns1  service method-encoding:	GetStreamUri literal
//gsoap ns1  service method-input-action:	GetStreamUri http://www.onvif.org/ver20/media/wsdl/GetStreamUri
//gsoap ns1  service method-output-action:	GetStreamUri http://www.onvif.org/ver20/media/wsdl/GetStreamUriResponse
int __ns1__GetStreamUri(
    struct _ns1__GetStreamUri*          ns1__GetStreamUri,	///< Input parameter
    struct _ns1__GetStreamUriResponse  *ns1__GetStreamUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__StartMulticastStreaming                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__StartMulticastStreaming" of service binding "Media2Binding".
This command starts multicast streaming using a specified media profile of a device.
				Streaming continues until StopMulticastStreaming
is called for the same Profile. The
				streaming shall continue after a reboot of the device
until a StopMulticastStreaming request is
				received. The multicast address, port and TTL are
configured in the
				VideoEncoderConfiguration, AudioEncoderConfiguration
and MetadataConfiguration
				respectively.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/StartMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/StartMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/StartMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__StartMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__StartStopMulticastStreaming* ns1__StartMulticastStreaming,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__StartMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__StartMulticastStreaming(
    struct soap *soap,
    // input parameters:
    struct ns1__StartStopMulticastStreaming* ns1__StartMulticastStreaming,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__StartMulticastStreamingResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	StartMulticastStreaming SOAP
//gsoap ns1  service method-style:	StartMulticastStreaming document
//gsoap ns1  service method-encoding:	StartMulticastStreaming literal
//gsoap ns1  service method-input-action:	StartMulticastStreaming http://www.onvif.org/ver20/media/wsdl/StartMulticastStreaming
//gsoap ns1  service method-output-action:	StartMulticastStreaming http://www.onvif.org/ver20/media/wsdl/StartMulticastStreamingResponse
int __ns1__StartMulticastStreaming(
    struct ns1__StartStopMulticastStreaming* ns1__StartMulticastStreaming,	///< Input parameter
    struct ns1__SetConfigurationResponse*ns1__StartMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__StopMulticastStreaming                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__StopMulticastStreaming" of service binding "Media2Binding".
This command stops multicast streaming using a specified media profile of a device

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/StopMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/StopMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/StopMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__StopMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__StartStopMulticastStreaming* ns1__StopMulticastStreaming,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__StopMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__StopMulticastStreaming(
    struct soap *soap,
    // input parameters:
    struct ns1__StartStopMulticastStreaming* ns1__StopMulticastStreaming,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__StopMulticastStreamingResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	StopMulticastStreaming SOAP
//gsoap ns1  service method-style:	StopMulticastStreaming document
//gsoap ns1  service method-encoding:	StopMulticastStreaming literal
//gsoap ns1  service method-input-action:	StopMulticastStreaming http://www.onvif.org/ver20/media/wsdl/StopMulticastStreaming
//gsoap ns1  service method-output-action:	StopMulticastStreaming http://www.onvif.org/ver20/media/wsdl/StopMulticastStreamingResponse
int __ns1__StopMulticastStreaming(
    struct ns1__StartStopMulticastStreaming* ns1__StopMulticastStreaming,	///< Input parameter
    struct ns1__SetConfigurationResponse*ns1__StopMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__SetSynchronizationPoint" of service binding "Media2Binding".
Synchronization points allow clients to decode and correctly use all data after
the
synchronization point.
For example, if a video stream is configured with a large I-frame distance and
a client loses a
single packet, the client does not display video until the next I-frame is transmitted.
In such
cases, the client can request a Synchronization Point which enforces the device
to add an I-Frame as soon as possible. Clients can request Synchronization Points
for profiles. The device
shall add synchronization points for all streams associated with this profile.
Similarly, a synchronization point is used to get an update on full PTZ or event
status through
the metadata stream.
If a video stream is associated with the profile, an I-frame shall be added to
this video stream.
If a PTZ metadata stream is associated to the profile,
the PTZ position shall be repeated within the metadata stream.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPoint"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPoint"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__SetSynchronizationPoint* ns1__SetSynchronizationPoint,
    // output parameters:
    struct _ns1__SetSynchronizationPointResponse*ns1__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetSynchronizationPoint(
    struct soap *soap,
    // input parameters:
    struct _ns1__SetSynchronizationPoint* ns1__SetSynchronizationPoint,
    // output parameters:
    struct _ns1__SetSynchronizationPointResponse*ns1__SetSynchronizationPointResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap ns1  service method-style:	SetSynchronizationPoint document
//gsoap ns1  service method-encoding:	SetSynchronizationPoint literal
//gsoap ns1  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPoint
//gsoap ns1  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPointResponse
int __ns1__SetSynchronizationPoint(
    struct _ns1__SetSynchronizationPoint* ns1__SetSynchronizationPoint,	///< Input parameter
    struct _ns1__SetSynchronizationPointResponse*ns1__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSnapshotUri                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetSnapshotUri" of service binding "Media2Binding".
A client uses the GetSnapshotUri command to obtain a JPEG snapshot from the
device. The returned URI shall remain valid indefinitely even if the profile is
changed. The
ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set accordingly
(ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). The URI can be
used for
acquiring a JPEG image through a HTTP GET operation. The image encoding will always
be
JPEG regardless of the encoding setting in the media profile. The Jpeg settings
(like resolution or quality) may be taken from the profile if suitable. The provided
image will be updated automatically and independent from calls to GetSnapshotUri.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetSnapshotUri"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetSnapshotUri"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetSnapshotUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSnapshotUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetSnapshotUri*        ns1__GetSnapshotUri,
    // output parameters:
    struct _ns1__GetSnapshotUriResponse*ns1__GetSnapshotUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSnapshotUri(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetSnapshotUri*        ns1__GetSnapshotUri,
    // output parameters:
    struct _ns1__GetSnapshotUriResponse*ns1__GetSnapshotUriResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetSnapshotUri SOAP
//gsoap ns1  service method-style:	GetSnapshotUri document
//gsoap ns1  service method-encoding:	GetSnapshotUri literal
//gsoap ns1  service method-input-action:	GetSnapshotUri http://www.onvif.org/ver20/media/wsdl/GetSnapshotUri
//gsoap ns1  service method-output-action:	GetSnapshotUri http://www.onvif.org/ver20/media/wsdl/GetSnapshotUriResponse
int __ns1__GetSnapshotUri(
    struct _ns1__GetSnapshotUri*        ns1__GetSnapshotUri,	///< Input parameter
    struct _ns1__GetSnapshotUriResponse*ns1__GetSnapshotUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetVideoSourceModes                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetVideoSourceModes" of service binding "Media2Binding".
A device returns the information for current video source mode and settable video
source modes of specified video source. A device that indicates a capability of
 VideoSourceModes shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModes"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModes"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetVideoSourceModes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetVideoSourceModes*   ns1__GetVideoSourceModes,
    // output parameters:
    struct _ns1__GetVideoSourceModesResponse*ns1__GetVideoSourceModesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetVideoSourceModes(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetVideoSourceModes*   ns1__GetVideoSourceModes,
    // output parameters:
    struct _ns1__GetVideoSourceModesResponse*ns1__GetVideoSourceModesResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetVideoSourceModes SOAP
//gsoap ns1  service method-style:	GetVideoSourceModes document
//gsoap ns1  service method-encoding:	GetVideoSourceModes literal
//gsoap ns1  service method-input-action:	GetVideoSourceModes http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModes
//gsoap ns1  service method-output-action:	GetVideoSourceModes http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModesResponse
int __ns1__GetVideoSourceModes(
    struct _ns1__GetVideoSourceModes*   ns1__GetVideoSourceModes,	///< Input parameter
    struct _ns1__GetVideoSourceModesResponse*ns1__GetVideoSourceModesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetVideoSourceMode                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__SetVideoSourceMode" of service binding "Media2Binding".
SetVideoSourceMode changes the media profile structure relating to video source
for the specified video source mode. A device that indicates a capability of VideoSourceModes
shall support this command. The behavior after changing the mode is not defined
in this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceMode"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceMode"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetVideoSourceMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__SetVideoSourceMode*    ns1__SetVideoSourceMode,
    // output parameters:
    struct _ns1__SetVideoSourceModeResponse*ns1__SetVideoSourceModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetVideoSourceMode(
    struct soap *soap,
    // input parameters:
    struct _ns1__SetVideoSourceMode*    ns1__SetVideoSourceMode,
    // output parameters:
    struct _ns1__SetVideoSourceModeResponse*ns1__SetVideoSourceModeResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	SetVideoSourceMode SOAP
//gsoap ns1  service method-style:	SetVideoSourceMode document
//gsoap ns1  service method-encoding:	SetVideoSourceMode literal
//gsoap ns1  service method-input-action:	SetVideoSourceMode http://www.onvif.org/ver20/media/wsdl/SetVideoSourceMode
//gsoap ns1  service method-output-action:	SetVideoSourceMode http://www.onvif.org/ver20/media/wsdl/SetVideoSourceModeResponse
int __ns1__SetVideoSourceMode(
    struct _ns1__SetVideoSourceMode*    ns1__SetVideoSourceMode,	///< Input parameter
    struct _ns1__SetVideoSourceModeResponse*ns1__SetVideoSourceModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetOSDs                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetOSDs" of service binding "Media2Binding".
This operation lists existing OSD configurations for the device.
				<ul>
					<li>If an OSD token is provided the device
shall respond with the requested configuration or provide an error if it does not
exist.</li>
					<li>In case only a video source configuration
token is provided the device shall respond with all configurations that exist for
the video source configuration.</li>
					<li>If no tokens are provided the device
shall respond with all available OSD configurations.</li>
				</ul>
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetOSDs"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetOSDs"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetOSDsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetOSDs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetOSDs*               ns1__GetOSDs,
    // output parameters:
    struct _ns1__GetOSDsResponse       *ns1__GetOSDsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetOSDs(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetOSDs*               ns1__GetOSDs,
    // output parameters:
    struct _ns1__GetOSDsResponse       *ns1__GetOSDsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetOSDs SOAP
//gsoap ns1  service method-style:	GetOSDs document
//gsoap ns1  service method-encoding:	GetOSDs literal
//gsoap ns1  service method-input-action:	GetOSDs http://www.onvif.org/ver20/media/wsdl/GetOSDs
//gsoap ns1  service method-output-action:	GetOSDs http://www.onvif.org/ver20/media/wsdl/GetOSDsResponse
int __ns1__GetOSDs(
    struct _ns1__GetOSDs*               ns1__GetOSDs,	///< Input parameter
    struct _ns1__GetOSDsResponse       *ns1__GetOSDsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetOSDOptions                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetOSDOptions" of service binding "Media2Binding".
Get the OSD Options.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetOSDOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetOSDOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetOSDOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetOSDOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetOSDOptions*         ns1__GetOSDOptions,
    // output parameters:
    struct _ns1__GetOSDOptionsResponse *ns1__GetOSDOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetOSDOptions(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetOSDOptions*         ns1__GetOSDOptions,
    // output parameters:
    struct _ns1__GetOSDOptionsResponse *ns1__GetOSDOptionsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetOSDOptions SOAP
//gsoap ns1  service method-style:	GetOSDOptions document
//gsoap ns1  service method-encoding:	GetOSDOptions literal
//gsoap ns1  service method-input-action:	GetOSDOptions http://www.onvif.org/ver20/media/wsdl/GetOSDOptions
//gsoap ns1  service method-output-action:	GetOSDOptions http://www.onvif.org/ver20/media/wsdl/GetOSDOptionsResponse
int __ns1__GetOSDOptions(
    struct _ns1__GetOSDOptions*         ns1__GetOSDOptions,	///< Input parameter
    struct _ns1__GetOSDOptionsResponse *ns1__GetOSDOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetOSD                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__SetOSD" of service binding "Media2Binding".
Set the OSD

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/SetOSD"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetOSD"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__SetOSD*                ns1__SetOSD,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetOSD(
    struct soap *soap,
    // input parameters:
    struct _ns1__SetOSD*                ns1__SetOSD,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetOSDResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	SetOSD SOAP
//gsoap ns1  service method-style:	SetOSD document
//gsoap ns1  service method-encoding:	SetOSD literal
//gsoap ns1  service method-input-action:	SetOSD http://www.onvif.org/ver20/media/wsdl/SetOSD
//gsoap ns1  service method-output-action:	SetOSD http://www.onvif.org/ver20/media/wsdl/SetOSDResponse
int __ns1__SetOSD(
    struct _ns1__SetOSD*                ns1__SetOSD,	///< Input parameter
    struct ns1__SetConfigurationResponse*ns1__SetOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateOSD                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__CreateOSD" of service binding "Media2Binding".
Create the OSD.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/CreateOSD"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/CreateOSD"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/CreateOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__CreateOSD*             ns1__CreateOSD,
    // output parameters:
    struct _ns1__CreateOSDResponse     *ns1__CreateOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateOSD(
    struct soap *soap,
    // input parameters:
    struct _ns1__CreateOSD*             ns1__CreateOSD,
    // output parameters:
    struct _ns1__CreateOSDResponse     *ns1__CreateOSDResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	CreateOSD SOAP
//gsoap ns1  service method-style:	CreateOSD document
//gsoap ns1  service method-encoding:	CreateOSD literal
//gsoap ns1  service method-input-action:	CreateOSD http://www.onvif.org/ver20/media/wsdl/CreateOSD
//gsoap ns1  service method-output-action:	CreateOSD http://www.onvif.org/ver20/media/wsdl/CreateOSDResponse
int __ns1__CreateOSD(
    struct _ns1__CreateOSD*             ns1__CreateOSD,	///< Input parameter
    struct _ns1__CreateOSDResponse     *ns1__CreateOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteOSD                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__DeleteOSD" of service binding "Media2Binding".
Delete the OSD.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/DeleteOSD"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/DeleteOSD"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/DeleteOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__DeleteOSD*             ns1__DeleteOSD,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__DeleteOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteOSD(
    struct soap *soap,
    // input parameters:
    struct _ns1__DeleteOSD*             ns1__DeleteOSD,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__DeleteOSDResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	DeleteOSD SOAP
//gsoap ns1  service method-style:	DeleteOSD document
//gsoap ns1  service method-encoding:	DeleteOSD literal
//gsoap ns1  service method-input-action:	DeleteOSD http://www.onvif.org/ver20/media/wsdl/DeleteOSD
//gsoap ns1  service method-output-action:	DeleteOSD http://www.onvif.org/ver20/media/wsdl/DeleteOSDResponse
int __ns1__DeleteOSD(
    struct _ns1__DeleteOSD*             ns1__DeleteOSD,	///< Input parameter
    struct ns1__SetConfigurationResponse*ns1__DeleteOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetMasks                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetMasks" of service binding "Media2Binding".
This operation lists existing Mask configurations for the device.
				<ul>
					<li>If an Mask token is provided the device
shall respond with the requested configuration or provide an error if it does not
exist.</li>
					<li>In case only a video source configuration
token is provided the device shall respond with all configurations that exist for
the video source configuration.</li>
					<li>If no tokens are provided the device
shall respond with all available Mask configurations.</li>
				</ul>
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetMasks"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetMasks"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetMasksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetMasks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetMasks*              ns1__GetMasks,
    // output parameters:
    struct _ns1__GetMasksResponse      *ns1__GetMasksResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetMasks(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetMasks*              ns1__GetMasks,
    // output parameters:
    struct _ns1__GetMasksResponse      *ns1__GetMasksResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetMasks SOAP
//gsoap ns1  service method-style:	GetMasks document
//gsoap ns1  service method-encoding:	GetMasks literal
//gsoap ns1  service method-input-action:	GetMasks http://www.onvif.org/ver20/media/wsdl/GetMasks
//gsoap ns1  service method-output-action:	GetMasks http://www.onvif.org/ver20/media/wsdl/GetMasksResponse
int __ns1__GetMasks(
    struct _ns1__GetMasks*              ns1__GetMasks,	///< Input parameter
    struct _ns1__GetMasksResponse      *ns1__GetMasksResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetMaskOptions                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetMaskOptions" of service binding "Media2Binding".
Get the Mask Options.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/GetMaskOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetMaskOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetMaskOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetMaskOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetMaskOptions*        ns1__GetMaskOptions,
    // output parameters:
    struct _ns1__GetMaskOptionsResponse*ns1__GetMaskOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetMaskOptions(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetMaskOptions*        ns1__GetMaskOptions,
    // output parameters:
    struct _ns1__GetMaskOptionsResponse*ns1__GetMaskOptionsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetMaskOptions SOAP
//gsoap ns1  service method-style:	GetMaskOptions document
//gsoap ns1  service method-encoding:	GetMaskOptions literal
//gsoap ns1  service method-input-action:	GetMaskOptions http://www.onvif.org/ver20/media/wsdl/GetMaskOptions
//gsoap ns1  service method-output-action:	GetMaskOptions http://www.onvif.org/ver20/media/wsdl/GetMaskOptionsResponse
int __ns1__GetMaskOptions(
    struct _ns1__GetMaskOptions*        ns1__GetMaskOptions,	///< Input parameter
    struct _ns1__GetMaskOptionsResponse*ns1__GetMaskOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetMask                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__SetMask" of service binding "Media2Binding".
Set the Mask

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/SetMask"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetMask"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetMaskResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetMask(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__SetMask*               ns1__SetMask,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetMaskResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetMask(
    struct soap *soap,
    // input parameters:
    struct _ns1__SetMask*               ns1__SetMask,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__SetMaskResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	SetMask SOAP
//gsoap ns1  service method-style:	SetMask document
//gsoap ns1  service method-encoding:	SetMask literal
//gsoap ns1  service method-input-action:	SetMask http://www.onvif.org/ver20/media/wsdl/SetMask
//gsoap ns1  service method-output-action:	SetMask http://www.onvif.org/ver20/media/wsdl/SetMaskResponse
int __ns1__SetMask(
    struct _ns1__SetMask*               ns1__SetMask,	///< Input parameter
    struct ns1__SetConfigurationResponse*ns1__SetMaskResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateMask                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__CreateMask" of service binding "Media2Binding".
Create the Mask.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/CreateMask"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/CreateMask"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/CreateMaskResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateMask(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__CreateMask*            ns1__CreateMask,
    // output parameters:
    struct _ns1__CreateMaskResponse    *ns1__CreateMaskResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateMask(
    struct soap *soap,
    // input parameters:
    struct _ns1__CreateMask*            ns1__CreateMask,
    // output parameters:
    struct _ns1__CreateMaskResponse    *ns1__CreateMaskResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	CreateMask SOAP
//gsoap ns1  service method-style:	CreateMask document
//gsoap ns1  service method-encoding:	CreateMask literal
//gsoap ns1  service method-input-action:	CreateMask http://www.onvif.org/ver20/media/wsdl/CreateMask
//gsoap ns1  service method-output-action:	CreateMask http://www.onvif.org/ver20/media/wsdl/CreateMaskResponse
int __ns1__CreateMask(
    struct _ns1__CreateMask*            ns1__CreateMask,	///< Input parameter
    struct _ns1__CreateMaskResponse    *ns1__CreateMaskResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteMask                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__DeleteMask" of service binding "Media2Binding".
Delete the Mask.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/media/wsdl/DeleteMask"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/DeleteMask"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/DeleteMaskResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteMask(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__DeleteMask*            ns1__DeleteMask,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__DeleteMaskResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteMask(
    struct soap *soap,
    // input parameters:
    struct _ns1__DeleteMask*            ns1__DeleteMask,
    // output parameters:
    struct ns1__SetConfigurationResponse*ns1__DeleteMaskResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	DeleteMask SOAP
//gsoap ns1  service method-style:	DeleteMask document
//gsoap ns1  service method-encoding:	DeleteMask literal
//gsoap ns1  service method-input-action:	DeleteMask http://www.onvif.org/ver20/media/wsdl/DeleteMask
//gsoap ns1  service method-output-action:	DeleteMask http://www.onvif.org/ver20/media/wsdl/DeleteMaskResponse
int __ns1__DeleteMask(
    struct _ns1__DeleteMask*            ns1__DeleteMask,	///< Input parameter
    struct ns1__SetConfigurationResponse*ns1__DeleteMaskResponse	///< Output parameter
);

/** @page Media2Binding Binding "Media2Binding"

@section Media2Binding_policy_enablers Policy Enablers of Binding "Media2Binding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   RemoteDiscoveryBinding                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Hello                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Hello" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/network/wsdl/Hello"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Hello"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/HelloResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Hello(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__HelloType                     tdn__Hello,
    // output parameters:
    wsdd__ResolveType                  *tdn__HelloResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Hello(
    struct soap *soap,
    // input parameters:
    wsdd__HelloType                     tdn__Hello,
    // output parameters:
    wsdd__ResolveType                  *tdn__HelloResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Hello SOAP
//gsoap tdn  service method-style:	Hello document
//gsoap tdn  service method-encoding:	Hello literal
//gsoap tdn  service method-input-action:	Hello http://www.onvif.org/ver10/network/wsdl/Hello
//gsoap tdn  service method-output-action:	Hello http://www.onvif.org/ver10/network/wsdl/HelloResponse
int __tdn__Hello(
    wsdd__HelloType                     tdn__Hello,	///< Input parameter
    wsdd__ResolveType                  *tdn__HelloResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Bye                                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Bye" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/network/wsdl/Bye"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Bye"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/ByeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Bye(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__ByeType                       tdn__Bye,
    // output parameters:
    wsdd__ResolveType                  *tdn__ByeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Bye(
    struct soap *soap,
    // input parameters:
    wsdd__ByeType                       tdn__Bye,
    // output parameters:
    wsdd__ResolveType                  *tdn__ByeResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Bye SOAP
//gsoap tdn  service method-style:	Bye document
//gsoap tdn  service method-encoding:	Bye literal
//gsoap tdn  service method-input-action:	Bye http://www.onvif.org/ver10/network/wsdl/Bye
//gsoap tdn  service method-output-action:	Bye http://www.onvif.org/ver10/network/wsdl/ByeResponse
int __tdn__Bye(
    wsdd__ByeType                       tdn__Bye,	///< Input parameter
    wsdd__ResolveType                  *tdn__ByeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Probe                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Probe" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/network/wsdl/Probe"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Probe"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/ProbeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Probe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__ProbeType                     tdn__Probe,
    // output parameters:
    wsdd__ProbeMatchesType             *tdn__ProbeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Probe(
    struct soap *soap,
    // input parameters:
    wsdd__ProbeType                     tdn__Probe,
    // output parameters:
    wsdd__ProbeMatchesType             *tdn__ProbeResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Probe SOAP
//gsoap tdn  service method-style:	Probe document
//gsoap tdn  service method-encoding:	Probe literal
//gsoap tdn  service method-input-action:	Probe http://www.onvif.org/ver10/network/wsdl/Probe
//gsoap tdn  service method-output-action:	Probe http://www.onvif.org/ver10/network/wsdl/ProbeResponse
int __tdn__Probe(
    wsdd__ProbeType                     tdn__Probe,	///< Input parameter
    wsdd__ProbeMatchesType             *tdn__ProbeResponse	///< Output parameter
);

/** @page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_policy_enablers Policy Enablers of Binding "RemoteDiscoveryBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServices                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServices" of service binding "DeviceBinding".
Returns information about services on the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServicesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServices(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetServices*           tds__GetServices,
    // output parameters:
    struct _tds__GetServicesResponse   *tds__GetServicesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServices(
    struct soap *soap,
    // input parameters:
    struct _tds__GetServices*           tds__GetServices,
    // output parameters:
    struct _tds__GetServicesResponse   *tds__GetServicesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetServices SOAP
//gsoap tds  service method-style:	GetServices document
//gsoap tds  service method-encoding:	GetServices literal
//gsoap tds  service method-input-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServices
//gsoap tds  service method-output-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServicesResponse
int __tds__GetServices(
    struct _tds__GetServices*           tds__GetServices,	///< Input parameter
    struct _tds__GetServicesResponse   *tds__GetServicesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServiceCapabilities" of service binding "DeviceBinding".
Returns the capabilities of the device service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,
    // output parameters:
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,
    // output parameters:
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tds  service method-style:	GetServiceCapabilities document
//gsoap tds  service method-encoding:	GetServiceCapabilities literal
//gsoap tds  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities
//gsoap tds  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse
int __tds__GetServiceCapabilities(
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,	///< Input parameter
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDeviceInformation                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDeviceInformation" of service binding "DeviceBinding".
This operation gets basic device information from the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDeviceInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,
    // output parameters:
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDeviceInformation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,
    // output parameters:
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDeviceInformation SOAP
//gsoap tds  service method-style:	GetDeviceInformation document
//gsoap tds  service method-encoding:	GetDeviceInformation literal
//gsoap tds  service method-input-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation
//gsoap tds  service method-output-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse
int __tds__GetDeviceInformation(
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,	///< Input parameter
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemDateAndTime" of service binding "DeviceBinding".
This operation sets the device system date and time. The device shall support the
				configuration of the daylight saving setting and
of the manual system date and time (if
				applicable) or indication of NTP time (if applicable)
through the SetSystemDateAndTime
				command. <br/>
				If system time and date are set manually, the client
shall include UTCDateTime in the request.<br/>
				A TimeZone token which is not formed according to
the rules of IEEE 1003.1 section 8.3 is considered as invalid timezone.<br/>
				The DayLightSavings flag should be set to true to
activate any DST settings of the TimeZone string. 
				Clear the DayLightSavings flag if the DST portion
of the TimeZone settings should be ignored.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetSystemDateAndTime*  tds__SetSystemDateAndTime,
    // output parameters:
    struct _tds__SetSystemDateAndTimeResponse*tds__SetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    struct _tds__SetSystemDateAndTime*  tds__SetSystemDateAndTime,
    // output parameters:
    struct _tds__SetSystemDateAndTimeResponse*tds__SetSystemDateAndTimeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetSystemDateAndTime SOAP
//gsoap tds  service method-style:	SetSystemDateAndTime document
//gsoap tds  service method-encoding:	SetSystemDateAndTime literal
//gsoap tds  service method-input-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime
//gsoap tds  service method-output-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse
int __tds__SetSystemDateAndTime(
    struct _tds__SetSystemDateAndTime*  tds__SetSystemDateAndTime,	///< Input parameter
    struct _tds__SetSystemDateAndTimeResponse*tds__SetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemDateAndTime" of service binding "DeviceBinding".
This operation gets the device system date and time. The device shall support the
return of
				the daylight saving setting and of the manual system
date and time (if applicable) or indication
				of NTP time (if applicable) through the GetSystemDateAndTime
command.<br/>
				A device shall provide the UTCDateTime information.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemDateAndTime*  tds__GetSystemDateAndTime,
    // output parameters:
    struct _tds__GetSystemDateAndTimeResponse*tds__GetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemDateAndTime*  tds__GetSystemDateAndTime,
    // output parameters:
    struct _tds__GetSystemDateAndTimeResponse*tds__GetSystemDateAndTimeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemDateAndTime SOAP
//gsoap tds  service method-style:	GetSystemDateAndTime document
//gsoap tds  service method-encoding:	GetSystemDateAndTime literal
//gsoap tds  service method-input-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime
//gsoap tds  service method-output-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse
int __tds__GetSystemDateAndTime(
    struct _tds__GetSystemDateAndTime*  tds__GetSystemDateAndTime,	///< Input parameter
    struct _tds__GetSystemDateAndTimeResponse*tds__GetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemFactoryDefault                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemFactoryDefault" of service binding "DeviceBinding".
This operation reloads the parameters on the device to their factory default values.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemFactoryDefault(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetSystemFactoryDefault* tds__SetSystemFactoryDefault,
    // output parameters:
    struct _tds__SetSystemFactoryDefaultResponse*tds__SetSystemFactoryDefaultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemFactoryDefault(
    struct soap *soap,
    // input parameters:
    struct _tds__SetSystemFactoryDefault* tds__SetSystemFactoryDefault,
    // output parameters:
    struct _tds__SetSystemFactoryDefaultResponse*tds__SetSystemFactoryDefaultResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetSystemFactoryDefault SOAP
//gsoap tds  service method-style:	SetSystemFactoryDefault document
//gsoap tds  service method-encoding:	SetSystemFactoryDefault literal
//gsoap tds  service method-input-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault
//gsoap tds  service method-output-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse
int __tds__SetSystemFactoryDefault(
    struct _tds__SetSystemFactoryDefault* tds__SetSystemFactoryDefault,	///< Input parameter
    struct _tds__SetSystemFactoryDefaultResponse*tds__SetSystemFactoryDefaultResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__UpgradeSystemFirmware                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__UpgradeSystemFirmware" of service binding "DeviceBinding".
This operation upgrades a device firmware version. After a successful upgrade the
response
				message is sent before the device reboots. The device
should support firmware upgrade
				through the UpgradeSystemFirmware command. The exact
format of the firmware data is
				outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__UpgradeSystemFirmware(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__UpgradeSystemFirmware* tds__UpgradeSystemFirmware,
    // output parameters:
    struct _tds__UpgradeSystemFirmwareResponse*tds__UpgradeSystemFirmwareResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__UpgradeSystemFirmware(
    struct soap *soap,
    // input parameters:
    struct _tds__UpgradeSystemFirmware* tds__UpgradeSystemFirmware,
    // output parameters:
    struct _tds__UpgradeSystemFirmwareResponse*tds__UpgradeSystemFirmwareResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	UpgradeSystemFirmware SOAP
//gsoap tds  service method-style:	UpgradeSystemFirmware document
//gsoap tds  service method-encoding:	UpgradeSystemFirmware literal
//gsoap tds  service method-input-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware
//gsoap tds  service method-output-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse
int __tds__UpgradeSystemFirmware(
    struct _tds__UpgradeSystemFirmware* tds__UpgradeSystemFirmware,	///< Input parameter
    struct _tds__UpgradeSystemFirmwareResponse*tds__UpgradeSystemFirmwareResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SystemReboot                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SystemReboot" of service binding "DeviceBinding".
This operation reboots the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SystemReboot(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SystemReboot*          tds__SystemReboot,
    // output parameters:
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SystemReboot(
    struct soap *soap,
    // input parameters:
    struct _tds__SystemReboot*          tds__SystemReboot,
    // output parameters:
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SystemReboot SOAP
//gsoap tds  service method-style:	SystemReboot document
//gsoap tds  service method-encoding:	SystemReboot literal
//gsoap tds  service method-input-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemReboot
//gsoap tds  service method-output-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse
int __tds__SystemReboot(
    struct _tds__SystemReboot*          tds__SystemReboot,	///< Input parameter
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RestoreSystem                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RestoreSystem" of service binding "DeviceBinding".
This operation restores the system backup configuration files(s) previously retrieved
from a
				device. The device should support restore of backup
configuration file(s) through the
				RestoreSystem command. The exact format of the backup
configuration file(s) is outside the
				scope of this standard. If the command is supported,
it shall accept backup files returned by
				the GetSystemBackup command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RestoreSystem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__RestoreSystem*         tds__RestoreSystem,
    // output parameters:
    struct _tds__RestoreSystemResponse *tds__RestoreSystemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RestoreSystem(
    struct soap *soap,
    // input parameters:
    struct _tds__RestoreSystem*         tds__RestoreSystem,
    // output parameters:
    struct _tds__RestoreSystemResponse *tds__RestoreSystemResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	RestoreSystem SOAP
//gsoap tds  service method-style:	RestoreSystem document
//gsoap tds  service method-encoding:	RestoreSystem literal
//gsoap tds  service method-input-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystem
//gsoap tds  service method-output-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse
int __tds__RestoreSystem(
    struct _tds__RestoreSystem*         tds__RestoreSystem,	///< Input parameter
    struct _tds__RestoreSystemResponse *tds__RestoreSystemResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemBackup                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemBackup" of service binding "DeviceBinding".
This operation is retrieves system backup configuration file(s) from a device. The
device
				should support return of back up configuration file(s)
through the GetSystemBackup command.
				The backup is returned with reference to a name
and mime-type together with binary data.
				The exact format of the backup configuration files
is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemBackup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemBackup*       tds__GetSystemBackup,
    // output parameters:
    struct _tds__GetSystemBackupResponse*tds__GetSystemBackupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemBackup(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemBackup*       tds__GetSystemBackup,
    // output parameters:
    struct _tds__GetSystemBackupResponse*tds__GetSystemBackupResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemBackup SOAP
//gsoap tds  service method-style:	GetSystemBackup document
//gsoap tds  service method-encoding:	GetSystemBackup literal
//gsoap tds  service method-input-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackup
//gsoap tds  service method-output-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse
int __tds__GetSystemBackup(
    struct _tds__GetSystemBackup*       tds__GetSystemBackup,	///< Input parameter
    struct _tds__GetSystemBackupResponse*tds__GetSystemBackupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemLog                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemLog" of service binding "DeviceBinding".
This operation gets a system log from the device. The exact format of the system
logs is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemLog(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemLog*          tds__GetSystemLog,
    // output parameters:
    struct _tds__GetSystemLogResponse  *tds__GetSystemLogResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemLog(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemLog*          tds__GetSystemLog,
    // output parameters:
    struct _tds__GetSystemLogResponse  *tds__GetSystemLogResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemLog SOAP
//gsoap tds  service method-style:	GetSystemLog document
//gsoap tds  service method-encoding:	GetSystemLog literal
//gsoap tds  service method-input-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLog
//gsoap tds  service method-output-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse
int __tds__GetSystemLog(
    struct _tds__GetSystemLog*          tds__GetSystemLog,	///< Input parameter
    struct _tds__GetSystemLogResponse  *tds__GetSystemLogResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemSupportInformation                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemSupportInformation" of service binding "DeviceBinding".
This operation gets arbitary device diagnostics information from the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemSupportInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemSupportInformation* tds__GetSystemSupportInformation,
    // output parameters:
    struct _tds__GetSystemSupportInformationResponse*tds__GetSystemSupportInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemSupportInformation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemSupportInformation* tds__GetSystemSupportInformation,
    // output parameters:
    struct _tds__GetSystemSupportInformationResponse*tds__GetSystemSupportInformationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemSupportInformation SOAP
//gsoap tds  service method-style:	GetSystemSupportInformation document
//gsoap tds  service method-encoding:	GetSystemSupportInformation literal
//gsoap tds  service method-input-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation
//gsoap tds  service method-output-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse
int __tds__GetSystemSupportInformation(
    struct _tds__GetSystemSupportInformation* tds__GetSystemSupportInformation,	///< Input parameter
    struct _tds__GetSystemSupportInformationResponse*tds__GetSystemSupportInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetScopes" of service binding "DeviceBinding".
This operation requests the scope parameters of a device. The scope parameters are
used in
				the device discovery to match a probe message, see
Section 7. The Scope parameters are of
				two different types: <ul>
					<li>Fixed</li>
					<li>Configurable</li>
				</ul>
				Fixed scope parameters are permanent device characteristics
and cannot be removed through the device management interface. 
				The scope type is indicated in the scope list returned
in the get scope parameters response. A device shall support 
				retrieval of discovery scope parameters through
the GetScopes command. As some scope parameters are mandatory, 
				the device shall return a non-empty scope list in
the response.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetScopes*             tds__GetScopes,
    // output parameters:
    struct _tds__GetScopesResponse     *tds__GetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__GetScopes*             tds__GetScopes,
    // output parameters:
    struct _tds__GetScopesResponse     *tds__GetScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetScopes SOAP
//gsoap tds  service method-style:	GetScopes document
//gsoap tds  service method-encoding:	GetScopes literal
//gsoap tds  service method-input-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopes
//gsoap tds  service method-output-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopesResponse
int __tds__GetScopes(
    struct _tds__GetScopes*             tds__GetScopes,	///< Input parameter
    struct _tds__GetScopesResponse     *tds__GetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetScopes" of service binding "DeviceBinding".
This operation sets the scope parameters of a device. The scope parameters are used
in the
				device discovery to match a probe message.
				This operation replaces all existing configurable
scope parameters (not fixed parameters). If
				this shall be avoided, one should use the scope
add command instead. The device shall
				support configuration of discovery scope parameters
through the SetScopes command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetScopes*             tds__SetScopes,
    // output parameters:
    struct _tds__SetScopesResponse     *tds__SetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__SetScopes*             tds__SetScopes,
    // output parameters:
    struct _tds__SetScopesResponse     *tds__SetScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetScopes SOAP
//gsoap tds  service method-style:	SetScopes document
//gsoap tds  service method-encoding:	SetScopes literal
//gsoap tds  service method-input-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopes
//gsoap tds  service method-output-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopesResponse
int __tds__SetScopes(
    struct _tds__SetScopes*             tds__SetScopes,	///< Input parameter
    struct _tds__SetScopesResponse     *tds__SetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddScopes" of service binding "DeviceBinding".
This operation adds new configurable scope parameters to a device. The scope parameters
				are used in the device discovery to match a probe
message. The device shall
				support addition of discovery scope parameters through
the AddScopes command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__AddScopes*             tds__AddScopes,
    // output parameters:
    struct _tds__AddScopesResponse     *tds__AddScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__AddScopes*             tds__AddScopes,
    // output parameters:
    struct _tds__AddScopesResponse     *tds__AddScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	AddScopes SOAP
//gsoap tds  service method-style:	AddScopes document
//gsoap tds  service method-encoding:	AddScopes literal
//gsoap tds  service method-input-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopes
//gsoap tds  service method-output-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopesResponse
int __tds__AddScopes(
    struct _tds__AddScopes*             tds__AddScopes,	///< Input parameter
    struct _tds__AddScopesResponse     *tds__AddScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveScopes                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveScopes" of service binding "DeviceBinding".
This operation deletes scope-configurable scope parameters from a device. The scope
				parameters are used in the device discovery to match
a probe message, see Section 7. The
				device shall support deletion of discovery scope
parameters through the RemoveScopes
				command.
				Table

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__RemoveScopes*          tds__RemoveScopes,
    // output parameters:
    struct _tds__RemoveScopesResponse  *tds__RemoveScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__RemoveScopes*          tds__RemoveScopes,
    // output parameters:
    struct _tds__RemoveScopesResponse  *tds__RemoveScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	RemoveScopes SOAP
//gsoap tds  service method-style:	RemoveScopes document
//gsoap tds  service method-encoding:	RemoveScopes literal
//gsoap tds  service method-input-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopes
//gsoap tds  service method-output-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse
int __tds__RemoveScopes(
    struct _tds__RemoveScopes*          tds__RemoveScopes,	///< Input parameter
    struct _tds__RemoveScopesResponse  *tds__RemoveScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDiscoveryMode" of service binding "DeviceBinding".
This operation gets the discovery mode of a device. See Section 7.2 for the definition
of the
				different device discovery modes. The device shall
support retrieval of the discovery mode
				setting through the GetDiscoveryMode command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDiscoveryMode*      tds__GetDiscoveryMode,
    // output parameters:
    struct _tds__GetDiscoveryModeResponse*tds__GetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDiscoveryMode*      tds__GetDiscoveryMode,
    // output parameters:
    struct _tds__GetDiscoveryModeResponse*tds__GetDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDiscoveryMode SOAP
//gsoap tds  service method-style:	GetDiscoveryMode document
//gsoap tds  service method-encoding:	GetDiscoveryMode literal
//gsoap tds  service method-input-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode
//gsoap tds  service method-output-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse
int __tds__GetDiscoveryMode(
    struct _tds__GetDiscoveryMode*      tds__GetDiscoveryMode,	///< Input parameter
    struct _tds__GetDiscoveryModeResponse*tds__GetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDiscoveryMode" of service binding "DeviceBinding".
This operation sets the discovery mode operation of a device. See Section 7.2 for
the
				definition of the different device discovery modes.
The device shall support configuration of
				the discovery mode setting through the SetDiscoveryMode
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDiscoveryMode*      tds__SetDiscoveryMode,
    // output parameters:
    struct _tds__SetDiscoveryModeResponse*tds__SetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDiscoveryMode*      tds__SetDiscoveryMode,
    // output parameters:
    struct _tds__SetDiscoveryModeResponse*tds__SetDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDiscoveryMode SOAP
//gsoap tds  service method-style:	SetDiscoveryMode document
//gsoap tds  service method-encoding:	SetDiscoveryMode literal
//gsoap tds  service method-input-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode
//gsoap tds  service method-output-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse
int __tds__SetDiscoveryMode(
    struct _tds__SetDiscoveryMode*      tds__SetDiscoveryMode,	///< Input parameter
    struct _tds__SetDiscoveryModeResponse*tds__SetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation gets the remote discovery mode of a device. See Section 7.4 for the
definition
				of remote discovery extensions. A device that supports
remote discovery shall support
				retrieval of the remote discovery mode setting through
the GetRemoteDiscoveryMode
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetRemoteDiscoveryMode* tds__GetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__GetRemoteDiscoveryModeResponse*tds__GetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__GetRemoteDiscoveryMode* tds__GetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__GetRemoteDiscoveryModeResponse*tds__GetRemoteDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	GetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	GetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse
int __tds__GetRemoteDiscoveryMode(
    struct _tds__GetRemoteDiscoveryMode* tds__GetRemoteDiscoveryMode,	///< Input parameter
    struct _tds__GetRemoteDiscoveryModeResponse*tds__GetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation sets the remote discovery mode of operation of a device. See Section
7.4 for
				the definition of remote discovery remote extensions.
A device that supports remote discovery
				shall support configuration of the discovery mode
setting through the
				SetRemoteDiscoveryMode command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRemoteDiscoveryMode* tds__SetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__SetRemoteDiscoveryModeResponse*tds__SetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRemoteDiscoveryMode* tds__SetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__SetRemoteDiscoveryModeResponse*tds__SetRemoteDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	SetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	SetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse
int __tds__SetRemoteDiscoveryMode(
    struct _tds__SetRemoteDiscoveryMode* tds__SetRemoteDiscoveryMode,	///< Input parameter
    struct _tds__SetRemoteDiscoveryModeResponse*tds__SetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDPAddresses" of service binding "DeviceBinding".
This operation gets the remote DP address or addresses from a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support retrieval of the remote
				DP address(es) through the GetDPAddresses command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDPAddresses*        tds__GetDPAddresses,
    // output parameters:
    struct _tds__GetDPAddressesResponse*tds__GetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDPAddresses(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDPAddresses*        tds__GetDPAddresses,
    // output parameters:
    struct _tds__GetDPAddressesResponse*tds__GetDPAddressesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDPAddresses SOAP
//gsoap tds  service method-style:	GetDPAddresses document
//gsoap tds  service method-encoding:	GetDPAddresses literal
//gsoap tds  service method-input-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddresses
//gsoap tds  service method-output-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse
int __tds__GetDPAddresses(
    struct _tds__GetDPAddresses*        tds__GetDPAddresses,	///< Input parameter
    struct _tds__GetDPAddressesResponse*tds__GetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetEndpointReference                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetEndpointReference" of service binding "DeviceBinding".
A client can ask for the device service endpoint reference address property that
can be used
				to derive the password equivalent for remote user
operation. The device shall support the
				GetEndpointReference command returning the address
property of the device service
				endpoint reference.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetEndpointReference(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetEndpointReference*  tds__GetEndpointReference,
    // output parameters:
    struct _tds__GetEndpointReferenceResponse*tds__GetEndpointReferenceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetEndpointReference(
    struct soap *soap,
    // input parameters:
    struct _tds__GetEndpointReference*  tds__GetEndpointReference,
    // output parameters:
    struct _tds__GetEndpointReferenceResponse*tds__GetEndpointReferenceResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetEndpointReference SOAP
//gsoap tds  service method-style:	GetEndpointReference document
//gsoap tds  service method-encoding:	GetEndpointReference literal
//gsoap tds  service method-input-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReference
//gsoap tds  service method-output-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse
int __tds__GetEndpointReference(
    struct _tds__GetEndpointReference*  tds__GetEndpointReference,	///< Input parameter
    struct _tds__GetEndpointReferenceResponse*tds__GetEndpointReferenceResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteUser" of service binding "DeviceBinding".
This operation returns the configured remote user (if any). A device supporting
remote user
				handling shall support this operation. The user
is only valid for the WS-UserToken profile or
				as a HTTP / RTSP user.<br/>
				The algorithm to use for deriving the password is
described in section 5.12.2.1 of the core specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetRemoteUser*         tds__GetRemoteUser,
    // output parameters:
    struct _tds__GetRemoteUserResponse *tds__GetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteUser(
    struct soap *soap,
    // input parameters:
    struct _tds__GetRemoteUser*         tds__GetRemoteUser,
    // output parameters:
    struct _tds__GetRemoteUserResponse *tds__GetRemoteUserResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetRemoteUser SOAP
//gsoap tds  service method-style:	GetRemoteUser document
//gsoap tds  service method-encoding:	GetRemoteUser literal
//gsoap tds  service method-input-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUser
//gsoap tds  service method-output-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse
int __tds__GetRemoteUser(
    struct _tds__GetRemoteUser*         tds__GetRemoteUser,	///< Input parameter
    struct _tds__GetRemoteUserResponse *tds__GetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteUser" of service binding "DeviceBinding".
This operation sets the remote user. A device supporting remote user handling shall
support this
				operation. The user is only valid for the WS-UserToken
profile or as a HTTP / RTSP user.<br/>
				The password that is set shall always be the original
(not derived) password.<br/>
				If UseDerivedPassword is set password derivation
shall be done by the device when connecting to a
				remote device.The algorithm to use for deriving
the password is described in section 5.12.2.1 of the core specification.<br/>
				To remove the remote user SetRemoteUser should be
called without the RemoteUser parameter.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRemoteUser*         tds__SetRemoteUser,
    // output parameters:
    struct _tds__SetRemoteUserResponse *tds__SetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteUser(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRemoteUser*         tds__SetRemoteUser,
    // output parameters:
    struct _tds__SetRemoteUserResponse *tds__SetRemoteUserResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRemoteUser SOAP
//gsoap tds  service method-style:	SetRemoteUser document
//gsoap tds  service method-encoding:	SetRemoteUser literal
//gsoap tds  service method-input-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUser
//gsoap tds  service method-output-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse
int __tds__SetRemoteUser(
    struct _tds__SetRemoteUser*         tds__SetRemoteUser,	///< Input parameter
    struct _tds__SetRemoteUserResponse *tds__SetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetUsers                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetUsers" of service binding "DeviceBinding".
This operation lists the registered users and corresponding credentials on a device.
The
				device shall support retrieval of registered device
users and their credentials for the user
				token through the GetUsers command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetUsers*              tds__GetUsers,
    // output parameters:
    struct _tds__GetUsersResponse      *tds__GetUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetUsers(
    struct soap *soap,
    // input parameters:
    struct _tds__GetUsers*              tds__GetUsers,
    // output parameters:
    struct _tds__GetUsersResponse      *tds__GetUsersResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetUsers SOAP
//gsoap tds  service method-style:	GetUsers document
//gsoap tds  service method-encoding:	GetUsers literal
//gsoap tds  service method-input-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsers
//gsoap tds  service method-output-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsersResponse
int __tds__GetUsers(
    struct _tds__GetUsers*              tds__GetUsers,	///< Input parameter
    struct _tds__GetUsersResponse      *tds__GetUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateUsers" of service binding "DeviceBinding".
This operation creates new device users and corresponding credentials on a device
for authentication purposes. 
				The device shall support creation of device users
and their credentials through the CreateUsers
				command. Either all users are created successfully
or a fault message shall be returned
				without creating any user.<br/>
				ONVIF compliant devices are recommended to support
password length of at least 28 bytes,
				as clients may follow the password derivation mechanism
which results in 'password
				equivalent' of length 28 bytes, as described in
section 3.1.2 of the ONVIF security white paper.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateUsers*           tds__CreateUsers,
    // output parameters:
    struct _tds__CreateUsersResponse   *tds__CreateUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateUsers(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateUsers*           tds__CreateUsers,
    // output parameters:
    struct _tds__CreateUsersResponse   *tds__CreateUsersResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateUsers SOAP
//gsoap tds  service method-style:	CreateUsers document
//gsoap tds  service method-encoding:	CreateUsers literal
//gsoap tds  service method-input-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsers
//gsoap tds  service method-output-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse
int __tds__CreateUsers(
    struct _tds__CreateUsers*           tds__CreateUsers,	///< Input parameter
    struct _tds__CreateUsersResponse   *tds__CreateUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteUsers" of service binding "DeviceBinding".
This operation deletes users on a device. The device shall support deletion of device
users and their credentials 
				through the DeleteUsers command. A device may have
one or more fixed users
				that cannot be deleted to ensure access to the unit.
Either all users are deleted successfully or a
				fault message shall be returned and no users be
deleted.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteUsers*           tds__DeleteUsers,
    // output parameters:
    struct _tds__DeleteUsersResponse   *tds__DeleteUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteUsers(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteUsers*           tds__DeleteUsers,
    // output parameters:
    struct _tds__DeleteUsersResponse   *tds__DeleteUsersResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteUsers SOAP
//gsoap tds  service method-style:	DeleteUsers document
//gsoap tds  service method-encoding:	DeleteUsers literal
//gsoap tds  service method-input-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsers
//gsoap tds  service method-output-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse
int __tds__DeleteUsers(
    struct _tds__DeleteUsers*           tds__DeleteUsers,	///< Input parameter
    struct _tds__DeleteUsersResponse   *tds__DeleteUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetUser                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetUser" of service binding "DeviceBinding".
This operation updates the settings for one or several users on a device for authentication
purposes.
				The device shall support update of device users
and their credentials through the SetUser command. 
				Either all change requests are processed successfully
or a fault message shall be returned and no change requests be processed.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetUser*               tds__SetUser,
    // output parameters:
    struct _tds__SetUserResponse       *tds__SetUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetUser(
    struct soap *soap,
    // input parameters:
    struct _tds__SetUser*               tds__SetUser,
    // output parameters:
    struct _tds__SetUserResponse       *tds__SetUserResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetUser SOAP
//gsoap tds  service method-style:	SetUser document
//gsoap tds  service method-encoding:	SetUser literal
//gsoap tds  service method-input-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUser
//gsoap tds  service method-output-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUserResponse
int __tds__SetUser(
    struct _tds__SetUser*               tds__SetUser,	///< Input parameter
    struct _tds__SetUserResponse       *tds__SetUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetWsdlUrl                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetWsdlUrl" of service binding "DeviceBinding".
It is possible for an endpoint to request a URL that can be used to retrieve the
complete
				schema and WSDL definitions of a device. The command
gives in return a URL entry point
				where all the necessary product specific WSDL and
schema definitions can be retrieved. The
				device shall provide a URL for WSDL and schema download
through the GetWsdlUrl command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetWsdlUrl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetWsdlUrl*            tds__GetWsdlUrl,
    // output parameters:
    struct _tds__GetWsdlUrlResponse    *tds__GetWsdlUrlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetWsdlUrl(
    struct soap *soap,
    // input parameters:
    struct _tds__GetWsdlUrl*            tds__GetWsdlUrl,
    // output parameters:
    struct _tds__GetWsdlUrlResponse    *tds__GetWsdlUrlResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetWsdlUrl SOAP
//gsoap tds  service method-style:	GetWsdlUrl document
//gsoap tds  service method-encoding:	GetWsdlUrl literal
//gsoap tds  service method-input-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl
//gsoap tds  service method-output-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse
int __tds__GetWsdlUrl(
    struct _tds__GetWsdlUrl*            tds__GetWsdlUrl,	///< Input parameter
    struct _tds__GetWsdlUrlResponse    *tds__GetWsdlUrlResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCapabilities                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCapabilities" of service binding "DeviceBinding".
This method has been replaced by the more generic GetServices method.
			 For capabilities of individual services refer to the GetServiceCapabilities
methods.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCapabilities*       tds__GetCapabilities,
    // output parameters:
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCapabilities*       tds__GetCapabilities,
    // output parameters:
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCapabilities SOAP
//gsoap tds  service method-style:	GetCapabilities document
//gsoap tds  service method-encoding:	GetCapabilities literal
//gsoap tds  service method-input-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilities
//gsoap tds  service method-output-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse
int __tds__GetCapabilities(
    struct _tds__GetCapabilities*       tds__GetCapabilities,	///< Input parameter
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDPAddresses" of service binding "DeviceBinding".
This operation sets the remote DP address or addresses on a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support configuration of the
				remote DP address(es) through the SetDPAddresses
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDPAddresses*        tds__SetDPAddresses,
    // output parameters:
    struct _tds__SetDPAddressesResponse*tds__SetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDPAddresses(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDPAddresses*        tds__SetDPAddresses,
    // output parameters:
    struct _tds__SetDPAddressesResponse*tds__SetDPAddressesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDPAddresses SOAP
//gsoap tds  service method-style:	SetDPAddresses document
//gsoap tds  service method-encoding:	SetDPAddresses literal
//gsoap tds  service method-input-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddresses
//gsoap tds  service method-output-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse
int __tds__SetDPAddresses(
    struct _tds__SetDPAddresses*        tds__SetDPAddresses,	///< Input parameter
    struct _tds__SetDPAddressesResponse*tds__SetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetHostname" of service binding "DeviceBinding".
This operation is used by an endpoint to get the hostname from a device. The device
shall
				return its hostname configurations through the GetHostname
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetHostname*           tds__GetHostname,
    // output parameters:
    struct _tds__GetHostnameResponse   *tds__GetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetHostname(
    struct soap *soap,
    // input parameters:
    struct _tds__GetHostname*           tds__GetHostname,
    // output parameters:
    struct _tds__GetHostnameResponse   *tds__GetHostnameResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetHostname SOAP
//gsoap tds  service method-style:	GetHostname document
//gsoap tds  service method-encoding:	GetHostname literal
//gsoap tds  service method-input-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostname
//gsoap tds  service method-output-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse
int __tds__GetHostname(
    struct _tds__GetHostname*           tds__GetHostname,	///< Input parameter
    struct _tds__GetHostnameResponse   *tds__GetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostname" of service binding "DeviceBinding".
This operation sets the hostname on a device. It shall be possible to set the device
hostname
				configurations through the SetHostname command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.

			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetHostname*           tds__SetHostname,
    // output parameters:
    struct _tds__SetHostnameResponse   *tds__SetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostname(
    struct soap *soap,
    // input parameters:
    struct _tds__SetHostname*           tds__SetHostname,
    // output parameters:
    struct _tds__SetHostnameResponse   *tds__SetHostnameResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetHostname SOAP
//gsoap tds  service method-style:	SetHostname document
//gsoap tds  service method-encoding:	SetHostname literal
//gsoap tds  service method-input-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostname
//gsoap tds  service method-output-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse
int __tds__SetHostname(
    struct _tds__SetHostname*           tds__SetHostname,	///< Input parameter
    struct _tds__SetHostnameResponse   *tds__SetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostnameFromDHCP                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostnameFromDHCP" of service binding "DeviceBinding".
This operation controls whether the hostname is set manually or retrieved via DHCP.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostnameFromDHCP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetHostnameFromDHCP*   tds__SetHostnameFromDHCP,
    // output parameters:
    struct _tds__SetHostnameFromDHCPResponse*tds__SetHostnameFromDHCPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostnameFromDHCP(
    struct soap *soap,
    // input parameters:
    struct _tds__SetHostnameFromDHCP*   tds__SetHostnameFromDHCP,
    // output parameters:
    struct _tds__SetHostnameFromDHCPResponse*tds__SetHostnameFromDHCPResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetHostnameFromDHCP SOAP
//gsoap tds  service method-style:	SetHostnameFromDHCP document
//gsoap tds  service method-encoding:	SetHostnameFromDHCP literal
//gsoap tds  service method-input-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP
//gsoap tds  service method-output-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse
int __tds__SetHostnameFromDHCP(
    struct _tds__SetHostnameFromDHCP*   tds__SetHostnameFromDHCP,	///< Input parameter
    struct _tds__SetHostnameFromDHCPResponse*tds__SetHostnameFromDHCPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDNS" of service binding "DeviceBinding".
This operation gets the DNS settings from a device. The device shall return its
DNS
				configurations through the GetDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDNS*                tds__GetDNS,
    // output parameters:
    struct _tds__GetDNSResponse        *tds__GetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDNS*                tds__GetDNS,
    // output parameters:
    struct _tds__GetDNSResponse        *tds__GetDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDNS SOAP
//gsoap tds  service method-style:	GetDNS document
//gsoap tds  service method-encoding:	GetDNS literal
//gsoap tds  service method-input-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNS
//gsoap tds  service method-output-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNSResponse
int __tds__GetDNS(
    struct _tds__GetDNS*                tds__GetDNS,	///< Input parameter
    struct _tds__GetDNSResponse        *tds__GetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDNS" of service binding "DeviceBinding".
This operation sets the DNS settings on a device. It shall be possible to set the
device DNS
				configurations through the SetDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDNS*                tds__SetDNS,
    // output parameters:
    struct _tds__SetDNSResponse        *tds__SetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDNS*                tds__SetDNS,
    // output parameters:
    struct _tds__SetDNSResponse        *tds__SetDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDNS SOAP
//gsoap tds  service method-style:	SetDNS document
//gsoap tds  service method-encoding:	SetDNS literal
//gsoap tds  service method-input-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNS
//gsoap tds  service method-output-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNSResponse
int __tds__SetDNS(
    struct _tds__SetDNS*                tds__SetDNS,	///< Input parameter
    struct _tds__SetDNSResponse        *tds__SetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNTP" of service binding "DeviceBinding".
This operation gets the NTP settings from a device. If the device supports NTP,
it shall be
				possible to get the NTP server settings through
the GetNTP command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNTP*                tds__GetNTP,
    // output parameters:
    struct _tds__GetNTPResponse        *tds__GetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNTP(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNTP*                tds__GetNTP,
    // output parameters:
    struct _tds__GetNTPResponse        *tds__GetNTPResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNTP SOAP
//gsoap tds  service method-style:	GetNTP document
//gsoap tds  service method-encoding:	GetNTP literal
//gsoap tds  service method-input-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTP
//gsoap tds  service method-output-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTPResponse
int __tds__GetNTP(
    struct _tds__GetNTP*                tds__GetNTP,	///< Input parameter
    struct _tds__GetNTPResponse        *tds__GetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNTP" of service binding "DeviceBinding".
This operation sets the NTP settings on a device. If the device supports NTP, it
shall be
				possible to set the NTP server settings through
the SetNTP command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.
<br/>
				Changes to the NTP server list will not affect the
clock mode DateTimeType. Use SetSystemDateAndTime to activate NTP operation.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNTP*                tds__SetNTP,
    // output parameters:
    struct _tds__SetNTPResponse        *tds__SetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNTP(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNTP*                tds__SetNTP,
    // output parameters:
    struct _tds__SetNTPResponse        *tds__SetNTPResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNTP SOAP
//gsoap tds  service method-style:	SetNTP document
//gsoap tds  service method-encoding:	SetNTP literal
//gsoap tds  service method-input-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTP
//gsoap tds  service method-output-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTPResponse
int __tds__SetNTP(
    struct _tds__SetNTP*                tds__SetNTP,	///< Input parameter
    struct _tds__SetNTPResponse        *tds__SetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDynamicDNS" of service binding "DeviceBinding".
This operation gets the dynamic DNS settings from a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to get the type, name
				and TTL through the GetDynamicDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDynamicDNS*         tds__GetDynamicDNS,
    // output parameters:
    struct _tds__GetDynamicDNSResponse *tds__GetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDynamicDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDynamicDNS*         tds__GetDynamicDNS,
    // output parameters:
    struct _tds__GetDynamicDNSResponse *tds__GetDynamicDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDynamicDNS SOAP
//gsoap tds  service method-style:	GetDynamicDNS document
//gsoap tds  service method-encoding:	GetDynamicDNS literal
//gsoap tds  service method-input-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS
//gsoap tds  service method-output-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse
int __tds__GetDynamicDNS(
    struct _tds__GetDynamicDNS*         tds__GetDynamicDNS,	///< Input parameter
    struct _tds__GetDynamicDNSResponse *tds__GetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDynamicDNS" of service binding "DeviceBinding".
This operation sets the dynamic DNS settings on a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to set the type, name
				and TTL through the SetDynamicDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDynamicDNS*         tds__SetDynamicDNS,
    // output parameters:
    struct _tds__SetDynamicDNSResponse *tds__SetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDynamicDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDynamicDNS*         tds__SetDynamicDNS,
    // output parameters:
    struct _tds__SetDynamicDNSResponse *tds__SetDynamicDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDynamicDNS SOAP
//gsoap tds  service method-style:	SetDynamicDNS document
//gsoap tds  service method-encoding:	SetDynamicDNS literal
//gsoap tds  service method-input-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS
//gsoap tds  service method-output-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse
int __tds__SetDynamicDNS(
    struct _tds__SetDynamicDNS*         tds__SetDynamicDNS,	///< Input parameter
    struct _tds__SetDynamicDNSResponse *tds__SetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkInterfaces" of service binding "DeviceBinding".
This operation gets the network interface configuration from a device. The device
shall
				support return of network interface configuration
settings as defined by the NetworkInterface
				type through the GetNetworkInterfaces command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNetworkInterfaces*  tds__GetNetworkInterfaces,
    // output parameters:
    struct _tds__GetNetworkInterfacesResponse*tds__GetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNetworkInterfaces*  tds__GetNetworkInterfaces,
    // output parameters:
    struct _tds__GetNetworkInterfacesResponse*tds__GetNetworkInterfacesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNetworkInterfaces SOAP
//gsoap tds  service method-style:	GetNetworkInterfaces document
//gsoap tds  service method-encoding:	GetNetworkInterfaces literal
//gsoap tds  service method-input-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces
//gsoap tds  service method-output-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse
int __tds__GetNetworkInterfaces(
    struct _tds__GetNetworkInterfaces*  tds__GetNetworkInterfaces,	///< Input parameter
    struct _tds__GetNetworkInterfacesResponse*tds__GetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkInterfaces" of service binding "DeviceBinding".
This operation sets the network interface configuration on a device. The device
shall support
				network configuration of supported network interfaces
through the SetNetworkInterfaces
				command.<br/>
				For interoperability with a client unaware of the
IEEE 802.11 extension a device shall retain
				its IEEE 802.11 configuration if the IEEE 802.11
configuration element isnt present in the
				request.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNetworkInterfaces*  tds__SetNetworkInterfaces,
    // output parameters:
    struct _tds__SetNetworkInterfacesResponse*tds__SetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNetworkInterfaces*  tds__SetNetworkInterfaces,
    // output parameters:
    struct _tds__SetNetworkInterfacesResponse*tds__SetNetworkInterfacesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNetworkInterfaces SOAP
//gsoap tds  service method-style:	SetNetworkInterfaces document
//gsoap tds  service method-encoding:	SetNetworkInterfaces literal
//gsoap tds  service method-input-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces
//gsoap tds  service method-output-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse
int __tds__SetNetworkInterfaces(
    struct _tds__SetNetworkInterfaces*  tds__SetNetworkInterfaces,	///< Input parameter
    struct _tds__SetNetworkInterfacesResponse*tds__SetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkProtocols" of service binding "DeviceBinding".
This operation gets defined network protocols from a device. The device shall support
the
				GetNetworkProtocols command returning configured
network protocols.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNetworkProtocols*   tds__GetNetworkProtocols,
    // output parameters:
    struct _tds__GetNetworkProtocolsResponse*tds__GetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNetworkProtocols*   tds__GetNetworkProtocols,
    // output parameters:
    struct _tds__GetNetworkProtocolsResponse*tds__GetNetworkProtocolsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNetworkProtocols SOAP
//gsoap tds  service method-style:	GetNetworkProtocols document
//gsoap tds  service method-encoding:	GetNetworkProtocols literal
//gsoap tds  service method-input-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols
//gsoap tds  service method-output-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse
int __tds__GetNetworkProtocols(
    struct _tds__GetNetworkProtocols*   tds__GetNetworkProtocols,	///< Input parameter
    struct _tds__GetNetworkProtocolsResponse*tds__GetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkProtocols" of service binding "DeviceBinding".
This operation configures defined network protocols on a device. The device shall
support
				configuration of defined network protocols through
the SetNetworkProtocols command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNetworkProtocols*   tds__SetNetworkProtocols,
    // output parameters:
    struct _tds__SetNetworkProtocolsResponse*tds__SetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNetworkProtocols*   tds__SetNetworkProtocols,
    // output parameters:
    struct _tds__SetNetworkProtocolsResponse*tds__SetNetworkProtocolsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNetworkProtocols SOAP
//gsoap tds  service method-style:	SetNetworkProtocols document
//gsoap tds  service method-encoding:	SetNetworkProtocols literal
//gsoap tds  service method-input-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols
//gsoap tds  service method-output-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse
int __tds__SetNetworkProtocols(
    struct _tds__SetNetworkProtocols*   tds__SetNetworkProtocols,	///< Input parameter
    struct _tds__SetNetworkProtocolsResponse*tds__SetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation gets the default gateway settings from a device. The device shall
support the
				GetNetworkDefaultGateway command returning configured
default gateway address(es).

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNetworkDefaultGateway* tds__GetNetworkDefaultGateway,
    // output parameters:
    struct _tds__GetNetworkDefaultGatewayResponse*tds__GetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNetworkDefaultGateway* tds__GetNetworkDefaultGateway,
    // output parameters:
    struct _tds__GetNetworkDefaultGatewayResponse*tds__GetNetworkDefaultGatewayResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	GetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	GetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway
//gsoap tds  service method-output-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse
int __tds__GetNetworkDefaultGateway(
    struct _tds__GetNetworkDefaultGateway* tds__GetNetworkDefaultGateway,	///< Input parameter
    struct _tds__GetNetworkDefaultGatewayResponse*tds__GetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation sets the default gateway settings on a device. The device shall support
				configuration of default gateway through the SetNetworkDefaultGateway
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNetworkDefaultGateway* tds__SetNetworkDefaultGateway,
    // output parameters:
    struct _tds__SetNetworkDefaultGatewayResponse*tds__SetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNetworkDefaultGateway* tds__SetNetworkDefaultGateway,
    // output parameters:
    struct _tds__SetNetworkDefaultGatewayResponse*tds__SetNetworkDefaultGatewayResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	SetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	SetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway
//gsoap tds  service method-output-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse
int __tds__SetNetworkDefaultGateway(
    struct _tds__SetNetworkDefaultGateway* tds__SetNetworkDefaultGateway,	///< Input parameter
    struct _tds__SetNetworkDefaultGatewayResponse*tds__SetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetZeroConfiguration" of service binding "DeviceBinding".
This operation gets the zero-configuration from a device. If the device supports
dynamic IP
				configuration according to [RFC3927], it shall support
the return of IPv4 zero configuration
				address and status through the GetZeroConfiguration
command.<br/>
			Devices supporting zero configuration on more than one interface
shall use the extension to list the additional interface settings.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetZeroConfiguration*  tds__GetZeroConfiguration,
    // output parameters:
    struct _tds__GetZeroConfigurationResponse*tds__GetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetZeroConfiguration*  tds__GetZeroConfiguration,
    // output parameters:
    struct _tds__GetZeroConfigurationResponse*tds__GetZeroConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetZeroConfiguration SOAP
//gsoap tds  service method-style:	GetZeroConfiguration document
//gsoap tds  service method-encoding:	GetZeroConfiguration literal
//gsoap tds  service method-input-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration
//gsoap tds  service method-output-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse
int __tds__GetZeroConfiguration(
    struct _tds__GetZeroConfiguration*  tds__GetZeroConfiguration,	///< Input parameter
    struct _tds__GetZeroConfigurationResponse*tds__GetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetZeroConfiguration" of service binding "DeviceBinding".
This operation sets the zero-configuration. Use GetCapalities to get if zero-zero-configuration
is supported or not.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetZeroConfiguration*  tds__SetZeroConfiguration,
    // output parameters:
    struct _tds__SetZeroConfigurationResponse*tds__SetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetZeroConfiguration*  tds__SetZeroConfiguration,
    // output parameters:
    struct _tds__SetZeroConfigurationResponse*tds__SetZeroConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetZeroConfiguration SOAP
//gsoap tds  service method-style:	SetZeroConfiguration document
//gsoap tds  service method-encoding:	SetZeroConfiguration literal
//gsoap tds  service method-input-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration
//gsoap tds  service method-output-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse
int __tds__SetZeroConfiguration(
    struct _tds__SetZeroConfiguration*  tds__SetZeroConfiguration,	///< Input parameter
    struct _tds__SetZeroConfigurationResponse*tds__SetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetIPAddressFilter" of service binding "DeviceBinding".
This operation gets the IP address filter settings from a device. If the device
supports device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support the GetIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetIPAddressFilter*    tds__GetIPAddressFilter,
    // output parameters:
    struct _tds__GetIPAddressFilterResponse*tds__GetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__GetIPAddressFilter*    tds__GetIPAddressFilter,
    // output parameters:
    struct _tds__GetIPAddressFilterResponse*tds__GetIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetIPAddressFilter SOAP
//gsoap tds  service method-style:	GetIPAddressFilter document
//gsoap tds  service method-encoding:	GetIPAddressFilter literal
//gsoap tds  service method-input-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter
//gsoap tds  service method-output-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse
int __tds__GetIPAddressFilter(
    struct _tds__GetIPAddressFilter*    tds__GetIPAddressFilter,	///< Input parameter
    struct _tds__GetIPAddressFilterResponse*tds__GetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetIPAddressFilter" of service binding "DeviceBinding".
This operation sets the IP address filter settings on a device. If the device supports
device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support configuration of IP filtering
rules through the SetIPAddressFilter
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetIPAddressFilter*    tds__SetIPAddressFilter,
    // output parameters:
    struct _tds__SetIPAddressFilterResponse*tds__SetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__SetIPAddressFilter*    tds__SetIPAddressFilter,
    // output parameters:
    struct _tds__SetIPAddressFilterResponse*tds__SetIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetIPAddressFilter SOAP
//gsoap tds  service method-style:	SetIPAddressFilter document
//gsoap tds  service method-encoding:	SetIPAddressFilter literal
//gsoap tds  service method-input-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter
//gsoap tds  service method-output-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse
int __tds__SetIPAddressFilter(
    struct _tds__SetIPAddressFilter*    tds__SetIPAddressFilter,	///< Input parameter
    struct _tds__SetIPAddressFilterResponse*tds__SetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddIPAddressFilter" of service binding "DeviceBinding".
This operation adds an IP filter address to a device. If the device supports device
access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support adding of IP filtering addresses through
the AddIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__AddIPAddressFilter*    tds__AddIPAddressFilter,
    // output parameters:
    struct _tds__AddIPAddressFilterResponse*tds__AddIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__AddIPAddressFilter*    tds__AddIPAddressFilter,
    // output parameters:
    struct _tds__AddIPAddressFilterResponse*tds__AddIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	AddIPAddressFilter SOAP
//gsoap tds  service method-style:	AddIPAddressFilter document
//gsoap tds  service method-encoding:	AddIPAddressFilter literal
//gsoap tds  service method-input-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter
//gsoap tds  service method-output-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse
int __tds__AddIPAddressFilter(
    struct _tds__AddIPAddressFilter*    tds__AddIPAddressFilter,	///< Input parameter
    struct _tds__AddIPAddressFilterResponse*tds__AddIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveIPAddressFilter                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveIPAddressFilter" of service binding "DeviceBinding".
This operation deletes an IP filter address from a device. If the device supports
device access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support deletion of IP filtering addresses
through the RemoveIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__RemoveIPAddressFilter* tds__RemoveIPAddressFilter,
    // output parameters:
    struct _tds__RemoveIPAddressFilterResponse*tds__RemoveIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__RemoveIPAddressFilter* tds__RemoveIPAddressFilter,
    // output parameters:
    struct _tds__RemoveIPAddressFilterResponse*tds__RemoveIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	RemoveIPAddressFilter SOAP
//gsoap tds  service method-style:	RemoveIPAddressFilter document
//gsoap tds  service method-encoding:	RemoveIPAddressFilter literal
//gsoap tds  service method-input-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter
//gsoap tds  service method-output-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse
int __tds__RemoveIPAddressFilter(
    struct _tds__RemoveIPAddressFilter* tds__RemoveIPAddressFilter,	///< Input parameter
    struct _tds__RemoveIPAddressFilterResponse*tds__RemoveIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetAccessPolicy" of service binding "DeviceBinding".
Access to different services and sub-sets of services should be subject to access
control. The
				WS-Security framework gives the prerequisite for
end-point authentication. Authorization
				decisions can then be taken using an access security
policy. This standard does not mandate
				any particular policy description format or security
policy but this is up to the device
				manufacturer or system provider to choose policy
and policy description format of choice.
				However, an access policy (in arbitrary format)
can be requested using this command. If the
				device supports access policy settings based on
WS-Security authentication, then the device
				shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetAccessPolicy*       tds__GetAccessPolicy,
    // output parameters:
    struct _tds__GetAccessPolicyResponse*tds__GetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetAccessPolicy(
    struct soap *soap,
    // input parameters:
    struct _tds__GetAccessPolicy*       tds__GetAccessPolicy,
    // output parameters:
    struct _tds__GetAccessPolicyResponse*tds__GetAccessPolicyResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetAccessPolicy SOAP
//gsoap tds  service method-style:	GetAccessPolicy document
//gsoap tds  service method-encoding:	GetAccessPolicy literal
//gsoap tds  service method-input-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy
//gsoap tds  service method-output-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse
int __tds__GetAccessPolicy(
    struct _tds__GetAccessPolicy*       tds__GetAccessPolicy,	///< Input parameter
    struct _tds__GetAccessPolicyResponse*tds__GetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetAccessPolicy" of service binding "DeviceBinding".
This command sets the device access security policy (for more details on the access
security
				policy see the Get command). If the device supports
access policy settings
				based on WS-Security authentication, then the device
shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetAccessPolicy*       tds__SetAccessPolicy,
    // output parameters:
    struct _tds__SetAccessPolicyResponse*tds__SetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetAccessPolicy(
    struct soap *soap,
    // input parameters:
    struct _tds__SetAccessPolicy*       tds__SetAccessPolicy,
    // output parameters:
    struct _tds__SetAccessPolicyResponse*tds__SetAccessPolicyResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetAccessPolicy SOAP
//gsoap tds  service method-style:	SetAccessPolicy document
//gsoap tds  service method-encoding:	SetAccessPolicy literal
//gsoap tds  service method-input-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy
//gsoap tds  service method-output-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse
int __tds__SetAccessPolicy(
    struct _tds__SetAccessPolicy*       tds__SetAccessPolicy,	///< Input parameter
    struct _tds__SetAccessPolicyResponse*tds__SetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateCertificate                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateCertificate" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateCertificate*     tds__CreateCertificate,
    // output parameters:
    struct _tds__CreateCertificateResponse*tds__CreateCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateCertificate(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateCertificate*     tds__CreateCertificate,
    // output parameters:
    struct _tds__CreateCertificateResponse*tds__CreateCertificateResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateCertificate SOAP
//gsoap tds  service method-style:	CreateCertificate document
//gsoap tds  service method-encoding:	CreateCertificate literal
//gsoap tds  service method-input-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificate
//gsoap tds  service method-output-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse
int __tds__CreateCertificate(
    struct _tds__CreateCertificate*     tds__CreateCertificate,	///< Input parameter
    struct _tds__CreateCertificateResponse*tds__CreateCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificates                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCertificates*       tds__GetCertificates,
    // output parameters:
    struct _tds__GetCertificatesResponse*tds__GetCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCertificates*       tds__GetCertificates,
    // output parameters:
    struct _tds__GetCertificatesResponse*tds__GetCertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCertificates SOAP
//gsoap tds  service method-style:	GetCertificates document
//gsoap tds  service method-encoding:	GetCertificates literal
//gsoap tds  service method-input-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificates
//gsoap tds  service method-output-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse
int __tds__GetCertificates(
    struct _tds__GetCertificates*       tds__GetCertificates,	///< Input parameter
    struct _tds__GetCertificatesResponse*tds__GetCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificatesStatus" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCertificatesStatus* tds__GetCertificatesStatus,
    // output parameters:
    struct _tds__GetCertificatesStatusResponse*tds__GetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCertificatesStatus* tds__GetCertificatesStatus,
    // output parameters:
    struct _tds__GetCertificatesStatusResponse*tds__GetCertificatesStatusResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCertificatesStatus SOAP
//gsoap tds  service method-style:	GetCertificatesStatus document
//gsoap tds  service method-encoding:	GetCertificatesStatus literal
//gsoap tds  service method-input-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus
//gsoap tds  service method-output-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse
int __tds__GetCertificatesStatus(
    struct _tds__GetCertificatesStatus* tds__GetCertificatesStatus,	///< Input parameter
    struct _tds__GetCertificatesStatusResponse*tds__GetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetCertificatesStatus" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetCertificatesStatus* tds__SetCertificatesStatus,
    // output parameters:
    struct _tds__SetCertificatesStatusResponse*tds__SetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    struct _tds__SetCertificatesStatus* tds__SetCertificatesStatus,
    // output parameters:
    struct _tds__SetCertificatesStatusResponse*tds__SetCertificatesStatusResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetCertificatesStatus SOAP
//gsoap tds  service method-style:	SetCertificatesStatus document
//gsoap tds  service method-encoding:	SetCertificatesStatus literal
//gsoap tds  service method-input-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus
//gsoap tds  service method-output-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse
int __tds__SetCertificatesStatus(
    struct _tds__SetCertificatesStatus* tds__SetCertificatesStatus,	///< Input parameter
    struct _tds__SetCertificatesStatusResponse*tds__SetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteCertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteCertificates*    tds__DeleteCertificates,
    // output parameters:
    struct _tds__DeleteCertificatesResponse*tds__DeleteCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteCertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteCertificates*    tds__DeleteCertificates,
    // output parameters:
    struct _tds__DeleteCertificatesResponse*tds__DeleteCertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteCertificates SOAP
//gsoap tds  service method-style:	DeleteCertificates document
//gsoap tds  service method-encoding:	DeleteCertificates literal
//gsoap tds  service method-input-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificates
//gsoap tds  service method-output-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse
int __tds__DeleteCertificates(
    struct _tds__DeleteCertificates*    tds__DeleteCertificates,	///< Input parameter
    struct _tds__DeleteCertificatesResponse*tds__DeleteCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPkcs10Request                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetPkcs10Request" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPkcs10Request(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetPkcs10Request*      tds__GetPkcs10Request,
    // output parameters:
    struct _tds__GetPkcs10RequestResponse*tds__GetPkcs10RequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPkcs10Request(
    struct soap *soap,
    // input parameters:
    struct _tds__GetPkcs10Request*      tds__GetPkcs10Request,
    // output parameters:
    struct _tds__GetPkcs10RequestResponse*tds__GetPkcs10RequestResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetPkcs10Request SOAP
//gsoap tds  service method-style:	GetPkcs10Request document
//gsoap tds  service method-encoding:	GetPkcs10Request literal
//gsoap tds  service method-input-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request
//gsoap tds  service method-output-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse
int __tds__GetPkcs10Request(
    struct _tds__GetPkcs10Request*      tds__GetPkcs10Request,	///< Input parameter
    struct _tds__GetPkcs10RequestResponse*tds__GetPkcs10RequestResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificates                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__LoadCertificates*      tds__LoadCertificates,
    // output parameters:
    struct _tds__LoadCertificatesResponse*tds__LoadCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__LoadCertificates*      tds__LoadCertificates,
    // output parameters:
    struct _tds__LoadCertificatesResponse*tds__LoadCertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	LoadCertificates SOAP
//gsoap tds  service method-style:	LoadCertificates document
//gsoap tds  service method-encoding:	LoadCertificates literal
//gsoap tds  service method-input-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificates
//gsoap tds  service method-output-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse
int __tds__LoadCertificates(
    struct _tds__LoadCertificates*      tds__LoadCertificates,	///< Input parameter
    struct _tds__LoadCertificatesResponse*tds__LoadCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetClientCertificateMode" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetClientCertificateMode* tds__GetClientCertificateMode,
    // output parameters:
    struct _tds__GetClientCertificateModeResponse*tds__GetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    struct _tds__GetClientCertificateMode* tds__GetClientCertificateMode,
    // output parameters:
    struct _tds__GetClientCertificateModeResponse*tds__GetClientCertificateModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetClientCertificateMode SOAP
//gsoap tds  service method-style:	GetClientCertificateMode document
//gsoap tds  service method-encoding:	GetClientCertificateMode literal
//gsoap tds  service method-input-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode
//gsoap tds  service method-output-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse
int __tds__GetClientCertificateMode(
    struct _tds__GetClientCertificateMode* tds__GetClientCertificateMode,	///< Input parameter
    struct _tds__GetClientCertificateModeResponse*tds__GetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetClientCertificateMode" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetClientCertificateMode* tds__SetClientCertificateMode,
    // output parameters:
    struct _tds__SetClientCertificateModeResponse*tds__SetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    struct _tds__SetClientCertificateMode* tds__SetClientCertificateMode,
    // output parameters:
    struct _tds__SetClientCertificateModeResponse*tds__SetClientCertificateModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetClientCertificateMode SOAP
//gsoap tds  service method-style:	SetClientCertificateMode document
//gsoap tds  service method-encoding:	SetClientCertificateMode literal
//gsoap tds  service method-input-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode
//gsoap tds  service method-output-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse
int __tds__SetClientCertificateMode(
    struct _tds__SetClientCertificateMode* tds__SetClientCertificateMode,	///< Input parameter
    struct _tds__SetClientCertificateModeResponse*tds__SetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRelayOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRelayOutputs" of service binding "DeviceBinding".
This operation gets a list of all available relay outputs and their settings.<br/>
				This method has been depricated with version 2.0.
Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRelayOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,
    // output parameters:
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRelayOutputs(
    struct soap *soap,
    // input parameters:
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,
    // output parameters:
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetRelayOutputs SOAP
//gsoap tds  service method-style:	GetRelayOutputs document
//gsoap tds  service method-encoding:	GetRelayOutputs literal
//gsoap tds  service method-input-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs
//gsoap tds  service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse
int __tds__GetRelayOutputs(
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,	///< Input parameter
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputSettings                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputSettings" of service binding "DeviceBinding".
This operation sets the settings of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRelayOutputSettings* tds__SetRelayOutputSettings,
    // output parameters:
    struct _tds__SetRelayOutputSettingsResponse*tds__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputSettings(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRelayOutputSettings* tds__SetRelayOutputSettings,
    // output parameters:
    struct _tds__SetRelayOutputSettingsResponse*tds__SetRelayOutputSettingsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRelayOutputSettings SOAP
//gsoap tds  service method-style:	SetRelayOutputSettings document
//gsoap tds  service method-encoding:	SetRelayOutputSettings literal
//gsoap tds  service method-input-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings
//gsoap tds  service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse
int __tds__SetRelayOutputSettings(
    struct _tds__SetRelayOutputSettings* tds__SetRelayOutputSettings,	///< Input parameter
    struct _tds__SetRelayOutputSettingsResponse*tds__SetRelayOutputSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputState                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputState" of service binding "DeviceBinding".
This operation sets the state of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,
    // output parameters:
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputState(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,
    // output parameters:
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRelayOutputState SOAP
//gsoap tds  service method-style:	SetRelayOutputState document
//gsoap tds  service method-encoding:	SetRelayOutputState literal
//gsoap tds  service method-input-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState
//gsoap tds  service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse
int __tds__SetRelayOutputState(
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,	///< Input parameter
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SendAuxiliaryCommand                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SendAuxiliaryCommand" of service binding "DeviceBinding".
Manage auxiliary commands supported by a device, such as controlling an Infrared
(IR) lamp, 
				a heater or a wiper or a thermometer that is connected
to the device.<br/>
				The supported commands can be retrieved via the
AuxiliaryCommands capability.<br/>
				Although the name of the auxiliary commands can
be freely defined, commands starting with the prefix tt: are 
				reserved to define frequently used commands and
these reserved commands shall all share the "tt:command|parameter" syntax.
				<ul>
					<li>tt:Wiper|On  Request to start the
wiper.</li>
					<li>tt:Wiper|Off  Request to stop the
wiper.</li>
					<li>tt:Washer|On  Request to start the
washer.</li>
					<li>tt:Washer|Off  Request to stop the
washer.</li>
					<li>tt:WashingProcedure|On  Request to
start the washing procedure.</li>
					<li>tt: WashingProcedure |Off  Request
to stop the washing procedure.</li>
					<li>tt:IRLamp|On  Request to turn ON
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Off  Request to turn OFF
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Auto  Request to configure
an IR illuminator attached to the unit so that it automatically turns ON and OFF.</li>
				</ul>
				A device that indicates auxiliary service capability
shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SendAuxiliaryCommand*  tds__SendAuxiliaryCommand,
    // output parameters:
    struct _tds__SendAuxiliaryCommandResponse*tds__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SendAuxiliaryCommand(
    struct soap *soap,
    // input parameters:
    struct _tds__SendAuxiliaryCommand*  tds__SendAuxiliaryCommand,
    // output parameters:
    struct _tds__SendAuxiliaryCommandResponse*tds__SendAuxiliaryCommandResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tds  service method-style:	SendAuxiliaryCommand document
//gsoap tds  service method-encoding:	SendAuxiliaryCommand literal
//gsoap tds  service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand
//gsoap tds  service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse
int __tds__SendAuxiliaryCommand(
    struct _tds__SendAuxiliaryCommand*  tds__SendAuxiliaryCommand,	///< Input parameter
    struct _tds__SendAuxiliaryCommandResponse*tds__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCACertificates                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCACertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCACertificates*     tds__GetCACertificates,
    // output parameters:
    struct _tds__GetCACertificatesResponse*tds__GetCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCACertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCACertificates*     tds__GetCACertificates,
    // output parameters:
    struct _tds__GetCACertificatesResponse*tds__GetCACertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCACertificates SOAP
//gsoap tds  service method-style:	GetCACertificates document
//gsoap tds  service method-encoding:	GetCACertificates literal
//gsoap tds  service method-input-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificates
//gsoap tds  service method-output-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse
int __tds__GetCACertificates(
    struct _tds__GetCACertificates*     tds__GetCACertificates,	///< Input parameter
    struct _tds__GetCACertificatesResponse*tds__GetCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificateWithPrivateKey                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificateWithPrivateKey" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    struct _tds__LoadCertificateWithPrivateKeyResponse*tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    // input parameters:
    struct _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    struct _tds__LoadCertificateWithPrivateKeyResponse*tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	LoadCertificateWithPrivateKey SOAP
//gsoap tds  service method-style:	LoadCertificateWithPrivateKey document
//gsoap tds  service method-encoding:	LoadCertificateWithPrivateKey literal
//gsoap tds  service method-input-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey
//gsoap tds  service method-output-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse
int __tds__LoadCertificateWithPrivateKey(
    struct _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,	///< Input parameter
    struct _tds__LoadCertificateWithPrivateKeyResponse*tds__LoadCertificateWithPrivateKeyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificateInformation                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificateInformation" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificateInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCertificateInformation* tds__GetCertificateInformation,
    // output parameters:
    struct _tds__GetCertificateInformationResponse*tds__GetCertificateInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificateInformation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCertificateInformation* tds__GetCertificateInformation,
    // output parameters:
    struct _tds__GetCertificateInformationResponse*tds__GetCertificateInformationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCertificateInformation SOAP
//gsoap tds  service method-style:	GetCertificateInformation document
//gsoap tds  service method-encoding:	GetCertificateInformation literal
//gsoap tds  service method-input-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation
//gsoap tds  service method-output-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse
int __tds__GetCertificateInformation(
    struct _tds__GetCertificateInformation* tds__GetCertificateInformation,	///< Input parameter
    struct _tds__GetCertificateInformationResponse*tds__GetCertificateInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCACertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCACertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__LoadCACertificates*    tds__LoadCACertificates,
    // output parameters:
    struct _tds__LoadCACertificatesResponse*tds__LoadCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCACertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__LoadCACertificates*    tds__LoadCACertificates,
    // output parameters:
    struct _tds__LoadCACertificatesResponse*tds__LoadCACertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	LoadCACertificates SOAP
//gsoap tds  service method-style:	LoadCACertificates document
//gsoap tds  service method-encoding:	LoadCACertificates literal
//gsoap tds  service method-input-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificates
//gsoap tds  service method-output-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse
int __tds__LoadCACertificates(
    struct _tds__LoadCACertificates*    tds__LoadCACertificates,	///< Input parameter
    struct _tds__LoadCACertificatesResponse*tds__LoadCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateDot1XConfiguration* tds__CreateDot1XConfiguration,
    // output parameters:
    struct _tds__CreateDot1XConfigurationResponse*tds__CreateDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateDot1XConfiguration* tds__CreateDot1XConfiguration,
    // output parameters:
    struct _tds__CreateDot1XConfigurationResponse*tds__CreateDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateDot1XConfiguration SOAP
//gsoap tds  service method-style:	CreateDot1XConfiguration document
//gsoap tds  service method-encoding:	CreateDot1XConfiguration literal
//gsoap tds  service method-input-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration
//gsoap tds  service method-output-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse
int __tds__CreateDot1XConfiguration(
    struct _tds__CreateDot1XConfiguration* tds__CreateDot1XConfiguration,	///< Input parameter
    struct _tds__CreateDot1XConfigurationResponse*tds__CreateDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDot1XConfiguration* tds__SetDot1XConfiguration,
    // output parameters:
    struct _tds__SetDot1XConfigurationResponse*tds__SetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDot1XConfiguration* tds__SetDot1XConfiguration,
    // output parameters:
    struct _tds__SetDot1XConfigurationResponse*tds__SetDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDot1XConfiguration SOAP
//gsoap tds  service method-style:	SetDot1XConfiguration document
//gsoap tds  service method-encoding:	SetDot1XConfiguration literal
//gsoap tds  service method-input-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration
//gsoap tds  service method-output-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse
int __tds__SetDot1XConfiguration(
    struct _tds__SetDot1XConfiguration* tds__SetDot1XConfiguration,	///< Input parameter
    struct _tds__SetDot1XConfigurationResponse*tds__SetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot1XConfiguration* tds__GetDot1XConfiguration,
    // output parameters:
    struct _tds__GetDot1XConfigurationResponse*tds__GetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot1XConfiguration* tds__GetDot1XConfiguration,
    // output parameters:
    struct _tds__GetDot1XConfigurationResponse*tds__GetDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot1XConfiguration SOAP
//gsoap tds  service method-style:	GetDot1XConfiguration document
//gsoap tds  service method-encoding:	GetDot1XConfiguration literal
//gsoap tds  service method-input-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration
//gsoap tds  service method-output-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse
int __tds__GetDot1XConfiguration(
    struct _tds__GetDot1XConfiguration* tds__GetDot1XConfiguration,	///< Input parameter
    struct _tds__GetDot1XConfigurationResponse*tds__GetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfigurations                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfigurations" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot1XConfigurations* tds__GetDot1XConfigurations,
    // output parameters:
    struct _tds__GetDot1XConfigurationsResponse*tds__GetDot1XConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot1XConfigurations* tds__GetDot1XConfigurations,
    // output parameters:
    struct _tds__GetDot1XConfigurationsResponse*tds__GetDot1XConfigurationsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot1XConfigurations SOAP
//gsoap tds  service method-style:	GetDot1XConfigurations document
//gsoap tds  service method-encoding:	GetDot1XConfigurations literal
//gsoap tds  service method-input-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations
//gsoap tds  service method-output-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse
int __tds__GetDot1XConfigurations(
    struct _tds__GetDot1XConfigurations* tds__GetDot1XConfigurations,	///< Input parameter
    struct _tds__GetDot1XConfigurationsResponse*tds__GetDot1XConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteDot1XConfiguration* tds__DeleteDot1XConfiguration,
    // output parameters:
    struct _tds__DeleteDot1XConfigurationResponse*tds__DeleteDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteDot1XConfiguration* tds__DeleteDot1XConfiguration,
    // output parameters:
    struct _tds__DeleteDot1XConfigurationResponse*tds__DeleteDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteDot1XConfiguration SOAP
//gsoap tds  service method-style:	DeleteDot1XConfiguration document
//gsoap tds  service method-encoding:	DeleteDot1XConfiguration literal
//gsoap tds  service method-input-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration
//gsoap tds  service method-output-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse
int __tds__DeleteDot1XConfiguration(
    struct _tds__DeleteDot1XConfiguration* tds__DeleteDot1XConfiguration,	///< Input parameter
    struct _tds__DeleteDot1XConfigurationResponse*tds__DeleteDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Capabilities                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Capabilities" of service binding "DeviceBinding".
This operation returns the IEEE802.11 capabilities. The device shall support
				this operation.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Capabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot11Capabilities*  tds__GetDot11Capabilities,
    // output parameters:
    struct _tds__GetDot11CapabilitiesResponse*tds__GetDot11CapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Capabilities(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot11Capabilities*  tds__GetDot11Capabilities,
    // output parameters:
    struct _tds__GetDot11CapabilitiesResponse*tds__GetDot11CapabilitiesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot11Capabilities SOAP
//gsoap tds  service method-style:	GetDot11Capabilities document
//gsoap tds  service method-encoding:	GetDot11Capabilities literal
//gsoap tds  service method-input-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities
//gsoap tds  service method-output-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse
int __tds__GetDot11Capabilities(
    struct _tds__GetDot11Capabilities*  tds__GetDot11Capabilities,	///< Input parameter
    struct _tds__GetDot11CapabilitiesResponse*tds__GetDot11CapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Status                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Status" of service binding "DeviceBinding".
This operation returns the status of a wireless network interface. The device shall
support this
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Status(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot11Status*        tds__GetDot11Status,
    // output parameters:
    struct _tds__GetDot11StatusResponse*tds__GetDot11StatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Status(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot11Status*        tds__GetDot11Status,
    // output parameters:
    struct _tds__GetDot11StatusResponse*tds__GetDot11StatusResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot11Status SOAP
//gsoap tds  service method-style:	GetDot11Status document
//gsoap tds  service method-encoding:	GetDot11Status literal
//gsoap tds  service method-input-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11Status
//gsoap tds  service method-output-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse
int __tds__GetDot11Status(
    struct _tds__GetDot11Status*        tds__GetDot11Status,	///< Input parameter
    struct _tds__GetDot11StatusResponse*tds__GetDot11StatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__ScanAvailableDot11Networks                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__ScanAvailableDot11Networks" of service binding "DeviceBinding".
This operation returns a lists of the wireless networks in range of the device.
A device should
				support this operation.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__ScanAvailableDot11Networks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__ScanAvailableDot11Networks* tds__ScanAvailableDot11Networks,
    // output parameters:
    struct _tds__ScanAvailableDot11NetworksResponse*tds__ScanAvailableDot11NetworksResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__ScanAvailableDot11Networks(
    struct soap *soap,
    // input parameters:
    struct _tds__ScanAvailableDot11Networks* tds__ScanAvailableDot11Networks,
    // output parameters:
    struct _tds__ScanAvailableDot11NetworksResponse*tds__ScanAvailableDot11NetworksResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	ScanAvailableDot11Networks SOAP
//gsoap tds  service method-style:	ScanAvailableDot11Networks document
//gsoap tds  service method-encoding:	ScanAvailableDot11Networks literal
//gsoap tds  service method-input-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks
//gsoap tds  service method-output-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse
int __tds__ScanAvailableDot11Networks(
    struct _tds__ScanAvailableDot11Networks* tds__ScanAvailableDot11Networks,	///< Input parameter
    struct _tds__ScanAvailableDot11NetworksResponse*tds__ScanAvailableDot11NetworksResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemUris                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemUris" of service binding "DeviceBinding".
This operation is used to retrieve URIs from which system information may be downloaded
				using HTTP. URIs may be returned for the following
system information:<br/>
				System Logs. Multiple system logs may be returned,
of different types. The exact format of
				the system logs is outside the scope of this specification.<br/>
				Support Information. This consists of arbitrary
device diagnostics information from a device.
				The exact format of the diagnostic information is
outside the scope of this specification.<br/>
				System Backup. The received file is a backup file
that can be used to restore the current
				device configuration at a later date. The exact
format of the backup configuration file is
				outside the scope of this specification.<br/>
				If the device allows retrieval of system logs, support
information or system backup data, it
				should make them available via HTTP GET. If it does,
it shall support the GetSystemUris
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemUris(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemUris*         tds__GetSystemUris,
    // output parameters:
    struct _tds__GetSystemUrisResponse *tds__GetSystemUrisResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemUris(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemUris*         tds__GetSystemUris,
    // output parameters:
    struct _tds__GetSystemUrisResponse *tds__GetSystemUrisResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemUris SOAP
//gsoap tds  service method-style:	GetSystemUris document
//gsoap tds  service method-encoding:	GetSystemUris literal
//gsoap tds  service method-input-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUris
//gsoap tds  service method-output-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse
int __tds__GetSystemUris(
    struct _tds__GetSystemUris*         tds__GetSystemUris,	///< Input parameter
    struct _tds__GetSystemUrisResponse *tds__GetSystemUrisResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartFirmwareUpgrade                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartFirmwareUpgrade" of service binding "DeviceBinding".
This operation initiates a firmware upgrade using the HTTP POST mechanism. The response
				to the command includes an HTTP URL to which the
upgrade file may be uploaded. The
				actual upgrade takes place as soon as the HTTP POST
operation has completed. The device
				should support firmware upgrade through the StartFirmwareUpgrade
command. The exact
				format of the firmware data is outside the scope
of this specification.
				Firmware upgrade over HTTP may be achieved using
the following steps:<ol>
					<li>Client calls StartFirmwareUpgrade.</li>
					<li>Server responds with upload URI and
optional delay value.</li>
					<li>Client waits for delay duration if specified
by server.</li>
					<li>Client transmits the firmware image
to the upload URI using HTTP POST.</li>
					<li>Server reprograms itself using the uploaded
image, then reboots.</li>
				</ol>
				If the firmware upgrade fails because the upgrade
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
firmware upgrade fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartFirmwareUpgrade(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__StartFirmwareUpgrade*  tds__StartFirmwareUpgrade,
    // output parameters:
    struct _tds__StartFirmwareUpgradeResponse*tds__StartFirmwareUpgradeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartFirmwareUpgrade(
    struct soap *soap,
    // input parameters:
    struct _tds__StartFirmwareUpgrade*  tds__StartFirmwareUpgrade,
    // output parameters:
    struct _tds__StartFirmwareUpgradeResponse*tds__StartFirmwareUpgradeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	StartFirmwareUpgrade SOAP
//gsoap tds  service method-style:	StartFirmwareUpgrade document
//gsoap tds  service method-encoding:	StartFirmwareUpgrade literal
//gsoap tds  service method-input-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade
//gsoap tds  service method-output-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse
int __tds__StartFirmwareUpgrade(
    struct _tds__StartFirmwareUpgrade*  tds__StartFirmwareUpgrade,	///< Input parameter
    struct _tds__StartFirmwareUpgradeResponse*tds__StartFirmwareUpgradeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartSystemRestore                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartSystemRestore" of service binding "DeviceBinding".
This operation initiates a system restore from backed up configuration data using
the HTTP
				POST mechanism. The response to the command includes
an HTTP URL to which the backup
				file may be uploaded. The actual restore takes place
as soon as the HTTP POST operation
				has completed. Devices should support system restore
through the StartSystemRestore
				command. The exact format of the backup configuration
data is outside the scope of this
				specification.<br/>
				System restore over HTTP may be achieved using the
following steps:<ol>
					<li>Client calls StartSystemRestore.</li>
					<li>Server responds with upload URI.</li>
					<li>Client transmits the configuration data
to the upload URI using HTTP POST.</li>
					<li>Server applies the uploaded configuration,
then reboots if necessary.</li>
				</ol>
				If the system restore fails because the uploaded
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
system restore fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartSystemRestore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__StartSystemRestore*    tds__StartSystemRestore,
    // output parameters:
    struct _tds__StartSystemRestoreResponse*tds__StartSystemRestoreResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartSystemRestore(
    struct soap *soap,
    // input parameters:
    struct _tds__StartSystemRestore*    tds__StartSystemRestore,
    // output parameters:
    struct _tds__StartSystemRestoreResponse*tds__StartSystemRestoreResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	StartSystemRestore SOAP
//gsoap tds  service method-style:	StartSystemRestore document
//gsoap tds  service method-encoding:	StartSystemRestore literal
//gsoap tds  service method-input-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestore
//gsoap tds  service method-output-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse
int __tds__StartSystemRestore(
    struct _tds__StartSystemRestore*    tds__StartSystemRestore,	///< Input parameter
    struct _tds__StartSystemRestoreResponse*tds__StartSystemRestoreResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfigurations                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetStorageConfigurations" of service binding "DeviceBinding".

			This operation lists all existing storage configurations
for the device. 
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetStorageConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetStorageConfigurations* tds__GetStorageConfigurations,
    // output parameters:
    struct _tds__GetStorageConfigurationsResponse*tds__GetStorageConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetStorageConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tds__GetStorageConfigurations* tds__GetStorageConfigurations,
    // output parameters:
    struct _tds__GetStorageConfigurationsResponse*tds__GetStorageConfigurationsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetStorageConfigurations SOAP
//gsoap tds  service method-style:	GetStorageConfigurations document
//gsoap tds  service method-encoding:	GetStorageConfigurations literal
//gsoap tds  service method-input-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations
//gsoap tds  service method-output-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse
int __tds__GetStorageConfigurations(
    struct _tds__GetStorageConfigurations* tds__GetStorageConfigurations,	///< Input parameter
    struct _tds__GetStorageConfigurationsResponse*tds__GetStorageConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateStorageConfiguration" of service binding "DeviceBinding".

			This operation creates a new storage configuration. 
			The configuration data shall be created in the device and
shall be persistent (remain after reboot).
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateStorageConfiguration* tds__CreateStorageConfiguration,
    // output parameters:
    struct _tds__CreateStorageConfigurationResponse*tds__CreateStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateStorageConfiguration* tds__CreateStorageConfiguration,
    // output parameters:
    struct _tds__CreateStorageConfigurationResponse*tds__CreateStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateStorageConfiguration SOAP
//gsoap tds  service method-style:	CreateStorageConfiguration document
//gsoap tds  service method-encoding:	CreateStorageConfiguration literal
//gsoap tds  service method-input-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration
//gsoap tds  service method-output-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse
int __tds__CreateStorageConfiguration(
    struct _tds__CreateStorageConfiguration* tds__CreateStorageConfiguration,	///< Input parameter
    struct _tds__CreateStorageConfigurationResponse*tds__CreateStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetStorageConfiguration" of service binding "DeviceBinding".

			This operation retrieves the Storage configuration associated
with the given storage configuration token.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetStorageConfiguration* tds__GetStorageConfiguration,
    // output parameters:
    struct _tds__GetStorageConfigurationResponse*tds__GetStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetStorageConfiguration* tds__GetStorageConfiguration,
    // output parameters:
    struct _tds__GetStorageConfigurationResponse*tds__GetStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetStorageConfiguration SOAP
//gsoap tds  service method-style:	GetStorageConfiguration document
//gsoap tds  service method-encoding:	GetStorageConfiguration literal
//gsoap tds  service method-input-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration
//gsoap tds  service method-output-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse
int __tds__GetStorageConfiguration(
    struct _tds__GetStorageConfiguration* tds__GetStorageConfiguration,	///< Input parameter
    struct _tds__GetStorageConfigurationResponse*tds__GetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetStorageConfiguration" of service binding "DeviceBinding".

			This operation modifies an existing Storage configuration.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetStorageConfiguration* tds__SetStorageConfiguration,
    // output parameters:
    struct _tds__SetStorageConfigurationResponse*tds__SetStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetStorageConfiguration* tds__SetStorageConfiguration,
    // output parameters:
    struct _tds__SetStorageConfigurationResponse*tds__SetStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetStorageConfiguration SOAP
//gsoap tds  service method-style:	SetStorageConfiguration document
//gsoap tds  service method-encoding:	SetStorageConfiguration literal
//gsoap tds  service method-input-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration
//gsoap tds  service method-output-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse
int __tds__SetStorageConfiguration(
    struct _tds__SetStorageConfiguration* tds__SetStorageConfiguration,	///< Input parameter
    struct _tds__SetStorageConfigurationResponse*tds__SetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteStorageConfiguration" of service binding "DeviceBinding".

			This operation deletes the given storage configuration and
configuration change shall always be persistent.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteStorageConfiguration* tds__DeleteStorageConfiguration,
    // output parameters:
    struct _tds__DeleteStorageConfigurationResponse*tds__DeleteStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteStorageConfiguration* tds__DeleteStorageConfiguration,
    // output parameters:
    struct _tds__DeleteStorageConfigurationResponse*tds__DeleteStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteStorageConfiguration SOAP
//gsoap tds  service method-style:	DeleteStorageConfiguration document
//gsoap tds  service method-encoding:	DeleteStorageConfiguration literal
//gsoap tds  service method-input-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration
//gsoap tds  service method-output-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse
int __tds__DeleteStorageConfiguration(
    struct _tds__DeleteStorageConfiguration* tds__DeleteStorageConfiguration,	///< Input parameter
    struct _tds__DeleteStorageConfigurationResponse*tds__DeleteStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetGeoLocation                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetGeoLocation" of service binding "DeviceBinding".

				This operation lists all existing geo location configurations
for the device. 
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetGeoLocation*        tds__GetGeoLocation,
    // output parameters:
    struct _tds__GetGeoLocationResponse*tds__GetGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetGeoLocation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetGeoLocation*        tds__GetGeoLocation,
    // output parameters:
    struct _tds__GetGeoLocationResponse*tds__GetGeoLocationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetGeoLocation SOAP
//gsoap tds  service method-style:	GetGeoLocation document
//gsoap tds  service method-encoding:	GetGeoLocation literal
//gsoap tds  service method-input-action:	GetGeoLocation http://www.onvif.org/ver10/device/wsdl/GetGeoLocation
//gsoap tds  service method-output-action:	GetGeoLocation http://www.onvif.org/ver10/device/wsdl/GetGeoLocationResponse
int __tds__GetGeoLocation(
    struct _tds__GetGeoLocation*        tds__GetGeoLocation,	///< Input parameter
    struct _tds__GetGeoLocationResponse*tds__GetGeoLocationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetGeoLocation                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetGeoLocation" of service binding "DeviceBinding".

				This operation allows to modify one or more geo
configuration entries.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetGeoLocation*        tds__SetGeoLocation,
    // output parameters:
    struct _tds__SetGeoLocationResponse*tds__SetGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetGeoLocation(
    struct soap *soap,
    // input parameters:
    struct _tds__SetGeoLocation*        tds__SetGeoLocation,
    // output parameters:
    struct _tds__SetGeoLocationResponse*tds__SetGeoLocationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetGeoLocation SOAP
//gsoap tds  service method-style:	SetGeoLocation document
//gsoap tds  service method-encoding:	SetGeoLocation literal
//gsoap tds  service method-input-action:	SetGeoLocation http://www.onvif.org/ver10/device/wsdl/SetGeoLocation
//gsoap tds  service method-output-action:	SetGeoLocation http://www.onvif.org/ver10/device/wsdl/SetGeoLocationResponse
int __tds__SetGeoLocation(
    struct _tds__SetGeoLocation*        tds__SetGeoLocation,	///< Input parameter
    struct _tds__SetGeoLocationResponse*tds__SetGeoLocationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteGeoLocation                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteGeoLocation" of service binding "DeviceBinding".

				This operation deletes the given geo location entries.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteGeoLocation*     tds__DeleteGeoLocation,
    // output parameters:
    struct _tds__DeleteGeoLocationResponse*tds__DeleteGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteGeoLocation(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteGeoLocation*     tds__DeleteGeoLocation,
    // output parameters:
    struct _tds__DeleteGeoLocationResponse*tds__DeleteGeoLocationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteGeoLocation SOAP
//gsoap tds  service method-style:	DeleteGeoLocation document
//gsoap tds  service method-encoding:	DeleteGeoLocation literal
//gsoap tds  service method-input-action:	DeleteGeoLocation http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation
//gsoap tds  service method-output-action:	DeleteGeoLocation http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocationResponse
int __tds__DeleteGeoLocation(
    struct _tds__DeleteGeoLocation*     tds__DeleteGeoLocation,	///< Input parameter
    struct _tds__DeleteGeoLocationResponse*tds__DeleteGeoLocationResponse	///< Output parameter
);

/** @page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_policy_enablers Policy Enablers of Binding "DeviceBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PullPointSubscriptionBinding                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__PullMessages                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__PullMessages" of service binding "PullPointSubscriptionBinding".

				This method pulls one or more messages from a PullPoint.
				The device shall provide the following PullMessages
command for all SubscriptionManager
				endpoints returned by the CreatePullPointSubscription
command. This method shall not wait until
				the requested number of messages is available but
return as soon as at least one message is available.<br/>
				The command shall at least support a Timeout of
one minute. In case a device supports retrieval of less messages 
				than requested it shall return these without generating
a fault.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequestResponse"

  - Output Fault: "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__PullMessages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__PullMessages*          tev__PullMessages,
    // output parameters:
    struct _tev__PullMessagesResponse  *tev__PullMessagesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__PullMessages(
    struct soap *soap,
    // input parameters:
    struct _tev__PullMessages*          tev__PullMessages,
    // output parameters:
    struct _tev__PullMessagesResponse  *tev__PullMessagesResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	PullMessages SOAP
//gsoap tev  service method-style:	PullMessages document
//gsoap tev  service method-encoding:	PullMessages literal
//gsoap tev  service method-input-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest
//gsoap tev  service method-output-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequestResponse
//gsoap tev  service method-fault:	PullMessages tev__PullMessagesFaultResponse
int __tev__PullMessages(
    struct _tev__PullMessages*          tev__PullMessages,	///< Input parameter
    struct _tev__PullMessagesResponse  *tev__PullMessagesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Seek                                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Seek" of service binding "PullPointSubscriptionBinding".

				This method readjusts the pull pointer into the
past.
				A device supporting persistent notification storage
shall provide the
				following Seek command for all SubscriptionManager
endpoints returned by
				the CreatePullPointSubscription command. The optional
Reverse argument can
				be used to reverse the pull direction of the PullMessages
command.<br/>
				The UtcTime argument will be matched against the
UtcTime attribute on a
				NotificationMessage.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Seek(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__Seek*                  tev__Seek,
    // output parameters:
    struct _tev__SeekResponse          *tev__SeekResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Seek(
    struct soap *soap,
    // input parameters:
    struct _tev__Seek*                  tev__Seek,
    // output parameters:
    struct _tev__SeekResponse          *tev__SeekResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Seek SOAP
//gsoap tev  service method-style:	Seek document
//gsoap tev  service method-encoding:	Seek literal
//gsoap tev  service method-input-action:	Seek http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest
//gsoap tev  service method-output-action:	Seek http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequestResponse
int __tev__Seek(
    struct _tev__Seek*                  tev__Seek,	///< Input parameter
    struct _tev__SeekResponse          *tev__SeekResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__SetSynchronizationPoint" of service binding "PullPointSubscriptionBinding".
Properties inform a client about property creation, changes and
				deletion in a uniform way. When a client wants to
synchronize its properties with the
				properties of the device, it can request a synchronization
point which repeats the current
				status of all properties to which a client has subscribed.
The PropertyOperation of all
				produced notifications is set to Initialized.
The Synchronization Point is
				requested directly from the SubscriptionManager
which was returned in either the
				SubscriptionResponse or in the CreatePullPointSubscriptionResponse.
The property update is
				transmitted via the notification transportation
of the notification interface. This method is mandatory.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__SetSynchronizationPoint* tev__SetSynchronizationPoint,
    // output parameters:
    struct _tev__SetSynchronizationPointResponse*tev__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__SetSynchronizationPoint(
    struct soap *soap,
    // input parameters:
    struct _tev__SetSynchronizationPoint* tev__SetSynchronizationPoint,
    // output parameters:
    struct _tev__SetSynchronizationPointResponse*tev__SetSynchronizationPointResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap tev  service method-style:	SetSynchronizationPoint document
//gsoap tev  service method-encoding:	SetSynchronizationPoint literal
//gsoap tev  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest
//gsoap tev  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequestResponse
int __tev__SetSynchronizationPoint(
    struct _tev__SetSynchronizationPoint* tev__SetSynchronizationPoint,	///< Input parameter
    struct _tev__SetSynchronizationPointResponse*tev__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Unsubscribe" of service binding "PullPointSubscriptionBinding".
The device shall provide the following Unsubscribe command for all SubscriptionManager
endpoints returned by the CreatePullPointSubscription command.<br/>
				This command shall terminate the lifetime of a pull
point.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Unsubscribe SOAP
//gsoap tev  service method-style:	Unsubscribe document
//gsoap tev  service method-encoding:	Unsubscribe literal
//gsoap tev  service method-input-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe(
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,	///< Input parameter
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetServiceCapabilities" of service binding "PullPointSubscriptionBinding".
Returns the capabilities of the event service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__GetServiceCapabilities* tev__GetServiceCapabilities,
    // output parameters:
    struct _tev__GetServiceCapabilitiesResponse*tev__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tev__GetServiceCapabilities* tev__GetServiceCapabilities,
    // output parameters:
    struct _tev__GetServiceCapabilitiesResponse*tev__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tev  service method-style:	GetServiceCapabilities document
//gsoap tev  service method-encoding:	GetServiceCapabilities literal
//gsoap tev  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest
//gsoap tev  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequestResponse
int __tev__GetServiceCapabilities(
    struct _tev__GetServiceCapabilities* tev__GetServiceCapabilities,	///< Input parameter
    struct _tev__GetServiceCapabilitiesResponse*tev__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__CreatePullPointSubscription                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__CreatePullPointSubscription" of service binding "PullPointSubscriptionBinding".
This method returns a PullPointSubscription that can be polled using PullMessages.

				This message contains the same elements as the SubscriptionRequest
of the WS-BaseNotification without the ConsumerReference.<br/>
				If no Filter is specified the pullpoint notifies
all occurring events to the client.<br/>
				This method is mandatory.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__CreatePullPointSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__CreatePullPointSubscription* tev__CreatePullPointSubscription,
    // output parameters:
    struct _tev__CreatePullPointSubscriptionResponse*tev__CreatePullPointSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__CreatePullPointSubscription(
    struct soap *soap,
    // input parameters:
    struct _tev__CreatePullPointSubscription* tev__CreatePullPointSubscription,
    // output parameters:
    struct _tev__CreatePullPointSubscriptionResponse*tev__CreatePullPointSubscriptionResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	CreatePullPointSubscription SOAP
//gsoap tev  service method-style:	CreatePullPointSubscription document
//gsoap tev  service method-encoding:	CreatePullPointSubscription literal
//gsoap tev  service method-input-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest
//gsoap tev  service method-output-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequestResponse
//gsoap tev  service method-fault:	CreatePullPointSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidFilterFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidProducerPropertiesExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidMessageContentExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnacceptableInitialTerminationTimeFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnrecognizedPolicyRequestFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnsupportedPolicyRequestFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__NotifyMessageNotSupportedFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__SubscribeCreationFailedFault
int __tev__CreatePullPointSubscription(
    struct _tev__CreatePullPointSubscription* tev__CreatePullPointSubscription,	///< Input parameter
    struct _tev__CreatePullPointSubscriptionResponse*tev__CreatePullPointSubscriptionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetEventProperties                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetEventProperties" of service binding "PullPointSubscriptionBinding".
The WS-BaseNotification specification defines a set of OPTIONAL WS-ResouceProperties.
				This specification does not require the implementation
of the WS-ResourceProperty interface.
				Instead, the subsequent direct interface shall be
implemented by an ONVIF compliant device
				in order to provide information about the FilterDialects,
Schema files and topics supported by
				the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetEventProperties(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__GetEventProperties*    tev__GetEventProperties,
    // output parameters:
    struct _tev__GetEventPropertiesResponse*tev__GetEventPropertiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetEventProperties(
    struct soap *soap,
    // input parameters:
    struct _tev__GetEventProperties*    tev__GetEventProperties,
    // output parameters:
    struct _tev__GetEventPropertiesResponse*tev__GetEventPropertiesResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	GetEventProperties SOAP
//gsoap tev  service method-style:	GetEventProperties document
//gsoap tev  service method-encoding:	GetEventProperties literal
//gsoap tev  service method-input-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest
//gsoap tev  service method-output-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequestResponse
int __tev__GetEventProperties(
    struct _tev__GetEventProperties*    tev__GetEventProperties,	///< Input parameter
    struct _tev__GetEventPropertiesResponse*tev__GetEventPropertiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Renew                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Renew" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Renew(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Renew*                wsnt__Renew,
    // output parameters:
    struct _wsnt__RenewResponse        *wsnt__RenewResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Renew(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Renew*                wsnt__Renew,
    // output parameters:
    struct _wsnt__RenewResponse        *wsnt__RenewResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Renew SOAP
//gsoap tev  service method-style:	Renew document
//gsoap tev  service method-encoding:	Renew literal
//gsoap tev  service method-input-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest
//gsoap tev  service method-output-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequestResponse
//gsoap tev  service method-fault:	Renew wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Renew wsnt__UnacceptableTerminationTimeFault
int __tev__Renew(
    struct _wsnt__Renew*                wsnt__Renew,	///< Input parameter
    struct _wsnt__RenewResponse        *wsnt__RenewResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe_                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Unsubscribe_" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe_(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Unsubscribe_ SOAP
//gsoap tev  service method-style:	Unsubscribe_ document
//gsoap tev  service method-encoding:	Unsubscribe_ literal
//gsoap tev  service method-input-action:	Unsubscribe_ http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe_ http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe_ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe_ wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe_(
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,	///< Input parameter
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Subscribe                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Subscribe" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Subscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Subscribe*            wsnt__Subscribe,
    // output parameters:
    struct _wsnt__SubscribeResponse    *wsnt__SubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Subscribe(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Subscribe*            wsnt__Subscribe,
    // output parameters:
    struct _wsnt__SubscribeResponse    *wsnt__SubscribeResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Subscribe SOAP
//gsoap tev  service method-style:	Subscribe document
//gsoap tev  service method-encoding:	Subscribe literal
//gsoap tev  service method-input-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest
//gsoap tev  service method-output-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequestResponse
//gsoap tev  service method-fault:	Subscribe wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidFilterFault
//gsoap tev  service method-fault:	Subscribe wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidProducerPropertiesExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidMessageContentExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnacceptableInitialTerminationTimeFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnrecognizedPolicyRequestFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnsupportedPolicyRequestFault
//gsoap tev  service method-fault:	Subscribe wsnt__NotifyMessageNotSupportedFault
//gsoap tev  service method-fault:	Subscribe wsnt__SubscribeCreationFailedFault
int __tev__Subscribe(
    struct _wsnt__Subscribe*            wsnt__Subscribe,	///< Input parameter
    struct _wsnt__SubscribeResponse    *wsnt__SubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetCurrentMessage                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetCurrentMessage" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetCurrentMessage(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__GetCurrentMessage*    wsnt__GetCurrentMessage,
    // output parameters:
    struct _wsnt__GetCurrentMessageResponse*wsnt__GetCurrentMessageResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetCurrentMessage(
    struct soap *soap,
    // input parameters:
    struct _wsnt__GetCurrentMessage*    wsnt__GetCurrentMessage,
    // output parameters:
    struct _wsnt__GetCurrentMessageResponse*wsnt__GetCurrentMessageResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	GetCurrentMessage SOAP
//gsoap tev  service method-style:	GetCurrentMessage document
//gsoap tev  service method-encoding:	GetCurrentMessage literal
//gsoap tev  service method-input-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest
//gsoap tev  service method-output-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequestResponse
//gsoap tev  service method-fault:	GetCurrentMessage wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__NoCurrentMessageOnTopicFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__MultipleTopicsSpecifiedFault
int __tev__GetCurrentMessage(
    struct _wsnt__GetCurrentMessage*    wsnt__GetCurrentMessage,	///< Input parameter
    struct _wsnt__GetCurrentMessageResponse*wsnt__GetCurrentMessageResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Notify                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Notify" of service binding "PullPointSubscriptionBinding".

  - One-way service request message

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_send___tev__Notify(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Notify*               wsnt__Notify,
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Notify(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Notify*               wsnt__Notify,
    // output parameters:
  );
@endcode

*/

//gsoap tev  service method-protocol:	Notify SOAP
//gsoap tev  service method-style:	Notify document
//gsoap tev  service method-encoding:	Notify literal
//gsoap tev  service method-input-action:	Notify http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify
int __tev__Notify(
    struct _wsnt__Notify*               wsnt__Notify,	///< Input parameter
    void	///< One-way message: no output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetMessages                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetMessages" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetMessages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__GetMessages*          wsnt__GetMessages,
    // output parameters:
    struct _wsnt__GetMessagesResponse  *wsnt__GetMessagesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetMessages(
    struct soap *soap,
    // input parameters:
    struct _wsnt__GetMessages*          wsnt__GetMessages,
    // output parameters:
    struct _wsnt__GetMessagesResponse  *wsnt__GetMessagesResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	GetMessages SOAP
//gsoap tev  service method-style:	GetMessages document
//gsoap tev  service method-encoding:	GetMessages literal
//gsoap tev  service method-input-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest
//gsoap tev  service method-output-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequestResponse
//gsoap tev  service method-fault:	GetMessages wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	GetMessages wsnt__UnableToGetMessagesFault
int __tev__GetMessages(
    struct _wsnt__GetMessages*          wsnt__GetMessages,	///< Input parameter
    struct _wsnt__GetMessagesResponse  *wsnt__GetMessagesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__DestroyPullPoint                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__DestroyPullPoint" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__DestroyPullPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__DestroyPullPoint*     wsnt__DestroyPullPoint,
    // output parameters:
    struct _wsnt__DestroyPullPointResponse*wsnt__DestroyPullPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__DestroyPullPoint(
    struct soap *soap,
    // input parameters:
    struct _wsnt__DestroyPullPoint*     wsnt__DestroyPullPoint,
    // output parameters:
    struct _wsnt__DestroyPullPointResponse*wsnt__DestroyPullPointResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	DestroyPullPoint SOAP
//gsoap tev  service method-style:	DestroyPullPoint document
//gsoap tev  service method-encoding:	DestroyPullPoint literal
//gsoap tev  service method-input-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest
//gsoap tev  service method-output-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequestResponse
//gsoap tev  service method-fault:	DestroyPullPoint wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	DestroyPullPoint wsnt__UnableToDestroyPullPointFault
int __tev__DestroyPullPoint(
    struct _wsnt__DestroyPullPoint*     wsnt__DestroyPullPoint,	///< Input parameter
    struct _wsnt__DestroyPullPointResponse*wsnt__DestroyPullPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Notify_                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Notify_" of service binding "PullPointSubscriptionBinding".

  - One-way service request message

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_send___tev__Notify_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Notify*               wsnt__Notify,
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Notify_(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Notify*               wsnt__Notify,
    // output parameters:
  );
@endcode

*/

//gsoap tev  service method-protocol:	Notify_ SOAP
//gsoap tev  service method-style:	Notify_ document
//gsoap tev  service method-encoding:	Notify_ literal
//gsoap tev  service method-input-action:	Notify_ http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify
int __tev__Notify_(
    struct _wsnt__Notify*               wsnt__Notify,	///< Input parameter
    void	///< One-way message: no output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__CreatePullPoint                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__CreatePullPoint" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__CreatePullPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__CreatePullPoint*      wsnt__CreatePullPoint,
    // output parameters:
    struct _wsnt__CreatePullPointResponse*wsnt__CreatePullPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__CreatePullPoint(
    struct soap *soap,
    // input parameters:
    struct _wsnt__CreatePullPoint*      wsnt__CreatePullPoint,
    // output parameters:
    struct _wsnt__CreatePullPointResponse*wsnt__CreatePullPointResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	CreatePullPoint SOAP
//gsoap tev  service method-style:	CreatePullPoint document
//gsoap tev  service method-encoding:	CreatePullPoint literal
//gsoap tev  service method-input-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest
//gsoap tev  service method-output-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequestResponse
//gsoap tev  service method-fault:	CreatePullPoint wsnt__UnableToCreatePullPointFault
int __tev__CreatePullPoint(
    struct _wsnt__CreatePullPoint*      wsnt__CreatePullPoint,	///< Input parameter
    struct _wsnt__CreatePullPointResponse*wsnt__CreatePullPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Renew_                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Renew_" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Renew_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Renew*                wsnt__Renew,
    // output parameters:
    struct _wsnt__RenewResponse        *wsnt__RenewResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Renew_(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Renew*                wsnt__Renew,
    // output parameters:
    struct _wsnt__RenewResponse        *wsnt__RenewResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Renew_ SOAP
//gsoap tev  service method-style:	Renew_ document
//gsoap tev  service method-encoding:	Renew_ literal
//gsoap tev  service method-input-action:	Renew_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest
//gsoap tev  service method-output-action:	Renew_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequestResponse
//gsoap tev  service method-fault:	Renew_ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Renew_ wsnt__UnacceptableTerminationTimeFault
int __tev__Renew_(
    struct _wsnt__Renew*                wsnt__Renew,	///< Input parameter
    struct _wsnt__RenewResponse        *wsnt__RenewResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe__                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Unsubscribe__" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe__(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe__(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Unsubscribe__ SOAP
//gsoap tev  service method-style:	Unsubscribe__ document
//gsoap tev  service method-encoding:	Unsubscribe__ literal
//gsoap tev  service method-input-action:	Unsubscribe__ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe__ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe__ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe__ wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe__(
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,	///< Input parameter
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__PauseSubscription                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__PauseSubscription" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__PauseSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__PauseSubscription*    wsnt__PauseSubscription,
    // output parameters:
    struct _wsnt__PauseSubscriptionResponse*wsnt__PauseSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__PauseSubscription(
    struct soap *soap,
    // input parameters:
    struct _wsnt__PauseSubscription*    wsnt__PauseSubscription,
    // output parameters:
    struct _wsnt__PauseSubscriptionResponse*wsnt__PauseSubscriptionResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	PauseSubscription SOAP
//gsoap tev  service method-style:	PauseSubscription document
//gsoap tev  service method-encoding:	PauseSubscription literal
//gsoap tev  service method-input-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest
//gsoap tev  service method-output-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequestResponse
//gsoap tev  service method-fault:	PauseSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	PauseSubscription wsnt__PauseFailedFault
int __tev__PauseSubscription(
    struct _wsnt__PauseSubscription*    wsnt__PauseSubscription,	///< Input parameter
    struct _wsnt__PauseSubscriptionResponse*wsnt__PauseSubscriptionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__ResumeSubscription                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__ResumeSubscription" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__ResumeSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__ResumeSubscription*   wsnt__ResumeSubscription,
    // output parameters:
    struct _wsnt__ResumeSubscriptionResponse*wsnt__ResumeSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__ResumeSubscription(
    struct soap *soap,
    // input parameters:
    struct _wsnt__ResumeSubscription*   wsnt__ResumeSubscription,
    // output parameters:
    struct _wsnt__ResumeSubscriptionResponse*wsnt__ResumeSubscriptionResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	ResumeSubscription SOAP
//gsoap tev  service method-style:	ResumeSubscription document
//gsoap tev  service method-encoding:	ResumeSubscription literal
//gsoap tev  service method-input-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest
//gsoap tev  service method-output-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequestResponse
//gsoap tev  service method-fault:	ResumeSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	ResumeSubscription wsnt__ResumeFailedFault
int __tev__ResumeSubscription(
    struct _wsnt__ResumeSubscription*   wsnt__ResumeSubscription,	///< Input parameter
    struct _wsnt__ResumeSubscriptionResponse*wsnt__ResumeSubscriptionResponse	///< Output parameter
);

/** @page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_policy_enablers Policy Enablers of Binding "PullPointSubscriptionBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ImagingBinding                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetServiceCapabilities                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetServiceCapabilities" of service binding "ImagingBinding".
Returns the capabilities of the imaging service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__GetServiceCapabilities* timg__GetServiceCapabilities,
    // output parameters:
    struct _timg__GetServiceCapabilitiesResponse*timg__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _timg__GetServiceCapabilities* timg__GetServiceCapabilities,
    // output parameters:
    struct _timg__GetServiceCapabilitiesResponse*timg__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	GetServiceCapabilities SOAP
//gsoap timg service method-style:	GetServiceCapabilities document
//gsoap timg service method-encoding:	GetServiceCapabilities literal
//gsoap timg service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities
//gsoap timg service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilitiesResponse
int __timg__GetServiceCapabilities(
    struct _timg__GetServiceCapabilities* timg__GetServiceCapabilities,	///< Input parameter
    struct _timg__GetServiceCapabilitiesResponse*timg__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetImagingSettings                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetImagingSettings" of service binding "ImagingBinding".
Get the ImagingConfiguration for the requested VideoSource.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetImagingSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__GetImagingSettings*   timg__GetImagingSettings,
    // output parameters:
    struct _timg__GetImagingSettingsResponse*timg__GetImagingSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetImagingSettings(
    struct soap *soap,
    // input parameters:
    struct _timg__GetImagingSettings*   timg__GetImagingSettings,
    // output parameters:
    struct _timg__GetImagingSettingsResponse*timg__GetImagingSettingsResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	GetImagingSettings SOAP
//gsoap timg service method-style:	GetImagingSettings document
//gsoap timg service method-encoding:	GetImagingSettings literal
//gsoap timg service method-input-action:	GetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings
//gsoap timg service method-output-action:	GetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettingsResponse
int __timg__GetImagingSettings(
    struct _timg__GetImagingSettings*   timg__GetImagingSettings,	///< Input parameter
    struct _timg__GetImagingSettingsResponse*timg__GetImagingSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__SetImagingSettings                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__SetImagingSettings" of service binding "ImagingBinding".
Set the ImagingConfiguration for the requested VideoSource.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__SetImagingSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__SetImagingSettings*   timg__SetImagingSettings,
    // output parameters:
    struct _timg__SetImagingSettingsResponse*timg__SetImagingSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__SetImagingSettings(
    struct soap *soap,
    // input parameters:
    struct _timg__SetImagingSettings*   timg__SetImagingSettings,
    // output parameters:
    struct _timg__SetImagingSettingsResponse*timg__SetImagingSettingsResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	SetImagingSettings SOAP
//gsoap timg service method-style:	SetImagingSettings document
//gsoap timg service method-encoding:	SetImagingSettings literal
//gsoap timg service method-input-action:	SetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings
//gsoap timg service method-output-action:	SetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettingsResponse
int __timg__SetImagingSettings(
    struct _timg__SetImagingSettings*   timg__SetImagingSettings,	///< Input parameter
    struct _timg__SetImagingSettingsResponse*timg__SetImagingSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetOptions                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetOptions" of service binding "ImagingBinding".
This operation gets the valid ranges for the imaging parameters that have device
specific ranges. 
			This command is mandatory for all device implementing the
imaging service. The command returns all supported parameters and their ranges

			such that these can be applied to the SetImagingSettings
command.<br/>
			For read-only parameters which cannot be modified via the
SetImagingSettings command only a single option or identical Min and Max values

			is provided.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/GetOptions"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetOptions"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__GetOptions*           timg__GetOptions,
    // output parameters:
    struct _timg__GetOptionsResponse   *timg__GetOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetOptions(
    struct soap *soap,
    // input parameters:
    struct _timg__GetOptions*           timg__GetOptions,
    // output parameters:
    struct _timg__GetOptionsResponse   *timg__GetOptionsResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	GetOptions SOAP
//gsoap timg service method-style:	GetOptions document
//gsoap timg service method-encoding:	GetOptions literal
//gsoap timg service method-input-action:	GetOptions http://www.onvif.org/ver20/imaging/wsdl/GetOptions
//gsoap timg service method-output-action:	GetOptions http://www.onvif.org/ver20/imaging/wsdl/GetOptionsResponse
int __timg__GetOptions(
    struct _timg__GetOptions*           timg__GetOptions,	///< Input parameter
    struct _timg__GetOptionsResponse   *timg__GetOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__Move                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__Move" of service binding "ImagingBinding".
The Move command moves the focus lens in an absolute, a relative or in a continuous
manner from its current position. 
			The speed argument is optional for absolute and relative
control, but required for continuous. If no speed argument is used, the default
speed is used. 
			Focus adjustments through this operation will turn off the
autofocus. A device with support for remote focus control should support absolute,

			relative or continuous control through the Move operation.
The supported MoveOpions are signalled via the GetMoveOptions command.
			At least one focus control capability is required for this
operation to be functional. <br/>
			The move operation contains the following commands:<br/>
				<b>Absolute</b>  Requires position parameter
and optionally takes a speed argument. A unitless type is used by default for focus
positioning and speed. Optionally, if supported, the position may be requested
in m-1 units. <br/>
				<b>Relative</b>  Requires distance parameter
and optionally takes a speed argument. Negative distance means negative direction.

			<b>Continuous</b>  Requires a speed argument. Negative
speed argument means negative direction.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/Move"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/Move"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/MoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__Move(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__Move*                 timg__Move,
    // output parameters:
    struct _timg__MoveResponse         *timg__MoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__Move(
    struct soap *soap,
    // input parameters:
    struct _timg__Move*                 timg__Move,
    // output parameters:
    struct _timg__MoveResponse         *timg__MoveResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	Move SOAP
//gsoap timg service method-style:	Move document
//gsoap timg service method-encoding:	Move literal
//gsoap timg service method-input-action:	Move http://www.onvif.org/ver20/imaging/wsdl/Move
//gsoap timg service method-output-action:	Move http://www.onvif.org/ver20/imaging/wsdl/MoveResponse
int __timg__Move(
    struct _timg__Move*                 timg__Move,	///< Input parameter
    struct _timg__MoveResponse         *timg__MoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__Stop                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__Stop" of service binding "ImagingBinding".
The Stop command stops all ongoing focus movements of the lense. A device with support
for remote focus control as signalled via 
			the GetMoveOptions supports this command. <br/>The operation
will not affect ongoing autofocus operation.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/FocusStop"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/FocusStop"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/FocusStopResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__Stop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__Stop*                 timg__Stop,
    // output parameters:
    struct _timg__StopResponse         *timg__StopResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__Stop(
    struct soap *soap,
    // input parameters:
    struct _timg__Stop*                 timg__Stop,
    // output parameters:
    struct _timg__StopResponse         *timg__StopResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	Stop SOAP
//gsoap timg service method-style:	Stop document
//gsoap timg service method-encoding:	Stop literal
//gsoap timg service method-input-action:	Stop http://www.onvif.org/ver20/imaging/wsdl/FocusStop
//gsoap timg service method-output-action:	Stop http://www.onvif.org/ver20/imaging/wsdl/FocusStopResponse
int __timg__Stop(
    struct _timg__Stop*                 timg__Stop,	///< Input parameter
    struct _timg__StopResponse         *timg__StopResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetStatus                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetStatus" of service binding "ImagingBinding".
Via this command the current status of the Move operation can be requested. Supported
for this command is available if the support for the Move operation is signalled
via GetMoveOptions.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/GetStatus"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetStatus"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__GetStatus*            timg__GetStatus,
    // output parameters:
    struct _timg__GetStatusResponse    *timg__GetStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetStatus(
    struct soap *soap,
    // input parameters:
    struct _timg__GetStatus*            timg__GetStatus,
    // output parameters:
    struct _timg__GetStatusResponse    *timg__GetStatusResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	GetStatus SOAP
//gsoap timg service method-style:	GetStatus document
//gsoap timg service method-encoding:	GetStatus literal
//gsoap timg service method-input-action:	GetStatus http://www.onvif.org/ver20/imaging/wsdl/GetStatus
//gsoap timg service method-output-action:	GetStatus http://www.onvif.org/ver20/imaging/wsdl/GetStatusResponse
int __timg__GetStatus(
    struct _timg__GetStatus*            timg__GetStatus,	///< Input parameter
    struct _timg__GetStatusResponse    *timg__GetStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetMoveOptions                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetMoveOptions" of service binding "ImagingBinding".
Imaging move operation options supported for the Video source.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetMoveOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__GetMoveOptions*       timg__GetMoveOptions,
    // output parameters:
    struct _timg__GetMoveOptionsResponse*timg__GetMoveOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetMoveOptions(
    struct soap *soap,
    // input parameters:
    struct _timg__GetMoveOptions*       timg__GetMoveOptions,
    // output parameters:
    struct _timg__GetMoveOptionsResponse*timg__GetMoveOptionsResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	GetMoveOptions SOAP
//gsoap timg service method-style:	GetMoveOptions document
//gsoap timg service method-encoding:	GetMoveOptions literal
//gsoap timg service method-input-action:	GetMoveOptions http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions
//gsoap timg service method-output-action:	GetMoveOptions http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptionsResponse
int __timg__GetMoveOptions(
    struct _timg__GetMoveOptions*       timg__GetMoveOptions,	///< Input parameter
    struct _timg__GetMoveOptionsResponse*timg__GetMoveOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetPresets                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetPresets" of service binding "ImagingBinding".
Via this command the list of available Imaging Presets can be requested.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/GetPresets"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetPresets"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetPresetsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetPresets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__GetPresets*           timg__GetPresets,
    // output parameters:
    struct _timg__GetPresetsResponse   *timg__GetPresetsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetPresets(
    struct soap *soap,
    // input parameters:
    struct _timg__GetPresets*           timg__GetPresets,
    // output parameters:
    struct _timg__GetPresetsResponse   *timg__GetPresetsResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	GetPresets SOAP
//gsoap timg service method-style:	GetPresets document
//gsoap timg service method-encoding:	GetPresets literal
//gsoap timg service method-input-action:	GetPresets http://www.onvif.org/ver20/imaging/wsdl/GetPresets
//gsoap timg service method-output-action:	GetPresets http://www.onvif.org/ver20/imaging/wsdl/GetPresetsResponse
int __timg__GetPresets(
    struct _timg__GetPresets*           timg__GetPresets,	///< Input parameter
    struct _timg__GetPresetsResponse   *timg__GetPresetsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetCurrentPreset                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetCurrentPreset" of service binding "ImagingBinding".
Via this command the last Imaging Preset applied can be requested. 
			If the camera configuration does not match any of the existing
Imaging Presets, the output of GetCurrentPreset shall be Empty.
			GetCurrentPreset shall return 0 if Imaging Presets are not
supported by the Video Source.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPreset"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPreset"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetCurrentPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__GetCurrentPreset*     timg__GetCurrentPreset,
    // output parameters:
    struct _timg__GetCurrentPresetResponse*timg__GetCurrentPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetCurrentPreset(
    struct soap *soap,
    // input parameters:
    struct _timg__GetCurrentPreset*     timg__GetCurrentPreset,
    // output parameters:
    struct _timg__GetCurrentPresetResponse*timg__GetCurrentPresetResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	GetCurrentPreset SOAP
//gsoap timg service method-style:	GetCurrentPreset document
//gsoap timg service method-encoding:	GetCurrentPreset literal
//gsoap timg service method-input-action:	GetCurrentPreset http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPreset
//gsoap timg service method-output-action:	GetCurrentPreset http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPresetResponse
int __timg__GetCurrentPreset(
    struct _timg__GetCurrentPreset*     timg__GetCurrentPreset,	///< Input parameter
    struct _timg__GetCurrentPresetResponse*timg__GetCurrentPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__SetCurrentPreset                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__SetCurrentPreset" of service binding "ImagingBinding".
The SetCurrentPreset command shall request a given Imaging Preset to be applied
to the specified Video Source.
			SetCurrentPreset shall only be available for Video Sources
with Imaging Presets Capability. 
			Imaging Presets are defined by the Manufacturer, and offered
as a tool to simplify Imaging Settings adjustments for specific scene content.
			When the new Imaging Preset is applied by SetCurrentPreset,
the Device shall adjust the Video Source settings to match those defined by the
specified Imaging Preset.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPreset"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPreset"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__SetCurrentPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__SetCurrentPreset*     timg__SetCurrentPreset,
    // output parameters:
    struct _timg__SetCurrentPresetResponse*timg__SetCurrentPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__SetCurrentPreset(
    struct soap *soap,
    // input parameters:
    struct _timg__SetCurrentPreset*     timg__SetCurrentPreset,
    // output parameters:
    struct _timg__SetCurrentPresetResponse*timg__SetCurrentPresetResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	SetCurrentPreset SOAP
//gsoap timg service method-style:	SetCurrentPreset document
//gsoap timg service method-encoding:	SetCurrentPreset literal
//gsoap timg service method-input-action:	SetCurrentPreset http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPreset
//gsoap timg service method-output-action:	SetCurrentPreset http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPresetResponse
int __timg__SetCurrentPreset(
    struct _timg__SetCurrentPreset*     timg__SetCurrentPreset,	///< Input parameter
    struct _timg__SetCurrentPresetResponse*timg__SetCurrentPresetResponse	///< Output parameter
);

/** @page ImagingBinding Binding "ImagingBinding"

@section ImagingBinding_policy_enablers Policy Enablers of Binding "ImagingBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceIOBinding                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetServiceCapabilities" of service binding "DeviceIOBinding".
Returns the capabilities of the device IO service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetServiceCapabilities* tmd__GetServiceCapabilities,
    // output parameters:
    struct _tmd__GetServiceCapabilitiesResponse*tmd__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetServiceCapabilities* tmd__GetServiceCapabilities,
    // output parameters:
    struct _tmd__GetServiceCapabilitiesResponse*tmd__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tmd  service method-style:	GetServiceCapabilities document
//gsoap tmd  service method-encoding:	GetServiceCapabilities literal
//gsoap tmd  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities
//gsoap tmd  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilitiesResponse
int __tmd__GetServiceCapabilities(
    struct _tmd__GetServiceCapabilities* tmd__GetServiceCapabilities,	///< Input parameter
    struct _tmd__GetServiceCapabilitiesResponse*tmd__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetRelayOutputOptions                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetRelayOutputOptions" of service binding "DeviceIOBinding".
Request the available settings and ranges for one or all relay outputs. A device
that has one or more RelayOutputs should support this command.<br/>
				Two examples that illustrate usage:
				<ul>
					<li>
					1) Device supports range PT1S to PT120S:
					<pre>
<tmd:RelayOutputOptions token='44'>
  <tmd:Mode>Monostable</tmd:Mode>
  <tmd:DelayTimes>1 120</tmd:DelayTimes>
</tmd:RelayOutputOptions>
							</pre>
					</li>
					<li>
					2) Device supports values PT0.5S, PT1S,
PT2s and PT1M:
					<pre>
<tmd:RelayOutputOptions token='123'>
  <tmd:Mode>Monostable</tmd:Mode>
  <tmd:DelayTimes>0.5 1 2 60</tmd:DelayTimes>
  <tmd:Discrete>True</tmd:Discrete>
</tmd:RelayOutputOptions>
								</pre>
					</li>
				</ul>
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetRelayOutputOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetRelayOutputOptions* tmd__GetRelayOutputOptions,
    // output parameters:
    struct _tmd__GetRelayOutputOptionsResponse*tmd__GetRelayOutputOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetRelayOutputOptions(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetRelayOutputOptions* tmd__GetRelayOutputOptions,
    // output parameters:
    struct _tmd__GetRelayOutputOptionsResponse*tmd__GetRelayOutputOptionsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetRelayOutputOptions SOAP
//gsoap tmd  service method-style:	GetRelayOutputOptions document
//gsoap tmd  service method-encoding:	GetRelayOutputOptions literal
//gsoap tmd  service method-input-action:	GetRelayOutputOptions http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions
//gsoap tmd  service method-output-action:	GetRelayOutputOptions http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptionsResponse
int __tmd__GetRelayOutputOptions(
    struct _tmd__GetRelayOutputOptions* tmd__GetRelayOutputOptions,	///< Input parameter
    struct _tmd__GetRelayOutputOptionsResponse*tmd__GetRelayOutputOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioSources" of service binding "DeviceIOBinding".
List all available audio sources for the device. The device that has one or more
audio sources shall support the listing of available audio inputs through the GetAudioSources
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tmd__Get*                    tmd__GetAudioSources,
    // output parameters:
    struct tmd__GetResponse            *tmd__GetAudioSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioSources(
    struct soap *soap,
    // input parameters:
    struct tmd__Get*                    tmd__GetAudioSources,
    // output parameters:
    struct tmd__GetResponse            *tmd__GetAudioSourcesResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetAudioSources SOAP
//gsoap tmd  service method-style:	GetAudioSources document
//gsoap tmd  service method-encoding:	GetAudioSources literal
//gsoap tmd  service method-input-action:	GetAudioSources http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources
//gsoap tmd  service method-output-action:	GetAudioSources http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourcesResponse
int __tmd__GetAudioSources(
    struct tmd__Get*                    tmd__GetAudioSources,	///< Input parameter
    struct tmd__GetResponse            *tmd__GetAudioSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioOutputs" of service binding "DeviceIOBinding".
List all available audio outputs of a device. A device that has one ore more physical
audio outputs shall support listing of available audio outputs through the GetAudioOutputs
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tmd__Get*                    tmd__GetAudioOutputs,
    // output parameters:
    struct tmd__GetResponse            *tmd__GetAudioOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioOutputs(
    struct soap *soap,
    // input parameters:
    struct tmd__Get*                    tmd__GetAudioOutputs,
    // output parameters:
    struct tmd__GetResponse            *tmd__GetAudioOutputsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetAudioOutputs SOAP
//gsoap tmd  service method-style:	GetAudioOutputs document
//gsoap tmd  service method-encoding:	GetAudioOutputs literal
//gsoap tmd  service method-input-action:	GetAudioOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs
//gsoap tmd  service method-output-action:	GetAudioOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputsResponse
int __tmd__GetAudioOutputs(
    struct tmd__Get*                    tmd__GetAudioOutputs,	///< Input parameter
    struct tmd__GetResponse            *tmd__GetAudioOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoSources" of service binding "DeviceIOBinding".
List all available video sources for the device. The device that has one or more
video inputs shall support the listing of available video sources through the GetVideoSources
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tmd__Get*                    tmd__GetVideoSources,
    // output parameters:
    struct tmd__GetResponse            *tmd__GetVideoSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoSources(
    struct soap *soap,
    // input parameters:
    struct tmd__Get*                    tmd__GetVideoSources,
    // output parameters:
    struct tmd__GetResponse            *tmd__GetVideoSourcesResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetVideoSources SOAP
//gsoap tmd  service method-style:	GetVideoSources document
//gsoap tmd  service method-encoding:	GetVideoSources literal
//gsoap tmd  service method-input-action:	GetVideoSources http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources
//gsoap tmd  service method-output-action:	GetVideoSources http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourcesResponse
int __tmd__GetVideoSources(
    struct tmd__Get*                    tmd__GetVideoSources,	///< Input parameter
    struct tmd__GetResponse            *tmd__GetVideoSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoOutputs" of service binding "DeviceIOBinding".
List all available video outputs of a device. A device that has one or more physical
video outputs shall support listing of available video outputs through the GetVideoOutputs
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetVideoOutputs*       tmd__GetVideoOutputs,
    // output parameters:
    struct _tmd__GetVideoOutputsResponse*tmd__GetVideoOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoOutputs(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetVideoOutputs*       tmd__GetVideoOutputs,
    // output parameters:
    struct _tmd__GetVideoOutputsResponse*tmd__GetVideoOutputsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetVideoOutputs SOAP
//gsoap tmd  service method-style:	GetVideoOutputs document
//gsoap tmd  service method-encoding:	GetVideoOutputs literal
//gsoap tmd  service method-input-action:	GetVideoOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs
//gsoap tmd  service method-output-action:	GetVideoOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputsResponse
int __tmd__GetVideoOutputs(
    struct _tmd__GetVideoOutputs*       tmd__GetVideoOutputs,	///< Input parameter
    struct _tmd__GetVideoOutputsResponse*tmd__GetVideoOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoSourceConfiguration" of service binding "DeviceIOBinding".
Get the video source configurations of a VideoSource. A device with one or more
video sources shall support the GetVideoSourceConfigurations command.<br/>This
method is deprecated.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetVideoSourceConfiguration* tmd__GetVideoSourceConfiguration,
    // output parameters:
    struct _tmd__GetVideoSourceConfigurationResponse*tmd__GetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetVideoSourceConfiguration* tmd__GetVideoSourceConfiguration,
    // output parameters:
    struct _tmd__GetVideoSourceConfigurationResponse*tmd__GetVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetVideoSourceConfiguration SOAP
//gsoap tmd  service method-style:	GetVideoSourceConfiguration document
//gsoap tmd  service method-encoding:	GetVideoSourceConfiguration literal
//gsoap tmd  service method-input-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration
//gsoap tmd  service method-output-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationResponse
int __tmd__GetVideoSourceConfiguration(
    struct _tmd__GetVideoSourceConfiguration* tmd__GetVideoSourceConfiguration,	///< Input parameter
    struct _tmd__GetVideoSourceConfigurationResponse*tmd__GetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoOutputConfiguration" of service binding "DeviceIOBinding".
Get the configuration of a Video Output. A device that has one or more Video Outputs
shall support the retrieval of the VideoOutputConfiguration through this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetVideoOutputConfiguration* tmd__GetVideoOutputConfiguration,
    // output parameters:
    struct _tmd__GetVideoOutputConfigurationResponse*tmd__GetVideoOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetVideoOutputConfiguration* tmd__GetVideoOutputConfiguration,
    // output parameters:
    struct _tmd__GetVideoOutputConfigurationResponse*tmd__GetVideoOutputConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetVideoOutputConfiguration SOAP
//gsoap tmd  service method-style:	GetVideoOutputConfiguration document
//gsoap tmd  service method-encoding:	GetVideoOutputConfiguration literal
//gsoap tmd  service method-input-action:	GetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration
//gsoap tmd  service method-output-action:	GetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationResponse
int __tmd__GetVideoOutputConfiguration(
    struct _tmd__GetVideoOutputConfiguration* tmd__GetVideoOutputConfiguration,	///< Input parameter
    struct _tmd__GetVideoOutputConfigurationResponse*tmd__GetVideoOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioSourceConfiguration" of service binding "DeviceIOBinding".
List the configuration of an Audio Input. A device with one or more audio inputs
shall support the GetAudioSourceConfiguration command.<br/>This method is deprecated.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetAudioSourceConfiguration* tmd__GetAudioSourceConfiguration,
    // output parameters:
    struct _tmd__GetAudioSourceConfigurationResponse*tmd__GetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetAudioSourceConfiguration* tmd__GetAudioSourceConfiguration,
    // output parameters:
    struct _tmd__GetAudioSourceConfigurationResponse*tmd__GetAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetAudioSourceConfiguration SOAP
//gsoap tmd  service method-style:	GetAudioSourceConfiguration document
//gsoap tmd  service method-encoding:	GetAudioSourceConfiguration literal
//gsoap tmd  service method-input-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration
//gsoap tmd  service method-output-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationResponse
int __tmd__GetAudioSourceConfiguration(
    struct _tmd__GetAudioSourceConfiguration* tmd__GetAudioSourceConfiguration,	///< Input parameter
    struct _tmd__GetAudioSourceConfigurationResponse*tmd__GetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioOutputConfiguration" of service binding "DeviceIOBinding".
Request the current configuration of a physical Audio output. A device that has
one or more AudioOutputs shall support the retrieval of the AudioOutputConfiguration
through this command.<br/>This method is deprecated.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetAudioOutputConfiguration* tmd__GetAudioOutputConfiguration,
    // output parameters:
    struct _tmd__GetAudioOutputConfigurationResponse*tmd__GetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetAudioOutputConfiguration* tmd__GetAudioOutputConfiguration,
    // output parameters:
    struct _tmd__GetAudioOutputConfigurationResponse*tmd__GetAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetAudioOutputConfiguration SOAP
//gsoap tmd  service method-style:	GetAudioOutputConfiguration document
//gsoap tmd  service method-encoding:	GetAudioOutputConfiguration literal
//gsoap tmd  service method-input-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration
//gsoap tmd  service method-output-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationResponse
int __tmd__GetAudioOutputConfiguration(
    struct _tmd__GetAudioOutputConfiguration* tmd__GetAudioOutputConfiguration,	///< Input parameter
    struct _tmd__GetAudioOutputConfigurationResponse*tmd__GetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetVideoSourceConfiguration" of service binding "DeviceIOBinding".
Modify a video input configuration. A device that has one or more video sources
shall support the setting of the VideoSourceConfiguration through this command.<br/>This
method is deprecated.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SetVideoSourceConfiguration* tmd__SetVideoSourceConfiguration,
    // output parameters:
    struct _tmd__SetVideoSourceConfigurationResponse*tmd__SetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__SetVideoSourceConfiguration* tmd__SetVideoSourceConfiguration,
    // output parameters:
    struct _tmd__SetVideoSourceConfigurationResponse*tmd__SetVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetVideoSourceConfiguration SOAP
//gsoap tmd  service method-style:	SetVideoSourceConfiguration document
//gsoap tmd  service method-encoding:	SetVideoSourceConfiguration literal
//gsoap tmd  service method-input-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration
//gsoap tmd  service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfigurationResponse
int __tmd__SetVideoSourceConfiguration(
    struct _tmd__SetVideoSourceConfiguration* tmd__SetVideoSourceConfiguration,	///< Input parameter
    struct _tmd__SetVideoSourceConfigurationResponse*tmd__SetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetVideoOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetVideoOutputConfiguration" of service binding "DeviceIOBinding".
Modify a video output configuration. A device that has one or more video outputs
shall support the setting of its video output configuration through this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetVideoOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SetVideoOutputConfiguration* tmd__SetVideoOutputConfiguration,
    // output parameters:
    struct _tmd__SetVideoOutputConfigurationResponse*tmd__SetVideoOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetVideoOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__SetVideoOutputConfiguration* tmd__SetVideoOutputConfiguration,
    // output parameters:
    struct _tmd__SetVideoOutputConfigurationResponse*tmd__SetVideoOutputConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetVideoOutputConfiguration SOAP
//gsoap tmd  service method-style:	SetVideoOutputConfiguration document
//gsoap tmd  service method-encoding:	SetVideoOutputConfiguration literal
//gsoap tmd  service method-input-action:	SetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration
//gsoap tmd  service method-output-action:	SetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfigurationResponse
int __tmd__SetVideoOutputConfiguration(
    struct _tmd__SetVideoOutputConfiguration* tmd__SetVideoOutputConfiguration,	///< Input parameter
    struct _tmd__SetVideoOutputConfigurationResponse*tmd__SetVideoOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetAudioSourceConfiguration" of service binding "DeviceIOBinding".
Modify an audio source configuration. A device that has a one or more audio sources
shall support the setting of the AudioSourceConfiguration through this command.<br/>This
method is deprecated.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SetAudioSourceConfiguration* tmd__SetAudioSourceConfiguration,
    // output parameters:
    struct _tmd__SetAudioSourceConfigurationResponse*tmd__SetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__SetAudioSourceConfiguration* tmd__SetAudioSourceConfiguration,
    // output parameters:
    struct _tmd__SetAudioSourceConfigurationResponse*tmd__SetAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetAudioSourceConfiguration SOAP
//gsoap tmd  service method-style:	SetAudioSourceConfiguration document
//gsoap tmd  service method-encoding:	SetAudioSourceConfiguration literal
//gsoap tmd  service method-input-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration
//gsoap tmd  service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfigurationResponse
int __tmd__SetAudioSourceConfiguration(
    struct _tmd__SetAudioSourceConfiguration* tmd__SetAudioSourceConfiguration,	///< Input parameter
    struct _tmd__SetAudioSourceConfigurationResponse*tmd__SetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetAudioOutputConfiguration" of service binding "DeviceIOBinding".
Modify an audio output configuration. A device that has one ore more audio outputs
shall support the setting of the AudioOutputConfiguration through this command.<br/>This
method is deprecated.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SetAudioOutputConfiguration* tmd__SetAudioOutputConfiguration,
    // output parameters:
    struct _tmd__SetAudioOutputConfigurationResponse*tmd__SetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__SetAudioOutputConfiguration* tmd__SetAudioOutputConfiguration,
    // output parameters:
    struct _tmd__SetAudioOutputConfigurationResponse*tmd__SetAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetAudioOutputConfiguration SOAP
//gsoap tmd  service method-style:	SetAudioOutputConfiguration document
//gsoap tmd  service method-encoding:	SetAudioOutputConfiguration literal
//gsoap tmd  service method-input-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration
//gsoap tmd  service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfigurationResponse
int __tmd__SetAudioOutputConfiguration(
    struct _tmd__SetAudioOutputConfiguration* tmd__SetAudioOutputConfiguration,	///< Input parameter
    struct _tmd__SetAudioOutputConfigurationResponse*tmd__SetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoSourceConfigurationOptions" of service binding "DeviceIOBinding".
Request the VideoSourceConfigurationOptions of a VideoSource. A device with one
or more video sources shall support this command.<br/>This method is deprecated.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetVideoSourceConfigurationOptions* tmd__GetVideoSourceConfigurationOptions,
    // output parameters:
    struct _tmd__GetVideoSourceConfigurationOptionsResponse*tmd__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetVideoSourceConfigurationOptions* tmd__GetVideoSourceConfigurationOptions,
    // output parameters:
    struct _tmd__GetVideoSourceConfigurationOptionsResponse*tmd__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetVideoSourceConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetVideoSourceConfigurationOptions document
//gsoap tmd  service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions
//gsoap tmd  service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptionsResponse
int __tmd__GetVideoSourceConfigurationOptions(
    struct _tmd__GetVideoSourceConfigurationOptions* tmd__GetVideoSourceConfigurationOptions,	///< Input parameter
    struct _tmd__GetVideoSourceConfigurationOptionsResponse*tmd__GetVideoSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoOutputConfigurationOptions" of service binding "DeviceIOBinding".
Request the VideoOutputConfigurationOptions of a VideoOutput. A device that has
one or more video outputs shall support the retrieval of VideoOutputConfigurationOptions
through this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetVideoOutputConfigurationOptions* tmd__GetVideoOutputConfigurationOptions,
    // output parameters:
    struct _tmd__GetVideoOutputConfigurationOptionsResponse*tmd__GetVideoOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoOutputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetVideoOutputConfigurationOptions* tmd__GetVideoOutputConfigurationOptions,
    // output parameters:
    struct _tmd__GetVideoOutputConfigurationOptionsResponse*tmd__GetVideoOutputConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetVideoOutputConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetVideoOutputConfigurationOptions document
//gsoap tmd  service method-encoding:	GetVideoOutputConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetVideoOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions
//gsoap tmd  service method-output-action:	GetVideoOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptionsResponse
int __tmd__GetVideoOutputConfigurationOptions(
    struct _tmd__GetVideoOutputConfigurationOptions* tmd__GetVideoOutputConfigurationOptions,	///< Input parameter
    struct _tmd__GetVideoOutputConfigurationOptionsResponse*tmd__GetVideoOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioSourceConfigurationOptions" of service binding "DeviceIOBinding".
Request the AudioSourceConfigurationOptions of an AudioSource. A device with one
ore more AudioSources shall support this command.<br/>This method is deprecated.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetAudioSourceConfigurationOptions* tmd__GetAudioSourceConfigurationOptions,
    // output parameters:
    struct _tmd__GetAudioSourceConfigurationOptionsResponse*tmd__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetAudioSourceConfigurationOptions* tmd__GetAudioSourceConfigurationOptions,
    // output parameters:
    struct _tmd__GetAudioSourceConfigurationOptionsResponse*tmd__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetAudioSourceConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetAudioSourceConfigurationOptions document
//gsoap tmd  service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions
//gsoap tmd  service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptionsResponse
int __tmd__GetAudioSourceConfigurationOptions(
    struct _tmd__GetAudioSourceConfigurationOptions* tmd__GetAudioSourceConfigurationOptions,	///< Input parameter
    struct _tmd__GetAudioSourceConfigurationOptionsResponse*tmd__GetAudioSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioOutputConfigurationOptions" of service binding "DeviceIOBinding".
Request the available settings and ranges for a physical Audio output. A device
that has one or more AudioOutputs shall support this command.<br/>This method is
deprecated.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetAudioOutputConfigurationOptions* tmd__GetAudioOutputConfigurationOptions,
    // output parameters:
    struct _tmd__GetAudioOutputConfigurationOptionsResponse*tmd__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetAudioOutputConfigurationOptions* tmd__GetAudioOutputConfigurationOptions,
    // output parameters:
    struct _tmd__GetAudioOutputConfigurationOptionsResponse*tmd__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetAudioOutputConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetAudioOutputConfigurationOptions document
//gsoap tmd  service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions
//gsoap tmd  service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptionsResponse
int __tmd__GetAudioOutputConfigurationOptions(
    struct _tmd__GetAudioOutputConfigurationOptions* tmd__GetAudioOutputConfigurationOptions,	///< Input parameter
    struct _tmd__GetAudioOutputConfigurationOptionsResponse*tmd__GetAudioOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetRelayOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetRelayOutputs" of service binding "DeviceIOBinding".
This operation gets a list of all available relay outputs and their settings.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetRelayOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,
    // output parameters:
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetRelayOutputs(
    struct soap *soap,
    // input parameters:
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,
    // output parameters:
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetRelayOutputs SOAP
//gsoap tmd  service method-style:	GetRelayOutputs document
//gsoap tmd  service method-encoding:	GetRelayOutputs literal
//gsoap tmd  service method-input-action:	GetRelayOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs
//gsoap tmd  service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputsResponse
int __tmd__GetRelayOutputs(
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,	///< Input parameter
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetRelayOutputSettings                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetRelayOutputSettings" of service binding "DeviceIOBinding".
This operation sets the settings of a relay output.
				The relay can work in two relay modes: <ul>
					<li>
				Bistable  After setting the state, the relay
remains in this state.</li>
					<li>
				Monostable  After setting the state, the relay
returns to its idle state after the
				specified time.</li>
				</ul>
				The physical idle state of a relay output can be
configured by setting the IdleState to open or
				closed (inversion of the relay behaviour).<br/>
				Idle State open means that the relay is open
when the relay state is set to inactive through
				the trigger command (see Section 8.5.3) and closed
when the state is set to active through
				the same command.<br/>
				Idle State closed means, that the relay is
closed when the relay state is set to inactive
				through the trigger command (see Section 8.5.3)
and open when the state is set to active
				through the same command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetRelayOutputSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SetRelayOutputSettings* tmd__SetRelayOutputSettings,
    // output parameters:
    struct _tmd__SetRelayOutputSettingsResponse*tmd__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetRelayOutputSettings(
    struct soap *soap,
    // input parameters:
    struct _tmd__SetRelayOutputSettings* tmd__SetRelayOutputSettings,
    // output parameters:
    struct _tmd__SetRelayOutputSettingsResponse*tmd__SetRelayOutputSettingsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetRelayOutputSettings SOAP
//gsoap tmd  service method-style:	SetRelayOutputSettings document
//gsoap tmd  service method-encoding:	SetRelayOutputSettings literal
//gsoap tmd  service method-input-action:	SetRelayOutputSettings http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings
//gsoap tmd  service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettingsResponse
int __tmd__SetRelayOutputSettings(
    struct _tmd__SetRelayOutputSettings* tmd__SetRelayOutputSettings,	///< Input parameter
    struct _tmd__SetRelayOutputSettingsResponse*tmd__SetRelayOutputSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetRelayOutputState                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetRelayOutputState" of service binding "DeviceIOBinding".
Modify the relay state.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetRelayOutputState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,
    // output parameters:
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetRelayOutputState(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,
    // output parameters:
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetRelayOutputState SOAP
//gsoap tmd  service method-style:	SetRelayOutputState document
//gsoap tmd  service method-encoding:	SetRelayOutputState literal
//gsoap tmd  service method-input-action:	SetRelayOutputState http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState
//gsoap tmd  service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputStateResponse
int __tmd__SetRelayOutputState(
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,	///< Input parameter
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetDigitalInputs                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetDigitalInputs" of service binding "DeviceIOBinding".
This operation gets a list of all available digital inputs.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetDigitalInputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetDigitalInputs*      tmd__GetDigitalInputs,
    // output parameters:
    struct _tmd__GetDigitalInputsResponse*tmd__GetDigitalInputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetDigitalInputs(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetDigitalInputs*      tmd__GetDigitalInputs,
    // output parameters:
    struct _tmd__GetDigitalInputsResponse*tmd__GetDigitalInputsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetDigitalInputs SOAP
//gsoap tmd  service method-style:	GetDigitalInputs document
//gsoap tmd  service method-encoding:	GetDigitalInputs literal
//gsoap tmd  service method-input-action:	GetDigitalInputs http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs
//gsoap tmd  service method-output-action:	GetDigitalInputs http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputsResponse
int __tmd__GetDigitalInputs(
    struct _tmd__GetDigitalInputs*      tmd__GetDigitalInputs,	///< Input parameter
    struct _tmd__GetDigitalInputsResponse*tmd__GetDigitalInputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetDigitalInputConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetDigitalInputConfigurationOptions" of service binding "DeviceIOBinding".
This operation lists what configuration is available for digital inputs.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetDigitalInputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetDigitalInputConfigurationOptions* tmd__GetDigitalInputConfigurationOptions,
    // output parameters:
    struct _tmd__GetDigitalInputConfigurationOptionsResponse*tmd__GetDigitalInputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetDigitalInputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetDigitalInputConfigurationOptions* tmd__GetDigitalInputConfigurationOptions,
    // output parameters:
    struct _tmd__GetDigitalInputConfigurationOptionsResponse*tmd__GetDigitalInputConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetDigitalInputConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetDigitalInputConfigurationOptions document
//gsoap tmd  service method-encoding:	GetDigitalInputConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetDigitalInputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptions
//gsoap tmd  service method-output-action:	GetDigitalInputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptionsResponse
int __tmd__GetDigitalInputConfigurationOptions(
    struct _tmd__GetDigitalInputConfigurationOptions* tmd__GetDigitalInputConfigurationOptions,	///< Input parameter
    struct _tmd__GetDigitalInputConfigurationOptionsResponse*tmd__GetDigitalInputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetDigitalInputConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetDigitalInputConfigurations" of service binding "DeviceIOBinding".
Modify a digital input configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetDigitalInputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SetDigitalInputConfigurations* tmd__SetDigitalInputConfigurations,
    // output parameters:
    struct _tmd__SetDigitalInputConfigurationsResponse*tmd__SetDigitalInputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetDigitalInputConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tmd__SetDigitalInputConfigurations* tmd__SetDigitalInputConfigurations,
    // output parameters:
    struct _tmd__SetDigitalInputConfigurationsResponse*tmd__SetDigitalInputConfigurationsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetDigitalInputConfigurations SOAP
//gsoap tmd  service method-style:	SetDigitalInputConfigurations document
//gsoap tmd  service method-encoding:	SetDigitalInputConfigurations literal
//gsoap tmd  service method-input-action:	SetDigitalInputConfigurations http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurations
//gsoap tmd  service method-output-action:	SetDigitalInputConfigurations http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurationsResponse
int __tmd__SetDigitalInputConfigurations(
    struct _tmd__SetDigitalInputConfigurations* tmd__SetDigitalInputConfigurations,	///< Input parameter
    struct _tmd__SetDigitalInputConfigurationsResponse*tmd__SetDigitalInputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetSerialPorts                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetSerialPorts" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetSerialPorts(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetSerialPorts*        tmd__GetSerialPorts,
    // output parameters:
    struct _tmd__GetSerialPortsResponse*tmd__GetSerialPortsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetSerialPorts(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetSerialPorts*        tmd__GetSerialPorts,
    // output parameters:
    struct _tmd__GetSerialPortsResponse*tmd__GetSerialPortsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetSerialPorts SOAP
//gsoap tmd  service method-style:	GetSerialPorts document
//gsoap tmd  service method-encoding:	GetSerialPorts literal
//gsoap tmd  service method-input-action:	GetSerialPorts http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts
//gsoap tmd  service method-output-action:	GetSerialPorts http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortsResponse
int __tmd__GetSerialPorts(
    struct _tmd__GetSerialPorts*        tmd__GetSerialPorts,	///< Input parameter
    struct _tmd__GetSerialPortsResponse*tmd__GetSerialPortsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetSerialPortConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetSerialPortConfiguration" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetSerialPortConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetSerialPortConfiguration* tmd__GetSerialPortConfiguration,
    // output parameters:
    struct _tmd__GetSerialPortConfigurationResponse*tmd__GetSerialPortConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetSerialPortConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetSerialPortConfiguration* tmd__GetSerialPortConfiguration,
    // output parameters:
    struct _tmd__GetSerialPortConfigurationResponse*tmd__GetSerialPortConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetSerialPortConfiguration SOAP
//gsoap tmd  service method-style:	GetSerialPortConfiguration document
//gsoap tmd  service method-encoding:	GetSerialPortConfiguration literal
//gsoap tmd  service method-input-action:	GetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations
//gsoap tmd  service method-output-action:	GetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationsResponse
int __tmd__GetSerialPortConfiguration(
    struct _tmd__GetSerialPortConfiguration* tmd__GetSerialPortConfiguration,	///< Input parameter
    struct _tmd__GetSerialPortConfigurationResponse*tmd__GetSerialPortConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetSerialPortConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetSerialPortConfiguration" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetSerialPortConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SetSerialPortConfiguration* tmd__SetSerialPortConfiguration,
    // output parameters:
    struct _tmd__SetSerialPortConfigurationResponse*tmd__SetSerialPortConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetSerialPortConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__SetSerialPortConfiguration* tmd__SetSerialPortConfiguration,
    // output parameters:
    struct _tmd__SetSerialPortConfigurationResponse*tmd__SetSerialPortConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetSerialPortConfiguration SOAP
//gsoap tmd  service method-style:	SetSerialPortConfiguration document
//gsoap tmd  service method-encoding:	SetSerialPortConfiguration literal
//gsoap tmd  service method-input-action:	SetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration
//gsoap tmd  service method-output-action:	SetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfigurationResponse
int __tmd__SetSerialPortConfiguration(
    struct _tmd__SetSerialPortConfiguration* tmd__SetSerialPortConfiguration,	///< Input parameter
    struct _tmd__SetSerialPortConfigurationResponse*tmd__SetSerialPortConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetSerialPortConfigurationOptions                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetSerialPortConfigurationOptions" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetSerialPortConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetSerialPortConfigurationOptions* tmd__GetSerialPortConfigurationOptions,
    // output parameters:
    struct _tmd__GetSerialPortConfigurationOptionsResponse*tmd__GetSerialPortConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetSerialPortConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetSerialPortConfigurationOptions* tmd__GetSerialPortConfigurationOptions,
    // output parameters:
    struct _tmd__GetSerialPortConfigurationOptionsResponse*tmd__GetSerialPortConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetSerialPortConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetSerialPortConfigurationOptions document
//gsoap tmd  service method-encoding:	GetSerialPortConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetSerialPortConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions
//gsoap tmd  service method-output-action:	GetSerialPortConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptionsResponse
int __tmd__GetSerialPortConfigurationOptions(
    struct _tmd__GetSerialPortConfigurationOptions* tmd__GetSerialPortConfigurationOptions,	///< Input parameter
    struct _tmd__GetSerialPortConfigurationOptionsResponse*tmd__GetSerialPortConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SendReceiveSerialCommand                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SendReceiveSerialCommand" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SendReceiveSerialCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SendReceiveSerialCommand* tmd__SendReceiveSerialCommand,
    // output parameters:
    struct _tmd__SendReceiveSerialCommandResponse*tmd__SendReceiveSerialCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SendReceiveSerialCommand(
    struct soap *soap,
    // input parameters:
    struct _tmd__SendReceiveSerialCommand* tmd__SendReceiveSerialCommand,
    // output parameters:
    struct _tmd__SendReceiveSerialCommandResponse*tmd__SendReceiveSerialCommandResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SendReceiveSerialCommand SOAP
//gsoap tmd  service method-style:	SendReceiveSerialCommand document
//gsoap tmd  service method-encoding:	SendReceiveSerialCommand literal
//gsoap tmd  service method-input-action:	SendReceiveSerialCommand http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand
//gsoap tmd  service method-output-action:	SendReceiveSerialCommand http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommandResponse
int __tmd__SendReceiveSerialCommand(
    struct _tmd__SendReceiveSerialCommand* tmd__SendReceiveSerialCommand,	///< Input parameter
    struct _tmd__SendReceiveSerialCommandResponse*tmd__SendReceiveSerialCommandResponse	///< Output parameter
);

/** @page DeviceIOBinding Binding "DeviceIOBinding"

@section DeviceIOBinding_policy_enablers Policy Enablers of Binding "DeviceIOBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PTZBinding                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetServiceCapabilities                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetServiceCapabilities" of service binding "PTZBinding".
Returns the capabilities of the PTZ service. The result is returned in a typed answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetServiceCapabilities* tptz__GetServiceCapabilities,
    // output parameters:
    struct _tptz__GetServiceCapabilitiesResponse*tptz__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetServiceCapabilities* tptz__GetServiceCapabilities,
    // output parameters:
    struct _tptz__GetServiceCapabilitiesResponse*tptz__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetServiceCapabilities SOAP
//gsoap tptz service method-style:	GetServiceCapabilities document
//gsoap tptz service method-encoding:	GetServiceCapabilities literal
//gsoap tptz service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities
//gsoap tptz service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilitiesResponse
int __tptz__GetServiceCapabilities(
    struct _tptz__GetServiceCapabilities* tptz__GetServiceCapabilities,	///< Input parameter
    struct _tptz__GetServiceCapabilitiesResponse*tptz__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfigurations                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfigurations" of service binding "PTZBinding".

		        Get all the existing PTZConfigurations from the device.
				<br/>
				The default Position/Translation/Velocity Spaces
are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate
system. The default Speeds are
				introduced to control the speed of move requests
(absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits
is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position
Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt
limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements.
The limits shall be checked within the
				coordinate system for which the limits have been
specified. That means that even if
				movements are specified in a different coordinate
system, the requested movements shall be
				transformed to the coordinate system of the limits
where the limits can be checked. When a
				relative or continuous movements is specified, which
would leave the specified limits, the PTZ
				unit has to move along the specified limits. The
Zoom Limits have to be interpreted
				accordingly.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetConfigurations*    tptz__GetConfigurations,
    // output parameters:
    struct _tptz__GetConfigurationsResponse*tptz__GetConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetConfigurations*    tptz__GetConfigurations,
    // output parameters:
    struct _tptz__GetConfigurationsResponse*tptz__GetConfigurationsResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetConfigurations SOAP
//gsoap tptz service method-style:	GetConfigurations document
//gsoap tptz service method-encoding:	GetConfigurations literal
//gsoap tptz service method-input-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations
//gsoap tptz service method-output-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationsResponse
int __tptz__GetConfigurations(
    struct _tptz__GetConfigurations*    tptz__GetConfigurations,	///< Input parameter
    struct _tptz__GetConfigurationsResponse*tptz__GetConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresets                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresets" of service binding "PTZBinding".

        Operation to request all PTZ presets for the PTZNode
        in the selected profile. The operation is supported if there is support
        for at least on PTZ preset by the PTZNode.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresets"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresets"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetPresets*           tptz__GetPresets,
    // output parameters:
    struct _tptz__GetPresetsResponse   *tptz__GetPresetsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresets(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetPresets*           tptz__GetPresets,
    // output parameters:
    struct _tptz__GetPresetsResponse   *tptz__GetPresetsResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetPresets SOAP
//gsoap tptz service method-style:	GetPresets document
//gsoap tptz service method-encoding:	GetPresets literal
//gsoap tptz service method-input-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/GetPresets
//gsoap tptz service method-output-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/GetPresetsResponse
int __tptz__GetPresets(
    struct _tptz__GetPresets*           tptz__GetPresets,	///< Input parameter
    struct _tptz__GetPresetsResponse   *tptz__GetPresetsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetPreset                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetPreset" of service binding "PTZBinding".

				The SetPreset command saves the current device position
parameters so that the device can
				move to the saved preset position through the GotoPreset
operation.
				In order to create a new preset, the SetPresetRequest
contains no PresetToken. If creation is
				successful, the Response contains the PresetToken
which uniquely identifies the Preset. An
				existing Preset can be overwritten by specifying
the PresetToken of the corresponding Preset.
				In both cases (overwriting or creation) an optional
PresetName can be specified. The
				operation fails if the PTZ device is moving during
the SetPreset operation.
				The device MAY internally save additional states
such as imaging properties in the PTZ
				Preset which then should be recalled in the GotoPreset
operation.      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SetPreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetPreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__SetPreset*            tptz__SetPreset,
    // output parameters:
    struct _tptz__SetPresetResponse    *tptz__SetPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetPreset(
    struct soap *soap,
    // input parameters:
    struct _tptz__SetPreset*            tptz__SetPreset,
    // output parameters:
    struct _tptz__SetPresetResponse    *tptz__SetPresetResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	SetPreset SOAP
//gsoap tptz service method-style:	SetPreset document
//gsoap tptz service method-encoding:	SetPreset literal
//gsoap tptz service method-input-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/SetPreset
//gsoap tptz service method-output-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/SetPresetResponse
int __tptz__SetPreset(
    struct _tptz__SetPreset*            tptz__SetPreset,	///< Input parameter
    struct _tptz__SetPresetResponse    *tptz__SetPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RemovePreset                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RemovePreset" of service binding "PTZBinding".

        Operation to remove a PTZ preset for the Node in
        the
        selected profile. The operation is supported if the
        PresetPosition
        capability exists for teh Node in the
        selected profile.
      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RemovePreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__RemovePreset*         tptz__RemovePreset,
    // output parameters:
    struct _tptz__RemovePresetResponse *tptz__RemovePresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RemovePreset(
    struct soap *soap,
    // input parameters:
    struct _tptz__RemovePreset*         tptz__RemovePreset,
    // output parameters:
    struct _tptz__RemovePresetResponse *tptz__RemovePresetResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	RemovePreset SOAP
//gsoap tptz service method-style:	RemovePreset document
//gsoap tptz service method-encoding:	RemovePreset literal
//gsoap tptz service method-input-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/RemovePreset
//gsoap tptz service method-output-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/RemovePresetResponse
int __tptz__RemovePreset(
    struct _tptz__RemovePreset*         tptz__RemovePreset,	///< Input parameter
    struct _tptz__RemovePresetResponse *tptz__RemovePresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GotoPreset                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GotoPreset" of service binding "PTZBinding".

        Operation to go to a saved preset position for the
        PTZNode in the selected profile. The operation is supported if there is
        support for at least on PTZ preset by the PTZNode.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GotoPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GotoPreset*           tptz__GotoPreset,
    // output parameters:
    struct _tptz__GotoPresetResponse   *tptz__GotoPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GotoPreset(
    struct soap *soap,
    // input parameters:
    struct _tptz__GotoPreset*           tptz__GotoPreset,
    // output parameters:
    struct _tptz__GotoPresetResponse   *tptz__GotoPresetResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GotoPreset SOAP
//gsoap tptz service method-style:	GotoPreset document
//gsoap tptz service method-encoding:	GotoPreset literal
//gsoap tptz service method-input-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/GotoPreset
//gsoap tptz service method-output-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/GotoPresetResponse
int __tptz__GotoPreset(
    struct _tptz__GotoPreset*           tptz__GotoPreset,	///< Input parameter
    struct _tptz__GotoPresetResponse   *tptz__GotoPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetStatus                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetStatus" of service binding "PTZBinding".

				Operation to request PTZ status for the Node in
the
				selected profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetStatus"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatus"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetStatus*            tptz__GetStatus,
    // output parameters:
    struct _tptz__GetStatusResponse    *tptz__GetStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetStatus(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetStatus*            tptz__GetStatus,
    // output parameters:
    struct _tptz__GetStatusResponse    *tptz__GetStatusResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetStatus SOAP
//gsoap tptz service method-style:	GetStatus document
//gsoap tptz service method-encoding:	GetStatus literal
//gsoap tptz service method-input-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/GetStatus
//gsoap tptz service method-output-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/GetStatusResponse
int __tptz__GetStatus(
    struct _tptz__GetStatus*            tptz__GetStatus,	///< Input parameter
    struct _tptz__GetStatusResponse    *tptz__GetStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfiguration                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfiguration" of service binding "PTZBinding".
Get a specific PTZconfiguration from the device, identified by its reference token
or name.
				<br/>
				The default Position/Translation/Velocity Spaces
are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate
system. The default Speeds are
				introduced to control the speed of move requests
(absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits
is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position
Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt
limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements.
The limits shall be checked within the
				coordinate system for which the limits have been
specified. That means that even if
				movements are specified in a different coordinate
system, the requested movements shall be
				transformed to the coordinate system of the limits
where the limits can be checked. When a
				relative or continuous movements is specified, which
would leave the specified limits, the PTZ
				unit has to move along the specified limits. The
Zoom Limits have to be interpreted
				accordingly.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetConfiguration*     tptz__GetConfiguration,
    // output parameters:
    struct _tptz__GetConfigurationResponse*tptz__GetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetConfiguration*     tptz__GetConfiguration,
    // output parameters:
    struct _tptz__GetConfigurationResponse*tptz__GetConfigurationResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetConfiguration SOAP
//gsoap tptz service method-style:	GetConfiguration document
//gsoap tptz service method-encoding:	GetConfiguration literal
//gsoap tptz service method-input-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration
//gsoap tptz service method-output-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationResponse
int __tptz__GetConfiguration(
    struct _tptz__GetConfiguration*     tptz__GetConfiguration,	///< Input parameter
    struct _tptz__GetConfigurationResponse*tptz__GetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetNodes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetNodes" of service binding "PTZBinding".

				Get the descriptions of the available PTZ Nodes.
				<br/>
				A PTZ-capable device may have multiple PTZ Nodes.
The PTZ Nodes may represent
				mechanical PTZ drivers, uploaded PTZ drivers or
digital PTZ drivers. PTZ Nodes are the
				lowest level entities in the PTZ control API and
reflect the supported PTZ capabilities. The
				PTZ Node is referenced either by its name or by
its reference token. 
      		

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetNodes"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodes"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetNodes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetNodes*             tptz__GetNodes,
    // output parameters:
    struct _tptz__GetNodesResponse     *tptz__GetNodesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetNodes(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetNodes*             tptz__GetNodes,
    // output parameters:
    struct _tptz__GetNodesResponse     *tptz__GetNodesResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetNodes SOAP
//gsoap tptz service method-style:	GetNodes document
//gsoap tptz service method-encoding:	GetNodes literal
//gsoap tptz service method-input-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/GetNodes
//gsoap tptz service method-output-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/GetNodesResponse
int __tptz__GetNodes(
    struct _tptz__GetNodes*             tptz__GetNodes,	///< Input parameter
    struct _tptz__GetNodesResponse     *tptz__GetNodesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetNode                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetNode" of service binding "PTZBinding".
Get a specific PTZ Node identified by a reference
        token or a name.
	  

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetNode"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetNode"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetNode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetNode*              tptz__GetNode,
    // output parameters:
    struct _tptz__GetNodeResponse      *tptz__GetNodeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetNode(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetNode*              tptz__GetNode,
    // output parameters:
    struct _tptz__GetNodeResponse      *tptz__GetNodeResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetNode SOAP
//gsoap tptz service method-style:	GetNode document
//gsoap tptz service method-encoding:	GetNode literal
//gsoap tptz service method-input-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/GetNode
//gsoap tptz service method-output-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/GetNodeResponse
int __tptz__GetNode(
    struct _tptz__GetNode*              tptz__GetNode,	///< Input parameter
    struct _tptz__GetNodeResponse      *tptz__GetNodeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetConfiguration                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetConfiguration" of service binding "PTZBinding".

        Set/update a existing PTZConfiguration on the device.
      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__SetConfiguration*     tptz__SetConfiguration,
    // output parameters:
    struct _tptz__SetConfigurationResponse*tptz__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tptz__SetConfiguration*     tptz__SetConfiguration,
    // output parameters:
    struct _tptz__SetConfigurationResponse*tptz__SetConfigurationResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	SetConfiguration SOAP
//gsoap tptz service method-style:	SetConfiguration document
//gsoap tptz service method-encoding:	SetConfiguration literal
//gsoap tptz service method-input-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration
//gsoap tptz service method-output-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/SetConfigurationResponse
int __tptz__SetConfiguration(
    struct _tptz__SetConfiguration*     tptz__SetConfiguration,	///< Input parameter
    struct _tptz__SetConfigurationResponse*tptz__SetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfigurationOptions                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfigurationOptions" of service binding "PTZBinding".

				List supported coordinate systems including their
range limitations. Therefore, the options
				MAY differ depending on whether the PTZ Configuration
is assigned to a Profile containing a
				Video Source Configuration. In that case, the options
may additionally contain coordinate
				systems referring to the image coordinate system
described by the Video Source
				Configuration. If the PTZ Node supports continuous
movements, it shall return a Timeout Range within
				which Timeouts are accepted by the PTZ Node.				
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetConfigurationOptions* tptz__GetConfigurationOptions,
    // output parameters:
    struct _tptz__GetConfigurationOptionsResponse*tptz__GetConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetConfigurationOptions* tptz__GetConfigurationOptions,
    // output parameters:
    struct _tptz__GetConfigurationOptionsResponse*tptz__GetConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetConfigurationOptions SOAP
//gsoap tptz service method-style:	GetConfigurationOptions document
//gsoap tptz service method-encoding:	GetConfigurationOptions literal
//gsoap tptz service method-input-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions
//gsoap tptz service method-output-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptionsResponse
int __tptz__GetConfigurationOptions(
    struct _tptz__GetConfigurationOptions* tptz__GetConfigurationOptions,	///< Input parameter
    struct _tptz__GetConfigurationOptionsResponse*tptz__GetConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GotoHomePosition                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GotoHomePosition" of service binding "PTZBinding".

        Operation to move the PTZ device to it's "home" position. The operation
is supported if the HomeSupported element in the PTZNode is true.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GotoHomePosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GotoHomePosition*     tptz__GotoHomePosition,
    // output parameters:
    struct _tptz__GotoHomePositionResponse*tptz__GotoHomePositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GotoHomePosition(
    struct soap *soap,
    // input parameters:
    struct _tptz__GotoHomePosition*     tptz__GotoHomePosition,
    // output parameters:
    struct _tptz__GotoHomePositionResponse*tptz__GotoHomePositionResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GotoHomePosition SOAP
//gsoap tptz service method-style:	GotoHomePosition document
//gsoap tptz service method-encoding:	GotoHomePosition literal
//gsoap tptz service method-input-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition
//gsoap tptz service method-output-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/GotoHomePositionResponse
int __tptz__GotoHomePosition(
    struct _tptz__GotoHomePosition*     tptz__GotoHomePosition,	///< Input parameter
    struct _tptz__GotoHomePositionResponse*tptz__GotoHomePositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetHomePosition                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetHomePosition" of service binding "PTZBinding".
Operation to save current position as the home position.
				The SetHomePosition command returns with a failure
if the home position is fixed and
				cannot be overwritten. If the SetHomePosition is
successful, it is possible to recall the
				Home Position with the GotoHomePosition command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetHomePosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__SetHomePosition*      tptz__SetHomePosition,
    // output parameters:
    struct _tptz__SetHomePositionResponse*tptz__SetHomePositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetHomePosition(
    struct soap *soap,
    // input parameters:
    struct _tptz__SetHomePosition*      tptz__SetHomePosition,
    // output parameters:
    struct _tptz__SetHomePositionResponse*tptz__SetHomePositionResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	SetHomePosition SOAP
//gsoap tptz service method-style:	SetHomePosition document
//gsoap tptz service method-encoding:	SetHomePosition literal
//gsoap tptz service method-input-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition
//gsoap tptz service method-output-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/SetHomePositionResponse
int __tptz__SetHomePosition(
    struct _tptz__SetHomePosition*      tptz__SetHomePosition,	///< Input parameter
    struct _tptz__SetHomePositionResponse*tptz__SetHomePositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__ContinuousMove                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__ContinuousMove" of service binding "PTZBinding".
Operation for continuous Pan/Tilt and Zoom movements. The operation is supported
if the PTZNode supports at least one continuous Pan/Tilt or Zoom space. If the
space argument is omitted, the default space set by the PTZConfiguration will be
used.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__ContinuousMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__ContinuousMove*       tptz__ContinuousMove,
    // output parameters:
    struct _tptz__ContinuousMoveResponse*tptz__ContinuousMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__ContinuousMove(
    struct soap *soap,
    // input parameters:
    struct _tptz__ContinuousMove*       tptz__ContinuousMove,
    // output parameters:
    struct _tptz__ContinuousMoveResponse*tptz__ContinuousMoveResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	ContinuousMove SOAP
//gsoap tptz service method-style:	ContinuousMove document
//gsoap tptz service method-encoding:	ContinuousMove literal
//gsoap tptz service method-input-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove
//gsoap tptz service method-output-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/ContinuousMoveResponse
int __tptz__ContinuousMove(
    struct _tptz__ContinuousMove*       tptz__ContinuousMove,	///< Input parameter
    struct _tptz__ContinuousMoveResponse*tptz__ContinuousMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RelativeMove                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RelativeMove" of service binding "PTZBinding".
Operation for Relative Pan/Tilt and Zoom Move. The operation is supported if the
PTZNode supports at least one relative Pan/Tilt or Zoom space.<br/> 
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RelativeMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__RelativeMove*         tptz__RelativeMove,
    // output parameters:
    struct _tptz__RelativeMoveResponse *tptz__RelativeMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RelativeMove(
    struct soap *soap,
    // input parameters:
    struct _tptz__RelativeMove*         tptz__RelativeMove,
    // output parameters:
    struct _tptz__RelativeMoveResponse *tptz__RelativeMoveResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	RelativeMove SOAP
//gsoap tptz service method-style:	RelativeMove document
//gsoap tptz service method-encoding:	RelativeMove literal
//gsoap tptz service method-input-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/RelativeMove
//gsoap tptz service method-output-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/RelativeMoveResponse
int __tptz__RelativeMove(
    struct _tptz__RelativeMove*         tptz__RelativeMove,	///< Input parameter
    struct _tptz__RelativeMoveResponse *tptz__RelativeMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SendAuxiliaryCommand                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SendAuxiliaryCommand" of service binding "PTZBinding".

        Operation to send auxiliary commands to the PTZ device
        mapped by the PTZNode in the selected profile. The
        operation is supported
        if the AuxiliarySupported element of the PTZNode is true
      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__SendAuxiliaryCommand* tptz__SendAuxiliaryCommand,
    // output parameters:
    struct _tptz__SendAuxiliaryCommandResponse*tptz__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SendAuxiliaryCommand(
    struct soap *soap,
    // input parameters:
    struct _tptz__SendAuxiliaryCommand* tptz__SendAuxiliaryCommand,
    // output parameters:
    struct _tptz__SendAuxiliaryCommandResponse*tptz__SendAuxiliaryCommandResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tptz service method-style:	SendAuxiliaryCommand document
//gsoap tptz service method-encoding:	SendAuxiliaryCommand literal
//gsoap tptz service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand
//gsoap tptz service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommandResponse
int __tptz__SendAuxiliaryCommand(
    struct _tptz__SendAuxiliaryCommand* tptz__SendAuxiliaryCommand,	///< Input parameter
    struct _tptz__SendAuxiliaryCommandResponse*tptz__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__AbsoluteMove                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__AbsoluteMove" of service binding "PTZBinding".
Operation to move pan,tilt or zoom to a absolute destination. <br/>
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__AbsoluteMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__AbsoluteMove*         tptz__AbsoluteMove,
    // output parameters:
    struct _tptz__AbsoluteMoveResponse *tptz__AbsoluteMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__AbsoluteMove(
    struct soap *soap,
    // input parameters:
    struct _tptz__AbsoluteMove*         tptz__AbsoluteMove,
    // output parameters:
    struct _tptz__AbsoluteMoveResponse *tptz__AbsoluteMoveResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	AbsoluteMove SOAP
//gsoap tptz service method-style:	AbsoluteMove document
//gsoap tptz service method-encoding:	AbsoluteMove literal
//gsoap tptz service method-input-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove
//gsoap tptz service method-output-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMoveResponse
int __tptz__AbsoluteMove(
    struct _tptz__AbsoluteMove*         tptz__AbsoluteMove,	///< Input parameter
    struct _tptz__AbsoluteMoveResponse *tptz__AbsoluteMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GeoMove                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GeoMove" of service binding "PTZBinding".
Operation to move pan,tilt or zoom to point to a destination based on the geolocation
of the target. <br/>
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
				The area height and area dwidth parameters are optional,
they can be used independently and may be used
				by the device to automatically determine the best
zoom level to show the target.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GeoMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GeoMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GeoMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GeoMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GeoMove*              tptz__GeoMove,
    // output parameters:
    struct _tptz__GeoMoveResponse      *tptz__GeoMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GeoMove(
    struct soap *soap,
    // input parameters:
    struct _tptz__GeoMove*              tptz__GeoMove,
    // output parameters:
    struct _tptz__GeoMoveResponse      *tptz__GeoMoveResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GeoMove SOAP
//gsoap tptz service method-style:	GeoMove document
//gsoap tptz service method-encoding:	GeoMove literal
//gsoap tptz service method-input-action:	GeoMove http://www.onvif.org/ver20/ptz/wsdl/GeoMove
//gsoap tptz service method-output-action:	GeoMove http://www.onvif.org/ver20/ptz/wsdl/GeoMoveResponse
int __tptz__GeoMove(
    struct _tptz__GeoMove*              tptz__GeoMove,	///< Input parameter
    struct _tptz__GeoMoveResponse      *tptz__GeoMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__Stop                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__Stop" of service binding "PTZBinding".
Operation to stop ongoing pan, tilt and zoom movements of absolute relative and
continuous type.
If no stop argument for pan, tilt or zoom is set, the device will stop all ongoing
pan, tilt and zoom movements.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/Stop"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/Stop"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/StopResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__Stop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__Stop*                 tptz__Stop,
    // output parameters:
    struct _tptz__StopResponse         *tptz__StopResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__Stop(
    struct soap *soap,
    // input parameters:
    struct _tptz__Stop*                 tptz__Stop,
    // output parameters:
    struct _tptz__StopResponse         *tptz__StopResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	Stop SOAP
//gsoap tptz service method-style:	Stop document
//gsoap tptz service method-encoding:	Stop literal
//gsoap tptz service method-input-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/Stop
//gsoap tptz service method-output-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/StopResponse
int __tptz__Stop(
    struct _tptz__Stop*                 tptz__Stop,	///< Input parameter
    struct _tptz__StopResponse         *tptz__StopResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTours                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTours" of service binding "PTZBinding".
Operation to request PTZ preset tours in the selected media profiles.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetToursResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTours(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetPresetTours*       tptz__GetPresetTours,
    // output parameters:
    struct _tptz__GetPresetToursResponse*tptz__GetPresetToursResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTours(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetPresetTours*       tptz__GetPresetTours,
    // output parameters:
    struct _tptz__GetPresetToursResponse*tptz__GetPresetToursResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetPresetTours SOAP
//gsoap tptz service method-style:	GetPresetTours document
//gsoap tptz service method-encoding:	GetPresetTours literal
//gsoap tptz service method-input-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours
//gsoap tptz service method-output-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/GetPresetToursResponse
int __tptz__GetPresetTours(
    struct _tptz__GetPresetTours*       tptz__GetPresetTours,	///< Input parameter
    struct _tptz__GetPresetToursResponse*tptz__GetPresetToursResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTour                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTour" of service binding "PTZBinding".
Operation to request a specific PTZ preset tour in the selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetPresetTour*        tptz__GetPresetTour,
    // output parameters:
    struct _tptz__GetPresetTourResponse*tptz__GetPresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTour(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetPresetTour*        tptz__GetPresetTour,
    // output parameters:
    struct _tptz__GetPresetTourResponse*tptz__GetPresetTourResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetPresetTour SOAP
//gsoap tptz service method-style:	GetPresetTour document
//gsoap tptz service method-encoding:	GetPresetTour literal
//gsoap tptz service method-input-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour
//gsoap tptz service method-output-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourResponse
int __tptz__GetPresetTour(
    struct _tptz__GetPresetTour*        tptz__GetPresetTour,	///< Input parameter
    struct _tptz__GetPresetTourResponse*tptz__GetPresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTourOptions                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTourOptions" of service binding "PTZBinding".
Operation to request available options to configure PTZ preset tour.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTourOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetPresetTourOptions* tptz__GetPresetTourOptions,
    // output parameters:
    struct _tptz__GetPresetTourOptionsResponse*tptz__GetPresetTourOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTourOptions(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetPresetTourOptions* tptz__GetPresetTourOptions,
    // output parameters:
    struct _tptz__GetPresetTourOptionsResponse*tptz__GetPresetTourOptionsResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetPresetTourOptions SOAP
//gsoap tptz service method-style:	GetPresetTourOptions document
//gsoap tptz service method-encoding:	GetPresetTourOptions literal
//gsoap tptz service method-input-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions
//gsoap tptz service method-output-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptionsResponse
int __tptz__GetPresetTourOptions(
    struct _tptz__GetPresetTourOptions* tptz__GetPresetTourOptions,	///< Input parameter
    struct _tptz__GetPresetTourOptionsResponse*tptz__GetPresetTourOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__CreatePresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__CreatePresetTour" of service binding "PTZBinding".
Operation to create a preset tour for the selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__CreatePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__CreatePresetTour*     tptz__CreatePresetTour,
    // output parameters:
    struct _tptz__CreatePresetTourResponse*tptz__CreatePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__CreatePresetTour(
    struct soap *soap,
    // input parameters:
    struct _tptz__CreatePresetTour*     tptz__CreatePresetTour,
    // output parameters:
    struct _tptz__CreatePresetTourResponse*tptz__CreatePresetTourResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	CreatePresetTour SOAP
//gsoap tptz service method-style:	CreatePresetTour document
//gsoap tptz service method-encoding:	CreatePresetTour literal
//gsoap tptz service method-input-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour
//gsoap tptz service method-output-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTourResponse
int __tptz__CreatePresetTour(
    struct _tptz__CreatePresetTour*     tptz__CreatePresetTour,	///< Input parameter
    struct _tptz__CreatePresetTourResponse*tptz__CreatePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__ModifyPresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__ModifyPresetTour" of service binding "PTZBinding".
Operation to modify a preset tour for the selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__ModifyPresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__ModifyPresetTour*     tptz__ModifyPresetTour,
    // output parameters:
    struct _tptz__ModifyPresetTourResponse*tptz__ModifyPresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__ModifyPresetTour(
    struct soap *soap,
    // input parameters:
    struct _tptz__ModifyPresetTour*     tptz__ModifyPresetTour,
    // output parameters:
    struct _tptz__ModifyPresetTourResponse*tptz__ModifyPresetTourResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	ModifyPresetTour SOAP
//gsoap tptz service method-style:	ModifyPresetTour document
//gsoap tptz service method-encoding:	ModifyPresetTour literal
//gsoap tptz service method-input-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour
//gsoap tptz service method-output-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTourResponse
int __tptz__ModifyPresetTour(
    struct _tptz__ModifyPresetTour*     tptz__ModifyPresetTour,	///< Input parameter
    struct _tptz__ModifyPresetTourResponse*tptz__ModifyPresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__OperatePresetTour                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__OperatePresetTour" of service binding "PTZBinding".
Operation to perform specific operation on the preset tour in selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__OperatePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__OperatePresetTour*    tptz__OperatePresetTour,
    // output parameters:
    struct _tptz__OperatePresetTourResponse*tptz__OperatePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__OperatePresetTour(
    struct soap *soap,
    // input parameters:
    struct _tptz__OperatePresetTour*    tptz__OperatePresetTour,
    // output parameters:
    struct _tptz__OperatePresetTourResponse*tptz__OperatePresetTourResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	OperatePresetTour SOAP
//gsoap tptz service method-style:	OperatePresetTour document
//gsoap tptz service method-encoding:	OperatePresetTour literal
//gsoap tptz service method-input-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour
//gsoap tptz service method-output-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTourResponse
int __tptz__OperatePresetTour(
    struct _tptz__OperatePresetTour*    tptz__OperatePresetTour,	///< Input parameter
    struct _tptz__OperatePresetTourResponse*tptz__OperatePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RemovePresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RemovePresetTour" of service binding "PTZBinding".
Operation to delete a specific preset tour from the media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RemovePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__RemovePresetTour*     tptz__RemovePresetTour,
    // output parameters:
    struct _tptz__RemovePresetTourResponse*tptz__RemovePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RemovePresetTour(
    struct soap *soap,
    // input parameters:
    struct _tptz__RemovePresetTour*     tptz__RemovePresetTour,
    // output parameters:
    struct _tptz__RemovePresetTourResponse*tptz__RemovePresetTourResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	RemovePresetTour SOAP
//gsoap tptz service method-style:	RemovePresetTour document
//gsoap tptz service method-encoding:	RemovePresetTour literal
//gsoap tptz service method-input-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour
//gsoap tptz service method-output-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTourResponse
int __tptz__RemovePresetTour(
    struct _tptz__RemovePresetTour*     tptz__RemovePresetTour,	///< Input parameter
    struct _tptz__RemovePresetTourResponse*tptz__RemovePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetCompatibleConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetCompatibleConfigurations" of service binding "PTZBinding".
Operation to get all available PTZConfigurations that can be added to the referenced
media profile. <br/>
				A device providing more than one PTZConfiguration
or more than one VideoSourceConfiguration or which has any other resource
				interdependency between PTZConfiguration entities
and other resources listable in a media profile should implement this operation.
				PTZConfiguration entities returned by this operation
shall not fail on adding them to the referenced media profile.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetCompatibleConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,
    // output parameters:
    struct _tptz__GetCompatibleConfigurationsResponse*tptz__GetCompatibleConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetCompatibleConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,
    // output parameters:
    struct _tptz__GetCompatibleConfigurationsResponse*tptz__GetCompatibleConfigurationsResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetCompatibleConfigurations SOAP
//gsoap tptz service method-style:	GetCompatibleConfigurations document
//gsoap tptz service method-encoding:	GetCompatibleConfigurations literal
//gsoap tptz service method-input-action:	GetCompatibleConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations
//gsoap tptz service method-output-action:	GetCompatibleConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurationsResponse
int __tptz__GetCompatibleConfigurations(
    struct _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,	///< Input parameter
    struct _tptz__GetCompatibleConfigurationsResponse*tptz__GetCompatibleConfigurationsResponse	///< Output parameter
);

/** @page PTZBinding Binding "PTZBinding"

@section PTZBinding_policy_enablers Policy Enablers of Binding "PTZBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   MediaBinding                                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetServiceCapabilities" of service binding "MediaBinding".
Returns the capabilities of the media service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetServiceCapabilities* trt__GetServiceCapabilities,
    // output parameters:
    struct _trt__GetServiceCapabilitiesResponse*trt__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _trt__GetServiceCapabilities* trt__GetServiceCapabilities,
    // output parameters:
    struct _trt__GetServiceCapabilitiesResponse*trt__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trt  service method-style:	GetServiceCapabilities document
//gsoap trt  service method-encoding:	GetServiceCapabilities literal
//gsoap trt  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities
//gsoap trt  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse
int __trt__GetServiceCapabilities(
    struct _trt__GetServiceCapabilities* trt__GetServiceCapabilities,	///< Input parameter
    struct _trt__GetServiceCapabilitiesResponse*trt__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSources" of service binding "MediaBinding".
This command lists all available physical video inputs of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSources*       trt__GetVideoSources,
    // output parameters:
    struct _trt__GetVideoSourcesResponse*trt__GetVideoSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSources(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSources*       trt__GetVideoSources,
    // output parameters:
    struct _trt__GetVideoSourcesResponse*trt__GetVideoSourcesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSources SOAP
//gsoap trt  service method-style:	GetVideoSources document
//gsoap trt  service method-encoding:	GetVideoSources literal
//gsoap trt  service method-input-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/
//gsoap trt  service method-output-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/Response
int __trt__GetVideoSources(
    struct _trt__GetVideoSources*       trt__GetVideoSources,	///< Input parameter
    struct _trt__GetVideoSourcesResponse*trt__GetVideoSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSources" of service binding "MediaBinding".
This command lists all available physical audio inputs of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioSources*       trt__GetAudioSources,
    // output parameters:
    struct _trt__GetAudioSourcesResponse*trt__GetAudioSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSources(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioSources*       trt__GetAudioSources,
    // output parameters:
    struct _trt__GetAudioSourcesResponse*trt__GetAudioSourcesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioSources SOAP
//gsoap trt  service method-style:	GetAudioSources document
//gsoap trt  service method-encoding:	GetAudioSources literal
//gsoap trt  service method-input-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSources
//gsoap trt  service method-output-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSourcesResponse
int __trt__GetAudioSources(
    struct _trt__GetAudioSources*       trt__GetAudioSources,	///< Input parameter
    struct _trt__GetAudioSourcesResponse*trt__GetAudioSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputs" of service binding "MediaBinding".
This command lists all available physical audio outputs of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioOutputs*       trt__GetAudioOutputs,
    // output parameters:
    struct _trt__GetAudioOutputsResponse*trt__GetAudioOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputs(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioOutputs*       trt__GetAudioOutputs,
    // output parameters:
    struct _trt__GetAudioOutputsResponse*trt__GetAudioOutputsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioOutputs SOAP
//gsoap trt  service method-style:	GetAudioOutputs document
//gsoap trt  service method-encoding:	GetAudioOutputs literal
//gsoap trt  service method-input-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs
//gsoap trt  service method-output-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputsResponse
int __trt__GetAudioOutputs(
    struct _trt__GetAudioOutputs*       trt__GetAudioOutputs,	///< Input parameter
    struct _trt__GetAudioOutputsResponse*trt__GetAudioOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__CreateProfile" of service binding "MediaBinding".
This operation creates a new empty media profile. The media profile shall be created
in the
device and shall be persistent (remain after reboot). A created profile shall be
deletable and a device shall set the fixed attribute to false in the
returned Profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__CreateProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__CreateProfile*         trt__CreateProfile,
    // output parameters:
    struct _trt__CreateProfileResponse *trt__CreateProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__CreateProfile(
    struct soap *soap,
    // input parameters:
    struct _trt__CreateProfile*         trt__CreateProfile,
    // output parameters:
    struct _trt__CreateProfileResponse *trt__CreateProfileResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	CreateProfile SOAP
//gsoap trt  service method-style:	CreateProfile document
//gsoap trt  service method-encoding:	CreateProfile literal
//gsoap trt  service method-input-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfile
//gsoap trt  service method-output-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse
int __trt__CreateProfile(
    struct _trt__CreateProfile*         trt__CreateProfile,	///< Input parameter
    struct _trt__CreateProfileResponse *trt__CreateProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfile                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetProfile" of service binding "MediaBinding".
If the profile token is already known, a profile can be fetched through the GetProfile
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetProfile/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetProfile*            trt__GetProfile,
    // output parameters:
    struct _trt__GetProfileResponse    *trt__GetProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfile(
    struct soap *soap,
    // input parameters:
    struct _trt__GetProfile*            trt__GetProfile,
    // output parameters:
    struct _trt__GetProfileResponse    *trt__GetProfileResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetProfile SOAP
//gsoap trt  service method-style:	GetProfile document
//gsoap trt  service method-encoding:	GetProfile literal
//gsoap trt  service method-input-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/
//gsoap trt  service method-output-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/Response
int __trt__GetProfile(
    struct _trt__GetProfile*            trt__GetProfile,	///< Input parameter
    struct _trt__GetProfileResponse    *trt__GetProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfiles                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetProfiles" of service binding "MediaBinding".
Any endpoint can ask for the existing media profiles of a device using the GetProfiles
command. Pre-configured or dynamically configured profiles can be retrieved using
this
command. This command lists all configured profiles in a device. The client does
not need to
know the media profile in order to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetProfiles*           trt__GetProfiles,
    // output parameters:
    struct _trt__GetProfilesResponse   *trt__GetProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfiles(
    struct soap *soap,
    // input parameters:
    struct _trt__GetProfiles*           trt__GetProfiles,
    // output parameters:
    struct _trt__GetProfilesResponse   *trt__GetProfilesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetProfiles SOAP
//gsoap trt  service method-style:	GetProfiles document
//gsoap trt  service method-encoding:	GetProfiles literal
//gsoap trt  service method-input-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfiles
//gsoap trt  service method-output-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse
int __trt__GetProfiles(
    struct _trt__GetProfiles*           trt__GetProfiles,	///< Input parameter
    struct _trt__GetProfilesResponse   *trt__GetProfilesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoEncoderConfiguration" of service binding "MediaBinding".
This operation adds a VideoEncoderConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. A device shall
support adding a compatible VideoEncoderConfiguration to a Profile containing a
VideoSourceConfiguration and shall
support streaming video data of such a profile.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,
    // output parameters:
    struct _trt__AddVideoEncoderConfigurationResponse*trt__AddVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,
    // output parameters:
    struct _trt__AddVideoEncoderConfigurationResponse*trt__AddVideoEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	AddVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	AddVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration
//gsoap trt  service method-output-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfigurationResponse
int __trt__AddVideoEncoderConfiguration(
    struct _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,	///< Input parameter
    struct _trt__AddVideoEncoderConfigurationResponse*trt__AddVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoSourceConfiguration" of service binding "MediaBinding".
This operation adds a VideoSourceConfiguration to an existing media profile. If
such a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddVideoSourceConfiguration* trt__AddVideoSourceConfiguration,
    // output parameters:
    struct _trt__AddVideoSourceConfigurationResponse*trt__AddVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddVideoSourceConfiguration* trt__AddVideoSourceConfiguration,
    // output parameters:
    struct _trt__AddVideoSourceConfigurationResponse*trt__AddVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	AddVideoSourceConfiguration document
//gsoap trt  service method-encoding:	AddVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration
//gsoap trt  service method-output-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfigurationResponse
int __trt__AddVideoSourceConfiguration(
    struct _trt__AddVideoSourceConfiguration* trt__AddVideoSourceConfiguration,	///< Input parameter
    struct _trt__AddVideoSourceConfigurationResponse*trt__AddVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioEncoderConfiguration" of service binding "MediaBinding".
This operation adds an AudioEncoderConfiguration to an existing media profile. If
a 
configuration exists in the media profile, it will be replaced. The change shall
be persistent. A device shall
support adding a compatible AudioEncoderConfiguration to a profile containing an
AudioSourceConfiguration and shall
support streaming audio data of such a profile.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,
    // output parameters:
    struct _trt__AddAudioEncoderConfigurationResponse*trt__AddAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,
    // output parameters:
    struct _trt__AddAudioEncoderConfigurationResponse*trt__AddAudioEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	AddAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration
//gsoap trt  service method-output-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfigurationResponse
int __trt__AddAudioEncoderConfiguration(
    struct _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,	///< Input parameter
    struct _trt__AddAudioEncoderConfigurationResponse*trt__AddAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioSourceConfiguration" of service binding "MediaBinding".
This operation adds an AudioSourceConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddAudioSourceConfiguration* trt__AddAudioSourceConfiguration,
    // output parameters:
    struct _trt__AddAudioSourceConfigurationResponse*trt__AddAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddAudioSourceConfiguration* trt__AddAudioSourceConfiguration,
    // output parameters:
    struct _trt__AddAudioSourceConfigurationResponse*trt__AddAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	AddAudioSourceConfiguration document
//gsoap trt  service method-encoding:	AddAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration
//gsoap trt  service method-output-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfigurationResponse
int __trt__AddAudioSourceConfiguration(
    struct _trt__AddAudioSourceConfiguration* trt__AddAudioSourceConfiguration,	///< Input parameter
    struct _trt__AddAudioSourceConfigurationResponse*trt__AddAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddPTZConfiguration                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddPTZConfiguration" of service binding "MediaBinding".
This operation adds a PTZConfiguration to an existing media profile. If a configuration
exists
in the media profile, it will be replaced. The change shall be persistent. Adding
a PTZConfiguration to a media profile means that streams using that media profile
can
contain PTZ status (in the metadata), and that the media profile can be used for
controlling
PTZ movement.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddPTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddPTZConfiguration*   trt__AddPTZConfiguration,
    // output parameters:
    struct _trt__AddPTZConfigurationResponse*trt__AddPTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddPTZConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddPTZConfiguration*   trt__AddPTZConfiguration,
    // output parameters:
    struct _trt__AddPTZConfigurationResponse*trt__AddPTZConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddPTZConfiguration SOAP
//gsoap trt  service method-style:	AddPTZConfiguration document
//gsoap trt  service method-encoding:	AddPTZConfiguration literal
//gsoap trt  service method-input-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration
//gsoap trt  service method-output-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfigurationResponse
int __trt__AddPTZConfiguration(
    struct _trt__AddPTZConfiguration*   trt__AddPTZConfiguration,	///< Input parameter
    struct _trt__AddPTZConfigurationResponse*trt__AddPTZConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoAnalyticsConfiguration" of service binding "MediaBinding".
This operation adds a VideoAnalytics configuration to an existing media profile.
If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a VideoAnalyticsConfiguration to a media profile means that
streams using that media
profile can contain video analytics data (in the metadata) as defined by the submitted
configuration reference. A profile containing only a video analytics configuration
but no video source configuration is incomplete. Therefore, a client should first
add a video source configuration to a profile before adding a video analytics configuration.
The device can deny adding of a video analytics
configuration before a video source configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__AddVideoAnalyticsConfigurationResponse*trt__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__AddVideoAnalyticsConfigurationResponse*trt__AddVideoAnalyticsConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	AddVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	AddVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfigurationResponse
int __trt__AddVideoAnalyticsConfiguration(
    struct _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,	///< Input parameter
    struct _trt__AddVideoAnalyticsConfigurationResponse*trt__AddVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddMetadataConfiguration" of service binding "MediaBinding".
This operation adds a Metadata configuration to an existing media profile. If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a MetadataConfiguration to a Profile means that streams using
that profile contain metadata. Metadata can consist of events, PTZ status, and/or
video analytics data.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddMetadataConfiguration* trt__AddMetadataConfiguration,
    // output parameters:
    struct _trt__AddMetadataConfigurationResponse*trt__AddMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddMetadataConfiguration* trt__AddMetadataConfiguration,
    // output parameters:
    struct _trt__AddMetadataConfigurationResponse*trt__AddMetadataConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddMetadataConfiguration SOAP
//gsoap trt  service method-style:	AddMetadataConfiguration document
//gsoap trt  service method-encoding:	AddMetadataConfiguration literal
//gsoap trt  service method-input-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration
//gsoap trt  service method-output-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfigurationResponse
int __trt__AddMetadataConfiguration(
    struct _trt__AddMetadataConfiguration* trt__AddMetadataConfiguration,	///< Input parameter
    struct _trt__AddMetadataConfigurationResponse*trt__AddMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioOutputConfiguration" of service binding "MediaBinding".
This operation adds an AudioOutputConfiguration to an existing media profile. If
a configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddAudioOutputConfiguration* trt__AddAudioOutputConfiguration,
    // output parameters:
    struct _trt__AddAudioOutputConfigurationResponse*trt__AddAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddAudioOutputConfiguration* trt__AddAudioOutputConfiguration,
    // output parameters:
    struct _trt__AddAudioOutputConfigurationResponse*trt__AddAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	AddAudioOutputConfiguration document
//gsoap trt  service method-encoding:	AddAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration
//gsoap trt  service method-output-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfigurationResponse
int __trt__AddAudioOutputConfiguration(
    struct _trt__AddAudioOutputConfiguration* trt__AddAudioOutputConfiguration,	///< Input parameter
    struct _trt__AddAudioOutputConfigurationResponse*trt__AddAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioDecoderConfiguration" of service binding "MediaBinding".
This operation adds an AudioDecoderConfiguration to an existing media profile. If
a configuration exists in the media profile, it shall be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,
    // output parameters:
    struct _trt__AddAudioDecoderConfigurationResponse*trt__AddAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,
    // output parameters:
    struct _trt__AddAudioDecoderConfigurationResponse*trt__AddAudioDecoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	AddAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration
//gsoap trt  service method-output-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfigurationResponse
int __trt__AddAudioDecoderConfiguration(
    struct _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,	///< Input parameter
    struct _trt__AddAudioDecoderConfigurationResponse*trt__AddAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoEncoderConfiguration" of service binding "MediaBinding".
This operation removes a VideoEncoderConfiguration from an existing media profile.
If the
media profile does not contain a VideoEncoderConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,
    // output parameters:
    struct _trt__RemoveVideoEncoderConfigurationResponse*trt__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,
    // output parameters:
    struct _trt__RemoveVideoEncoderConfigurationResponse*trt__RemoveVideoEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration
//gsoap trt  service method-output-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfigurationResponse
int __trt__RemoveVideoEncoderConfiguration(
    struct _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,	///< Input parameter
    struct _trt__RemoveVideoEncoderConfigurationResponse*trt__RemoveVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoSourceConfiguration" of service binding "MediaBinding".
This operation removes a VideoSourceConfiguration from an existing media profile.
If the
media profile does not contain a VideoSourceConfiguration, the operation has no
effect. The removal shall be persistent. Video source configurations should only
be removed after removing a
VideoEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,
    // output parameters:
    struct _trt__RemoveVideoSourceConfigurationResponse*trt__RemoveVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,
    // output parameters:
    struct _trt__RemoveVideoSourceConfigurationResponse*trt__RemoveVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration
//gsoap trt  service method-output-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfigurationResponse
int __trt__RemoveVideoSourceConfiguration(
    struct _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,	///< Input parameter
    struct _trt__RemoveVideoSourceConfigurationResponse*trt__RemoveVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioEncoderConfiguration" of service binding "MediaBinding".
This operation removes an AudioEncoderConfiguration from an existing media profile.
If the
media profile does not contain an AudioEncoderConfiguration, the operation has
no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,
    // output parameters:
    struct _trt__RemoveAudioEncoderConfigurationResponse*trt__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,
    // output parameters:
    struct _trt__RemoveAudioEncoderConfigurationResponse*trt__RemoveAudioEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration
//gsoap trt  service method-output-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfigurationResponse
int __trt__RemoveAudioEncoderConfiguration(
    struct _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,	///< Input parameter
    struct _trt__RemoveAudioEncoderConfigurationResponse*trt__RemoveAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioSourceConfiguration" of service binding "MediaBinding".
This operation removes an AudioSourceConfiguration from an existing media profile.
If the
media profile does not contain an AudioSourceConfiguration, the operation has no
effect. The
removal shall be persistent. Audio source configurations should only be removed
after removing an
AudioEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,
    // output parameters:
    struct _trt__RemoveAudioSourceConfigurationResponse*trt__RemoveAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,
    // output parameters:
    struct _trt__RemoveAudioSourceConfigurationResponse*trt__RemoveAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration
//gsoap trt  service method-output-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfigurationResponse
int __trt__RemoveAudioSourceConfiguration(
    struct _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,	///< Input parameter
    struct _trt__RemoveAudioSourceConfigurationResponse*trt__RemoveAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemovePTZConfiguration                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemovePTZConfiguration" of service binding "MediaBinding".
This operation removes a PTZConfiguration from an existing media profile. If the
media profile
does not contain a PTZConfiguration, the operation has no effect. The removal shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemovePTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemovePTZConfiguration* trt__RemovePTZConfiguration,
    // output parameters:
    struct _trt__RemovePTZConfigurationResponse*trt__RemovePTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemovePTZConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemovePTZConfiguration* trt__RemovePTZConfiguration,
    // output parameters:
    struct _trt__RemovePTZConfigurationResponse*trt__RemovePTZConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemovePTZConfiguration SOAP
//gsoap trt  service method-style:	RemovePTZConfiguration document
//gsoap trt  service method-encoding:	RemovePTZConfiguration literal
//gsoap trt  service method-input-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration
//gsoap trt  service method-output-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfigurationResponse
int __trt__RemovePTZConfiguration(
    struct _trt__RemovePTZConfiguration* trt__RemovePTZConfiguration,	///< Input parameter
    struct _trt__RemovePTZConfigurationResponse*trt__RemovePTZConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoAnalyticsConfiguration                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoAnalyticsConfiguration" of service binding "MediaBinding".
This operation removes a VideoAnalyticsConfiguration from an existing media profile.
If the media profile does not contain a VideoAnalyticsConfiguration, the operation
has no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__RemoveVideoAnalyticsConfigurationResponse*trt__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__RemoveVideoAnalyticsConfigurationResponse*trt__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfigurationResponse
int __trt__RemoveVideoAnalyticsConfiguration(
    struct _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,	///< Input parameter
    struct _trt__RemoveVideoAnalyticsConfigurationResponse*trt__RemoveVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveMetadataConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveMetadataConfiguration" of service binding "MediaBinding".
This operation removes a MetadataConfiguration from an existing media profile. If
the media profile does not contain a MetadataConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveMetadataConfiguration* trt__RemoveMetadataConfiguration,
    // output parameters:
    struct _trt__RemoveMetadataConfigurationResponse*trt__RemoveMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveMetadataConfiguration* trt__RemoveMetadataConfiguration,
    // output parameters:
    struct _trt__RemoveMetadataConfigurationResponse*trt__RemoveMetadataConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveMetadataConfiguration SOAP
//gsoap trt  service method-style:	RemoveMetadataConfiguration document
//gsoap trt  service method-encoding:	RemoveMetadataConfiguration literal
//gsoap trt  service method-input-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration
//gsoap trt  service method-output-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfigurationResponse
int __trt__RemoveMetadataConfiguration(
    struct _trt__RemoveMetadataConfiguration* trt__RemoveMetadataConfiguration,	///< Input parameter
    struct _trt__RemoveMetadataConfigurationResponse*trt__RemoveMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioOutputConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioOutputConfiguration" of service binding "MediaBinding".
This operation removes an AudioOutputConfiguration from an existing media profile.
If the media profile does not contain an AudioOutputConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,
    // output parameters:
    struct _trt__RemoveAudioOutputConfigurationResponse*trt__RemoveAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,
    // output parameters:
    struct _trt__RemoveAudioOutputConfigurationResponse*trt__RemoveAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioOutputConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration
//gsoap trt  service method-output-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfigurationResponse
int __trt__RemoveAudioOutputConfiguration(
    struct _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,	///< Input parameter
    struct _trt__RemoveAudioOutputConfigurationResponse*trt__RemoveAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioDecoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioDecoderConfiguration" of service binding "MediaBinding".
This operation removes an AudioDecoderConfiguration from an existing media profile.
If the media profile does not contain an AudioDecoderConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,
    // output parameters:
    struct _trt__RemoveAudioDecoderConfigurationResponse*trt__RemoveAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,
    // output parameters:
    struct _trt__RemoveAudioDecoderConfigurationResponse*trt__RemoveAudioDecoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration
//gsoap trt  service method-output-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfigurationResponse
int __trt__RemoveAudioDecoderConfiguration(
    struct _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,	///< Input parameter
    struct _trt__RemoveAudioDecoderConfigurationResponse*trt__RemoveAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__DeleteProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__DeleteProfile" of service binding "MediaBinding".
This operation deletes a profile. This change shall always be persistent. Deletion
of a profile is only possible for non-fixed profiles

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__DeleteProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__DeleteProfile*         trt__DeleteProfile,
    // output parameters:
    struct _trt__DeleteProfileResponse *trt__DeleteProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__DeleteProfile(
    struct soap *soap,
    // input parameters:
    struct _trt__DeleteProfile*         trt__DeleteProfile,
    // output parameters:
    struct _trt__DeleteProfileResponse *trt__DeleteProfileResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	DeleteProfile SOAP
//gsoap trt  service method-style:	DeleteProfile document
//gsoap trt  service method-encoding:	DeleteProfile literal
//gsoap trt  service method-input-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfile
//gsoap trt  service method-output-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfileResponse
int __trt__DeleteProfile(
    struct _trt__DeleteProfile*         trt__DeleteProfile,	///< Input parameter
    struct _trt__DeleteProfileResponse *trt__DeleteProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfigurations" of service binding "MediaBinding".
This operation lists all existing video source configurations for a device. The
client need not know anything about the video source configurations in order to
use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationsResponse*trt__GetVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationsResponse*trt__GetVideoSourceConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfigurations SOAP
//gsoap trt  service method-style:	GetVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurations literal
//gsoap trt  service method-input-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations
//gsoap trt  service method-output-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationsResponse
int __trt__GetVideoSourceConfigurations(
    struct _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,	///< Input parameter
    struct _trt__GetVideoSourceConfigurationsResponse*trt__GetVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfigurations" of service binding "MediaBinding".
This operation lists all existing video encoder configurations of a device. This
command lists all configured video encoder configurations in a device. The client
need not know anything apriori about the video encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationsResponse*trt__GetVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationsResponse*trt__GetVideoEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations
//gsoap trt  service method-output-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationsResponse
int __trt__GetVideoEncoderConfigurations(
    struct _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,	///< Input parameter
    struct _trt__GetVideoEncoderConfigurationsResponse*trt__GetVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfigurations" of service binding "MediaBinding".
This operation lists all existing audio source configurations of a device. This
command lists all audio source configurations in a device. The client need not
know anything apriori about the audio source configurations in order to use the
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationsResponse*trt__GetAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationsResponse*trt__GetAudioSourceConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfigurations SOAP
//gsoap trt  service method-style:	GetAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurations literal
//gsoap trt  service method-input-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/
//gsoap trt  service method-output-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/Response
int __trt__GetAudioSourceConfigurations(
    struct _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,	///< Input parameter
    struct _trt__GetAudioSourceConfigurationsResponse*trt__GetAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfigurations" of service binding "MediaBinding".
This operation lists all existing device audio encoder configurations. The client
need not know anything apriori about the audio encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationsResponse*trt__GetAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationsResponse*trt__GetAudioEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations
//gsoap trt  service method-output-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationsResponse
int __trt__GetAudioEncoderConfigurations(
    struct _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,	///< Input parameter
    struct _trt__GetAudioEncoderConfigurationsResponse*trt__GetAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfigurations                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoAnalyticsConfigurations" of service binding "MediaBinding".
This operation lists all video analytics configurations of a device. This command
lists all configured video analytics in a device. The client need not know anything
apriori about the video analytics in order to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,
    // output parameters:
    struct _trt__GetVideoAnalyticsConfigurationsResponse*trt__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,
    // output parameters:
    struct _trt__GetVideoAnalyticsConfigurationsResponse*trt__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoAnalyticsConfigurations SOAP
//gsoap trt  service method-style:	GetVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfigurations literal
//gsoap trt  service method-input-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations
//gsoap trt  service method-output-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationsResponse
int __trt__GetVideoAnalyticsConfigurations(
    struct _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,	///< Input parameter
    struct _trt__GetVideoAnalyticsConfigurationsResponse*trt__GetVideoAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurations                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfigurations" of service binding "MediaBinding".
This operation lists all existing metadata configurations. The client need not know
anything apriori about the metadata in order to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetMetadataConfigurations* trt__GetMetadataConfigurations,
    // output parameters:
    struct _trt__GetMetadataConfigurationsResponse*trt__GetMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetMetadataConfigurations* trt__GetMetadataConfigurations,
    // output parameters:
    struct _trt__GetMetadataConfigurationsResponse*trt__GetMetadataConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetMetadataConfigurations SOAP
//gsoap trt  service method-style:	GetMetadataConfigurations document
//gsoap trt  service method-encoding:	GetMetadataConfigurations literal
//gsoap trt  service method-input-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations
//gsoap trt  service method-output-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationsResponse
int __trt__GetMetadataConfigurations(
    struct _trt__GetMetadataConfigurations* trt__GetMetadataConfigurations,	///< Input parameter
    struct _trt__GetMetadataConfigurationsResponse*trt__GetMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfigurations" of service binding "MediaBinding".
This command lists all existing AudioOutputConfigurations of a device. The NVC need
not know anything apriori about the audio configurations to use this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationsResponse*trt__GetAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationsResponse*trt__GetAudioOutputConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfigurations SOAP
//gsoap trt  service method-style:	GetAudioOutputConfigurations document
//gsoap trt  service method-encoding:	GetAudioOutputConfigurations literal
//gsoap trt  service method-input-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations
//gsoap trt  service method-output-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationsResponse
int __trt__GetAudioOutputConfigurations(
    struct _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,	///< Input parameter
    struct _trt__GetAudioOutputConfigurationsResponse*trt__GetAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfigurations" of service binding "MediaBinding".
This command lists all existing AudioDecoderConfigurations of a device. The NVC
need not know anything apriori about the audio decoder configurations in order
to
use this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationsResponse*trt__GetAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationsResponse*trt__GetAudioDecoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfigurations SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioDecoderConfigurations literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations
//gsoap trt  service method-output-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationsResponse
int __trt__GetAudioDecoderConfigurations(
    struct _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,	///< Input parameter
    struct _trt__GetAudioDecoderConfigurationsResponse*trt__GetAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfiguration" of service binding "MediaBinding".
If the video source configuration token is already known, the video source configuration
can be fetched through the GetVideoSourceConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSourceConfiguration* trt__GetVideoSourceConfiguration,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationResponse*trt__GetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSourceConfiguration* trt__GetVideoSourceConfiguration,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationResponse*trt__GetVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	GetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	GetVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration
//gsoap trt  service method-output-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationResponse
int __trt__GetVideoSourceConfiguration(
    struct _trt__GetVideoSourceConfiguration* trt__GetVideoSourceConfiguration,	///< Input parameter
    struct _trt__GetVideoSourceConfigurationResponse*trt__GetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfiguration" of service binding "MediaBinding".
If the video encoder configuration token is already known, the encoder configuration
can be fetched through the GetVideoEncoderConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationResponse*trt__GetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationResponse*trt__GetVideoEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	GetVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration
//gsoap trt  service method-output-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationResponse
int __trt__GetVideoEncoderConfiguration(
    struct _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,	///< Input parameter
    struct _trt__GetVideoEncoderConfigurationResponse*trt__GetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfiguration" of service binding "MediaBinding".
The GetAudioSourceConfiguration command fetches the audio source configurations
if the audio source configuration token is already known. An

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioSourceConfiguration* trt__GetAudioSourceConfiguration,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationResponse*trt__GetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioSourceConfiguration* trt__GetAudioSourceConfiguration,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationResponse*trt__GetAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	GetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	GetAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration
//gsoap trt  service method-output-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationResponse
int __trt__GetAudioSourceConfiguration(
    struct _trt__GetAudioSourceConfiguration* trt__GetAudioSourceConfiguration,	///< Input parameter
    struct _trt__GetAudioSourceConfigurationResponse*trt__GetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfiguration" of service binding "MediaBinding".
The GetAudioEncoderConfiguration command fetches the encoder configuration if the
audio encoder configuration token is known.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationResponse*trt__GetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationResponse*trt__GetAudioEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration
//gsoap trt  service method-output-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationResponse
int __trt__GetAudioEncoderConfiguration(
    struct _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,	///< Input parameter
    struct _trt__GetAudioEncoderConfigurationResponse*trt__GetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoAnalyticsConfiguration" of service binding "MediaBinding".
The GetVideoAnalyticsConfiguration command fetches the video analytics configuration
if the video analytics token is known.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__GetVideoAnalyticsConfigurationResponse*trt__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__GetVideoAnalyticsConfigurationResponse*trt__GetVideoAnalyticsConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	GetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationResponse
int __trt__GetVideoAnalyticsConfiguration(
    struct _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,	///< Input parameter
    struct _trt__GetVideoAnalyticsConfigurationResponse*trt__GetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfiguration" of service binding "MediaBinding".
The GetMetadataConfiguration command fetches the metadata configuration if the metadata
token is known.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetMetadataConfiguration* trt__GetMetadataConfiguration,
    // output parameters:
    struct _trt__GetMetadataConfigurationResponse*trt__GetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetMetadataConfiguration* trt__GetMetadataConfiguration,
    // output parameters:
    struct _trt__GetMetadataConfigurationResponse*trt__GetMetadataConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetMetadataConfiguration SOAP
//gsoap trt  service method-style:	GetMetadataConfiguration document
//gsoap trt  service method-encoding:	GetMetadataConfiguration literal
//gsoap trt  service method-input-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration
//gsoap trt  service method-output-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationResponse
int __trt__GetMetadataConfiguration(
    struct _trt__GetMetadataConfiguration* trt__GetMetadataConfiguration,	///< Input parameter
    struct _trt__GetMetadataConfigurationResponse*trt__GetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfiguration" of service binding "MediaBinding".
If the audio output configuration token is already known, the output configuration
can be fetched through the GetAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioOutputConfiguration* trt__GetAudioOutputConfiguration,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationResponse*trt__GetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioOutputConfiguration* trt__GetAudioOutputConfiguration,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationResponse*trt__GetAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	GetAudioOutputConfiguration document
//gsoap trt  service method-encoding:	GetAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration
//gsoap trt  service method-output-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationResponse
int __trt__GetAudioOutputConfiguration(
    struct _trt__GetAudioOutputConfiguration* trt__GetAudioOutputConfiguration,	///< Input parameter
    struct _trt__GetAudioOutputConfigurationResponse*trt__GetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfiguration" of service binding "MediaBinding".
If the audio decoder configuration token is already known, the decoder configuration
can be fetched through the GetAudioDecoderConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationResponse*trt__GetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationResponse*trt__GetAudioDecoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration
//gsoap trt  service method-output-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationResponse
int __trt__GetAudioDecoderConfiguration(
    struct _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,	///< Input parameter
    struct _trt__GetAudioDecoderConfigurationResponse*trt__GetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoEncoderConfigurations" of service binding "MediaBinding".
This operation lists all the video encoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoEncoderConfiguration command on the
media profile. The result will vary depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*trt__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*trt__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurationsResponse
int __trt__GetCompatibleVideoEncoderConfigurations(
    struct _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,	///< Input parameter
    struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*trt__GetCompatibleVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoSourceConfigurations" of service binding "MediaBinding".
This operation requests all the video source configurations of the device that are
compatible
with a certain media profile. Each of the returned configurations shall be a valid
input
parameter for the AddVideoSourceConfiguration command on the media profile. The
result
will vary depending on the capabilities, configurations and settings in the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoSourceConfigurationsResponse*trt__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoSourceConfigurationsResponse*trt__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoSourceConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoSourceConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurationsResponse
int __trt__GetCompatibleVideoSourceConfigurations(
    struct _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,	///< Input parameter
    struct _trt__GetCompatibleVideoSourceConfigurationsResponse*trt__GetCompatibleVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioEncoderConfigurations" of service binding "MediaBinding".
This operation requests all audio encoder configurations of a device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioSourceConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*trt__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*trt__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurationsResponse
int __trt__GetCompatibleAudioEncoderConfigurations(
    struct _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,	///< Input parameter
    struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*trt__GetCompatibleAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioSourceConfigurations" of service binding "MediaBinding".
This operation requests all audio source configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioEncoderConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioSourceConfigurationsResponse*trt__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioSourceConfigurationsResponse*trt__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioSourceConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioSourceConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurationsResponse
int __trt__GetCompatibleAudioSourceConfigurations(
    struct _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,	///< Input parameter
    struct _trt__GetCompatibleAudioSourceConfigurationsResponse*trt__GetCompatibleAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoAnalyticsConfigurations                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoAnalyticsConfigurations" of service binding "MediaBinding".
This operation requests all video analytic configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoAnalyticsConfiguration command on the
media profile. The result varies depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*trt__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*trt__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoAnalyticsConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoAnalyticsConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurationsResponse
int __trt__GetCompatibleVideoAnalyticsConfigurations(
    struct _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,	///< Input parameter
    struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*trt__GetCompatibleVideoAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleMetadataConfigurations                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleMetadataConfigurations" of service binding "MediaBinding".
This operation requests all the metadata configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddMetadataConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,
    // output parameters:
    struct _trt__GetCompatibleMetadataConfigurationsResponse*trt__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,
    // output parameters:
    struct _trt__GetCompatibleMetadataConfigurationsResponse*trt__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleMetadataConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleMetadataConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleMetadataConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations
//gsoap trt  service method-output-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurationsResponse
int __trt__GetCompatibleMetadataConfigurations(
    struct _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,	///< Input parameter
    struct _trt__GetCompatibleMetadataConfigurationsResponse*trt__GetCompatibleMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioOutputConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioOutputConfigurations" of service binding "MediaBinding".
This command lists all audio output configurations of a device that are compatible
with a certain media profile. Each returned configuration shall be a valid input
for the 
AddAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioOutputConfigurationsResponse*trt__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioOutputConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioOutputConfigurationsResponse*trt__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioOutputConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioOutputConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioOutputConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurationsResponse
int __trt__GetCompatibleAudioOutputConfigurations(
    struct _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,	///< Input parameter
    struct _trt__GetCompatibleAudioOutputConfigurationsResponse*trt__GetCompatibleAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioDecoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioDecoderConfigurations" of service binding "MediaBinding".
This operation lists all the audio decoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddAudioDecoderConfiguration command on the
media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*trt__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioDecoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*trt__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioDecoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioDecoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioDecoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurationsResponse
int __trt__GetCompatibleAudioDecoderConfigurations(
    struct _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,	///< Input parameter
    struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*trt__GetCompatibleAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoSourceConfiguration" of service binding "MediaBinding".
This operation modifies a video source configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Running streams
using this configuration may be immediately updated according to the new settings.
The changes are not guaranteed to take effect unless the client requests a new
stream URI and restarts any affected stream. NVC methods for changing a running
stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetVideoSourceConfiguration* trt__SetVideoSourceConfiguration,
    // output parameters:
    struct _trt__SetVideoSourceConfigurationResponse*trt__SetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetVideoSourceConfiguration* trt__SetVideoSourceConfiguration,
    // output parameters:
    struct _trt__SetVideoSourceConfigurationResponse*trt__SetVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	SetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	SetVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration
//gsoap trt  service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfigurationResponse
int __trt__SetVideoSourceConfiguration(
    struct _trt__SetVideoSourceConfiguration* trt__SetVideoSourceConfiguration,	///< Input parameter
    struct _trt__SetVideoSourceConfigurationResponse*trt__SetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoEncoderConfiguration" of service binding "MediaBinding".
This operation modifies a video encoder configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Changes in the
Multicast settings shall always be persistent. Running streams using this configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream. NVC methods for changing a running stream are out of scope for this specification.
<br/>SessionTimeout is provided as a hint for keeping rtsp session by a device.
If necessary the device may adapt parameter values for SessionTimeout elements
without returning an error. For the time between keep alive calls the client shall
adhere to the timeout value signaled via RTSP.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,
    // output parameters:
    struct _trt__SetVideoEncoderConfigurationResponse*trt__SetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,
    // output parameters:
    struct _trt__SetVideoEncoderConfigurationResponse*trt__SetVideoEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	SetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	SetVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration
//gsoap trt  service method-output-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfigurationResponse
int __trt__SetVideoEncoderConfiguration(
    struct _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,	///< Input parameter
    struct _trt__SetVideoEncoderConfigurationResponse*trt__SetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioSourceConfiguration" of service binding "MediaBinding".
This operation modifies an audio source configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream
NVC methods for changing a running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetAudioSourceConfiguration* trt__SetAudioSourceConfiguration,
    // output parameters:
    struct _trt__SetAudioSourceConfigurationResponse*trt__SetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetAudioSourceConfiguration* trt__SetAudioSourceConfiguration,
    // output parameters:
    struct _trt__SetAudioSourceConfigurationResponse*trt__SetAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	SetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	SetAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration
//gsoap trt  service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfigurationResponse
int __trt__SetAudioSourceConfiguration(
    struct _trt__SetAudioSourceConfiguration* trt__SetAudioSourceConfiguration,	///< Input parameter
    struct _trt__SetAudioSourceConfigurationResponse*trt__SetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioEncoderConfiguration" of service binding "MediaBinding".
This operation modifies an audio encoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration may be immediately updated
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,
    // output parameters:
    struct _trt__SetAudioEncoderConfigurationResponse*trt__SetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,
    // output parameters:
    struct _trt__SetAudioEncoderConfigurationResponse*trt__SetAudioEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	SetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration
//gsoap trt  service method-output-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfigurationResponse
int __trt__SetAudioEncoderConfiguration(
    struct _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,	///< Input parameter
    struct _trt__SetAudioEncoderConfigurationResponse*trt__SetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoAnalyticsConfiguration" of service binding "MediaBinding".
A video analytics configuration is modified using this command. The ForcePersistence
flag
indicates if the changes shall remain after reboot of the device or not. Running
streams using
this configuration shall be immediately updated according to the new settings.
Otherwise
inconsistencies can occur between the scene description processed by the rule engine
and
the notifications produced by analytics engine and rule engine which reference
the very same
video analytics configuration token.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__SetVideoAnalyticsConfigurationResponse*trt__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__SetVideoAnalyticsConfigurationResponse*trt__SetVideoAnalyticsConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	SetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	SetVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfigurationResponse
int __trt__SetVideoAnalyticsConfiguration(
    struct _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,	///< Input parameter
    struct _trt__SetVideoAnalyticsConfigurationResponse*trt__SetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetMetadataConfiguration" of service binding "MediaBinding".
This operation modifies a metadata configuration. The ForcePersistence flag indicates
if the
changes shall remain after reboot of the device. Changes in the Multicast settings
shall
always be persistent. Running streams using this configuration may be updated immediately
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetMetadataConfiguration* trt__SetMetadataConfiguration,
    // output parameters:
    struct _trt__SetMetadataConfigurationResponse*trt__SetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetMetadataConfiguration* trt__SetMetadataConfiguration,
    // output parameters:
    struct _trt__SetMetadataConfigurationResponse*trt__SetMetadataConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetMetadataConfiguration SOAP
//gsoap trt  service method-style:	SetMetadataConfiguration document
//gsoap trt  service method-encoding:	SetMetadataConfiguration literal
//gsoap trt  service method-input-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration
//gsoap trt  service method-output-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfigurationResponse
int __trt__SetMetadataConfiguration(
    struct _trt__SetMetadataConfiguration* trt__SetMetadataConfiguration,	///< Input parameter
    struct _trt__SetMetadataConfigurationResponse*trt__SetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioOutputConfiguration" of service binding "MediaBinding".
This operation modifies an audio output configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetAudioOutputConfiguration* trt__SetAudioOutputConfiguration,
    // output parameters:
    struct _trt__SetAudioOutputConfigurationResponse*trt__SetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetAudioOutputConfiguration* trt__SetAudioOutputConfiguration,
    // output parameters:
    struct _trt__SetAudioOutputConfigurationResponse*trt__SetAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	SetAudioOutputConfiguration document
//gsoap trt  service method-encoding:	SetAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration
//gsoap trt  service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfigurationResponse
int __trt__SetAudioOutputConfiguration(
    struct _trt__SetAudioOutputConfiguration* trt__SetAudioOutputConfiguration,	///< Input parameter
    struct _trt__SetAudioOutputConfigurationResponse*trt__SetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioDecoderConfiguration" of service binding "MediaBinding".
This operation modifies an audio decoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,
    // output parameters:
    struct _trt__SetAudioDecoderConfigurationResponse*trt__SetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,
    // output parameters:
    struct _trt__SetAudioDecoderConfigurationResponse*trt__SetAudioDecoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	SetAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration
//gsoap trt  service method-output-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfigurationResponse
int __trt__SetAudioDecoderConfiguration(
    struct _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,	///< Input parameter
    struct _trt__SetAudioDecoderConfigurationResponse*trt__SetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options  (supported values and ranges for video
source configuration parameters) when the video source parameters are
reconfigured If a video source configuration is specified, the options shall concern
that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationOptionsResponse*trt__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationOptionsResponse*trt__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfigurationOptions SOAP
//gsoap trt  service method-style:	GetVideoSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap trt  service method-input-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/
//gsoap trt  service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/Response
int __trt__GetVideoSourceConfigurationOptions(
    struct _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,	///< Input parameter
    struct _trt__GetVideoSourceConfigurationOptionsResponse*trt__GetVideoSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for video
encoder 
				configuration parameters) when the video encoder
parameters are reconfigured. <br/>
				For JPEG, MPEG4 and H264 extension elements have
been defined that provide additional information. A device must provide the 
				XxxOption information for all encodings supported
and should additionally provide the corresponding XxxOption2 information.<br/>
				This response contains the available video encoder
configuration options. If a video encoder configuration is specified, 
				the options shall concern that particular configuration.
If a media profile is specified, the options shall be 
				compatible with that media profile. If no tokens
are specified, the options shall be considered generic for the device.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationOptionsResponse*trt__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationOptionsResponse*trt__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions
//gsoap trt  service method-output-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptionsResponse
int __trt__GetVideoEncoderConfigurationOptions(
    struct _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,	///< Input parameter
    struct _trt__GetVideoEncoderConfigurationOptionsResponse*trt__GetVideoEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for audio
source configuration parameters) when the audio source parameters are
reconfigured. If an audio source configuration is specified, the options shall
concern that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationOptionsResponse*trt__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationOptionsResponse*trt__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptionsResponse
int __trt__GetAudioSourceConfigurationOptions(
    struct _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,	///< Input parameter
    struct _trt__GetAudioSourceConfigurationOptionsResponse*trt__GetAudioSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options  (supported values and ranges for audio
encoder configuration parameters) when the audio encoder parameters are
reconfigured.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationOptionsResponse*trt__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationOptionsResponse*trt__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptionsResponse
int __trt__GetAudioEncoderConfigurationOptions(
    struct _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,	///< Input parameter
    struct _trt__GetAudioEncoderConfigurationOptionsResponse*trt__GetAudioEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurationOptions                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for metadata
configuration parameters) for changing the metadata configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,
    // output parameters:
    struct _trt__GetMetadataConfigurationOptionsResponse*trt__GetMetadataConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,
    // output parameters:
    struct _trt__GetMetadataConfigurationOptionsResponse*trt__GetMetadataConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetMetadataConfigurationOptions SOAP
//gsoap trt  service method-style:	GetMetadataConfigurationOptions document
//gsoap trt  service method-encoding:	GetMetadataConfigurationOptions literal
//gsoap trt  service method-input-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions
//gsoap trt  service method-output-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptionsResponse
int __trt__GetMetadataConfigurationOptions(
    struct _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,	///< Input parameter
    struct _trt__GetMetadataConfigurationOptionsResponse*trt__GetMetadataConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for audio
output configuration parameters) for configuring an audio output.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationOptionsResponse*trt__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationOptionsResponse*trt__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioOutputConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptionsResponse
int __trt__GetAudioOutputConfigurationOptions(
    struct _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,	///< Input parameter
    struct _trt__GetAudioOutputConfigurationOptionsResponse*trt__GetAudioOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfigurationOptions" of service binding "MediaBinding".
This command list the audio decoding capabilities for a given profile and configuration
of a
device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationOptionsResponse*trt__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationOptionsResponse*trt__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioDecoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptionsResponse
int __trt__GetAudioDecoderConfigurationOptions(
    struct _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,	///< Input parameter
    struct _trt__GetAudioDecoderConfigurationOptionsResponse*trt__GetAudioDecoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetGuaranteedNumberOfVideoEncoderInstances                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetGuaranteedNumberOfVideoEncoderInstances" of service binding "MediaBinding".
The GetGuaranteedNumberOfVideoEncoderInstances command can be used to request the
minimum number of guaranteed video encoder instances (applications) per Video Source
Configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstancesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,
    // output parameters:
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    // input parameters:
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,
    // output parameters:
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetGuaranteedNumberOfVideoEncoderInstances SOAP
//gsoap trt  service method-style:	GetGuaranteedNumberOfVideoEncoderInstances document
//gsoap trt  service method-encoding:	GetGuaranteedNumberOfVideoEncoderInstances literal
//gsoap trt  service method-input-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances
//gsoap trt  service method-output-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstancesResponse
int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,	///< Input parameter
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetStreamUri                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetStreamUri" of service binding "MediaBinding".
This operation requests a URI that can be used to initiate a live media stream using
RTSP as
the control protocol. The returned URI shall remain valid indefinitely even if
the profile is
changed. The ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be
set
accordingly (ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). <br/>
				The correct syntax for the StreamSetup element for
these media stream setups defined in 5.1.1 of the streaming specification are as
follows:
				<ol>
					<li>RTP unicast over UDP: StreamType = "RTP_unicast",
TransportProtocol = "UDP"</li>
					<li>RTP over RTSP over HTTP over TCP: StreamType
= "RTP_unicast", TransportProtocol = "HTTP"</li>
					<li>RTP over RTSP over TCP: StreamType =
"RTP_unicast", TransportProtocol = "RTSP"</li>
				</ol>
				<br/>
If a multicast stream is requested at least one of VideoEncoderConfiguration, AudioEncoderConfiguration
and MetadataConfiguration shall have a valid multicast setting.<br/>
For full compatibility with other ONVIF services a device should not generate Uris
longer than
128 octets.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetStreamUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetStreamUri*          trt__GetStreamUri,
    // output parameters:
    struct _trt__GetStreamUriResponse  *trt__GetStreamUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetStreamUri(
    struct soap *soap,
    // input parameters:
    struct _trt__GetStreamUri*          trt__GetStreamUri,
    // output parameters:
    struct _trt__GetStreamUriResponse  *trt__GetStreamUriResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetStreamUri SOAP
//gsoap trt  service method-style:	GetStreamUri document
//gsoap trt  service method-encoding:	GetStreamUri literal
//gsoap trt  service method-input-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUri
//gsoap trt  service method-output-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUriResponse
int __trt__GetStreamUri(
    struct _trt__GetStreamUri*          trt__GetStreamUri,	///< Input parameter
    struct _trt__GetStreamUriResponse  *trt__GetStreamUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StartMulticastStreaming                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__StartMulticastStreaming" of service binding "MediaBinding".
This command starts multicast streaming using a specified media profile of a device.
Streaming continues until StopMulticastStreaming is called for the same Profile.
The
streaming shall continue after a reboot of the device until a StopMulticastStreaming
request is
received. The multicast address, port and TTL are configured in the
VideoEncoderConfiguration, AudioEncoderConfiguration and MetadataConfiguration
respectively.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__StartMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__StartMulticastStreaming* trt__StartMulticastStreaming,
    // output parameters:
    struct _trt__StartMulticastStreamingResponse*trt__StartMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__StartMulticastStreaming(
    struct soap *soap,
    // input parameters:
    struct _trt__StartMulticastStreaming* trt__StartMulticastStreaming,
    // output parameters:
    struct _trt__StartMulticastStreamingResponse*trt__StartMulticastStreamingResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	StartMulticastStreaming SOAP
//gsoap trt  service method-style:	StartMulticastStreaming document
//gsoap trt  service method-encoding:	StartMulticastStreaming literal
//gsoap trt  service method-input-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming
//gsoap trt  service method-output-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreamingResponse
int __trt__StartMulticastStreaming(
    struct _trt__StartMulticastStreaming* trt__StartMulticastStreaming,	///< Input parameter
    struct _trt__StartMulticastStreamingResponse*trt__StartMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StopMulticastStreaming                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__StopMulticastStreaming" of service binding "MediaBinding".
This command stop multicast streaming using a specified media profile of a device

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__StopMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__StopMulticastStreaming* trt__StopMulticastStreaming,
    // output parameters:
    struct _trt__StopMulticastStreamingResponse*trt__StopMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__StopMulticastStreaming(
    struct soap *soap,
    // input parameters:
    struct _trt__StopMulticastStreaming* trt__StopMulticastStreaming,
    // output parameters:
    struct _trt__StopMulticastStreamingResponse*trt__StopMulticastStreamingResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	StopMulticastStreaming SOAP
//gsoap trt  service method-style:	StopMulticastStreaming document
//gsoap trt  service method-encoding:	StopMulticastStreaming literal
//gsoap trt  service method-input-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming
//gsoap trt  service method-output-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreamingResponse
int __trt__StopMulticastStreaming(
    struct _trt__StopMulticastStreaming* trt__StopMulticastStreaming,	///< Input parameter
    struct _trt__StopMulticastStreamingResponse*trt__StopMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetSynchronizationPoint" of service binding "MediaBinding".
Synchronization points allow clients to decode and correctly use all data after
the
synchronization point.
For example, if a video stream is configured with a large I-frame distance and
a client loses a
single packet, the client does not display video until the next I-frame is transmitted.
In such
cases, the client can request a Synchronization Point which enforces the device
to add an I-Frame as soon as possible. Clients can request Synchronization Points
for profiles. The device
shall add synchronization points for all streams associated with this profile.
Similarly, a synchronization point is used to get an update on full PTZ or event
status through
the metadata stream.
If a video stream is associated with the profile, an I-frame shall be added to
this video stream.
If a PTZ metadata stream is associated to the profile,
the PTZ position shall be repeated within the metadata stream.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetSynchronizationPoint* trt__SetSynchronizationPoint,
    // output parameters:
    struct _trt__SetSynchronizationPointResponse*trt__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetSynchronizationPoint(
    struct soap *soap,
    // input parameters:
    struct _trt__SetSynchronizationPoint* trt__SetSynchronizationPoint,
    // output parameters:
    struct _trt__SetSynchronizationPointResponse*trt__SetSynchronizationPointResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap trt  service method-style:	SetSynchronizationPoint document
//gsoap trt  service method-encoding:	SetSynchronizationPoint literal
//gsoap trt  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint
//gsoap trt  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPointResponse
int __trt__SetSynchronizationPoint(
    struct _trt__SetSynchronizationPoint* trt__SetSynchronizationPoint,	///< Input parameter
    struct _trt__SetSynchronizationPointResponse*trt__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetSnapshotUri                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetSnapshotUri" of service binding "MediaBinding".
A client uses the GetSnapshotUri command to obtain a JPEG snapshot from the
device. The returned URI shall remain valid indefinitely even if the profile is
changed. The
ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set accordingly
(ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). The URI can be
used for
acquiring a JPEG image through a HTTP GET operation. The image encoding will always
be
JPEG regardless of the encoding setting in the media profile. The Jpeg settings
(like resolution or quality) may be taken from the profile if suitable. The provided
image will be updated automatically and independent from calls to GetSnapshotUri.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetSnapshotUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetSnapshotUri*        trt__GetSnapshotUri,
    // output parameters:
    struct _trt__GetSnapshotUriResponse*trt__GetSnapshotUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetSnapshotUri(
    struct soap *soap,
    // input parameters:
    struct _trt__GetSnapshotUri*        trt__GetSnapshotUri,
    // output parameters:
    struct _trt__GetSnapshotUriResponse*trt__GetSnapshotUriResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetSnapshotUri SOAP
//gsoap trt  service method-style:	GetSnapshotUri document
//gsoap trt  service method-encoding:	GetSnapshotUri literal
//gsoap trt  service method-input-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri
//gsoap trt  service method-output-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse
int __trt__GetSnapshotUri(
    struct _trt__GetSnapshotUri*        trt__GetSnapshotUri,	///< Input parameter
    struct _trt__GetSnapshotUriResponse*trt__GetSnapshotUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceModes                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceModes" of service binding "MediaBinding".
A device returns the information for current video source mode and settable video
source modes of specified video source. A device that indicates a capability of
 VideoSourceModes shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceModes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSourceModes*   trt__GetVideoSourceModes,
    // output parameters:
    struct _trt__GetVideoSourceModesResponse*trt__GetVideoSourceModesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceModes(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSourceModes*   trt__GetVideoSourceModes,
    // output parameters:
    struct _trt__GetVideoSourceModesResponse*trt__GetVideoSourceModesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSourceModes SOAP
//gsoap trt  service method-style:	GetVideoSourceModes document
//gsoap trt  service method-encoding:	GetVideoSourceModes literal
//gsoap trt  service method-input-action:	GetVideoSourceModes http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes
//gsoap trt  service method-output-action:	GetVideoSourceModes http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModesResponse
int __trt__GetVideoSourceModes(
    struct _trt__GetVideoSourceModes*   trt__GetVideoSourceModes,	///< Input parameter
    struct _trt__GetVideoSourceModesResponse*trt__GetVideoSourceModesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoSourceMode                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoSourceMode" of service binding "MediaBinding".
SetVideoSourceMode changes the media profile structure relating to video source
for the specified video source mode. A device that indicates a capability of VideoSourceModes
shall support this command. The behavior after changing the mode is not defined
in this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoSourceMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetVideoSourceMode*    trt__SetVideoSourceMode,
    // output parameters:
    struct _trt__SetVideoSourceModeResponse*trt__SetVideoSourceModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoSourceMode(
    struct soap *soap,
    // input parameters:
    struct _trt__SetVideoSourceMode*    trt__SetVideoSourceMode,
    // output parameters:
    struct _trt__SetVideoSourceModeResponse*trt__SetVideoSourceModeResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetVideoSourceMode SOAP
//gsoap trt  service method-style:	SetVideoSourceMode document
//gsoap trt  service method-encoding:	SetVideoSourceMode literal
//gsoap trt  service method-input-action:	SetVideoSourceMode http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode
//gsoap trt  service method-output-action:	SetVideoSourceMode http://www.onvif.org/ver10/media/wsdl/SetVideoSourceModeResponse
int __trt__SetVideoSourceMode(
    struct _trt__SetVideoSourceMode*    trt__SetVideoSourceMode,	///< Input parameter
    struct _trt__SetVideoSourceModeResponse*trt__SetVideoSourceModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSDs                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSDs" of service binding "MediaBinding".
Get the OSDs.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetOSDs"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSDs"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSDs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetOSDs*               trt__GetOSDs,
    // output parameters:
    struct _trt__GetOSDsResponse       *trt__GetOSDsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSDs(
    struct soap *soap,
    // input parameters:
    struct _trt__GetOSDs*               trt__GetOSDs,
    // output parameters:
    struct _trt__GetOSDsResponse       *trt__GetOSDsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetOSDs SOAP
//gsoap trt  service method-style:	GetOSDs document
//gsoap trt  service method-encoding:	GetOSDs literal
//gsoap trt  service method-input-action:	GetOSDs http://www.onvif.org/ver10/media/wsdl/GetOSDs
//gsoap trt  service method-output-action:	GetOSDs http://www.onvif.org/ver10/media/wsdl/GetOSDsResponse
int __trt__GetOSDs(
    struct _trt__GetOSDs*               trt__GetOSDs,	///< Input parameter
    struct _trt__GetOSDsResponse       *trt__GetOSDsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSD                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSD" of service binding "MediaBinding".
Get the OSD.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetOSD*                trt__GetOSD,
    // output parameters:
    struct _trt__GetOSDResponse        *trt__GetOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSD(
    struct soap *soap,
    // input parameters:
    struct _trt__GetOSD*                trt__GetOSD,
    // output parameters:
    struct _trt__GetOSDResponse        *trt__GetOSDResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetOSD SOAP
//gsoap trt  service method-style:	GetOSD document
//gsoap trt  service method-encoding:	GetOSD literal
//gsoap trt  service method-input-action:	GetOSD http://www.onvif.org/ver10/media/wsdl/GetOSD
//gsoap trt  service method-output-action:	GetOSD http://www.onvif.org/ver10/media/wsdl/GetOSDResponse
int __trt__GetOSD(
    struct _trt__GetOSD*                trt__GetOSD,	///< Input parameter
    struct _trt__GetOSDResponse        *trt__GetOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSDOptions                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSDOptions" of service binding "MediaBinding".
Get the OSD Options.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSDOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetOSDOptions*         trt__GetOSDOptions,
    // output parameters:
    struct _trt__GetOSDOptionsResponse *trt__GetOSDOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSDOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetOSDOptions*         trt__GetOSDOptions,
    // output parameters:
    struct _trt__GetOSDOptionsResponse *trt__GetOSDOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetOSDOptions SOAP
//gsoap trt  service method-style:	GetOSDOptions document
//gsoap trt  service method-encoding:	GetOSDOptions literal
//gsoap trt  service method-input-action:	GetOSDOptions http://www.onvif.org/ver10/media/wsdl/GetOSDOptions
//gsoap trt  service method-output-action:	GetOSDOptions http://www.onvif.org/ver10/media/wsdl/GetOSDOptionsResponse
int __trt__GetOSDOptions(
    struct _trt__GetOSDOptions*         trt__GetOSDOptions,	///< Input parameter
    struct _trt__GetOSDOptionsResponse *trt__GetOSDOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetOSD                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetOSD" of service binding "MediaBinding".
Set the OSD

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetOSD*                trt__SetOSD,
    // output parameters:
    struct _trt__SetOSDResponse        *trt__SetOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetOSD(
    struct soap *soap,
    // input parameters:
    struct _trt__SetOSD*                trt__SetOSD,
    // output parameters:
    struct _trt__SetOSDResponse        *trt__SetOSDResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetOSD SOAP
//gsoap trt  service method-style:	SetOSD document
//gsoap trt  service method-encoding:	SetOSD literal
//gsoap trt  service method-input-action:	SetOSD http://www.onvif.org/ver10/media/wsdl/SetOSD
//gsoap trt  service method-output-action:	SetOSD http://www.onvif.org/ver10/media/wsdl/SetOSDResponse
int __trt__SetOSD(
    struct _trt__SetOSD*                trt__SetOSD,	///< Input parameter
    struct _trt__SetOSDResponse        *trt__SetOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateOSD                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__CreateOSD" of service binding "MediaBinding".
Create the OSD.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/CreateOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/CreateOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/CreateOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__CreateOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__CreateOSD*             trt__CreateOSD,
    // output parameters:
    struct _trt__CreateOSDResponse     *trt__CreateOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__CreateOSD(
    struct soap *soap,
    // input parameters:
    struct _trt__CreateOSD*             trt__CreateOSD,
    // output parameters:
    struct _trt__CreateOSDResponse     *trt__CreateOSDResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	CreateOSD SOAP
//gsoap trt  service method-style:	CreateOSD document
//gsoap trt  service method-encoding:	CreateOSD literal
//gsoap trt  service method-input-action:	CreateOSD http://www.onvif.org/ver10/media/wsdl/CreateOSD
//gsoap trt  service method-output-action:	CreateOSD http://www.onvif.org/ver10/media/wsdl/CreateOSDResponse
int __trt__CreateOSD(
    struct _trt__CreateOSD*             trt__CreateOSD,	///< Input parameter
    struct _trt__CreateOSDResponse     *trt__CreateOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__DeleteOSD                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__DeleteOSD" of service binding "MediaBinding".
Delete the OSD.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/DeleteOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__DeleteOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__DeleteOSD*             trt__DeleteOSD,
    // output parameters:
    struct _trt__DeleteOSDResponse     *trt__DeleteOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__DeleteOSD(
    struct soap *soap,
    // input parameters:
    struct _trt__DeleteOSD*             trt__DeleteOSD,
    // output parameters:
    struct _trt__DeleteOSDResponse     *trt__DeleteOSDResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	DeleteOSD SOAP
//gsoap trt  service method-style:	DeleteOSD document
//gsoap trt  service method-encoding:	DeleteOSD literal
//gsoap trt  service method-input-action:	DeleteOSD http://www.onvif.org/ver10/media/wsdl/DeleteOSD
//gsoap trt  service method-output-action:	DeleteOSD http://www.onvif.org/ver10/media/wsdl/DeleteOSDResponse
int __trt__DeleteOSD(
    struct _trt__DeleteOSD*             trt__DeleteOSD,	///< Input parameter
    struct _trt__DeleteOSDResponse     *trt__DeleteOSDResponse	///< Output parameter
);

/** @page MediaBinding Binding "MediaBinding"

@section MediaBinding_policy_enablers Policy Enablers of Binding "MediaBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/** @page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings that are contractually bound by WSDLs and
are auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data
bindings are adopted from XML schemas as part of the WSDL types section or when
running wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

@note The following readers and writers are C/C++ data type (de)serializers
auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

@note Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

@note Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

@note The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_set_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_set_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


*/

/**

@section tdn Top-level root elements of schema "http://www.onvif.org/ver10/network/wsdl"

  - <tdn:Hello> (use wsdl2h option -g to auto-generate type _tdn__Hello)

  - <tdn:HelloResponse> (use wsdl2h option -g to auto-generate type _tdn__HelloResponse)

  - <tdn:Probe> (use wsdl2h option -g to auto-generate type _tdn__Probe)

  - <tdn:ProbeResponse> (use wsdl2h option -g to auto-generate type _tdn__ProbeResponse)

  - <tdn:Bye> (use wsdl2h option -g to auto-generate type _tdn__Bye)

  - <tdn:ByeResponse> (use wsdl2h option -g to auto-generate type _tdn__ByeResponse)

*/

/**

@section tmd Top-level root elements of schema "http://www.onvif.org/ver10/deviceIO/wsdl"

  - <tmd:GetServiceCapabilities> @ref _tmd__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetServiceCapabilities(struct soap*, struct _tmd__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetServiceCapabilities(struct soap*, struct _tmd__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetServiceCapabilities(struct soap*, const char *URL, struct _tmd__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetServiceCapabilities(struct soap*, const char *URL, struct _tmd__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetServiceCapabilities(struct soap*, const char *URL, struct _tmd__GetServiceCapabilities*);
    soap_POST_recv__tmd__GetServiceCapabilities(struct soap*, struct _tmd__GetServiceCapabilities*);
    @endcode

  - <tmd:GetServiceCapabilitiesResponse> @ref _tmd__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetServiceCapabilitiesResponse(struct soap*, struct _tmd__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetServiceCapabilitiesResponse(struct soap*, struct _tmd__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tmd__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tmd__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tmd__GetServiceCapabilitiesResponse*);
    soap_POST_recv__tmd__GetServiceCapabilitiesResponse(struct soap*, struct _tmd__GetServiceCapabilitiesResponse*);
    @endcode

  - <tmd:Capabilities> (use wsdl2h option -g to auto-generate type _tmd__Capabilities)

  - <tmd:GetRelayOutputOptions> @ref _tmd__GetRelayOutputOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetRelayOutputOptions(struct soap*, struct _tmd__GetRelayOutputOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetRelayOutputOptions(struct soap*, struct _tmd__GetRelayOutputOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetRelayOutputOptions(struct soap*, const char *URL, struct _tmd__GetRelayOutputOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetRelayOutputOptions(struct soap*, const char *URL, struct _tmd__GetRelayOutputOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetRelayOutputOptions(struct soap*, const char *URL, struct _tmd__GetRelayOutputOptions*);
    soap_POST_recv__tmd__GetRelayOutputOptions(struct soap*, struct _tmd__GetRelayOutputOptions*);
    @endcode

  - <tmd:GetRelayOutputOptionsResponse> @ref _tmd__GetRelayOutputOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetRelayOutputOptionsResponse(struct soap*, struct _tmd__GetRelayOutputOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetRelayOutputOptionsResponse(struct soap*, struct _tmd__GetRelayOutputOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetRelayOutputOptionsResponse(struct soap*, const char *URL, struct _tmd__GetRelayOutputOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetRelayOutputOptionsResponse(struct soap*, const char *URL, struct _tmd__GetRelayOutputOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetRelayOutputOptionsResponse(struct soap*, const char *URL, struct _tmd__GetRelayOutputOptionsResponse*);
    soap_POST_recv__tmd__GetRelayOutputOptionsResponse(struct soap*, struct _tmd__GetRelayOutputOptionsResponse*);
    @endcode

  - <tmd:GetVideoSources> (use wsdl2h option -g to auto-generate type _tmd__GetVideoSources)

  - <tmd:GetVideoSourcesResponse> (use wsdl2h option -g to auto-generate type _tmd__GetVideoSourcesResponse)

  - <tmd:GetAudioSources> (use wsdl2h option -g to auto-generate type _tmd__GetAudioSources)

  - <tmd:GetAudioSourcesResponse> (use wsdl2h option -g to auto-generate type _tmd__GetAudioSourcesResponse)

  - <tmd:GetAudioOutputs> (use wsdl2h option -g to auto-generate type _tmd__GetAudioOutputs)

  - <tmd:GetAudioOutputsResponse> (use wsdl2h option -g to auto-generate type _tmd__GetAudioOutputsResponse)

  - <tmd:GetVideoOutputs> @ref _tmd__GetVideoOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputs(struct soap*, struct _tmd__GetVideoOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputs(struct soap*, struct _tmd__GetVideoOutputs*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetVideoOutputs(struct soap*, const char *URL, struct _tmd__GetVideoOutputs*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetVideoOutputs(struct soap*, const char *URL, struct _tmd__GetVideoOutputs*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetVideoOutputs(struct soap*, const char *URL, struct _tmd__GetVideoOutputs*);
    soap_POST_recv__tmd__GetVideoOutputs(struct soap*, struct _tmd__GetVideoOutputs*);
    @endcode

  - <tmd:GetVideoOutputsResponse> @ref _tmd__GetVideoOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputsResponse(struct soap*, struct _tmd__GetVideoOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputsResponse(struct soap*, struct _tmd__GetVideoOutputsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetVideoOutputsResponse(struct soap*, const char *URL, struct _tmd__GetVideoOutputsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetVideoOutputsResponse(struct soap*, const char *URL, struct _tmd__GetVideoOutputsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetVideoOutputsResponse(struct soap*, const char *URL, struct _tmd__GetVideoOutputsResponse*);
    soap_POST_recv__tmd__GetVideoOutputsResponse(struct soap*, struct _tmd__GetVideoOutputsResponse*);
    @endcode

  - <tmd:GetAudioSourceConfiguration> @ref _tmd__GetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioSourceConfiguration(struct soap*, struct _tmd__GetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioSourceConfiguration(struct soap*, struct _tmd__GetAudioSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetAudioSourceConfiguration(struct soap*, const char *URL, struct _tmd__GetAudioSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetAudioSourceConfiguration(struct soap*, const char *URL, struct _tmd__GetAudioSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetAudioSourceConfiguration(struct soap*, const char *URL, struct _tmd__GetAudioSourceConfiguration*);
    soap_POST_recv__tmd__GetAudioSourceConfiguration(struct soap*, struct _tmd__GetAudioSourceConfiguration*);
    @endcode

  - <tmd:GetAudioSourceConfigurationResponse> @ref _tmd__GetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioSourceConfigurationResponse(struct soap*, struct _tmd__GetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioSourceConfigurationResponse(struct soap*, struct _tmd__GetAudioSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetAudioSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetAudioSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetAudioSourceConfigurationResponse*);
    soap_POST_recv__tmd__GetAudioSourceConfigurationResponse(struct soap*, struct _tmd__GetAudioSourceConfigurationResponse*);
    @endcode

  - <tmd:GetAudioOutputConfiguration> @ref _tmd__GetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioOutputConfiguration(struct soap*, struct _tmd__GetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioOutputConfiguration(struct soap*, struct _tmd__GetAudioOutputConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetAudioOutputConfiguration(struct soap*, const char *URL, struct _tmd__GetAudioOutputConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetAudioOutputConfiguration(struct soap*, const char *URL, struct _tmd__GetAudioOutputConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetAudioOutputConfiguration(struct soap*, const char *URL, struct _tmd__GetAudioOutputConfiguration*);
    soap_POST_recv__tmd__GetAudioOutputConfiguration(struct soap*, struct _tmd__GetAudioOutputConfiguration*);
    @endcode

  - <tmd:GetAudioOutputConfigurationResponse> @ref _tmd__GetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioOutputConfigurationResponse(struct soap*, struct _tmd__GetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioOutputConfigurationResponse(struct soap*, struct _tmd__GetAudioOutputConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetAudioOutputConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetAudioOutputConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetAudioOutputConfigurationResponse*);
    soap_POST_recv__tmd__GetAudioOutputConfigurationResponse(struct soap*, struct _tmd__GetAudioOutputConfigurationResponse*);
    @endcode

  - <tmd:GetVideoSourceConfiguration> @ref _tmd__GetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoSourceConfiguration(struct soap*, struct _tmd__GetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoSourceConfiguration(struct soap*, struct _tmd__GetVideoSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetVideoSourceConfiguration(struct soap*, const char *URL, struct _tmd__GetVideoSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetVideoSourceConfiguration(struct soap*, const char *URL, struct _tmd__GetVideoSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetVideoSourceConfiguration(struct soap*, const char *URL, struct _tmd__GetVideoSourceConfiguration*);
    soap_POST_recv__tmd__GetVideoSourceConfiguration(struct soap*, struct _tmd__GetVideoSourceConfiguration*);
    @endcode

  - <tmd:GetVideoSourceConfigurationResponse> @ref _tmd__GetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoSourceConfigurationResponse(struct soap*, struct _tmd__GetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoSourceConfigurationResponse(struct soap*, struct _tmd__GetVideoSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetVideoSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetVideoSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetVideoSourceConfigurationResponse*);
    soap_POST_recv__tmd__GetVideoSourceConfigurationResponse(struct soap*, struct _tmd__GetVideoSourceConfigurationResponse*);
    @endcode

  - <tmd:GetVideoOutputConfiguration> @ref _tmd__GetVideoOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputConfiguration(struct soap*, struct _tmd__GetVideoOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputConfiguration(struct soap*, struct _tmd__GetVideoOutputConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetVideoOutputConfiguration(struct soap*, const char *URL, struct _tmd__GetVideoOutputConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetVideoOutputConfiguration(struct soap*, const char *URL, struct _tmd__GetVideoOutputConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetVideoOutputConfiguration(struct soap*, const char *URL, struct _tmd__GetVideoOutputConfiguration*);
    soap_POST_recv__tmd__GetVideoOutputConfiguration(struct soap*, struct _tmd__GetVideoOutputConfiguration*);
    @endcode

  - <tmd:GetVideoOutputConfigurationResponse> @ref _tmd__GetVideoOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputConfigurationResponse(struct soap*, struct _tmd__GetVideoOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputConfigurationResponse(struct soap*, struct _tmd__GetVideoOutputConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetVideoOutputConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetVideoOutputConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetVideoOutputConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetVideoOutputConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetVideoOutputConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetVideoOutputConfigurationResponse*);
    soap_POST_recv__tmd__GetVideoOutputConfigurationResponse(struct soap*, struct _tmd__GetVideoOutputConfigurationResponse*);
    @endcode

  - <tmd:SetAudioSourceConfiguration> @ref _tmd__SetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetAudioSourceConfiguration(struct soap*, struct _tmd__SetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetAudioSourceConfiguration(struct soap*, struct _tmd__SetAudioSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SetAudioSourceConfiguration(struct soap*, const char *URL, struct _tmd__SetAudioSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SetAudioSourceConfiguration(struct soap*, const char *URL, struct _tmd__SetAudioSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SetAudioSourceConfiguration(struct soap*, const char *URL, struct _tmd__SetAudioSourceConfiguration*);
    soap_POST_recv__tmd__SetAudioSourceConfiguration(struct soap*, struct _tmd__SetAudioSourceConfiguration*);
    @endcode

  - <tmd:SetAudioSourceConfigurationResponse> @ref _tmd__SetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetAudioSourceConfigurationResponse(struct soap*, struct _tmd__SetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetAudioSourceConfigurationResponse(struct soap*, struct _tmd__SetAudioSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SetAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetAudioSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SetAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetAudioSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SetAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetAudioSourceConfigurationResponse*);
    soap_POST_recv__tmd__SetAudioSourceConfigurationResponse(struct soap*, struct _tmd__SetAudioSourceConfigurationResponse*);
    @endcode

  - <tmd:SetAudioOutputConfiguration> @ref _tmd__SetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetAudioOutputConfiguration(struct soap*, struct _tmd__SetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetAudioOutputConfiguration(struct soap*, struct _tmd__SetAudioOutputConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SetAudioOutputConfiguration(struct soap*, const char *URL, struct _tmd__SetAudioOutputConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SetAudioOutputConfiguration(struct soap*, const char *URL, struct _tmd__SetAudioOutputConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SetAudioOutputConfiguration(struct soap*, const char *URL, struct _tmd__SetAudioOutputConfiguration*);
    soap_POST_recv__tmd__SetAudioOutputConfiguration(struct soap*, struct _tmd__SetAudioOutputConfiguration*);
    @endcode

  - <tmd:SetAudioOutputConfigurationResponse> @ref _tmd__SetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetAudioOutputConfigurationResponse(struct soap*, struct _tmd__SetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetAudioOutputConfigurationResponse(struct soap*, struct _tmd__SetAudioOutputConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SetAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetAudioOutputConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SetAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetAudioOutputConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SetAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetAudioOutputConfigurationResponse*);
    soap_POST_recv__tmd__SetAudioOutputConfigurationResponse(struct soap*, struct _tmd__SetAudioOutputConfigurationResponse*);
    @endcode

  - <tmd:SetVideoSourceConfiguration> @ref _tmd__SetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetVideoSourceConfiguration(struct soap*, struct _tmd__SetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetVideoSourceConfiguration(struct soap*, struct _tmd__SetVideoSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SetVideoSourceConfiguration(struct soap*, const char *URL, struct _tmd__SetVideoSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SetVideoSourceConfiguration(struct soap*, const char *URL, struct _tmd__SetVideoSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SetVideoSourceConfiguration(struct soap*, const char *URL, struct _tmd__SetVideoSourceConfiguration*);
    soap_POST_recv__tmd__SetVideoSourceConfiguration(struct soap*, struct _tmd__SetVideoSourceConfiguration*);
    @endcode

  - <tmd:SetVideoSourceConfigurationResponse> @ref _tmd__SetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetVideoSourceConfigurationResponse(struct soap*, struct _tmd__SetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetVideoSourceConfigurationResponse(struct soap*, struct _tmd__SetVideoSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SetVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetVideoSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SetVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetVideoSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SetVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetVideoSourceConfigurationResponse*);
    soap_POST_recv__tmd__SetVideoSourceConfigurationResponse(struct soap*, struct _tmd__SetVideoSourceConfigurationResponse*);
    @endcode

  - <tmd:SetVideoOutputConfiguration> @ref _tmd__SetVideoOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetVideoOutputConfiguration(struct soap*, struct _tmd__SetVideoOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetVideoOutputConfiguration(struct soap*, struct _tmd__SetVideoOutputConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SetVideoOutputConfiguration(struct soap*, const char *URL, struct _tmd__SetVideoOutputConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SetVideoOutputConfiguration(struct soap*, const char *URL, struct _tmd__SetVideoOutputConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SetVideoOutputConfiguration(struct soap*, const char *URL, struct _tmd__SetVideoOutputConfiguration*);
    soap_POST_recv__tmd__SetVideoOutputConfiguration(struct soap*, struct _tmd__SetVideoOutputConfiguration*);
    @endcode

  - <tmd:SetVideoOutputConfigurationResponse> @ref _tmd__SetVideoOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetVideoOutputConfigurationResponse(struct soap*, struct _tmd__SetVideoOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetVideoOutputConfigurationResponse(struct soap*, struct _tmd__SetVideoOutputConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SetVideoOutputConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetVideoOutputConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SetVideoOutputConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetVideoOutputConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SetVideoOutputConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetVideoOutputConfigurationResponse*);
    soap_POST_recv__tmd__SetVideoOutputConfigurationResponse(struct soap*, struct _tmd__SetVideoOutputConfigurationResponse*);
    @endcode

  - <tmd:GetVideoSourceConfigurationOptions> @ref _tmd__GetVideoSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoSourceConfigurationOptions(struct soap*, struct _tmd__GetVideoSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoSourceConfigurationOptions(struct soap*, struct _tmd__GetVideoSourceConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetVideoSourceConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetVideoSourceConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetVideoSourceConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetVideoSourceConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetVideoSourceConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetVideoSourceConfigurationOptions*);
    soap_POST_recv__tmd__GetVideoSourceConfigurationOptions(struct soap*, struct _tmd__GetVideoSourceConfigurationOptions*);
    @endcode

  - <tmd:GetVideoSourceConfigurationOptionsResponse> @ref _tmd__GetVideoSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _tmd__GetVideoSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _tmd__GetVideoSourceConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetVideoSourceConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetVideoSourceConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetVideoSourceConfigurationOptionsResponse*);
    soap_POST_recv__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _tmd__GetVideoSourceConfigurationOptionsResponse*);
    @endcode

  - <tmd:GetVideoOutputConfigurationOptions> @ref _tmd__GetVideoOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputConfigurationOptions(struct soap*, struct _tmd__GetVideoOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputConfigurationOptions(struct soap*, struct _tmd__GetVideoOutputConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetVideoOutputConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetVideoOutputConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetVideoOutputConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetVideoOutputConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetVideoOutputConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetVideoOutputConfigurationOptions*);
    soap_POST_recv__tmd__GetVideoOutputConfigurationOptions(struct soap*, struct _tmd__GetVideoOutputConfigurationOptions*);
    @endcode

  - <tmd:GetVideoOutputConfigurationOptionsResponse> @ref _tmd__GetVideoOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, struct _tmd__GetVideoOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, struct _tmd__GetVideoOutputConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetVideoOutputConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetVideoOutputConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetVideoOutputConfigurationOptionsResponse*);
    soap_POST_recv__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, struct _tmd__GetVideoOutputConfigurationOptionsResponse*);
    @endcode

  - <tmd:GetAudioSourceConfigurationOptions> @ref _tmd__GetAudioSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioSourceConfigurationOptions(struct soap*, struct _tmd__GetAudioSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioSourceConfigurationOptions(struct soap*, struct _tmd__GetAudioSourceConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetAudioSourceConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetAudioSourceConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetAudioSourceConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetAudioSourceConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetAudioSourceConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetAudioSourceConfigurationOptions*);
    soap_POST_recv__tmd__GetAudioSourceConfigurationOptions(struct soap*, struct _tmd__GetAudioSourceConfigurationOptions*);
    @endcode

  - <tmd:GetAudioSourceConfigurationOptionsResponse> @ref _tmd__GetAudioSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _tmd__GetAudioSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _tmd__GetAudioSourceConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetAudioSourceConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetAudioSourceConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetAudioSourceConfigurationOptionsResponse*);
    soap_POST_recv__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _tmd__GetAudioSourceConfigurationOptionsResponse*);
    @endcode

  - <tmd:GetAudioOutputConfigurationOptions> @ref _tmd__GetAudioOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioOutputConfigurationOptions(struct soap*, struct _tmd__GetAudioOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioOutputConfigurationOptions(struct soap*, struct _tmd__GetAudioOutputConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetAudioOutputConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetAudioOutputConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetAudioOutputConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetAudioOutputConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetAudioOutputConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetAudioOutputConfigurationOptions*);
    soap_POST_recv__tmd__GetAudioOutputConfigurationOptions(struct soap*, struct _tmd__GetAudioOutputConfigurationOptions*);
    @endcode

  - <tmd:GetAudioOutputConfigurationOptionsResponse> @ref _tmd__GetAudioOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _tmd__GetAudioOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _tmd__GetAudioOutputConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetAudioOutputConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetAudioOutputConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetAudioOutputConfigurationOptionsResponse*);
    soap_POST_recv__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _tmd__GetAudioOutputConfigurationOptionsResponse*);
    @endcode

  - <tmd:SetRelayOutputSettings> @ref _tmd__SetRelayOutputSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetRelayOutputSettings(struct soap*, struct _tmd__SetRelayOutputSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetRelayOutputSettings(struct soap*, struct _tmd__SetRelayOutputSettings*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SetRelayOutputSettings(struct soap*, const char *URL, struct _tmd__SetRelayOutputSettings*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SetRelayOutputSettings(struct soap*, const char *URL, struct _tmd__SetRelayOutputSettings*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SetRelayOutputSettings(struct soap*, const char *URL, struct _tmd__SetRelayOutputSettings*);
    soap_POST_recv__tmd__SetRelayOutputSettings(struct soap*, struct _tmd__SetRelayOutputSettings*);
    @endcode

  - <tmd:SetRelayOutputSettingsResponse> @ref _tmd__SetRelayOutputSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetRelayOutputSettingsResponse(struct soap*, struct _tmd__SetRelayOutputSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetRelayOutputSettingsResponse(struct soap*, struct _tmd__SetRelayOutputSettingsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SetRelayOutputSettingsResponse(struct soap*, const char *URL, struct _tmd__SetRelayOutputSettingsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SetRelayOutputSettingsResponse(struct soap*, const char *URL, struct _tmd__SetRelayOutputSettingsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SetRelayOutputSettingsResponse(struct soap*, const char *URL, struct _tmd__SetRelayOutputSettingsResponse*);
    soap_POST_recv__tmd__SetRelayOutputSettingsResponse(struct soap*, struct _tmd__SetRelayOutputSettingsResponse*);
    @endcode

  - <tmd:GetDigitalInputs> @ref _tmd__GetDigitalInputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetDigitalInputs(struct soap*, struct _tmd__GetDigitalInputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetDigitalInputs(struct soap*, struct _tmd__GetDigitalInputs*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetDigitalInputs(struct soap*, const char *URL, struct _tmd__GetDigitalInputs*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetDigitalInputs(struct soap*, const char *URL, struct _tmd__GetDigitalInputs*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetDigitalInputs(struct soap*, const char *URL, struct _tmd__GetDigitalInputs*);
    soap_POST_recv__tmd__GetDigitalInputs(struct soap*, struct _tmd__GetDigitalInputs*);
    @endcode

  - <tmd:GetDigitalInputsResponse> @ref _tmd__GetDigitalInputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetDigitalInputsResponse(struct soap*, struct _tmd__GetDigitalInputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetDigitalInputsResponse(struct soap*, struct _tmd__GetDigitalInputsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetDigitalInputsResponse(struct soap*, const char *URL, struct _tmd__GetDigitalInputsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetDigitalInputsResponse(struct soap*, const char *URL, struct _tmd__GetDigitalInputsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetDigitalInputsResponse(struct soap*, const char *URL, struct _tmd__GetDigitalInputsResponse*);
    soap_POST_recv__tmd__GetDigitalInputsResponse(struct soap*, struct _tmd__GetDigitalInputsResponse*);
    @endcode

  - <tmd:GetDigitalInputConfigurationOptions> @ref _tmd__GetDigitalInputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetDigitalInputConfigurationOptions(struct soap*, struct _tmd__GetDigitalInputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetDigitalInputConfigurationOptions(struct soap*, struct _tmd__GetDigitalInputConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetDigitalInputConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetDigitalInputConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetDigitalInputConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetDigitalInputConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetDigitalInputConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetDigitalInputConfigurationOptions*);
    soap_POST_recv__tmd__GetDigitalInputConfigurationOptions(struct soap*, struct _tmd__GetDigitalInputConfigurationOptions*);
    @endcode

  - <tmd:GetDigitalInputConfigurationOptionsResponse> @ref _tmd__GetDigitalInputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, struct _tmd__GetDigitalInputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, struct _tmd__GetDigitalInputConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetDigitalInputConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetDigitalInputConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetDigitalInputConfigurationOptionsResponse*);
    soap_POST_recv__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, struct _tmd__GetDigitalInputConfigurationOptionsResponse*);
    @endcode

  - <tmd:SetDigitalInputConfigurations> @ref _tmd__SetDigitalInputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetDigitalInputConfigurations(struct soap*, struct _tmd__SetDigitalInputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetDigitalInputConfigurations(struct soap*, struct _tmd__SetDigitalInputConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SetDigitalInputConfigurations(struct soap*, const char *URL, struct _tmd__SetDigitalInputConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SetDigitalInputConfigurations(struct soap*, const char *URL, struct _tmd__SetDigitalInputConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SetDigitalInputConfigurations(struct soap*, const char *URL, struct _tmd__SetDigitalInputConfigurations*);
    soap_POST_recv__tmd__SetDigitalInputConfigurations(struct soap*, struct _tmd__SetDigitalInputConfigurations*);
    @endcode

  - <tmd:SetDigitalInputConfigurationsResponse> @ref _tmd__SetDigitalInputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetDigitalInputConfigurationsResponse(struct soap*, struct _tmd__SetDigitalInputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetDigitalInputConfigurationsResponse(struct soap*, struct _tmd__SetDigitalInputConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SetDigitalInputConfigurationsResponse(struct soap*, const char *URL, struct _tmd__SetDigitalInputConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SetDigitalInputConfigurationsResponse(struct soap*, const char *URL, struct _tmd__SetDigitalInputConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SetDigitalInputConfigurationsResponse(struct soap*, const char *URL, struct _tmd__SetDigitalInputConfigurationsResponse*);
    soap_POST_recv__tmd__SetDigitalInputConfigurationsResponse(struct soap*, struct _tmd__SetDigitalInputConfigurationsResponse*);
    @endcode

  - <tmd:GetSerialPorts> @ref _tmd__GetSerialPorts
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPorts(struct soap*, struct _tmd__GetSerialPorts*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPorts(struct soap*, struct _tmd__GetSerialPorts*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetSerialPorts(struct soap*, const char *URL, struct _tmd__GetSerialPorts*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetSerialPorts(struct soap*, const char *URL, struct _tmd__GetSerialPorts*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetSerialPorts(struct soap*, const char *URL, struct _tmd__GetSerialPorts*);
    soap_POST_recv__tmd__GetSerialPorts(struct soap*, struct _tmd__GetSerialPorts*);
    @endcode

  - <tmd:GetSerialPortsResponse> @ref _tmd__GetSerialPortsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortsResponse(struct soap*, struct _tmd__GetSerialPortsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortsResponse(struct soap*, struct _tmd__GetSerialPortsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetSerialPortsResponse(struct soap*, const char *URL, struct _tmd__GetSerialPortsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetSerialPortsResponse(struct soap*, const char *URL, struct _tmd__GetSerialPortsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetSerialPortsResponse(struct soap*, const char *URL, struct _tmd__GetSerialPortsResponse*);
    soap_POST_recv__tmd__GetSerialPortsResponse(struct soap*, struct _tmd__GetSerialPortsResponse*);
    @endcode

  - <tmd:GetSerialPortConfiguration> @ref _tmd__GetSerialPortConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortConfiguration(struct soap*, struct _tmd__GetSerialPortConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortConfiguration(struct soap*, struct _tmd__GetSerialPortConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetSerialPortConfiguration(struct soap*, const char *URL, struct _tmd__GetSerialPortConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetSerialPortConfiguration(struct soap*, const char *URL, struct _tmd__GetSerialPortConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetSerialPortConfiguration(struct soap*, const char *URL, struct _tmd__GetSerialPortConfiguration*);
    soap_POST_recv__tmd__GetSerialPortConfiguration(struct soap*, struct _tmd__GetSerialPortConfiguration*);
    @endcode

  - <tmd:GetSerialPortConfigurationResponse> @ref _tmd__GetSerialPortConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortConfigurationResponse(struct soap*, struct _tmd__GetSerialPortConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortConfigurationResponse(struct soap*, struct _tmd__GetSerialPortConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetSerialPortConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetSerialPortConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetSerialPortConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetSerialPortConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetSerialPortConfigurationResponse(struct soap*, const char *URL, struct _tmd__GetSerialPortConfigurationResponse*);
    soap_POST_recv__tmd__GetSerialPortConfigurationResponse(struct soap*, struct _tmd__GetSerialPortConfigurationResponse*);
    @endcode

  - <tmd:SetSerialPortConfiguration> @ref _tmd__SetSerialPortConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetSerialPortConfiguration(struct soap*, struct _tmd__SetSerialPortConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetSerialPortConfiguration(struct soap*, struct _tmd__SetSerialPortConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SetSerialPortConfiguration(struct soap*, const char *URL, struct _tmd__SetSerialPortConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SetSerialPortConfiguration(struct soap*, const char *URL, struct _tmd__SetSerialPortConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SetSerialPortConfiguration(struct soap*, const char *URL, struct _tmd__SetSerialPortConfiguration*);
    soap_POST_recv__tmd__SetSerialPortConfiguration(struct soap*, struct _tmd__SetSerialPortConfiguration*);
    @endcode

  - <tmd:SetSerialPortConfigurationResponse> @ref _tmd__SetSerialPortConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetSerialPortConfigurationResponse(struct soap*, struct _tmd__SetSerialPortConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetSerialPortConfigurationResponse(struct soap*, struct _tmd__SetSerialPortConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SetSerialPortConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetSerialPortConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SetSerialPortConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetSerialPortConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SetSerialPortConfigurationResponse(struct soap*, const char *URL, struct _tmd__SetSerialPortConfigurationResponse*);
    soap_POST_recv__tmd__SetSerialPortConfigurationResponse(struct soap*, struct _tmd__SetSerialPortConfigurationResponse*);
    @endcode

  - <tmd:GetSerialPortConfigurationOptions> @ref _tmd__GetSerialPortConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortConfigurationOptions(struct soap*, struct _tmd__GetSerialPortConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortConfigurationOptions(struct soap*, struct _tmd__GetSerialPortConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetSerialPortConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetSerialPortConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetSerialPortConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetSerialPortConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetSerialPortConfigurationOptions(struct soap*, const char *URL, struct _tmd__GetSerialPortConfigurationOptions*);
    soap_POST_recv__tmd__GetSerialPortConfigurationOptions(struct soap*, struct _tmd__GetSerialPortConfigurationOptions*);
    @endcode

  - <tmd:GetSerialPortConfigurationOptionsResponse> @ref _tmd__GetSerialPortConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, struct _tmd__GetSerialPortConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, struct _tmd__GetSerialPortConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetSerialPortConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetSerialPortConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, const char *URL, struct _tmd__GetSerialPortConfigurationOptionsResponse*);
    soap_POST_recv__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, struct _tmd__GetSerialPortConfigurationOptionsResponse*);
    @endcode

  - <tmd:SendReceiveSerialCommand> @ref _tmd__SendReceiveSerialCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SendReceiveSerialCommand(struct soap*, struct _tmd__SendReceiveSerialCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SendReceiveSerialCommand(struct soap*, struct _tmd__SendReceiveSerialCommand*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SendReceiveSerialCommand(struct soap*, const char *URL, struct _tmd__SendReceiveSerialCommand*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SendReceiveSerialCommand(struct soap*, const char *URL, struct _tmd__SendReceiveSerialCommand*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SendReceiveSerialCommand(struct soap*, const char *URL, struct _tmd__SendReceiveSerialCommand*);
    soap_POST_recv__tmd__SendReceiveSerialCommand(struct soap*, struct _tmd__SendReceiveSerialCommand*);
    @endcode

  - <tmd:SendReceiveSerialCommandResponse> @ref _tmd__SendReceiveSerialCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SendReceiveSerialCommandResponse(struct soap*, struct _tmd__SendReceiveSerialCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SendReceiveSerialCommandResponse(struct soap*, struct _tmd__SendReceiveSerialCommandResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tmd__SendReceiveSerialCommandResponse(struct soap*, const char *URL, struct _tmd__SendReceiveSerialCommandResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tmd__SendReceiveSerialCommandResponse(struct soap*, const char *URL, struct _tmd__SendReceiveSerialCommandResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tmd__SendReceiveSerialCommandResponse(struct soap*, const char *URL, struct _tmd__SendReceiveSerialCommandResponse*);
    soap_POST_recv__tmd__SendReceiveSerialCommandResponse(struct soap*, struct _tmd__SendReceiveSerialCommandResponse*);
    @endcode

*/

/**

@section tds Top-level root elements of schema "http://www.onvif.org/ver10/device/wsdl"

  - <tds:GetServices> @ref _tds__GetServices
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServices(struct soap*, struct _tds__GetServices*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServices(struct soap*, struct _tds__GetServices*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServices(struct soap*, const char *URL, struct _tds__GetServices*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServices(struct soap*, const char *URL, struct _tds__GetServices*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServices(struct soap*, const char *URL, struct _tds__GetServices*);
    soap_POST_recv__tds__GetServices(struct soap*, struct _tds__GetServices*);
    @endcode

  - <tds:GetServicesResponse> @ref _tds__GetServicesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServicesResponse(struct soap*, const char *URL, struct _tds__GetServicesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServicesResponse(struct soap*, const char *URL, struct _tds__GetServicesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServicesResponse(struct soap*, const char *URL, struct _tds__GetServicesResponse*);
    soap_POST_recv__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse*);
    @endcode

  - <tds:GetServiceCapabilities> @ref _tds__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServiceCapabilities(struct soap*, const char *URL, struct _tds__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServiceCapabilities(struct soap*, const char *URL, struct _tds__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServiceCapabilities(struct soap*, const char *URL, struct _tds__GetServiceCapabilities*);
    soap_POST_recv__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities*);
    @endcode

  - <tds:GetServiceCapabilitiesResponse> @ref _tds__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetServiceCapabilitiesResponse*);
    soap_POST_recv__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse*);
    @endcode

  - <tds:Capabilities> (use wsdl2h option -g to auto-generate type _tds__Capabilities)

  - <tds:GetDeviceInformation> @ref _tds__GetDeviceInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDeviceInformation(struct soap*, const char *URL, struct _tds__GetDeviceInformation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDeviceInformation(struct soap*, const char *URL, struct _tds__GetDeviceInformation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDeviceInformation(struct soap*, const char *URL, struct _tds__GetDeviceInformation*);
    soap_POST_recv__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation*);
    @endcode

  - <tds:GetDeviceInformationResponse> @ref _tds__GetDeviceInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDeviceInformationResponse(struct soap*, const char *URL, struct _tds__GetDeviceInformationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDeviceInformationResponse(struct soap*, const char *URL, struct _tds__GetDeviceInformationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDeviceInformationResponse(struct soap*, const char *URL, struct _tds__GetDeviceInformationResponse*);
    soap_POST_recv__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse*);
    @endcode

  - <tds:SetSystemDateAndTime> @ref _tds__SetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTime(struct soap*, struct _tds__SetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTime(struct soap*, struct _tds__SetSystemDateAndTime*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemDateAndTime(struct soap*, const char *URL, struct _tds__SetSystemDateAndTime*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemDateAndTime(struct soap*, const char *URL, struct _tds__SetSystemDateAndTime*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemDateAndTime(struct soap*, const char *URL, struct _tds__SetSystemDateAndTime*);
    soap_POST_recv__tds__SetSystemDateAndTime(struct soap*, struct _tds__SetSystemDateAndTime*);
    @endcode

  - <tds:SetSystemDateAndTimeResponse> @ref _tds__SetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTimeResponse(struct soap*, struct _tds__SetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTimeResponse(struct soap*, struct _tds__SetSystemDateAndTimeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemDateAndTimeResponse(struct soap*, const char *URL, struct _tds__SetSystemDateAndTimeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemDateAndTimeResponse(struct soap*, const char *URL, struct _tds__SetSystemDateAndTimeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemDateAndTimeResponse(struct soap*, const char *URL, struct _tds__SetSystemDateAndTimeResponse*);
    soap_POST_recv__tds__SetSystemDateAndTimeResponse(struct soap*, struct _tds__SetSystemDateAndTimeResponse*);
    @endcode

  - <tds:GetSystemDateAndTime> @ref _tds__GetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTime(struct soap*, struct _tds__GetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTime(struct soap*, struct _tds__GetSystemDateAndTime*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemDateAndTime(struct soap*, const char *URL, struct _tds__GetSystemDateAndTime*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemDateAndTime(struct soap*, const char *URL, struct _tds__GetSystemDateAndTime*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemDateAndTime(struct soap*, const char *URL, struct _tds__GetSystemDateAndTime*);
    soap_POST_recv__tds__GetSystemDateAndTime(struct soap*, struct _tds__GetSystemDateAndTime*);
    @endcode

  - <tds:GetSystemDateAndTimeResponse> @ref _tds__GetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTimeResponse(struct soap*, struct _tds__GetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTimeResponse(struct soap*, struct _tds__GetSystemDateAndTimeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemDateAndTimeResponse(struct soap*, const char *URL, struct _tds__GetSystemDateAndTimeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemDateAndTimeResponse(struct soap*, const char *URL, struct _tds__GetSystemDateAndTimeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemDateAndTimeResponse(struct soap*, const char *URL, struct _tds__GetSystemDateAndTimeResponse*);
    soap_POST_recv__tds__GetSystemDateAndTimeResponse(struct soap*, struct _tds__GetSystemDateAndTimeResponse*);
    @endcode

  - <tds:SetSystemFactoryDefault> @ref _tds__SetSystemFactoryDefault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefault(struct soap*, struct _tds__SetSystemFactoryDefault*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefault(struct soap*, struct _tds__SetSystemFactoryDefault*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemFactoryDefault(struct soap*, const char *URL, struct _tds__SetSystemFactoryDefault*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemFactoryDefault(struct soap*, const char *URL, struct _tds__SetSystemFactoryDefault*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemFactoryDefault(struct soap*, const char *URL, struct _tds__SetSystemFactoryDefault*);
    soap_POST_recv__tds__SetSystemFactoryDefault(struct soap*, struct _tds__SetSystemFactoryDefault*);
    @endcode

  - <tds:SetSystemFactoryDefaultResponse> @ref _tds__SetSystemFactoryDefaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefaultResponse(struct soap*, struct _tds__SetSystemFactoryDefaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefaultResponse(struct soap*, struct _tds__SetSystemFactoryDefaultResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemFactoryDefaultResponse(struct soap*, const char *URL, struct _tds__SetSystemFactoryDefaultResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemFactoryDefaultResponse(struct soap*, const char *URL, struct _tds__SetSystemFactoryDefaultResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemFactoryDefaultResponse(struct soap*, const char *URL, struct _tds__SetSystemFactoryDefaultResponse*);
    soap_POST_recv__tds__SetSystemFactoryDefaultResponse(struct soap*, struct _tds__SetSystemFactoryDefaultResponse*);
    @endcode

  - <tds:UpgradeSystemFirmware> @ref _tds__UpgradeSystemFirmware
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmware(struct soap*, struct _tds__UpgradeSystemFirmware*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmware(struct soap*, struct _tds__UpgradeSystemFirmware*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__UpgradeSystemFirmware(struct soap*, const char *URL, struct _tds__UpgradeSystemFirmware*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__UpgradeSystemFirmware(struct soap*, const char *URL, struct _tds__UpgradeSystemFirmware*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__UpgradeSystemFirmware(struct soap*, const char *URL, struct _tds__UpgradeSystemFirmware*);
    soap_POST_recv__tds__UpgradeSystemFirmware(struct soap*, struct _tds__UpgradeSystemFirmware*);
    @endcode

  - <tds:UpgradeSystemFirmwareResponse> @ref _tds__UpgradeSystemFirmwareResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmwareResponse(struct soap*, struct _tds__UpgradeSystemFirmwareResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmwareResponse(struct soap*, struct _tds__UpgradeSystemFirmwareResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__UpgradeSystemFirmwareResponse(struct soap*, const char *URL, struct _tds__UpgradeSystemFirmwareResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__UpgradeSystemFirmwareResponse(struct soap*, const char *URL, struct _tds__UpgradeSystemFirmwareResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__UpgradeSystemFirmwareResponse(struct soap*, const char *URL, struct _tds__UpgradeSystemFirmwareResponse*);
    soap_POST_recv__tds__UpgradeSystemFirmwareResponse(struct soap*, struct _tds__UpgradeSystemFirmwareResponse*);
    @endcode

  - <tds:SystemReboot> @ref _tds__SystemReboot
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemReboot(struct soap*, struct _tds__SystemReboot*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemReboot(struct soap*, struct _tds__SystemReboot*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SystemReboot(struct soap*, const char *URL, struct _tds__SystemReboot*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SystemReboot(struct soap*, const char *URL, struct _tds__SystemReboot*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SystemReboot(struct soap*, const char *URL, struct _tds__SystemReboot*);
    soap_POST_recv__tds__SystemReboot(struct soap*, struct _tds__SystemReboot*);
    @endcode

  - <tds:SystemRebootResponse> @ref _tds__SystemRebootResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SystemRebootResponse(struct soap*, const char *URL, struct _tds__SystemRebootResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SystemRebootResponse(struct soap*, const char *URL, struct _tds__SystemRebootResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SystemRebootResponse(struct soap*, const char *URL, struct _tds__SystemRebootResponse*);
    soap_POST_recv__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse*);
    @endcode

  - <tds:RestoreSystem> @ref _tds__RestoreSystem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystem(struct soap*, struct _tds__RestoreSystem*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystem(struct soap*, struct _tds__RestoreSystem*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RestoreSystem(struct soap*, const char *URL, struct _tds__RestoreSystem*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RestoreSystem(struct soap*, const char *URL, struct _tds__RestoreSystem*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RestoreSystem(struct soap*, const char *URL, struct _tds__RestoreSystem*);
    soap_POST_recv__tds__RestoreSystem(struct soap*, struct _tds__RestoreSystem*);
    @endcode

  - <tds:RestoreSystemResponse> @ref _tds__RestoreSystemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystemResponse(struct soap*, struct _tds__RestoreSystemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystemResponse(struct soap*, struct _tds__RestoreSystemResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RestoreSystemResponse(struct soap*, const char *URL, struct _tds__RestoreSystemResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RestoreSystemResponse(struct soap*, const char *URL, struct _tds__RestoreSystemResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RestoreSystemResponse(struct soap*, const char *URL, struct _tds__RestoreSystemResponse*);
    soap_POST_recv__tds__RestoreSystemResponse(struct soap*, struct _tds__RestoreSystemResponse*);
    @endcode

  - <tds:GetSystemBackup> @ref _tds__GetSystemBackup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackup(struct soap*, struct _tds__GetSystemBackup*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackup(struct soap*, struct _tds__GetSystemBackup*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemBackup(struct soap*, const char *URL, struct _tds__GetSystemBackup*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemBackup(struct soap*, const char *URL, struct _tds__GetSystemBackup*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemBackup(struct soap*, const char *URL, struct _tds__GetSystemBackup*);
    soap_POST_recv__tds__GetSystemBackup(struct soap*, struct _tds__GetSystemBackup*);
    @endcode

  - <tds:GetSystemBackupResponse> @ref _tds__GetSystemBackupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackupResponse(struct soap*, struct _tds__GetSystemBackupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackupResponse(struct soap*, struct _tds__GetSystemBackupResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemBackupResponse(struct soap*, const char *URL, struct _tds__GetSystemBackupResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemBackupResponse(struct soap*, const char *URL, struct _tds__GetSystemBackupResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemBackupResponse(struct soap*, const char *URL, struct _tds__GetSystemBackupResponse*);
    soap_POST_recv__tds__GetSystemBackupResponse(struct soap*, struct _tds__GetSystemBackupResponse*);
    @endcode

  - <tds:GetSystemSupportInformation> @ref _tds__GetSystemSupportInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformation(struct soap*, struct _tds__GetSystemSupportInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformation(struct soap*, struct _tds__GetSystemSupportInformation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemSupportInformation(struct soap*, const char *URL, struct _tds__GetSystemSupportInformation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemSupportInformation(struct soap*, const char *URL, struct _tds__GetSystemSupportInformation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemSupportInformation(struct soap*, const char *URL, struct _tds__GetSystemSupportInformation*);
    soap_POST_recv__tds__GetSystemSupportInformation(struct soap*, struct _tds__GetSystemSupportInformation*);
    @endcode

  - <tds:GetSystemSupportInformationResponse> @ref _tds__GetSystemSupportInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformationResponse(struct soap*, struct _tds__GetSystemSupportInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformationResponse(struct soap*, struct _tds__GetSystemSupportInformationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemSupportInformationResponse(struct soap*, const char *URL, struct _tds__GetSystemSupportInformationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemSupportInformationResponse(struct soap*, const char *URL, struct _tds__GetSystemSupportInformationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemSupportInformationResponse(struct soap*, const char *URL, struct _tds__GetSystemSupportInformationResponse*);
    soap_POST_recv__tds__GetSystemSupportInformationResponse(struct soap*, struct _tds__GetSystemSupportInformationResponse*);
    @endcode

  - <tds:GetSystemLog> @ref _tds__GetSystemLog
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLog(struct soap*, struct _tds__GetSystemLog*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLog(struct soap*, struct _tds__GetSystemLog*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemLog(struct soap*, const char *URL, struct _tds__GetSystemLog*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemLog(struct soap*, const char *URL, struct _tds__GetSystemLog*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemLog(struct soap*, const char *URL, struct _tds__GetSystemLog*);
    soap_POST_recv__tds__GetSystemLog(struct soap*, struct _tds__GetSystemLog*);
    @endcode

  - <tds:GetSystemLogResponse> @ref _tds__GetSystemLogResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLogResponse(struct soap*, struct _tds__GetSystemLogResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLogResponse(struct soap*, struct _tds__GetSystemLogResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemLogResponse(struct soap*, const char *URL, struct _tds__GetSystemLogResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemLogResponse(struct soap*, const char *URL, struct _tds__GetSystemLogResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemLogResponse(struct soap*, const char *URL, struct _tds__GetSystemLogResponse*);
    soap_POST_recv__tds__GetSystemLogResponse(struct soap*, struct _tds__GetSystemLogResponse*);
    @endcode

  - <tds:GetScopes> @ref _tds__GetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopes(struct soap*, struct _tds__GetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopes(struct soap*, struct _tds__GetScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetScopes(struct soap*, const char *URL, struct _tds__GetScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetScopes(struct soap*, const char *URL, struct _tds__GetScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetScopes(struct soap*, const char *URL, struct _tds__GetScopes*);
    soap_POST_recv__tds__GetScopes(struct soap*, struct _tds__GetScopes*);
    @endcode

  - <tds:GetScopesResponse> @ref _tds__GetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopesResponse(struct soap*, struct _tds__GetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopesResponse(struct soap*, struct _tds__GetScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetScopesResponse(struct soap*, const char *URL, struct _tds__GetScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetScopesResponse(struct soap*, const char *URL, struct _tds__GetScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetScopesResponse(struct soap*, const char *URL, struct _tds__GetScopesResponse*);
    soap_POST_recv__tds__GetScopesResponse(struct soap*, struct _tds__GetScopesResponse*);
    @endcode

  - <tds:SetScopes> @ref _tds__SetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopes(struct soap*, struct _tds__SetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopes(struct soap*, struct _tds__SetScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetScopes(struct soap*, const char *URL, struct _tds__SetScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetScopes(struct soap*, const char *URL, struct _tds__SetScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetScopes(struct soap*, const char *URL, struct _tds__SetScopes*);
    soap_POST_recv__tds__SetScopes(struct soap*, struct _tds__SetScopes*);
    @endcode

  - <tds:SetScopesResponse> @ref _tds__SetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopesResponse(struct soap*, struct _tds__SetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopesResponse(struct soap*, struct _tds__SetScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetScopesResponse(struct soap*, const char *URL, struct _tds__SetScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetScopesResponse(struct soap*, const char *URL, struct _tds__SetScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetScopesResponse(struct soap*, const char *URL, struct _tds__SetScopesResponse*);
    soap_POST_recv__tds__SetScopesResponse(struct soap*, struct _tds__SetScopesResponse*);
    @endcode

  - <tds:AddScopes> @ref _tds__AddScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopes(struct soap*, struct _tds__AddScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopes(struct soap*, struct _tds__AddScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddScopes(struct soap*, const char *URL, struct _tds__AddScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddScopes(struct soap*, const char *URL, struct _tds__AddScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddScopes(struct soap*, const char *URL, struct _tds__AddScopes*);
    soap_POST_recv__tds__AddScopes(struct soap*, struct _tds__AddScopes*);
    @endcode

  - <tds:AddScopesResponse> @ref _tds__AddScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopesResponse(struct soap*, struct _tds__AddScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopesResponse(struct soap*, struct _tds__AddScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddScopesResponse(struct soap*, const char *URL, struct _tds__AddScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddScopesResponse(struct soap*, const char *URL, struct _tds__AddScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddScopesResponse(struct soap*, const char *URL, struct _tds__AddScopesResponse*);
    soap_POST_recv__tds__AddScopesResponse(struct soap*, struct _tds__AddScopesResponse*);
    @endcode

  - <tds:RemoveScopes> @ref _tds__RemoveScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopes(struct soap*, struct _tds__RemoveScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopes(struct soap*, struct _tds__RemoveScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveScopes(struct soap*, const char *URL, struct _tds__RemoveScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveScopes(struct soap*, const char *URL, struct _tds__RemoveScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveScopes(struct soap*, const char *URL, struct _tds__RemoveScopes*);
    soap_POST_recv__tds__RemoveScopes(struct soap*, struct _tds__RemoveScopes*);
    @endcode

  - <tds:RemoveScopesResponse> @ref _tds__RemoveScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopesResponse(struct soap*, struct _tds__RemoveScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopesResponse(struct soap*, struct _tds__RemoveScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveScopesResponse(struct soap*, const char *URL, struct _tds__RemoveScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveScopesResponse(struct soap*, const char *URL, struct _tds__RemoveScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveScopesResponse(struct soap*, const char *URL, struct _tds__RemoveScopesResponse*);
    soap_POST_recv__tds__RemoveScopesResponse(struct soap*, struct _tds__RemoveScopesResponse*);
    @endcode

  - <tds:GetDiscoveryMode> @ref _tds__GetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryMode(struct soap*, struct _tds__GetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryMode(struct soap*, struct _tds__GetDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDiscoveryMode(struct soap*, const char *URL, struct _tds__GetDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDiscoveryMode(struct soap*, const char *URL, struct _tds__GetDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDiscoveryMode(struct soap*, const char *URL, struct _tds__GetDiscoveryMode*);
    soap_POST_recv__tds__GetDiscoveryMode(struct soap*, struct _tds__GetDiscoveryMode*);
    @endcode

  - <tds:GetDiscoveryModeResponse> @ref _tds__GetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryModeResponse(struct soap*, struct _tds__GetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryModeResponse(struct soap*, struct _tds__GetDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__GetDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__GetDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__GetDiscoveryModeResponse*);
    soap_POST_recv__tds__GetDiscoveryModeResponse(struct soap*, struct _tds__GetDiscoveryModeResponse*);
    @endcode

  - <tds:SetDiscoveryMode> @ref _tds__SetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryMode(struct soap*, struct _tds__SetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryMode(struct soap*, struct _tds__SetDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDiscoveryMode(struct soap*, const char *URL, struct _tds__SetDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDiscoveryMode(struct soap*, const char *URL, struct _tds__SetDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDiscoveryMode(struct soap*, const char *URL, struct _tds__SetDiscoveryMode*);
    soap_POST_recv__tds__SetDiscoveryMode(struct soap*, struct _tds__SetDiscoveryMode*);
    @endcode

  - <tds:SetDiscoveryModeResponse> @ref _tds__SetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryModeResponse(struct soap*, struct _tds__SetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryModeResponse(struct soap*, struct _tds__SetDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__SetDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__SetDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__SetDiscoveryModeResponse*);
    soap_POST_recv__tds__SetDiscoveryModeResponse(struct soap*, struct _tds__SetDiscoveryModeResponse*);
    @endcode

  - <tds:GetRemoteDiscoveryMode> @ref _tds__GetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryMode(struct soap*, struct _tds__GetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryMode(struct soap*, struct _tds__GetRemoteDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteDiscoveryMode(struct soap*, const char *URL, struct _tds__GetRemoteDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteDiscoveryMode(struct soap*, const char *URL, struct _tds__GetRemoteDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteDiscoveryMode(struct soap*, const char *URL, struct _tds__GetRemoteDiscoveryMode*);
    soap_POST_recv__tds__GetRemoteDiscoveryMode(struct soap*, struct _tds__GetRemoteDiscoveryMode*);
    @endcode

  - <tds:GetRemoteDiscoveryModeResponse> @ref _tds__GetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryModeResponse(struct soap*, struct _tds__GetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryModeResponse(struct soap*, struct _tds__GetRemoteDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__GetRemoteDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__GetRemoteDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__GetRemoteDiscoveryModeResponse*);
    soap_POST_recv__tds__GetRemoteDiscoveryModeResponse(struct soap*, struct _tds__GetRemoteDiscoveryModeResponse*);
    @endcode

  - <tds:SetRemoteDiscoveryMode> @ref _tds__SetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryMode(struct soap*, struct _tds__SetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryMode(struct soap*, struct _tds__SetRemoteDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteDiscoveryMode(struct soap*, const char *URL, struct _tds__SetRemoteDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteDiscoveryMode(struct soap*, const char *URL, struct _tds__SetRemoteDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteDiscoveryMode(struct soap*, const char *URL, struct _tds__SetRemoteDiscoveryMode*);
    soap_POST_recv__tds__SetRemoteDiscoveryMode(struct soap*, struct _tds__SetRemoteDiscoveryMode*);
    @endcode

  - <tds:SetRemoteDiscoveryModeResponse> @ref _tds__SetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryModeResponse(struct soap*, struct _tds__SetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryModeResponse(struct soap*, struct _tds__SetRemoteDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__SetRemoteDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__SetRemoteDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__SetRemoteDiscoveryModeResponse*);
    soap_POST_recv__tds__SetRemoteDiscoveryModeResponse(struct soap*, struct _tds__SetRemoteDiscoveryModeResponse*);
    @endcode

  - <tds:GetDPAddresses> @ref _tds__GetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddresses(struct soap*, struct _tds__GetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddresses(struct soap*, struct _tds__GetDPAddresses*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDPAddresses(struct soap*, const char *URL, struct _tds__GetDPAddresses*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDPAddresses(struct soap*, const char *URL, struct _tds__GetDPAddresses*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDPAddresses(struct soap*, const char *URL, struct _tds__GetDPAddresses*);
    soap_POST_recv__tds__GetDPAddresses(struct soap*, struct _tds__GetDPAddresses*);
    @endcode

  - <tds:GetDPAddressesResponse> @ref _tds__GetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddressesResponse(struct soap*, struct _tds__GetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddressesResponse(struct soap*, struct _tds__GetDPAddressesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDPAddressesResponse(struct soap*, const char *URL, struct _tds__GetDPAddressesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDPAddressesResponse(struct soap*, const char *URL, struct _tds__GetDPAddressesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDPAddressesResponse(struct soap*, const char *URL, struct _tds__GetDPAddressesResponse*);
    soap_POST_recv__tds__GetDPAddressesResponse(struct soap*, struct _tds__GetDPAddressesResponse*);
    @endcode

  - <tds:SetDPAddresses> @ref _tds__SetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddresses(struct soap*, struct _tds__SetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddresses(struct soap*, struct _tds__SetDPAddresses*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDPAddresses(struct soap*, const char *URL, struct _tds__SetDPAddresses*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDPAddresses(struct soap*, const char *URL, struct _tds__SetDPAddresses*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDPAddresses(struct soap*, const char *URL, struct _tds__SetDPAddresses*);
    soap_POST_recv__tds__SetDPAddresses(struct soap*, struct _tds__SetDPAddresses*);
    @endcode

  - <tds:SetDPAddressesResponse> @ref _tds__SetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddressesResponse(struct soap*, struct _tds__SetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddressesResponse(struct soap*, struct _tds__SetDPAddressesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDPAddressesResponse(struct soap*, const char *URL, struct _tds__SetDPAddressesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDPAddressesResponse(struct soap*, const char *URL, struct _tds__SetDPAddressesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDPAddressesResponse(struct soap*, const char *URL, struct _tds__SetDPAddressesResponse*);
    soap_POST_recv__tds__SetDPAddressesResponse(struct soap*, struct _tds__SetDPAddressesResponse*);
    @endcode

  - <tds:GetEndpointReference> @ref _tds__GetEndpointReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReference(struct soap*, struct _tds__GetEndpointReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReference(struct soap*, struct _tds__GetEndpointReference*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetEndpointReference(struct soap*, const char *URL, struct _tds__GetEndpointReference*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetEndpointReference(struct soap*, const char *URL, struct _tds__GetEndpointReference*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetEndpointReference(struct soap*, const char *URL, struct _tds__GetEndpointReference*);
    soap_POST_recv__tds__GetEndpointReference(struct soap*, struct _tds__GetEndpointReference*);
    @endcode

  - <tds:GetEndpointReferenceResponse> @ref _tds__GetEndpointReferenceResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReferenceResponse(struct soap*, struct _tds__GetEndpointReferenceResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReferenceResponse(struct soap*, struct _tds__GetEndpointReferenceResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetEndpointReferenceResponse(struct soap*, const char *URL, struct _tds__GetEndpointReferenceResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetEndpointReferenceResponse(struct soap*, const char *URL, struct _tds__GetEndpointReferenceResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetEndpointReferenceResponse(struct soap*, const char *URL, struct _tds__GetEndpointReferenceResponse*);
    soap_POST_recv__tds__GetEndpointReferenceResponse(struct soap*, struct _tds__GetEndpointReferenceResponse*);
    @endcode

  - <tds:GetRemoteUser> @ref _tds__GetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUser(struct soap*, struct _tds__GetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUser(struct soap*, struct _tds__GetRemoteUser*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteUser(struct soap*, const char *URL, struct _tds__GetRemoteUser*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteUser(struct soap*, const char *URL, struct _tds__GetRemoteUser*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteUser(struct soap*, const char *URL, struct _tds__GetRemoteUser*);
    soap_POST_recv__tds__GetRemoteUser(struct soap*, struct _tds__GetRemoteUser*);
    @endcode

  - <tds:GetRemoteUserResponse> @ref _tds__GetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUserResponse(struct soap*, struct _tds__GetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUserResponse(struct soap*, struct _tds__GetRemoteUserResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteUserResponse(struct soap*, const char *URL, struct _tds__GetRemoteUserResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteUserResponse(struct soap*, const char *URL, struct _tds__GetRemoteUserResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteUserResponse(struct soap*, const char *URL, struct _tds__GetRemoteUserResponse*);
    soap_POST_recv__tds__GetRemoteUserResponse(struct soap*, struct _tds__GetRemoteUserResponse*);
    @endcode

  - <tds:SetRemoteUser> @ref _tds__SetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUser(struct soap*, struct _tds__SetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUser(struct soap*, struct _tds__SetRemoteUser*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteUser(struct soap*, const char *URL, struct _tds__SetRemoteUser*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteUser(struct soap*, const char *URL, struct _tds__SetRemoteUser*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteUser(struct soap*, const char *URL, struct _tds__SetRemoteUser*);
    soap_POST_recv__tds__SetRemoteUser(struct soap*, struct _tds__SetRemoteUser*);
    @endcode

  - <tds:SetRemoteUserResponse> @ref _tds__SetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUserResponse(struct soap*, struct _tds__SetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUserResponse(struct soap*, struct _tds__SetRemoteUserResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteUserResponse(struct soap*, const char *URL, struct _tds__SetRemoteUserResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteUserResponse(struct soap*, const char *URL, struct _tds__SetRemoteUserResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteUserResponse(struct soap*, const char *URL, struct _tds__SetRemoteUserResponse*);
    soap_POST_recv__tds__SetRemoteUserResponse(struct soap*, struct _tds__SetRemoteUserResponse*);
    @endcode

  - <tds:GetUsers> @ref _tds__GetUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsers(struct soap*, struct _tds__GetUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsers(struct soap*, struct _tds__GetUsers*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetUsers(struct soap*, const char *URL, struct _tds__GetUsers*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetUsers(struct soap*, const char *URL, struct _tds__GetUsers*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetUsers(struct soap*, const char *URL, struct _tds__GetUsers*);
    soap_POST_recv__tds__GetUsers(struct soap*, struct _tds__GetUsers*);
    @endcode

  - <tds:GetUsersResponse> @ref _tds__GetUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsersResponse(struct soap*, struct _tds__GetUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsersResponse(struct soap*, struct _tds__GetUsersResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetUsersResponse(struct soap*, const char *URL, struct _tds__GetUsersResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetUsersResponse(struct soap*, const char *URL, struct _tds__GetUsersResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetUsersResponse(struct soap*, const char *URL, struct _tds__GetUsersResponse*);
    soap_POST_recv__tds__GetUsersResponse(struct soap*, struct _tds__GetUsersResponse*);
    @endcode

  - <tds:CreateUsers> @ref _tds__CreateUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsers(struct soap*, struct _tds__CreateUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsers(struct soap*, struct _tds__CreateUsers*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateUsers(struct soap*, const char *URL, struct _tds__CreateUsers*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateUsers(struct soap*, const char *URL, struct _tds__CreateUsers*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateUsers(struct soap*, const char *URL, struct _tds__CreateUsers*);
    soap_POST_recv__tds__CreateUsers(struct soap*, struct _tds__CreateUsers*);
    @endcode

  - <tds:CreateUsersResponse> @ref _tds__CreateUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsersResponse(struct soap*, struct _tds__CreateUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsersResponse(struct soap*, struct _tds__CreateUsersResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateUsersResponse(struct soap*, const char *URL, struct _tds__CreateUsersResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateUsersResponse(struct soap*, const char *URL, struct _tds__CreateUsersResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateUsersResponse(struct soap*, const char *URL, struct _tds__CreateUsersResponse*);
    soap_POST_recv__tds__CreateUsersResponse(struct soap*, struct _tds__CreateUsersResponse*);
    @endcode

  - <tds:DeleteUsers> @ref _tds__DeleteUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsers(struct soap*, struct _tds__DeleteUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsers(struct soap*, struct _tds__DeleteUsers*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteUsers(struct soap*, const char *URL, struct _tds__DeleteUsers*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteUsers(struct soap*, const char *URL, struct _tds__DeleteUsers*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteUsers(struct soap*, const char *URL, struct _tds__DeleteUsers*);
    soap_POST_recv__tds__DeleteUsers(struct soap*, struct _tds__DeleteUsers*);
    @endcode

  - <tds:DeleteUsersResponse> @ref _tds__DeleteUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsersResponse(struct soap*, struct _tds__DeleteUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsersResponse(struct soap*, struct _tds__DeleteUsersResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteUsersResponse(struct soap*, const char *URL, struct _tds__DeleteUsersResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteUsersResponse(struct soap*, const char *URL, struct _tds__DeleteUsersResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteUsersResponse(struct soap*, const char *URL, struct _tds__DeleteUsersResponse*);
    soap_POST_recv__tds__DeleteUsersResponse(struct soap*, struct _tds__DeleteUsersResponse*);
    @endcode

  - <tds:SetUser> @ref _tds__SetUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUser(struct soap*, struct _tds__SetUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUser(struct soap*, struct _tds__SetUser*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetUser(struct soap*, const char *URL, struct _tds__SetUser*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetUser(struct soap*, const char *URL, struct _tds__SetUser*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetUser(struct soap*, const char *URL, struct _tds__SetUser*);
    soap_POST_recv__tds__SetUser(struct soap*, struct _tds__SetUser*);
    @endcode

  - <tds:SetUserResponse> @ref _tds__SetUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUserResponse(struct soap*, struct _tds__SetUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUserResponse(struct soap*, struct _tds__SetUserResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetUserResponse(struct soap*, const char *URL, struct _tds__SetUserResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetUserResponse(struct soap*, const char *URL, struct _tds__SetUserResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetUserResponse(struct soap*, const char *URL, struct _tds__SetUserResponse*);
    soap_POST_recv__tds__SetUserResponse(struct soap*, struct _tds__SetUserResponse*);
    @endcode

  - <tds:GetWsdlUrl> @ref _tds__GetWsdlUrl
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrl(struct soap*, struct _tds__GetWsdlUrl*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrl(struct soap*, struct _tds__GetWsdlUrl*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetWsdlUrl(struct soap*, const char *URL, struct _tds__GetWsdlUrl*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetWsdlUrl(struct soap*, const char *URL, struct _tds__GetWsdlUrl*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetWsdlUrl(struct soap*, const char *URL, struct _tds__GetWsdlUrl*);
    soap_POST_recv__tds__GetWsdlUrl(struct soap*, struct _tds__GetWsdlUrl*);
    @endcode

  - <tds:GetWsdlUrlResponse> @ref _tds__GetWsdlUrlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrlResponse(struct soap*, struct _tds__GetWsdlUrlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrlResponse(struct soap*, struct _tds__GetWsdlUrlResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetWsdlUrlResponse(struct soap*, const char *URL, struct _tds__GetWsdlUrlResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetWsdlUrlResponse(struct soap*, const char *URL, struct _tds__GetWsdlUrlResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetWsdlUrlResponse(struct soap*, const char *URL, struct _tds__GetWsdlUrlResponse*);
    soap_POST_recv__tds__GetWsdlUrlResponse(struct soap*, struct _tds__GetWsdlUrlResponse*);
    @endcode

  - <tds:GetCapabilities> @ref _tds__GetCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCapabilities(struct soap*, const char *URL, struct _tds__GetCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCapabilities(struct soap*, const char *URL, struct _tds__GetCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCapabilities(struct soap*, const char *URL, struct _tds__GetCapabilities*);
    soap_POST_recv__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities*);
    @endcode

  - <tds:GetCapabilitiesResponse> @ref _tds__GetCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetCapabilitiesResponse*);
    soap_POST_recv__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse*);
    @endcode

  - <tds:GetHostname> @ref _tds__GetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostname(struct soap*, struct _tds__GetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostname(struct soap*, struct _tds__GetHostname*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetHostname(struct soap*, const char *URL, struct _tds__GetHostname*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetHostname(struct soap*, const char *URL, struct _tds__GetHostname*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetHostname(struct soap*, const char *URL, struct _tds__GetHostname*);
    soap_POST_recv__tds__GetHostname(struct soap*, struct _tds__GetHostname*);
    @endcode

  - <tds:GetHostnameResponse> @ref _tds__GetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostnameResponse(struct soap*, struct _tds__GetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostnameResponse(struct soap*, struct _tds__GetHostnameResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetHostnameResponse(struct soap*, const char *URL, struct _tds__GetHostnameResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetHostnameResponse(struct soap*, const char *URL, struct _tds__GetHostnameResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetHostnameResponse(struct soap*, const char *URL, struct _tds__GetHostnameResponse*);
    soap_POST_recv__tds__GetHostnameResponse(struct soap*, struct _tds__GetHostnameResponse*);
    @endcode

  - <tds:SetHostname> @ref _tds__SetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostname(struct soap*, struct _tds__SetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostname(struct soap*, struct _tds__SetHostname*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostname(struct soap*, const char *URL, struct _tds__SetHostname*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostname(struct soap*, const char *URL, struct _tds__SetHostname*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostname(struct soap*, const char *URL, struct _tds__SetHostname*);
    soap_POST_recv__tds__SetHostname(struct soap*, struct _tds__SetHostname*);
    @endcode

  - <tds:SetHostnameResponse> @ref _tds__SetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameResponse(struct soap*, struct _tds__SetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameResponse(struct soap*, struct _tds__SetHostnameResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostnameResponse(struct soap*, const char *URL, struct _tds__SetHostnameResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostnameResponse(struct soap*, const char *URL, struct _tds__SetHostnameResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostnameResponse(struct soap*, const char *URL, struct _tds__SetHostnameResponse*);
    soap_POST_recv__tds__SetHostnameResponse(struct soap*, struct _tds__SetHostnameResponse*);
    @endcode

  - <tds:SetHostnameFromDHCP> @ref _tds__SetHostnameFromDHCP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCP(struct soap*, struct _tds__SetHostnameFromDHCP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCP(struct soap*, struct _tds__SetHostnameFromDHCP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostnameFromDHCP(struct soap*, const char *URL, struct _tds__SetHostnameFromDHCP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostnameFromDHCP(struct soap*, const char *URL, struct _tds__SetHostnameFromDHCP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostnameFromDHCP(struct soap*, const char *URL, struct _tds__SetHostnameFromDHCP*);
    soap_POST_recv__tds__SetHostnameFromDHCP(struct soap*, struct _tds__SetHostnameFromDHCP*);
    @endcode

  - <tds:SetHostnameFromDHCPResponse> @ref _tds__SetHostnameFromDHCPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCPResponse(struct soap*, struct _tds__SetHostnameFromDHCPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCPResponse(struct soap*, struct _tds__SetHostnameFromDHCPResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostnameFromDHCPResponse(struct soap*, const char *URL, struct _tds__SetHostnameFromDHCPResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostnameFromDHCPResponse(struct soap*, const char *URL, struct _tds__SetHostnameFromDHCPResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostnameFromDHCPResponse(struct soap*, const char *URL, struct _tds__SetHostnameFromDHCPResponse*);
    soap_POST_recv__tds__SetHostnameFromDHCPResponse(struct soap*, struct _tds__SetHostnameFromDHCPResponse*);
    @endcode

  - <tds:GetDNS> @ref _tds__GetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNS(struct soap*, struct _tds__GetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNS(struct soap*, struct _tds__GetDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDNS(struct soap*, const char *URL, struct _tds__GetDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDNS(struct soap*, const char *URL, struct _tds__GetDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDNS(struct soap*, const char *URL, struct _tds__GetDNS*);
    soap_POST_recv__tds__GetDNS(struct soap*, struct _tds__GetDNS*);
    @endcode

  - <tds:GetDNSResponse> @ref _tds__GetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNSResponse(struct soap*, struct _tds__GetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNSResponse(struct soap*, struct _tds__GetDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDNSResponse(struct soap*, const char *URL, struct _tds__GetDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDNSResponse(struct soap*, const char *URL, struct _tds__GetDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDNSResponse(struct soap*, const char *URL, struct _tds__GetDNSResponse*);
    soap_POST_recv__tds__GetDNSResponse(struct soap*, struct _tds__GetDNSResponse*);
    @endcode

  - <tds:SetDNS> @ref _tds__SetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNS(struct soap*, struct _tds__SetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNS(struct soap*, struct _tds__SetDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDNS(struct soap*, const char *URL, struct _tds__SetDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDNS(struct soap*, const char *URL, struct _tds__SetDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDNS(struct soap*, const char *URL, struct _tds__SetDNS*);
    soap_POST_recv__tds__SetDNS(struct soap*, struct _tds__SetDNS*);
    @endcode

  - <tds:SetDNSResponse> @ref _tds__SetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNSResponse(struct soap*, struct _tds__SetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNSResponse(struct soap*, struct _tds__SetDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDNSResponse(struct soap*, const char *URL, struct _tds__SetDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDNSResponse(struct soap*, const char *URL, struct _tds__SetDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDNSResponse(struct soap*, const char *URL, struct _tds__SetDNSResponse*);
    soap_POST_recv__tds__SetDNSResponse(struct soap*, struct _tds__SetDNSResponse*);
    @endcode

  - <tds:GetNTP> @ref _tds__GetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTP(struct soap*, struct _tds__GetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTP(struct soap*, struct _tds__GetNTP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNTP(struct soap*, const char *URL, struct _tds__GetNTP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNTP(struct soap*, const char *URL, struct _tds__GetNTP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNTP(struct soap*, const char *URL, struct _tds__GetNTP*);
    soap_POST_recv__tds__GetNTP(struct soap*, struct _tds__GetNTP*);
    @endcode

  - <tds:GetNTPResponse> @ref _tds__GetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTPResponse(struct soap*, struct _tds__GetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTPResponse(struct soap*, struct _tds__GetNTPResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNTPResponse(struct soap*, const char *URL, struct _tds__GetNTPResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNTPResponse(struct soap*, const char *URL, struct _tds__GetNTPResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNTPResponse(struct soap*, const char *URL, struct _tds__GetNTPResponse*);
    soap_POST_recv__tds__GetNTPResponse(struct soap*, struct _tds__GetNTPResponse*);
    @endcode

  - <tds:SetNTP> @ref _tds__SetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTP(struct soap*, struct _tds__SetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTP(struct soap*, struct _tds__SetNTP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNTP(struct soap*, const char *URL, struct _tds__SetNTP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNTP(struct soap*, const char *URL, struct _tds__SetNTP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNTP(struct soap*, const char *URL, struct _tds__SetNTP*);
    soap_POST_recv__tds__SetNTP(struct soap*, struct _tds__SetNTP*);
    @endcode

  - <tds:SetNTPResponse> @ref _tds__SetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTPResponse(struct soap*, struct _tds__SetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTPResponse(struct soap*, struct _tds__SetNTPResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNTPResponse(struct soap*, const char *URL, struct _tds__SetNTPResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNTPResponse(struct soap*, const char *URL, struct _tds__SetNTPResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNTPResponse(struct soap*, const char *URL, struct _tds__SetNTPResponse*);
    soap_POST_recv__tds__SetNTPResponse(struct soap*, struct _tds__SetNTPResponse*);
    @endcode

  - <tds:GetDynamicDNS> @ref _tds__GetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNS(struct soap*, struct _tds__GetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNS(struct soap*, struct _tds__GetDynamicDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDynamicDNS(struct soap*, const char *URL, struct _tds__GetDynamicDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDynamicDNS(struct soap*, const char *URL, struct _tds__GetDynamicDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDynamicDNS(struct soap*, const char *URL, struct _tds__GetDynamicDNS*);
    soap_POST_recv__tds__GetDynamicDNS(struct soap*, struct _tds__GetDynamicDNS*);
    @endcode

  - <tds:GetDynamicDNSResponse> @ref _tds__GetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNSResponse(struct soap*, struct _tds__GetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNSResponse(struct soap*, struct _tds__GetDynamicDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDynamicDNSResponse(struct soap*, const char *URL, struct _tds__GetDynamicDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDynamicDNSResponse(struct soap*, const char *URL, struct _tds__GetDynamicDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDynamicDNSResponse(struct soap*, const char *URL, struct _tds__GetDynamicDNSResponse*);
    soap_POST_recv__tds__GetDynamicDNSResponse(struct soap*, struct _tds__GetDynamicDNSResponse*);
    @endcode

  - <tds:SetDynamicDNS> @ref _tds__SetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNS(struct soap*, struct _tds__SetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNS(struct soap*, struct _tds__SetDynamicDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDynamicDNS(struct soap*, const char *URL, struct _tds__SetDynamicDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDynamicDNS(struct soap*, const char *URL, struct _tds__SetDynamicDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDynamicDNS(struct soap*, const char *URL, struct _tds__SetDynamicDNS*);
    soap_POST_recv__tds__SetDynamicDNS(struct soap*, struct _tds__SetDynamicDNS*);
    @endcode

  - <tds:SetDynamicDNSResponse> @ref _tds__SetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNSResponse(struct soap*, struct _tds__SetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNSResponse(struct soap*, struct _tds__SetDynamicDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDynamicDNSResponse(struct soap*, const char *URL, struct _tds__SetDynamicDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDynamicDNSResponse(struct soap*, const char *URL, struct _tds__SetDynamicDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDynamicDNSResponse(struct soap*, const char *URL, struct _tds__SetDynamicDNSResponse*);
    soap_POST_recv__tds__SetDynamicDNSResponse(struct soap*, struct _tds__SetDynamicDNSResponse*);
    @endcode

  - <tds:GetNetworkInterfaces> @ref _tds__GetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfaces(struct soap*, struct _tds__GetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfaces(struct soap*, struct _tds__GetNetworkInterfaces*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkInterfaces(struct soap*, const char *URL, struct _tds__GetNetworkInterfaces*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkInterfaces(struct soap*, const char *URL, struct _tds__GetNetworkInterfaces*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkInterfaces(struct soap*, const char *URL, struct _tds__GetNetworkInterfaces*);
    soap_POST_recv__tds__GetNetworkInterfaces(struct soap*, struct _tds__GetNetworkInterfaces*);
    @endcode

  - <tds:GetNetworkInterfacesResponse> @ref _tds__GetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfacesResponse(struct soap*, struct _tds__GetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfacesResponse(struct soap*, struct _tds__GetNetworkInterfacesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkInterfacesResponse(struct soap*, const char *URL, struct _tds__GetNetworkInterfacesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkInterfacesResponse(struct soap*, const char *URL, struct _tds__GetNetworkInterfacesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkInterfacesResponse(struct soap*, const char *URL, struct _tds__GetNetworkInterfacesResponse*);
    soap_POST_recv__tds__GetNetworkInterfacesResponse(struct soap*, struct _tds__GetNetworkInterfacesResponse*);
    @endcode

  - <tds:SetNetworkInterfaces> @ref _tds__SetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfaces(struct soap*, struct _tds__SetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfaces(struct soap*, struct _tds__SetNetworkInterfaces*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkInterfaces(struct soap*, const char *URL, struct _tds__SetNetworkInterfaces*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkInterfaces(struct soap*, const char *URL, struct _tds__SetNetworkInterfaces*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkInterfaces(struct soap*, const char *URL, struct _tds__SetNetworkInterfaces*);
    soap_POST_recv__tds__SetNetworkInterfaces(struct soap*, struct _tds__SetNetworkInterfaces*);
    @endcode

  - <tds:SetNetworkInterfacesResponse> @ref _tds__SetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfacesResponse(struct soap*, struct _tds__SetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfacesResponse(struct soap*, struct _tds__SetNetworkInterfacesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkInterfacesResponse(struct soap*, const char *URL, struct _tds__SetNetworkInterfacesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkInterfacesResponse(struct soap*, const char *URL, struct _tds__SetNetworkInterfacesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkInterfacesResponse(struct soap*, const char *URL, struct _tds__SetNetworkInterfacesResponse*);
    soap_POST_recv__tds__SetNetworkInterfacesResponse(struct soap*, struct _tds__SetNetworkInterfacesResponse*);
    @endcode

  - <tds:GetNetworkProtocols> @ref _tds__GetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocols(struct soap*, struct _tds__GetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocols(struct soap*, struct _tds__GetNetworkProtocols*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkProtocols(struct soap*, const char *URL, struct _tds__GetNetworkProtocols*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkProtocols(struct soap*, const char *URL, struct _tds__GetNetworkProtocols*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkProtocols(struct soap*, const char *URL, struct _tds__GetNetworkProtocols*);
    soap_POST_recv__tds__GetNetworkProtocols(struct soap*, struct _tds__GetNetworkProtocols*);
    @endcode

  - <tds:GetNetworkProtocolsResponse> @ref _tds__GetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocolsResponse(struct soap*, struct _tds__GetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocolsResponse(struct soap*, struct _tds__GetNetworkProtocolsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkProtocolsResponse(struct soap*, const char *URL, struct _tds__GetNetworkProtocolsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkProtocolsResponse(struct soap*, const char *URL, struct _tds__GetNetworkProtocolsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkProtocolsResponse(struct soap*, const char *URL, struct _tds__GetNetworkProtocolsResponse*);
    soap_POST_recv__tds__GetNetworkProtocolsResponse(struct soap*, struct _tds__GetNetworkProtocolsResponse*);
    @endcode

  - <tds:SetNetworkProtocols> @ref _tds__SetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocols(struct soap*, struct _tds__SetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocols(struct soap*, struct _tds__SetNetworkProtocols*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkProtocols(struct soap*, const char *URL, struct _tds__SetNetworkProtocols*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkProtocols(struct soap*, const char *URL, struct _tds__SetNetworkProtocols*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkProtocols(struct soap*, const char *URL, struct _tds__SetNetworkProtocols*);
    soap_POST_recv__tds__SetNetworkProtocols(struct soap*, struct _tds__SetNetworkProtocols*);
    @endcode

  - <tds:SetNetworkProtocolsResponse> @ref _tds__SetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocolsResponse(struct soap*, struct _tds__SetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocolsResponse(struct soap*, struct _tds__SetNetworkProtocolsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkProtocolsResponse(struct soap*, const char *URL, struct _tds__SetNetworkProtocolsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkProtocolsResponse(struct soap*, const char *URL, struct _tds__SetNetworkProtocolsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkProtocolsResponse(struct soap*, const char *URL, struct _tds__SetNetworkProtocolsResponse*);
    soap_POST_recv__tds__SetNetworkProtocolsResponse(struct soap*, struct _tds__SetNetworkProtocolsResponse*);
    @endcode

  - <tds:GetNetworkDefaultGateway> @ref _tds__GetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGateway(struct soap*, struct _tds__GetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGateway(struct soap*, struct _tds__GetNetworkDefaultGateway*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkDefaultGateway(struct soap*, const char *URL, struct _tds__GetNetworkDefaultGateway*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkDefaultGateway(struct soap*, const char *URL, struct _tds__GetNetworkDefaultGateway*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkDefaultGateway(struct soap*, const char *URL, struct _tds__GetNetworkDefaultGateway*);
    soap_POST_recv__tds__GetNetworkDefaultGateway(struct soap*, struct _tds__GetNetworkDefaultGateway*);
    @endcode

  - <tds:GetNetworkDefaultGatewayResponse> @ref _tds__GetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGatewayResponse(struct soap*, struct _tds__GetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGatewayResponse(struct soap*, struct _tds__GetNetworkDefaultGatewayResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char *URL, struct _tds__GetNetworkDefaultGatewayResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char *URL, struct _tds__GetNetworkDefaultGatewayResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char *URL, struct _tds__GetNetworkDefaultGatewayResponse*);
    soap_POST_recv__tds__GetNetworkDefaultGatewayResponse(struct soap*, struct _tds__GetNetworkDefaultGatewayResponse*);
    @endcode

  - <tds:SetNetworkDefaultGateway> @ref _tds__SetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGateway(struct soap*, struct _tds__SetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGateway(struct soap*, struct _tds__SetNetworkDefaultGateway*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkDefaultGateway(struct soap*, const char *URL, struct _tds__SetNetworkDefaultGateway*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkDefaultGateway(struct soap*, const char *URL, struct _tds__SetNetworkDefaultGateway*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkDefaultGateway(struct soap*, const char *URL, struct _tds__SetNetworkDefaultGateway*);
    soap_POST_recv__tds__SetNetworkDefaultGateway(struct soap*, struct _tds__SetNetworkDefaultGateway*);
    @endcode

  - <tds:SetNetworkDefaultGatewayResponse> @ref _tds__SetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGatewayResponse(struct soap*, struct _tds__SetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGatewayResponse(struct soap*, struct _tds__SetNetworkDefaultGatewayResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char *URL, struct _tds__SetNetworkDefaultGatewayResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char *URL, struct _tds__SetNetworkDefaultGatewayResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char *URL, struct _tds__SetNetworkDefaultGatewayResponse*);
    soap_POST_recv__tds__SetNetworkDefaultGatewayResponse(struct soap*, struct _tds__SetNetworkDefaultGatewayResponse*);
    @endcode

  - <tds:GetZeroConfiguration> @ref _tds__GetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfiguration(struct soap*, struct _tds__GetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfiguration(struct soap*, struct _tds__GetZeroConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetZeroConfiguration(struct soap*, const char *URL, struct _tds__GetZeroConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetZeroConfiguration(struct soap*, const char *URL, struct _tds__GetZeroConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetZeroConfiguration(struct soap*, const char *URL, struct _tds__GetZeroConfiguration*);
    soap_POST_recv__tds__GetZeroConfiguration(struct soap*, struct _tds__GetZeroConfiguration*);
    @endcode

  - <tds:GetZeroConfigurationResponse> @ref _tds__GetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfigurationResponse(struct soap*, struct _tds__GetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfigurationResponse(struct soap*, struct _tds__GetZeroConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetZeroConfigurationResponse(struct soap*, const char *URL, struct _tds__GetZeroConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetZeroConfigurationResponse(struct soap*, const char *URL, struct _tds__GetZeroConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetZeroConfigurationResponse(struct soap*, const char *URL, struct _tds__GetZeroConfigurationResponse*);
    soap_POST_recv__tds__GetZeroConfigurationResponse(struct soap*, struct _tds__GetZeroConfigurationResponse*);
    @endcode

  - <tds:SetZeroConfiguration> @ref _tds__SetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfiguration(struct soap*, struct _tds__SetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfiguration(struct soap*, struct _tds__SetZeroConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetZeroConfiguration(struct soap*, const char *URL, struct _tds__SetZeroConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetZeroConfiguration(struct soap*, const char *URL, struct _tds__SetZeroConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetZeroConfiguration(struct soap*, const char *URL, struct _tds__SetZeroConfiguration*);
    soap_POST_recv__tds__SetZeroConfiguration(struct soap*, struct _tds__SetZeroConfiguration*);
    @endcode

  - <tds:SetZeroConfigurationResponse> @ref _tds__SetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfigurationResponse(struct soap*, struct _tds__SetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfigurationResponse(struct soap*, struct _tds__SetZeroConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetZeroConfigurationResponse(struct soap*, const char *URL, struct _tds__SetZeroConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetZeroConfigurationResponse(struct soap*, const char *URL, struct _tds__SetZeroConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetZeroConfigurationResponse(struct soap*, const char *URL, struct _tds__SetZeroConfigurationResponse*);
    soap_POST_recv__tds__SetZeroConfigurationResponse(struct soap*, struct _tds__SetZeroConfigurationResponse*);
    @endcode

  - <tds:GetIPAddressFilter> @ref _tds__GetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilter(struct soap*, struct _tds__GetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilter(struct soap*, struct _tds__GetIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetIPAddressFilter(struct soap*, const char *URL, struct _tds__GetIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetIPAddressFilter(struct soap*, const char *URL, struct _tds__GetIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetIPAddressFilter(struct soap*, const char *URL, struct _tds__GetIPAddressFilter*);
    soap_POST_recv__tds__GetIPAddressFilter(struct soap*, struct _tds__GetIPAddressFilter*);
    @endcode

  - <tds:GetIPAddressFilterResponse> @ref _tds__GetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilterResponse(struct soap*, struct _tds__GetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilterResponse(struct soap*, struct _tds__GetIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__GetIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__GetIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__GetIPAddressFilterResponse*);
    soap_POST_recv__tds__GetIPAddressFilterResponse(struct soap*, struct _tds__GetIPAddressFilterResponse*);
    @endcode

  - <tds:SetIPAddressFilter> @ref _tds__SetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilter(struct soap*, struct _tds__SetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilter(struct soap*, struct _tds__SetIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetIPAddressFilter(struct soap*, const char *URL, struct _tds__SetIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetIPAddressFilter(struct soap*, const char *URL, struct _tds__SetIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetIPAddressFilter(struct soap*, const char *URL, struct _tds__SetIPAddressFilter*);
    soap_POST_recv__tds__SetIPAddressFilter(struct soap*, struct _tds__SetIPAddressFilter*);
    @endcode

  - <tds:SetIPAddressFilterResponse> @ref _tds__SetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilterResponse(struct soap*, struct _tds__SetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilterResponse(struct soap*, struct _tds__SetIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__SetIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__SetIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__SetIPAddressFilterResponse*);
    soap_POST_recv__tds__SetIPAddressFilterResponse(struct soap*, struct _tds__SetIPAddressFilterResponse*);
    @endcode

  - <tds:AddIPAddressFilter> @ref _tds__AddIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilter(struct soap*, struct _tds__AddIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilter(struct soap*, struct _tds__AddIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddIPAddressFilter(struct soap*, const char *URL, struct _tds__AddIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddIPAddressFilter(struct soap*, const char *URL, struct _tds__AddIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddIPAddressFilter(struct soap*, const char *URL, struct _tds__AddIPAddressFilter*);
    soap_POST_recv__tds__AddIPAddressFilter(struct soap*, struct _tds__AddIPAddressFilter*);
    @endcode

  - <tds:AddIPAddressFilterResponse> @ref _tds__AddIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilterResponse(struct soap*, struct _tds__AddIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilterResponse(struct soap*, struct _tds__AddIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__AddIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__AddIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__AddIPAddressFilterResponse*);
    soap_POST_recv__tds__AddIPAddressFilterResponse(struct soap*, struct _tds__AddIPAddressFilterResponse*);
    @endcode

  - <tds:RemoveIPAddressFilter> @ref _tds__RemoveIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilter(struct soap*, struct _tds__RemoveIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilter(struct soap*, struct _tds__RemoveIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveIPAddressFilter(struct soap*, const char *URL, struct _tds__RemoveIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveIPAddressFilter(struct soap*, const char *URL, struct _tds__RemoveIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveIPAddressFilter(struct soap*, const char *URL, struct _tds__RemoveIPAddressFilter*);
    soap_POST_recv__tds__RemoveIPAddressFilter(struct soap*, struct _tds__RemoveIPAddressFilter*);
    @endcode

  - <tds:RemoveIPAddressFilterResponse> @ref _tds__RemoveIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilterResponse(struct soap*, struct _tds__RemoveIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilterResponse(struct soap*, struct _tds__RemoveIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__RemoveIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__RemoveIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__RemoveIPAddressFilterResponse*);
    soap_POST_recv__tds__RemoveIPAddressFilterResponse(struct soap*, struct _tds__RemoveIPAddressFilterResponse*);
    @endcode

  - <tds:GetAccessPolicy> @ref _tds__GetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicy(struct soap*, struct _tds__GetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicy(struct soap*, struct _tds__GetAccessPolicy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAccessPolicy(struct soap*, const char *URL, struct _tds__GetAccessPolicy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAccessPolicy(struct soap*, const char *URL, struct _tds__GetAccessPolicy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAccessPolicy(struct soap*, const char *URL, struct _tds__GetAccessPolicy*);
    soap_POST_recv__tds__GetAccessPolicy(struct soap*, struct _tds__GetAccessPolicy*);
    @endcode

  - <tds:GetAccessPolicyResponse> @ref _tds__GetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicyResponse(struct soap*, struct _tds__GetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicyResponse(struct soap*, struct _tds__GetAccessPolicyResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAccessPolicyResponse(struct soap*, const char *URL, struct _tds__GetAccessPolicyResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAccessPolicyResponse(struct soap*, const char *URL, struct _tds__GetAccessPolicyResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAccessPolicyResponse(struct soap*, const char *URL, struct _tds__GetAccessPolicyResponse*);
    soap_POST_recv__tds__GetAccessPolicyResponse(struct soap*, struct _tds__GetAccessPolicyResponse*);
    @endcode

  - <tds:SetAccessPolicy> @ref _tds__SetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicy(struct soap*, struct _tds__SetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicy(struct soap*, struct _tds__SetAccessPolicy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetAccessPolicy(struct soap*, const char *URL, struct _tds__SetAccessPolicy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetAccessPolicy(struct soap*, const char *URL, struct _tds__SetAccessPolicy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetAccessPolicy(struct soap*, const char *URL, struct _tds__SetAccessPolicy*);
    soap_POST_recv__tds__SetAccessPolicy(struct soap*, struct _tds__SetAccessPolicy*);
    @endcode

  - <tds:SetAccessPolicyResponse> @ref _tds__SetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicyResponse(struct soap*, struct _tds__SetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicyResponse(struct soap*, struct _tds__SetAccessPolicyResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetAccessPolicyResponse(struct soap*, const char *URL, struct _tds__SetAccessPolicyResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetAccessPolicyResponse(struct soap*, const char *URL, struct _tds__SetAccessPolicyResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetAccessPolicyResponse(struct soap*, const char *URL, struct _tds__SetAccessPolicyResponse*);
    soap_POST_recv__tds__SetAccessPolicyResponse(struct soap*, struct _tds__SetAccessPolicyResponse*);
    @endcode

  - <tds:CreateCertificate> @ref _tds__CreateCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificate(struct soap*, struct _tds__CreateCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificate(struct soap*, struct _tds__CreateCertificate*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateCertificate(struct soap*, const char *URL, struct _tds__CreateCertificate*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateCertificate(struct soap*, const char *URL, struct _tds__CreateCertificate*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateCertificate(struct soap*, const char *URL, struct _tds__CreateCertificate*);
    soap_POST_recv__tds__CreateCertificate(struct soap*, struct _tds__CreateCertificate*);
    @endcode

  - <tds:CreateCertificateResponse> @ref _tds__CreateCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificateResponse(struct soap*, struct _tds__CreateCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificateResponse(struct soap*, struct _tds__CreateCertificateResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateCertificateResponse(struct soap*, const char *URL, struct _tds__CreateCertificateResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateCertificateResponse(struct soap*, const char *URL, struct _tds__CreateCertificateResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateCertificateResponse(struct soap*, const char *URL, struct _tds__CreateCertificateResponse*);
    soap_POST_recv__tds__CreateCertificateResponse(struct soap*, struct _tds__CreateCertificateResponse*);
    @endcode

  - <tds:GetCertificates> @ref _tds__GetCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificates(struct soap*, struct _tds__GetCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificates(struct soap*, struct _tds__GetCertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificates(struct soap*, const char *URL, struct _tds__GetCertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificates(struct soap*, const char *URL, struct _tds__GetCertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificates(struct soap*, const char *URL, struct _tds__GetCertificates*);
    soap_POST_recv__tds__GetCertificates(struct soap*, struct _tds__GetCertificates*);
    @endcode

  - <tds:GetCertificatesResponse> @ref _tds__GetCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesResponse(struct soap*, struct _tds__GetCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesResponse(struct soap*, struct _tds__GetCertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificatesResponse(struct soap*, const char *URL, struct _tds__GetCertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificatesResponse(struct soap*, const char *URL, struct _tds__GetCertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificatesResponse(struct soap*, const char *URL, struct _tds__GetCertificatesResponse*);
    soap_POST_recv__tds__GetCertificatesResponse(struct soap*, struct _tds__GetCertificatesResponse*);
    @endcode

  - <tds:GetCertificatesStatus> @ref _tds__GetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatus(struct soap*, struct _tds__GetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatus(struct soap*, struct _tds__GetCertificatesStatus*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificatesStatus(struct soap*, const char *URL, struct _tds__GetCertificatesStatus*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificatesStatus(struct soap*, const char *URL, struct _tds__GetCertificatesStatus*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificatesStatus(struct soap*, const char *URL, struct _tds__GetCertificatesStatus*);
    soap_POST_recv__tds__GetCertificatesStatus(struct soap*, struct _tds__GetCertificatesStatus*);
    @endcode

  - <tds:GetCertificatesStatusResponse> @ref _tds__GetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatusResponse(struct soap*, struct _tds__GetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatusResponse(struct soap*, struct _tds__GetCertificatesStatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificatesStatusResponse(struct soap*, const char *URL, struct _tds__GetCertificatesStatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificatesStatusResponse(struct soap*, const char *URL, struct _tds__GetCertificatesStatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificatesStatusResponse(struct soap*, const char *URL, struct _tds__GetCertificatesStatusResponse*);
    soap_POST_recv__tds__GetCertificatesStatusResponse(struct soap*, struct _tds__GetCertificatesStatusResponse*);
    @endcode

  - <tds:SetCertificatesStatus> @ref _tds__SetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatus(struct soap*, struct _tds__SetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatus(struct soap*, struct _tds__SetCertificatesStatus*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetCertificatesStatus(struct soap*, const char *URL, struct _tds__SetCertificatesStatus*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetCertificatesStatus(struct soap*, const char *URL, struct _tds__SetCertificatesStatus*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetCertificatesStatus(struct soap*, const char *URL, struct _tds__SetCertificatesStatus*);
    soap_POST_recv__tds__SetCertificatesStatus(struct soap*, struct _tds__SetCertificatesStatus*);
    @endcode

  - <tds:SetCertificatesStatusResponse> @ref _tds__SetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatusResponse(struct soap*, struct _tds__SetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatusResponse(struct soap*, struct _tds__SetCertificatesStatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetCertificatesStatusResponse(struct soap*, const char *URL, struct _tds__SetCertificatesStatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetCertificatesStatusResponse(struct soap*, const char *URL, struct _tds__SetCertificatesStatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetCertificatesStatusResponse(struct soap*, const char *URL, struct _tds__SetCertificatesStatusResponse*);
    soap_POST_recv__tds__SetCertificatesStatusResponse(struct soap*, struct _tds__SetCertificatesStatusResponse*);
    @endcode

  - <tds:DeleteCertificates> @ref _tds__DeleteCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificates(struct soap*, struct _tds__DeleteCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificates(struct soap*, struct _tds__DeleteCertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteCertificates(struct soap*, const char *URL, struct _tds__DeleteCertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteCertificates(struct soap*, const char *URL, struct _tds__DeleteCertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteCertificates(struct soap*, const char *URL, struct _tds__DeleteCertificates*);
    soap_POST_recv__tds__DeleteCertificates(struct soap*, struct _tds__DeleteCertificates*);
    @endcode

  - <tds:DeleteCertificatesResponse> @ref _tds__DeleteCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificatesResponse(struct soap*, struct _tds__DeleteCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificatesResponse(struct soap*, struct _tds__DeleteCertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteCertificatesResponse(struct soap*, const char *URL, struct _tds__DeleteCertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteCertificatesResponse(struct soap*, const char *URL, struct _tds__DeleteCertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteCertificatesResponse(struct soap*, const char *URL, struct _tds__DeleteCertificatesResponse*);
    soap_POST_recv__tds__DeleteCertificatesResponse(struct soap*, struct _tds__DeleteCertificatesResponse*);
    @endcode

  - <tds:GetPkcs10Request> @ref _tds__GetPkcs10Request
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10Request(struct soap*, struct _tds__GetPkcs10Request*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10Request(struct soap*, struct _tds__GetPkcs10Request*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPkcs10Request(struct soap*, const char *URL, struct _tds__GetPkcs10Request*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPkcs10Request(struct soap*, const char *URL, struct _tds__GetPkcs10Request*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPkcs10Request(struct soap*, const char *URL, struct _tds__GetPkcs10Request*);
    soap_POST_recv__tds__GetPkcs10Request(struct soap*, struct _tds__GetPkcs10Request*);
    @endcode

  - <tds:GetPkcs10RequestResponse> @ref _tds__GetPkcs10RequestResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10RequestResponse(struct soap*, struct _tds__GetPkcs10RequestResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10RequestResponse(struct soap*, struct _tds__GetPkcs10RequestResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPkcs10RequestResponse(struct soap*, const char *URL, struct _tds__GetPkcs10RequestResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPkcs10RequestResponse(struct soap*, const char *URL, struct _tds__GetPkcs10RequestResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPkcs10RequestResponse(struct soap*, const char *URL, struct _tds__GetPkcs10RequestResponse*);
    soap_POST_recv__tds__GetPkcs10RequestResponse(struct soap*, struct _tds__GetPkcs10RequestResponse*);
    @endcode

  - <tds:LoadCertificates> @ref _tds__LoadCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificates(struct soap*, struct _tds__LoadCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificates(struct soap*, struct _tds__LoadCertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificates(struct soap*, const char *URL, struct _tds__LoadCertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificates(struct soap*, const char *URL, struct _tds__LoadCertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificates(struct soap*, const char *URL, struct _tds__LoadCertificates*);
    soap_POST_recv__tds__LoadCertificates(struct soap*, struct _tds__LoadCertificates*);
    @endcode

  - <tds:LoadCertificatesResponse> @ref _tds__LoadCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificatesResponse(struct soap*, struct _tds__LoadCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificatesResponse(struct soap*, struct _tds__LoadCertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificatesResponse(struct soap*, const char *URL, struct _tds__LoadCertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificatesResponse(struct soap*, const char *URL, struct _tds__LoadCertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificatesResponse(struct soap*, const char *URL, struct _tds__LoadCertificatesResponse*);
    soap_POST_recv__tds__LoadCertificatesResponse(struct soap*, struct _tds__LoadCertificatesResponse*);
    @endcode

  - <tds:GetClientCertificateMode> @ref _tds__GetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateMode(struct soap*, struct _tds__GetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateMode(struct soap*, struct _tds__GetClientCertificateMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetClientCertificateMode(struct soap*, const char *URL, struct _tds__GetClientCertificateMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetClientCertificateMode(struct soap*, const char *URL, struct _tds__GetClientCertificateMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetClientCertificateMode(struct soap*, const char *URL, struct _tds__GetClientCertificateMode*);
    soap_POST_recv__tds__GetClientCertificateMode(struct soap*, struct _tds__GetClientCertificateMode*);
    @endcode

  - <tds:GetClientCertificateModeResponse> @ref _tds__GetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateModeResponse(struct soap*, struct _tds__GetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateModeResponse(struct soap*, struct _tds__GetClientCertificateModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetClientCertificateModeResponse(struct soap*, const char *URL, struct _tds__GetClientCertificateModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetClientCertificateModeResponse(struct soap*, const char *URL, struct _tds__GetClientCertificateModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetClientCertificateModeResponse(struct soap*, const char *URL, struct _tds__GetClientCertificateModeResponse*);
    soap_POST_recv__tds__GetClientCertificateModeResponse(struct soap*, struct _tds__GetClientCertificateModeResponse*);
    @endcode

  - <tds:SetClientCertificateMode> @ref _tds__SetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateMode(struct soap*, struct _tds__SetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateMode(struct soap*, struct _tds__SetClientCertificateMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetClientCertificateMode(struct soap*, const char *URL, struct _tds__SetClientCertificateMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetClientCertificateMode(struct soap*, const char *URL, struct _tds__SetClientCertificateMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetClientCertificateMode(struct soap*, const char *URL, struct _tds__SetClientCertificateMode*);
    soap_POST_recv__tds__SetClientCertificateMode(struct soap*, struct _tds__SetClientCertificateMode*);
    @endcode

  - <tds:SetClientCertificateModeResponse> @ref _tds__SetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateModeResponse(struct soap*, struct _tds__SetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateModeResponse(struct soap*, struct _tds__SetClientCertificateModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetClientCertificateModeResponse(struct soap*, const char *URL, struct _tds__SetClientCertificateModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetClientCertificateModeResponse(struct soap*, const char *URL, struct _tds__SetClientCertificateModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetClientCertificateModeResponse(struct soap*, const char *URL, struct _tds__SetClientCertificateModeResponse*);
    soap_POST_recv__tds__SetClientCertificateModeResponse(struct soap*, struct _tds__SetClientCertificateModeResponse*);
    @endcode

  - <tds:GetCACertificates> @ref _tds__GetCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificates(struct soap*, struct _tds__GetCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificates(struct soap*, struct _tds__GetCACertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCACertificates(struct soap*, const char *URL, struct _tds__GetCACertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCACertificates(struct soap*, const char *URL, struct _tds__GetCACertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCACertificates(struct soap*, const char *URL, struct _tds__GetCACertificates*);
    soap_POST_recv__tds__GetCACertificates(struct soap*, struct _tds__GetCACertificates*);
    @endcode

  - <tds:GetCACertificatesResponse> @ref _tds__GetCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificatesResponse(struct soap*, struct _tds__GetCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificatesResponse(struct soap*, struct _tds__GetCACertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCACertificatesResponse(struct soap*, const char *URL, struct _tds__GetCACertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCACertificatesResponse(struct soap*, const char *URL, struct _tds__GetCACertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCACertificatesResponse(struct soap*, const char *URL, struct _tds__GetCACertificatesResponse*);
    soap_POST_recv__tds__GetCACertificatesResponse(struct soap*, struct _tds__GetCACertificatesResponse*);
    @endcode

  - <tds:LoadCertificateWithPrivateKey> @ref _tds__LoadCertificateWithPrivateKey
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKey(struct soap*, struct _tds__LoadCertificateWithPrivateKey*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKey(struct soap*, struct _tds__LoadCertificateWithPrivateKey*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificateWithPrivateKey(struct soap*, const char *URL, struct _tds__LoadCertificateWithPrivateKey*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificateWithPrivateKey(struct soap*, const char *URL, struct _tds__LoadCertificateWithPrivateKey*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificateWithPrivateKey(struct soap*, const char *URL, struct _tds__LoadCertificateWithPrivateKey*);
    soap_POST_recv__tds__LoadCertificateWithPrivateKey(struct soap*, struct _tds__LoadCertificateWithPrivateKey*);
    @endcode

  - <tds:LoadCertificateWithPrivateKeyResponse> @ref _tds__LoadCertificateWithPrivateKeyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char *URL, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char *URL, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char *URL, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    soap_POST_recv__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    @endcode

  - <tds:GetCertificateInformation> @ref _tds__GetCertificateInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformation(struct soap*, struct _tds__GetCertificateInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformation(struct soap*, struct _tds__GetCertificateInformation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificateInformation(struct soap*, const char *URL, struct _tds__GetCertificateInformation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificateInformation(struct soap*, const char *URL, struct _tds__GetCertificateInformation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificateInformation(struct soap*, const char *URL, struct _tds__GetCertificateInformation*);
    soap_POST_recv__tds__GetCertificateInformation(struct soap*, struct _tds__GetCertificateInformation*);
    @endcode

  - <tds:GetCertificateInformationResponse> @ref _tds__GetCertificateInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformationResponse(struct soap*, struct _tds__GetCertificateInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformationResponse(struct soap*, struct _tds__GetCertificateInformationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificateInformationResponse(struct soap*, const char *URL, struct _tds__GetCertificateInformationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificateInformationResponse(struct soap*, const char *URL, struct _tds__GetCertificateInformationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificateInformationResponse(struct soap*, const char *URL, struct _tds__GetCertificateInformationResponse*);
    soap_POST_recv__tds__GetCertificateInformationResponse(struct soap*, struct _tds__GetCertificateInformationResponse*);
    @endcode

  - <tds:LoadCACertificates> @ref _tds__LoadCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificates(struct soap*, struct _tds__LoadCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificates(struct soap*, struct _tds__LoadCACertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCACertificates(struct soap*, const char *URL, struct _tds__LoadCACertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCACertificates(struct soap*, const char *URL, struct _tds__LoadCACertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCACertificates(struct soap*, const char *URL, struct _tds__LoadCACertificates*);
    soap_POST_recv__tds__LoadCACertificates(struct soap*, struct _tds__LoadCACertificates*);
    @endcode

  - <tds:LoadCACertificatesResponse> @ref _tds__LoadCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificatesResponse(struct soap*, struct _tds__LoadCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificatesResponse(struct soap*, struct _tds__LoadCACertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCACertificatesResponse(struct soap*, const char *URL, struct _tds__LoadCACertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCACertificatesResponse(struct soap*, const char *URL, struct _tds__LoadCACertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCACertificatesResponse(struct soap*, const char *URL, struct _tds__LoadCACertificatesResponse*);
    soap_POST_recv__tds__LoadCACertificatesResponse(struct soap*, struct _tds__LoadCACertificatesResponse*);
    @endcode

  - <tds:CreateDot1XConfiguration> @ref _tds__CreateDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfiguration(struct soap*, struct _tds__CreateDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfiguration(struct soap*, struct _tds__CreateDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateDot1XConfiguration(struct soap*, const char *URL, struct _tds__CreateDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateDot1XConfiguration(struct soap*, const char *URL, struct _tds__CreateDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateDot1XConfiguration(struct soap*, const char *URL, struct _tds__CreateDot1XConfiguration*);
    soap_POST_recv__tds__CreateDot1XConfiguration(struct soap*, struct _tds__CreateDot1XConfiguration*);
    @endcode

  - <tds:CreateDot1XConfigurationResponse> @ref _tds__CreateDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfigurationResponse(struct soap*, struct _tds__CreateDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfigurationResponse(struct soap*, struct _tds__CreateDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__CreateDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__CreateDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__CreateDot1XConfigurationResponse*);
    soap_POST_recv__tds__CreateDot1XConfigurationResponse(struct soap*, struct _tds__CreateDot1XConfigurationResponse*);
    @endcode

  - <tds:SetDot1XConfiguration> @ref _tds__SetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfiguration(struct soap*, struct _tds__SetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfiguration(struct soap*, struct _tds__SetDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDot1XConfiguration(struct soap*, const char *URL, struct _tds__SetDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDot1XConfiguration(struct soap*, const char *URL, struct _tds__SetDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDot1XConfiguration(struct soap*, const char *URL, struct _tds__SetDot1XConfiguration*);
    soap_POST_recv__tds__SetDot1XConfiguration(struct soap*, struct _tds__SetDot1XConfiguration*);
    @endcode

  - <tds:SetDot1XConfigurationResponse> @ref _tds__SetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfigurationResponse(struct soap*, struct _tds__SetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfigurationResponse(struct soap*, struct _tds__SetDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__SetDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__SetDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__SetDot1XConfigurationResponse*);
    soap_POST_recv__tds__SetDot1XConfigurationResponse(struct soap*, struct _tds__SetDot1XConfigurationResponse*);
    @endcode

  - <tds:GetDot1XConfiguration> @ref _tds__GetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfiguration(struct soap*, struct _tds__GetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfiguration(struct soap*, struct _tds__GetDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfiguration(struct soap*, const char *URL, struct _tds__GetDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfiguration(struct soap*, const char *URL, struct _tds__GetDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfiguration(struct soap*, const char *URL, struct _tds__GetDot1XConfiguration*);
    soap_POST_recv__tds__GetDot1XConfiguration(struct soap*, struct _tds__GetDot1XConfiguration*);
    @endcode

  - <tds:GetDot1XConfigurationResponse> @ref _tds__GetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationResponse(struct soap*, struct _tds__GetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationResponse(struct soap*, struct _tds__GetDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__GetDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__GetDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__GetDot1XConfigurationResponse*);
    soap_POST_recv__tds__GetDot1XConfigurationResponse(struct soap*, struct _tds__GetDot1XConfigurationResponse*);
    @endcode

  - <tds:GetDot1XConfigurations> @ref _tds__GetDot1XConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurations(struct soap*, struct _tds__GetDot1XConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurations(struct soap*, struct _tds__GetDot1XConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfigurations(struct soap*, const char *URL, struct _tds__GetDot1XConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfigurations(struct soap*, const char *URL, struct _tds__GetDot1XConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfigurations(struct soap*, const char *URL, struct _tds__GetDot1XConfigurations*);
    soap_POST_recv__tds__GetDot1XConfigurations(struct soap*, struct _tds__GetDot1XConfigurations*);
    @endcode

  - <tds:GetDot1XConfigurationsResponse> @ref _tds__GetDot1XConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationsResponse(struct soap*, struct _tds__GetDot1XConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationsResponse(struct soap*, struct _tds__GetDot1XConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfigurationsResponse(struct soap*, const char *URL, struct _tds__GetDot1XConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfigurationsResponse(struct soap*, const char *URL, struct _tds__GetDot1XConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfigurationsResponse(struct soap*, const char *URL, struct _tds__GetDot1XConfigurationsResponse*);
    soap_POST_recv__tds__GetDot1XConfigurationsResponse(struct soap*, struct _tds__GetDot1XConfigurationsResponse*);
    @endcode

  - <tds:DeleteDot1XConfiguration> @ref _tds__DeleteDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfiguration(struct soap*, struct _tds__DeleteDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfiguration(struct soap*, struct _tds__DeleteDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteDot1XConfiguration(struct soap*, const char *URL, struct _tds__DeleteDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteDot1XConfiguration(struct soap*, const char *URL, struct _tds__DeleteDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteDot1XConfiguration(struct soap*, const char *URL, struct _tds__DeleteDot1XConfiguration*);
    soap_POST_recv__tds__DeleteDot1XConfiguration(struct soap*, struct _tds__DeleteDot1XConfiguration*);
    @endcode

  - <tds:DeleteDot1XConfigurationResponse> @ref _tds__DeleteDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfigurationResponse(struct soap*, struct _tds__DeleteDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfigurationResponse(struct soap*, struct _tds__DeleteDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__DeleteDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__DeleteDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__DeleteDot1XConfigurationResponse*);
    soap_POST_recv__tds__DeleteDot1XConfigurationResponse(struct soap*, struct _tds__DeleteDot1XConfigurationResponse*);
    @endcode

  - <tds:GetRelayOutputs> @ref _tds__GetRelayOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputs(struct soap*, struct _tds__GetRelayOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputs(struct soap*, struct _tds__GetRelayOutputs*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRelayOutputs(struct soap*, const char *URL, struct _tds__GetRelayOutputs*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRelayOutputs(struct soap*, const char *URL, struct _tds__GetRelayOutputs*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRelayOutputs(struct soap*, const char *URL, struct _tds__GetRelayOutputs*);
    soap_POST_recv__tds__GetRelayOutputs(struct soap*, struct _tds__GetRelayOutputs*);
    @endcode

  - <tds:GetRelayOutputsResponse> @ref _tds__GetRelayOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputsResponse(struct soap*, struct _tds__GetRelayOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputsResponse(struct soap*, struct _tds__GetRelayOutputsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRelayOutputsResponse(struct soap*, const char *URL, struct _tds__GetRelayOutputsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRelayOutputsResponse(struct soap*, const char *URL, struct _tds__GetRelayOutputsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRelayOutputsResponse(struct soap*, const char *URL, struct _tds__GetRelayOutputsResponse*);
    soap_POST_recv__tds__GetRelayOutputsResponse(struct soap*, struct _tds__GetRelayOutputsResponse*);
    @endcode

  - <tds:SetRelayOutputSettings> @ref _tds__SetRelayOutputSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettings(struct soap*, struct _tds__SetRelayOutputSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettings(struct soap*, struct _tds__SetRelayOutputSettings*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputSettings(struct soap*, const char *URL, struct _tds__SetRelayOutputSettings*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputSettings(struct soap*, const char *URL, struct _tds__SetRelayOutputSettings*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputSettings(struct soap*, const char *URL, struct _tds__SetRelayOutputSettings*);
    soap_POST_recv__tds__SetRelayOutputSettings(struct soap*, struct _tds__SetRelayOutputSettings*);
    @endcode

  - <tds:SetRelayOutputSettingsResponse> @ref _tds__SetRelayOutputSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettingsResponse(struct soap*, struct _tds__SetRelayOutputSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettingsResponse(struct soap*, struct _tds__SetRelayOutputSettingsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputSettingsResponse(struct soap*, const char *URL, struct _tds__SetRelayOutputSettingsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputSettingsResponse(struct soap*, const char *URL, struct _tds__SetRelayOutputSettingsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputSettingsResponse(struct soap*, const char *URL, struct _tds__SetRelayOutputSettingsResponse*);
    soap_POST_recv__tds__SetRelayOutputSettingsResponse(struct soap*, struct _tds__SetRelayOutputSettingsResponse*);
    @endcode

  - <tds:SetRelayOutputState> @ref _tds__SetRelayOutputState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputState(struct soap*, struct _tds__SetRelayOutputState*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputState(struct soap*, struct _tds__SetRelayOutputState*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputState(struct soap*, const char *URL, struct _tds__SetRelayOutputState*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputState(struct soap*, const char *URL, struct _tds__SetRelayOutputState*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputState(struct soap*, const char *URL, struct _tds__SetRelayOutputState*);
    soap_POST_recv__tds__SetRelayOutputState(struct soap*, struct _tds__SetRelayOutputState*);
    @endcode

  - <tds:SetRelayOutputStateResponse> @ref _tds__SetRelayOutputStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputStateResponse(struct soap*, struct _tds__SetRelayOutputStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputStateResponse(struct soap*, struct _tds__SetRelayOutputStateResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputStateResponse(struct soap*, const char *URL, struct _tds__SetRelayOutputStateResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputStateResponse(struct soap*, const char *URL, struct _tds__SetRelayOutputStateResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputStateResponse(struct soap*, const char *URL, struct _tds__SetRelayOutputStateResponse*);
    soap_POST_recv__tds__SetRelayOutputStateResponse(struct soap*, struct _tds__SetRelayOutputStateResponse*);
    @endcode

  - <tds:SendAuxiliaryCommand> @ref _tds__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommand(struct soap*, struct _tds__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommand(struct soap*, struct _tds__SendAuxiliaryCommand*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SendAuxiliaryCommand(struct soap*, const char *URL, struct _tds__SendAuxiliaryCommand*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SendAuxiliaryCommand(struct soap*, const char *URL, struct _tds__SendAuxiliaryCommand*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SendAuxiliaryCommand(struct soap*, const char *URL, struct _tds__SendAuxiliaryCommand*);
    soap_POST_recv__tds__SendAuxiliaryCommand(struct soap*, struct _tds__SendAuxiliaryCommand*);
    @endcode

  - <tds:SendAuxiliaryCommandResponse> @ref _tds__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommandResponse(struct soap*, struct _tds__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommandResponse(struct soap*, struct _tds__SendAuxiliaryCommandResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SendAuxiliaryCommandResponse(struct soap*, const char *URL, struct _tds__SendAuxiliaryCommandResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SendAuxiliaryCommandResponse(struct soap*, const char *URL, struct _tds__SendAuxiliaryCommandResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SendAuxiliaryCommandResponse(struct soap*, const char *URL, struct _tds__SendAuxiliaryCommandResponse*);
    soap_POST_recv__tds__SendAuxiliaryCommandResponse(struct soap*, struct _tds__SendAuxiliaryCommandResponse*);
    @endcode

  - <tds:GetDot11Capabilities> @ref _tds__GetDot11Capabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Capabilities(struct soap*, struct _tds__GetDot11Capabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Capabilities(struct soap*, struct _tds__GetDot11Capabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11Capabilities(struct soap*, const char *URL, struct _tds__GetDot11Capabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11Capabilities(struct soap*, const char *URL, struct _tds__GetDot11Capabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11Capabilities(struct soap*, const char *URL, struct _tds__GetDot11Capabilities*);
    soap_POST_recv__tds__GetDot11Capabilities(struct soap*, struct _tds__GetDot11Capabilities*);
    @endcode

  - <tds:GetDot11CapabilitiesResponse> @ref _tds__GetDot11CapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11CapabilitiesResponse(struct soap*, struct _tds__GetDot11CapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11CapabilitiesResponse(struct soap*, struct _tds__GetDot11CapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11CapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetDot11CapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11CapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetDot11CapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11CapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetDot11CapabilitiesResponse*);
    soap_POST_recv__tds__GetDot11CapabilitiesResponse(struct soap*, struct _tds__GetDot11CapabilitiesResponse*);
    @endcode

  - <tds:GetDot11Status> @ref _tds__GetDot11Status
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Status(struct soap*, struct _tds__GetDot11Status*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Status(struct soap*, struct _tds__GetDot11Status*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11Status(struct soap*, const char *URL, struct _tds__GetDot11Status*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11Status(struct soap*, const char *URL, struct _tds__GetDot11Status*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11Status(struct soap*, const char *URL, struct _tds__GetDot11Status*);
    soap_POST_recv__tds__GetDot11Status(struct soap*, struct _tds__GetDot11Status*);
    @endcode

  - <tds:GetDot11StatusResponse> @ref _tds__GetDot11StatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11StatusResponse(struct soap*, struct _tds__GetDot11StatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11StatusResponse(struct soap*, struct _tds__GetDot11StatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11StatusResponse(struct soap*, const char *URL, struct _tds__GetDot11StatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11StatusResponse(struct soap*, const char *URL, struct _tds__GetDot11StatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11StatusResponse(struct soap*, const char *URL, struct _tds__GetDot11StatusResponse*);
    soap_POST_recv__tds__GetDot11StatusResponse(struct soap*, struct _tds__GetDot11StatusResponse*);
    @endcode

  - <tds:ScanAvailableDot11Networks> @ref _tds__ScanAvailableDot11Networks
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11Networks(struct soap*, struct _tds__ScanAvailableDot11Networks*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11Networks(struct soap*, struct _tds__ScanAvailableDot11Networks*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__ScanAvailableDot11Networks(struct soap*, const char *URL, struct _tds__ScanAvailableDot11Networks*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__ScanAvailableDot11Networks(struct soap*, const char *URL, struct _tds__ScanAvailableDot11Networks*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__ScanAvailableDot11Networks(struct soap*, const char *URL, struct _tds__ScanAvailableDot11Networks*);
    soap_POST_recv__tds__ScanAvailableDot11Networks(struct soap*, struct _tds__ScanAvailableDot11Networks*);
    @endcode

  - <tds:ScanAvailableDot11NetworksResponse> @ref _tds__ScanAvailableDot11NetworksResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11NetworksResponse(struct soap*, struct _tds__ScanAvailableDot11NetworksResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11NetworksResponse(struct soap*, struct _tds__ScanAvailableDot11NetworksResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char *URL, struct _tds__ScanAvailableDot11NetworksResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char *URL, struct _tds__ScanAvailableDot11NetworksResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char *URL, struct _tds__ScanAvailableDot11NetworksResponse*);
    soap_POST_recv__tds__ScanAvailableDot11NetworksResponse(struct soap*, struct _tds__ScanAvailableDot11NetworksResponse*);
    @endcode

  - <tds:GetSystemUris> @ref _tds__GetSystemUris
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUris(struct soap*, struct _tds__GetSystemUris*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUris(struct soap*, struct _tds__GetSystemUris*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemUris(struct soap*, const char *URL, struct _tds__GetSystemUris*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemUris(struct soap*, const char *URL, struct _tds__GetSystemUris*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemUris(struct soap*, const char *URL, struct _tds__GetSystemUris*);
    soap_POST_recv__tds__GetSystemUris(struct soap*, struct _tds__GetSystemUris*);
    @endcode

  - <tds:GetSystemUrisResponse> @ref _tds__GetSystemUrisResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUrisResponse(struct soap*, struct _tds__GetSystemUrisResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUrisResponse(struct soap*, struct _tds__GetSystemUrisResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemUrisResponse(struct soap*, const char *URL, struct _tds__GetSystemUrisResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemUrisResponse(struct soap*, const char *URL, struct _tds__GetSystemUrisResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemUrisResponse(struct soap*, const char *URL, struct _tds__GetSystemUrisResponse*);
    soap_POST_recv__tds__GetSystemUrisResponse(struct soap*, struct _tds__GetSystemUrisResponse*);
    @endcode

  - <tds:StartFirmwareUpgrade> @ref _tds__StartFirmwareUpgrade
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgrade(struct soap*, struct _tds__StartFirmwareUpgrade*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgrade(struct soap*, struct _tds__StartFirmwareUpgrade*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartFirmwareUpgrade(struct soap*, const char *URL, struct _tds__StartFirmwareUpgrade*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartFirmwareUpgrade(struct soap*, const char *URL, struct _tds__StartFirmwareUpgrade*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartFirmwareUpgrade(struct soap*, const char *URL, struct _tds__StartFirmwareUpgrade*);
    soap_POST_recv__tds__StartFirmwareUpgrade(struct soap*, struct _tds__StartFirmwareUpgrade*);
    @endcode

  - <tds:StartFirmwareUpgradeResponse> @ref _tds__StartFirmwareUpgradeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgradeResponse(struct soap*, struct _tds__StartFirmwareUpgradeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgradeResponse(struct soap*, struct _tds__StartFirmwareUpgradeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartFirmwareUpgradeResponse(struct soap*, const char *URL, struct _tds__StartFirmwareUpgradeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartFirmwareUpgradeResponse(struct soap*, const char *URL, struct _tds__StartFirmwareUpgradeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartFirmwareUpgradeResponse(struct soap*, const char *URL, struct _tds__StartFirmwareUpgradeResponse*);
    soap_POST_recv__tds__StartFirmwareUpgradeResponse(struct soap*, struct _tds__StartFirmwareUpgradeResponse*);
    @endcode

  - <tds:StartSystemRestore> @ref _tds__StartSystemRestore
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestore(struct soap*, struct _tds__StartSystemRestore*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestore(struct soap*, struct _tds__StartSystemRestore*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartSystemRestore(struct soap*, const char *URL, struct _tds__StartSystemRestore*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartSystemRestore(struct soap*, const char *URL, struct _tds__StartSystemRestore*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartSystemRestore(struct soap*, const char *URL, struct _tds__StartSystemRestore*);
    soap_POST_recv__tds__StartSystemRestore(struct soap*, struct _tds__StartSystemRestore*);
    @endcode

  - <tds:StartSystemRestoreResponse> @ref _tds__StartSystemRestoreResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestoreResponse(struct soap*, struct _tds__StartSystemRestoreResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestoreResponse(struct soap*, struct _tds__StartSystemRestoreResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartSystemRestoreResponse(struct soap*, const char *URL, struct _tds__StartSystemRestoreResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartSystemRestoreResponse(struct soap*, const char *URL, struct _tds__StartSystemRestoreResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartSystemRestoreResponse(struct soap*, const char *URL, struct _tds__StartSystemRestoreResponse*);
    soap_POST_recv__tds__StartSystemRestoreResponse(struct soap*, struct _tds__StartSystemRestoreResponse*);
    @endcode

  - <tds:GetStorageConfigurations> @ref _tds__GetStorageConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurations(struct soap*, struct _tds__GetStorageConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurations(struct soap*, struct _tds__GetStorageConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfigurations(struct soap*, const char *URL, struct _tds__GetStorageConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfigurations(struct soap*, const char *URL, struct _tds__GetStorageConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfigurations(struct soap*, const char *URL, struct _tds__GetStorageConfigurations*);
    soap_POST_recv__tds__GetStorageConfigurations(struct soap*, struct _tds__GetStorageConfigurations*);
    @endcode

  - <tds:GetStorageConfigurationsResponse> @ref _tds__GetStorageConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurationsResponse(struct soap*, struct _tds__GetStorageConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurationsResponse(struct soap*, struct _tds__GetStorageConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfigurationsResponse(struct soap*, const char *URL, struct _tds__GetStorageConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfigurationsResponse(struct soap*, const char *URL, struct _tds__GetStorageConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfigurationsResponse(struct soap*, const char *URL, struct _tds__GetStorageConfigurationsResponse*);
    soap_POST_recv__tds__GetStorageConfigurationsResponse(struct soap*, struct _tds__GetStorageConfigurationsResponse*);
    @endcode

  - <tds:CreateStorageConfiguration> @ref _tds__CreateStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateStorageConfiguration(struct soap*, struct _tds__CreateStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateStorageConfiguration(struct soap*, struct _tds__CreateStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateStorageConfiguration(struct soap*, const char *URL, struct _tds__CreateStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateStorageConfiguration(struct soap*, const char *URL, struct _tds__CreateStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateStorageConfiguration(struct soap*, const char *URL, struct _tds__CreateStorageConfiguration*);
    soap_POST_recv__tds__CreateStorageConfiguration(struct soap*, struct _tds__CreateStorageConfiguration*);
    @endcode

  - <tds:CreateStorageConfigurationResponse> @ref _tds__CreateStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateStorageConfigurationResponse(struct soap*, struct _tds__CreateStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateStorageConfigurationResponse(struct soap*, struct _tds__CreateStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__CreateStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__CreateStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__CreateStorageConfigurationResponse*);
    soap_POST_recv__tds__CreateStorageConfigurationResponse(struct soap*, struct _tds__CreateStorageConfigurationResponse*);
    @endcode

  - <tds:GetStorageConfiguration> @ref _tds__GetStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfiguration(struct soap*, struct _tds__GetStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfiguration(struct soap*, struct _tds__GetStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfiguration(struct soap*, const char *URL, struct _tds__GetStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfiguration(struct soap*, const char *URL, struct _tds__GetStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfiguration(struct soap*, const char *URL, struct _tds__GetStorageConfiguration*);
    soap_POST_recv__tds__GetStorageConfiguration(struct soap*, struct _tds__GetStorageConfiguration*);
    @endcode

  - <tds:GetStorageConfigurationResponse> @ref _tds__GetStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurationResponse(struct soap*, struct _tds__GetStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurationResponse(struct soap*, struct _tds__GetStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__GetStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__GetStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__GetStorageConfigurationResponse*);
    soap_POST_recv__tds__GetStorageConfigurationResponse(struct soap*, struct _tds__GetStorageConfigurationResponse*);
    @endcode

  - <tds:SetStorageConfiguration> @ref _tds__SetStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetStorageConfiguration(struct soap*, struct _tds__SetStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetStorageConfiguration(struct soap*, struct _tds__SetStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetStorageConfiguration(struct soap*, const char *URL, struct _tds__SetStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetStorageConfiguration(struct soap*, const char *URL, struct _tds__SetStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetStorageConfiguration(struct soap*, const char *URL, struct _tds__SetStorageConfiguration*);
    soap_POST_recv__tds__SetStorageConfiguration(struct soap*, struct _tds__SetStorageConfiguration*);
    @endcode

  - <tds:SetStorageConfigurationResponse> @ref _tds__SetStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetStorageConfigurationResponse(struct soap*, struct _tds__SetStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetStorageConfigurationResponse(struct soap*, struct _tds__SetStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__SetStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__SetStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__SetStorageConfigurationResponse*);
    soap_POST_recv__tds__SetStorageConfigurationResponse(struct soap*, struct _tds__SetStorageConfigurationResponse*);
    @endcode

  - <tds:DeleteStorageConfiguration> @ref _tds__DeleteStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteStorageConfiguration(struct soap*, struct _tds__DeleteStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteStorageConfiguration(struct soap*, struct _tds__DeleteStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteStorageConfiguration(struct soap*, const char *URL, struct _tds__DeleteStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteStorageConfiguration(struct soap*, const char *URL, struct _tds__DeleteStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteStorageConfiguration(struct soap*, const char *URL, struct _tds__DeleteStorageConfiguration*);
    soap_POST_recv__tds__DeleteStorageConfiguration(struct soap*, struct _tds__DeleteStorageConfiguration*);
    @endcode

  - <tds:DeleteStorageConfigurationResponse> @ref _tds__DeleteStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteStorageConfigurationResponse(struct soap*, struct _tds__DeleteStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteStorageConfigurationResponse(struct soap*, struct _tds__DeleteStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__DeleteStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__DeleteStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__DeleteStorageConfigurationResponse*);
    soap_POST_recv__tds__DeleteStorageConfigurationResponse(struct soap*, struct _tds__DeleteStorageConfigurationResponse*);
    @endcode

  - <tds:GetGeoLocation> @ref _tds__GetGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetGeoLocation(struct soap*, struct _tds__GetGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetGeoLocation(struct soap*, struct _tds__GetGeoLocation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetGeoLocation(struct soap*, const char *URL, struct _tds__GetGeoLocation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetGeoLocation(struct soap*, const char *URL, struct _tds__GetGeoLocation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetGeoLocation(struct soap*, const char *URL, struct _tds__GetGeoLocation*);
    soap_POST_recv__tds__GetGeoLocation(struct soap*, struct _tds__GetGeoLocation*);
    @endcode

  - <tds:GetGeoLocationResponse> @ref _tds__GetGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetGeoLocationResponse(struct soap*, struct _tds__GetGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetGeoLocationResponse(struct soap*, struct _tds__GetGeoLocationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetGeoLocationResponse(struct soap*, const char *URL, struct _tds__GetGeoLocationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetGeoLocationResponse(struct soap*, const char *URL, struct _tds__GetGeoLocationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetGeoLocationResponse(struct soap*, const char *URL, struct _tds__GetGeoLocationResponse*);
    soap_POST_recv__tds__GetGeoLocationResponse(struct soap*, struct _tds__GetGeoLocationResponse*);
    @endcode

  - <tds:SetGeoLocation> @ref _tds__SetGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetGeoLocation(struct soap*, struct _tds__SetGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetGeoLocation(struct soap*, struct _tds__SetGeoLocation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetGeoLocation(struct soap*, const char *URL, struct _tds__SetGeoLocation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetGeoLocation(struct soap*, const char *URL, struct _tds__SetGeoLocation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetGeoLocation(struct soap*, const char *URL, struct _tds__SetGeoLocation*);
    soap_POST_recv__tds__SetGeoLocation(struct soap*, struct _tds__SetGeoLocation*);
    @endcode

  - <tds:SetGeoLocationResponse> @ref _tds__SetGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetGeoLocationResponse(struct soap*, struct _tds__SetGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetGeoLocationResponse(struct soap*, struct _tds__SetGeoLocationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetGeoLocationResponse(struct soap*, const char *URL, struct _tds__SetGeoLocationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetGeoLocationResponse(struct soap*, const char *URL, struct _tds__SetGeoLocationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetGeoLocationResponse(struct soap*, const char *URL, struct _tds__SetGeoLocationResponse*);
    soap_POST_recv__tds__SetGeoLocationResponse(struct soap*, struct _tds__SetGeoLocationResponse*);
    @endcode

  - <tds:DeleteGeoLocation> @ref _tds__DeleteGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteGeoLocation(struct soap*, struct _tds__DeleteGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteGeoLocation(struct soap*, struct _tds__DeleteGeoLocation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteGeoLocation(struct soap*, const char *URL, struct _tds__DeleteGeoLocation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteGeoLocation(struct soap*, const char *URL, struct _tds__DeleteGeoLocation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteGeoLocation(struct soap*, const char *URL, struct _tds__DeleteGeoLocation*);
    soap_POST_recv__tds__DeleteGeoLocation(struct soap*, struct _tds__DeleteGeoLocation*);
    @endcode

  - <tds:DeleteGeoLocationResponse> @ref _tds__DeleteGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteGeoLocationResponse(struct soap*, struct _tds__DeleteGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteGeoLocationResponse(struct soap*, struct _tds__DeleteGeoLocationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteGeoLocationResponse(struct soap*, const char *URL, struct _tds__DeleteGeoLocationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteGeoLocationResponse(struct soap*, const char *URL, struct _tds__DeleteGeoLocationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteGeoLocationResponse(struct soap*, const char *URL, struct _tds__DeleteGeoLocationResponse*);
    soap_POST_recv__tds__DeleteGeoLocationResponse(struct soap*, struct _tds__DeleteGeoLocationResponse*);
    @endcode

*/

/**

@section tt Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <tt:StringItems> @ref _tt__StringItems
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__StringItems(struct soap*, struct _tt__StringItems*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__StringItems(struct soap*, struct _tt__StringItems*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tt__StringItems(struct soap*, const char *URL, struct _tt__StringItems*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tt__StringItems(struct soap*, const char *URL, struct _tt__StringItems*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tt__StringItems(struct soap*, const char *URL, struct _tt__StringItems*);
    soap_POST_recv__tt__StringItems(struct soap*, struct _tt__StringItems*);
    @endcode

  - <tt:StringList> (use wsdl2h option -g to auto-generate type _tt__StringList)

  - <tt:IntRange> (use wsdl2h option -g to auto-generate type _tt__IntRange)

  - <tt:IntList> (use wsdl2h option -g to auto-generate type _tt__IntList)

  - <tt:FloatRange> (use wsdl2h option -g to auto-generate type _tt__FloatRange)

  - <tt:FloatList> (use wsdl2h option -g to auto-generate type _tt__FloatList)

  - <tt:DurationRange> (use wsdl2h option -g to auto-generate type _tt__DurationRange)

  - <tt:IntRectangleRange> (use wsdl2h option -g to auto-generate type _tt__IntRectangleRange)

  - <tt:VideoSourceConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoSourceConfiguration)

  - <tt:AudioSourceConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioSourceConfiguration)

  - <tt:VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoEncoderConfiguration)

  - <tt:AudioEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioEncoderConfiguration)

  - <tt:VideoAnalyticsConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoAnalyticsConfiguration)

  - <tt:PTZConfiguration> (use wsdl2h option -g to auto-generate type _tt__PTZConfiguration)

  - <tt:MetadataConfiguration> (use wsdl2h option -g to auto-generate type _tt__MetadataConfiguration)

  - <tt:AudioOutputConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioOutputConfiguration)

  - <tt:AudioDecoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioDecoderConfiguration)

  - <tt:Message> @ref _tt__Message
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__Message(struct soap*, struct _tt__Message*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__Message(struct soap*, struct _tt__Message*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tt__Message(struct soap*, const char *URL, struct _tt__Message*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tt__Message(struct soap*, const char *URL, struct _tt__Message*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tt__Message(struct soap*, const char *URL, struct _tt__Message*);
    soap_POST_recv__tt__Message(struct soap*, struct _tt__Message*);
    @endcode

  - <tt:Polyline> (use wsdl2h option -g to auto-generate type _tt__Polyline)

  - <tt:Polygon> (use wsdl2h option -g to auto-generate type _tt__Polygon)

*/

/**

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <wsnt:TopicExpression> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpression)

  - <wsnt:FixedTopicSet> (use wsdl2h option -g to auto-generate type _wsnt__FixedTopicSet)

  - <wsnt:TopicExpressionDialect> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialect)

  - <wsnt:NotificationProducerRP> @ref _wsnt__NotificationProducerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__NotificationProducerRP(struct soap*, const char *URL, struct _wsnt__NotificationProducerRP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__NotificationProducerRP(struct soap*, const char *URL, struct _wsnt__NotificationProducerRP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__NotificationProducerRP(struct soap*, const char *URL, struct _wsnt__NotificationProducerRP*);
    soap_POST_recv__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    @endcode

  - <wsnt:ConsumerReference> (use wsdl2h option -g to auto-generate type _wsnt__ConsumerReference)

  - <wsnt:Filter> (use wsdl2h option -g to auto-generate type _wsnt__Filter)

  - <wsnt:SubscriptionPolicy> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionPolicy)

  - <wsnt:CreationTime> (use wsdl2h option -g to auto-generate type _wsnt__CreationTime)

  - <wsnt:SubscriptionManagerRP> @ref _wsnt__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__SubscriptionManagerRP(struct soap*, const char *URL, struct _wsnt__SubscriptionManagerRP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__SubscriptionManagerRP(struct soap*, const char *URL, struct _wsnt__SubscriptionManagerRP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__SubscriptionManagerRP(struct soap*, const char *URL, struct _wsnt__SubscriptionManagerRP*);
    soap_POST_recv__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    @endcode

  - <wsnt:SubscriptionReference> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionReference)

  - <wsnt:Topic> (use wsdl2h option -g to auto-generate type _wsnt__Topic)

  - <wsnt:ProducerReference> (use wsdl2h option -g to auto-generate type _wsnt__ProducerReference)

  - <wsnt:NotificationMessage> (use wsdl2h option -g to auto-generate type _wsnt__NotificationMessage)

  - <wsnt:Notify> @ref _wsnt__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Notify(struct soap*, const char *URL, struct _wsnt__Notify*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Notify(struct soap*, const char *URL, struct _wsnt__Notify*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Notify(struct soap*, const char *URL, struct _wsnt__Notify*);
    soap_POST_recv__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    @endcode

  - <wsnt:CurrentTime> (use wsdl2h option -g to auto-generate type _wsnt__CurrentTime)

  - <wsnt:TerminationTime> (use wsdl2h option -g to auto-generate type _wsnt__TerminationTime)

  - <wsnt:ProducerProperties> (use wsdl2h option -g to auto-generate type _wsnt__ProducerProperties)

  - <wsnt:MessageContent> (use wsdl2h option -g to auto-generate type _wsnt__MessageContent)

  - <wsnt:UseRaw> @ref _wsnt__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__UseRaw(struct soap*, const char *URL, struct _wsnt__UseRaw*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__UseRaw(struct soap*, const char *URL, struct _wsnt__UseRaw*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__UseRaw(struct soap*, const char *URL, struct _wsnt__UseRaw*);
    soap_POST_recv__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    @endcode

  - <wsnt:Subscribe> @ref _wsnt__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Subscribe(struct soap*, const char *URL, struct _wsnt__Subscribe*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Subscribe(struct soap*, const char *URL, struct _wsnt__Subscribe*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Subscribe(struct soap*, const char *URL, struct _wsnt__Subscribe*);
    soap_POST_recv__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    @endcode

  - <wsnt:SubscribeResponse> @ref _wsnt__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__SubscribeResponse(struct soap*, const char *URL, struct _wsnt__SubscribeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__SubscribeResponse(struct soap*, const char *URL, struct _wsnt__SubscribeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__SubscribeResponse(struct soap*, const char *URL, struct _wsnt__SubscribeResponse*);
    soap_POST_recv__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    @endcode

  - <wsnt:GetCurrentMessage> @ref _wsnt__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetCurrentMessage(struct soap*, const char *URL, struct _wsnt__GetCurrentMessage*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetCurrentMessage(struct soap*, const char *URL, struct _wsnt__GetCurrentMessage*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetCurrentMessage(struct soap*, const char *URL, struct _wsnt__GetCurrentMessage*);
    soap_POST_recv__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    @endcode

  - <wsnt:GetCurrentMessageResponse> @ref _wsnt__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetCurrentMessageResponse(struct soap*, const char *URL, struct _wsnt__GetCurrentMessageResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetCurrentMessageResponse(struct soap*, const char *URL, struct _wsnt__GetCurrentMessageResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetCurrentMessageResponse(struct soap*, const char *URL, struct _wsnt__GetCurrentMessageResponse*);
    soap_POST_recv__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    @endcode

  - <wsnt:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__SubscribeCreationFailedFault)

  - <wsnt:InvalidFilterFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidFilterFault)

  - <wsnt:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialectUnknownFault)

  - <wsnt:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidTopicExpressionFault)

  - <wsnt:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicNotSupportedFault)

  - <wsnt:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate type _wsnt__MultipleTopicsSpecifiedFault)

  - <wsnt:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidProducerPropertiesExpressionFault)

  - <wsnt:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidMessageContentExpressionFault)

  - <wsnt:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnrecognizedPolicyRequestFault)

  - <wsnt:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnsupportedPolicyRequestFault)

  - <wsnt:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__NotifyMessageNotSupportedFault)

  - <wsnt:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableInitialTerminationTimeFault)

  - <wsnt:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate type _wsnt__NoCurrentMessageOnTopicFault)

  - <wsnt:GetMessages> @ref _wsnt__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetMessages(struct soap*, const char *URL, struct _wsnt__GetMessages*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetMessages(struct soap*, const char *URL, struct _wsnt__GetMessages*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetMessages(struct soap*, const char *URL, struct _wsnt__GetMessages*);
    soap_POST_recv__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    @endcode

  - <wsnt:GetMessagesResponse> @ref _wsnt__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetMessagesResponse(struct soap*, const char *URL, struct _wsnt__GetMessagesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetMessagesResponse(struct soap*, const char *URL, struct _wsnt__GetMessagesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetMessagesResponse(struct soap*, const char *URL, struct _wsnt__GetMessagesResponse*);
    soap_POST_recv__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    @endcode

  - <wsnt:DestroyPullPoint> @ref _wsnt__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__DestroyPullPoint(struct soap*, const char *URL, struct _wsnt__DestroyPullPoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__DestroyPullPoint(struct soap*, const char *URL, struct _wsnt__DestroyPullPoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__DestroyPullPoint(struct soap*, const char *URL, struct _wsnt__DestroyPullPoint*);
    soap_POST_recv__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    @endcode

  - <wsnt:DestroyPullPointResponse> @ref _wsnt__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__DestroyPullPointResponse(struct soap*, const char *URL, struct _wsnt__DestroyPullPointResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__DestroyPullPointResponse(struct soap*, const char *URL, struct _wsnt__DestroyPullPointResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__DestroyPullPointResponse(struct soap*, const char *URL, struct _wsnt__DestroyPullPointResponse*);
    soap_POST_recv__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    @endcode

  - <wsnt:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToGetMessagesFault)

  - <wsnt:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroyPullPointFault)

  - <wsnt:CreatePullPoint> @ref _wsnt__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__CreatePullPoint(struct soap*, const char *URL, struct _wsnt__CreatePullPoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__CreatePullPoint(struct soap*, const char *URL, struct _wsnt__CreatePullPoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__CreatePullPoint(struct soap*, const char *URL, struct _wsnt__CreatePullPoint*);
    soap_POST_recv__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    @endcode

  - <wsnt:CreatePullPointResponse> @ref _wsnt__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__CreatePullPointResponse(struct soap*, const char *URL, struct _wsnt__CreatePullPointResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__CreatePullPointResponse(struct soap*, const char *URL, struct _wsnt__CreatePullPointResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__CreatePullPointResponse(struct soap*, const char *URL, struct _wsnt__CreatePullPointResponse*);
    soap_POST_recv__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    @endcode

  - <wsnt:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToCreatePullPointFault)

  - <wsnt:Renew> @ref _wsnt__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Renew(struct soap*, const char *URL, struct _wsnt__Renew*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Renew(struct soap*, const char *URL, struct _wsnt__Renew*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Renew(struct soap*, const char *URL, struct _wsnt__Renew*);
    soap_POST_recv__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    @endcode

  - <wsnt:RenewResponse> @ref _wsnt__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__RenewResponse(struct soap*, const char *URL, struct _wsnt__RenewResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__RenewResponse(struct soap*, const char *URL, struct _wsnt__RenewResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__RenewResponse(struct soap*, const char *URL, struct _wsnt__RenewResponse*);
    soap_POST_recv__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    @endcode

  - <wsnt:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableTerminationTimeFault)

  - <wsnt:Unsubscribe> @ref _wsnt__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Unsubscribe(struct soap*, const char *URL, struct _wsnt__Unsubscribe*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Unsubscribe(struct soap*, const char *URL, struct _wsnt__Unsubscribe*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Unsubscribe(struct soap*, const char *URL, struct _wsnt__Unsubscribe*);
    soap_POST_recv__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    @endcode

  - <wsnt:UnsubscribeResponse> @ref _wsnt__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__UnsubscribeResponse(struct soap*, const char *URL, struct _wsnt__UnsubscribeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__UnsubscribeResponse(struct soap*, const char *URL, struct _wsnt__UnsubscribeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__UnsubscribeResponse(struct soap*, const char *URL, struct _wsnt__UnsubscribeResponse*);
    soap_POST_recv__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    @endcode

  - <wsnt:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroySubscriptionFault)

  - <wsnt:PauseSubscription> @ref _wsnt__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__PauseSubscription(struct soap*, const char *URL, struct _wsnt__PauseSubscription*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__PauseSubscription(struct soap*, const char *URL, struct _wsnt__PauseSubscription*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__PauseSubscription(struct soap*, const char *URL, struct _wsnt__PauseSubscription*);
    soap_POST_recv__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    @endcode

  - <wsnt:PauseSubscriptionResponse> @ref _wsnt__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__PauseSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__PauseSubscriptionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__PauseSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__PauseSubscriptionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__PauseSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__PauseSubscriptionResponse*);
    soap_POST_recv__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    @endcode

  - <wsnt:ResumeSubscription> @ref _wsnt__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__ResumeSubscription(struct soap*, const char *URL, struct _wsnt__ResumeSubscription*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__ResumeSubscription(struct soap*, const char *URL, struct _wsnt__ResumeSubscription*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__ResumeSubscription(struct soap*, const char *URL, struct _wsnt__ResumeSubscription*);
    soap_POST_recv__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    @endcode

  - <wsnt:ResumeSubscriptionResponse> @ref _wsnt__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__ResumeSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__ResumeSubscriptionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__ResumeSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__ResumeSubscriptionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__ResumeSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__ResumeSubscriptionResponse*);
    soap_POST_recv__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    @endcode

  - <wsnt:PauseFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__PauseFailedFault)

  - <wsnt:ResumeFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__ResumeFailedFault)

*/

/**

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <wsrfbf:BaseFault> (use wsdl2h option -g to auto-generate type _wsrfbf__BaseFault)

*/

/**

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <wstop:TopicNamespace> (use wsdl2h option -g to auto-generate type _wstop__TopicNamespace)

  - <wstop:TopicSet> (use wsdl2h option -g to auto-generate type _wstop__TopicSet)

*/

/**

@section trt Top-level root elements of schema "http://www.onvif.org/ver10/media/wsdl"

  - <trt:GetServiceCapabilities> @ref _trt__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetServiceCapabilities(struct soap*, const char *URL, struct _trt__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetServiceCapabilities(struct soap*, const char *URL, struct _trt__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetServiceCapabilities(struct soap*, const char *URL, struct _trt__GetServiceCapabilities*);
    soap_POST_recv__trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities*);
    @endcode

  - <trt:GetServiceCapabilitiesResponse> @ref _trt__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _trt__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _trt__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _trt__GetServiceCapabilitiesResponse*);
    soap_POST_recv__trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse*);
    @endcode

  - <trt:Capabilities> (use wsdl2h option -g to auto-generate type _trt__Capabilities)

  - <trt:GetVideoSources> @ref _trt__GetVideoSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSources(struct soap*, struct _trt__GetVideoSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSources(struct soap*, struct _trt__GetVideoSources*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSources(struct soap*, const char *URL, struct _trt__GetVideoSources*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSources(struct soap*, const char *URL, struct _trt__GetVideoSources*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSources(struct soap*, const char *URL, struct _trt__GetVideoSources*);
    soap_POST_recv__trt__GetVideoSources(struct soap*, struct _trt__GetVideoSources*);
    @endcode

  - <trt:GetVideoSourcesResponse> @ref _trt__GetVideoSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourcesResponse(struct soap*, struct _trt__GetVideoSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourcesResponse(struct soap*, struct _trt__GetVideoSourcesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourcesResponse(struct soap*, const char *URL, struct _trt__GetVideoSourcesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourcesResponse(struct soap*, const char *URL, struct _trt__GetVideoSourcesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourcesResponse(struct soap*, const char *URL, struct _trt__GetVideoSourcesResponse*);
    soap_POST_recv__trt__GetVideoSourcesResponse(struct soap*, struct _trt__GetVideoSourcesResponse*);
    @endcode

  - <trt:GetAudioSources> @ref _trt__GetAudioSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSources(struct soap*, struct _trt__GetAudioSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSources(struct soap*, struct _trt__GetAudioSources*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSources(struct soap*, const char *URL, struct _trt__GetAudioSources*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSources(struct soap*, const char *URL, struct _trt__GetAudioSources*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSources(struct soap*, const char *URL, struct _trt__GetAudioSources*);
    soap_POST_recv__trt__GetAudioSources(struct soap*, struct _trt__GetAudioSources*);
    @endcode

  - <trt:GetAudioSourcesResponse> @ref _trt__GetAudioSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourcesResponse(struct soap*, struct _trt__GetAudioSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourcesResponse(struct soap*, struct _trt__GetAudioSourcesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSourcesResponse(struct soap*, const char *URL, struct _trt__GetAudioSourcesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSourcesResponse(struct soap*, const char *URL, struct _trt__GetAudioSourcesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSourcesResponse(struct soap*, const char *URL, struct _trt__GetAudioSourcesResponse*);
    soap_POST_recv__trt__GetAudioSourcesResponse(struct soap*, struct _trt__GetAudioSourcesResponse*);
    @endcode

  - <trt:GetAudioOutputs> @ref _trt__GetAudioOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputs(struct soap*, struct _trt__GetAudioOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputs(struct soap*, struct _trt__GetAudioOutputs*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputs(struct soap*, const char *URL, struct _trt__GetAudioOutputs*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputs(struct soap*, const char *URL, struct _trt__GetAudioOutputs*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputs(struct soap*, const char *URL, struct _trt__GetAudioOutputs*);
    soap_POST_recv__trt__GetAudioOutputs(struct soap*, struct _trt__GetAudioOutputs*);
    @endcode

  - <trt:GetAudioOutputsResponse> @ref _trt__GetAudioOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputsResponse(struct soap*, struct _trt__GetAudioOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputsResponse(struct soap*, struct _trt__GetAudioOutputsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputsResponse(struct soap*, const char *URL, struct _trt__GetAudioOutputsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputsResponse(struct soap*, const char *URL, struct _trt__GetAudioOutputsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputsResponse(struct soap*, const char *URL, struct _trt__GetAudioOutputsResponse*);
    soap_POST_recv__trt__GetAudioOutputsResponse(struct soap*, struct _trt__GetAudioOutputsResponse*);
    @endcode

  - <trt:CreateProfile> @ref _trt__CreateProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfile(struct soap*, struct _trt__CreateProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfile(struct soap*, struct _trt__CreateProfile*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__CreateProfile(struct soap*, const char *URL, struct _trt__CreateProfile*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__CreateProfile(struct soap*, const char *URL, struct _trt__CreateProfile*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__CreateProfile(struct soap*, const char *URL, struct _trt__CreateProfile*);
    soap_POST_recv__trt__CreateProfile(struct soap*, struct _trt__CreateProfile*);
    @endcode

  - <trt:CreateProfileResponse> @ref _trt__CreateProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__CreateProfileResponse(struct soap*, const char *URL, struct _trt__CreateProfileResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__CreateProfileResponse(struct soap*, const char *URL, struct _trt__CreateProfileResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__CreateProfileResponse(struct soap*, const char *URL, struct _trt__CreateProfileResponse*);
    soap_POST_recv__trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse*);
    @endcode

  - <trt:GetProfile> @ref _trt__GetProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfile(struct soap*, struct _trt__GetProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfile(struct soap*, struct _trt__GetProfile*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetProfile(struct soap*, const char *URL, struct _trt__GetProfile*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetProfile(struct soap*, const char *URL, struct _trt__GetProfile*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetProfile(struct soap*, const char *URL, struct _trt__GetProfile*);
    soap_POST_recv__trt__GetProfile(struct soap*, struct _trt__GetProfile*);
    @endcode

  - <trt:GetProfileResponse> @ref _trt__GetProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetProfileResponse(struct soap*, const char *URL, struct _trt__GetProfileResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetProfileResponse(struct soap*, const char *URL, struct _trt__GetProfileResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetProfileResponse(struct soap*, const char *URL, struct _trt__GetProfileResponse*);
    soap_POST_recv__trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse*);
    @endcode

  - <trt:GetProfiles> @ref _trt__GetProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfiles(struct soap*, struct _trt__GetProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfiles(struct soap*, struct _trt__GetProfiles*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetProfiles(struct soap*, const char *URL, struct _trt__GetProfiles*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetProfiles(struct soap*, const char *URL, struct _trt__GetProfiles*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetProfiles(struct soap*, const char *URL, struct _trt__GetProfiles*);
    soap_POST_recv__trt__GetProfiles(struct soap*, struct _trt__GetProfiles*);
    @endcode

  - <trt:GetProfilesResponse> @ref _trt__GetProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetProfilesResponse(struct soap*, const char *URL, struct _trt__GetProfilesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetProfilesResponse(struct soap*, const char *URL, struct _trt__GetProfilesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetProfilesResponse(struct soap*, const char *URL, struct _trt__GetProfilesResponse*);
    soap_POST_recv__trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse*);
    @endcode

  - <trt:AddVideoEncoderConfiguration> @ref _trt__AddVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoEncoderConfiguration(struct soap*, struct _trt__AddVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoEncoderConfiguration(struct soap*, struct _trt__AddVideoEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddVideoEncoderConfiguration(struct soap*, const char *URL, struct _trt__AddVideoEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddVideoEncoderConfiguration(struct soap*, const char *URL, struct _trt__AddVideoEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddVideoEncoderConfiguration(struct soap*, const char *URL, struct _trt__AddVideoEncoderConfiguration*);
    soap_POST_recv__trt__AddVideoEncoderConfiguration(struct soap*, struct _trt__AddVideoEncoderConfiguration*);
    @endcode

  - <trt:AddVideoEncoderConfigurationResponse> @ref _trt__AddVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoEncoderConfigurationResponse(struct soap*, struct _trt__AddVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoEncoderConfigurationResponse(struct soap*, struct _trt__AddVideoEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddVideoEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__AddVideoEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddVideoEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__AddVideoEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddVideoEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__AddVideoEncoderConfigurationResponse*);
    soap_POST_recv__trt__AddVideoEncoderConfigurationResponse(struct soap*, struct _trt__AddVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoEncoderConfiguration> @ref _trt__RemoveVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoEncoderConfiguration(struct soap*, struct _trt__RemoveVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoEncoderConfiguration(struct soap*, struct _trt__RemoveVideoEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveVideoEncoderConfiguration(struct soap*, const char *URL, struct _trt__RemoveVideoEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveVideoEncoderConfiguration(struct soap*, const char *URL, struct _trt__RemoveVideoEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveVideoEncoderConfiguration(struct soap*, const char *URL, struct _trt__RemoveVideoEncoderConfiguration*);
    soap_POST_recv__trt__RemoveVideoEncoderConfiguration(struct soap*, struct _trt__RemoveVideoEncoderConfiguration*);
    @endcode

  - <trt:RemoveVideoEncoderConfigurationResponse> @ref _trt__RemoveVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, struct _trt__RemoveVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, struct _trt__RemoveVideoEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveVideoEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveVideoEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveVideoEncoderConfigurationResponse*);
    soap_POST_recv__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, struct _trt__RemoveVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:AddVideoSourceConfiguration> @ref _trt__AddVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoSourceConfiguration(struct soap*, struct _trt__AddVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoSourceConfiguration(struct soap*, struct _trt__AddVideoSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddVideoSourceConfiguration(struct soap*, const char *URL, struct _trt__AddVideoSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddVideoSourceConfiguration(struct soap*, const char *URL, struct _trt__AddVideoSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddVideoSourceConfiguration(struct soap*, const char *URL, struct _trt__AddVideoSourceConfiguration*);
    soap_POST_recv__trt__AddVideoSourceConfiguration(struct soap*, struct _trt__AddVideoSourceConfiguration*);
    @endcode

  - <trt:AddVideoSourceConfigurationResponse> @ref _trt__AddVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoSourceConfigurationResponse(struct soap*, struct _trt__AddVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoSourceConfigurationResponse(struct soap*, struct _trt__AddVideoSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__AddVideoSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__AddVideoSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__AddVideoSourceConfigurationResponse*);
    soap_POST_recv__trt__AddVideoSourceConfigurationResponse(struct soap*, struct _trt__AddVideoSourceConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoSourceConfiguration> @ref _trt__RemoveVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoSourceConfiguration(struct soap*, struct _trt__RemoveVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoSourceConfiguration(struct soap*, struct _trt__RemoveVideoSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveVideoSourceConfiguration(struct soap*, const char *URL, struct _trt__RemoveVideoSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveVideoSourceConfiguration(struct soap*, const char *URL, struct _trt__RemoveVideoSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveVideoSourceConfiguration(struct soap*, const char *URL, struct _trt__RemoveVideoSourceConfiguration*);
    soap_POST_recv__trt__RemoveVideoSourceConfiguration(struct soap*, struct _trt__RemoveVideoSourceConfiguration*);
    @endcode

  - <trt:RemoveVideoSourceConfigurationResponse> @ref _trt__RemoveVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoSourceConfigurationResponse(struct soap*, struct _trt__RemoveVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoSourceConfigurationResponse(struct soap*, struct _trt__RemoveVideoSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveVideoSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveVideoSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveVideoSourceConfigurationResponse*);
    soap_POST_recv__trt__RemoveVideoSourceConfigurationResponse(struct soap*, struct _trt__RemoveVideoSourceConfigurationResponse*);
    @endcode

  - <trt:AddAudioEncoderConfiguration> @ref _trt__AddAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioEncoderConfiguration(struct soap*, struct _trt__AddAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioEncoderConfiguration(struct soap*, struct _trt__AddAudioEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioEncoderConfiguration(struct soap*, const char *URL, struct _trt__AddAudioEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioEncoderConfiguration(struct soap*, const char *URL, struct _trt__AddAudioEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioEncoderConfiguration(struct soap*, const char *URL, struct _trt__AddAudioEncoderConfiguration*);
    soap_POST_recv__trt__AddAudioEncoderConfiguration(struct soap*, struct _trt__AddAudioEncoderConfiguration*);
    @endcode

  - <trt:AddAudioEncoderConfigurationResponse> @ref _trt__AddAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioEncoderConfigurationResponse(struct soap*, struct _trt__AddAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioEncoderConfigurationResponse(struct soap*, struct _trt__AddAudioEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__AddAudioEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__AddAudioEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__AddAudioEncoderConfigurationResponse*);
    soap_POST_recv__trt__AddAudioEncoderConfigurationResponse(struct soap*, struct _trt__AddAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioEncoderConfiguration> @ref _trt__RemoveAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioEncoderConfiguration(struct soap*, struct _trt__RemoveAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioEncoderConfiguration(struct soap*, struct _trt__RemoveAudioEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioEncoderConfiguration(struct soap*, const char *URL, struct _trt__RemoveAudioEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioEncoderConfiguration(struct soap*, const char *URL, struct _trt__RemoveAudioEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioEncoderConfiguration(struct soap*, const char *URL, struct _trt__RemoveAudioEncoderConfiguration*);
    soap_POST_recv__trt__RemoveAudioEncoderConfiguration(struct soap*, struct _trt__RemoveAudioEncoderConfiguration*);
    @endcode

  - <trt:RemoveAudioEncoderConfigurationResponse> @ref _trt__RemoveAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, struct _trt__RemoveAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, struct _trt__RemoveAudioEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveAudioEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveAudioEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveAudioEncoderConfigurationResponse*);
    soap_POST_recv__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, struct _trt__RemoveAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:AddAudioSourceConfiguration> @ref _trt__AddAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioSourceConfiguration(struct soap*, struct _trt__AddAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioSourceConfiguration(struct soap*, struct _trt__AddAudioSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioSourceConfiguration(struct soap*, const char *URL, struct _trt__AddAudioSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioSourceConfiguration(struct soap*, const char *URL, struct _trt__AddAudioSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioSourceConfiguration(struct soap*, const char *URL, struct _trt__AddAudioSourceConfiguration*);
    soap_POST_recv__trt__AddAudioSourceConfiguration(struct soap*, struct _trt__AddAudioSourceConfiguration*);
    @endcode

  - <trt:AddAudioSourceConfigurationResponse> @ref _trt__AddAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioSourceConfigurationResponse(struct soap*, struct _trt__AddAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioSourceConfigurationResponse(struct soap*, struct _trt__AddAudioSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__AddAudioSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__AddAudioSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__AddAudioSourceConfigurationResponse*);
    soap_POST_recv__trt__AddAudioSourceConfigurationResponse(struct soap*, struct _trt__AddAudioSourceConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioSourceConfiguration> @ref _trt__RemoveAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioSourceConfiguration(struct soap*, struct _trt__RemoveAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioSourceConfiguration(struct soap*, struct _trt__RemoveAudioSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioSourceConfiguration(struct soap*, const char *URL, struct _trt__RemoveAudioSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioSourceConfiguration(struct soap*, const char *URL, struct _trt__RemoveAudioSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioSourceConfiguration(struct soap*, const char *URL, struct _trt__RemoveAudioSourceConfiguration*);
    soap_POST_recv__trt__RemoveAudioSourceConfiguration(struct soap*, struct _trt__RemoveAudioSourceConfiguration*);
    @endcode

  - <trt:RemoveAudioSourceConfigurationResponse> @ref _trt__RemoveAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioSourceConfigurationResponse(struct soap*, struct _trt__RemoveAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioSourceConfigurationResponse(struct soap*, struct _trt__RemoveAudioSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveAudioSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveAudioSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveAudioSourceConfigurationResponse*);
    soap_POST_recv__trt__RemoveAudioSourceConfigurationResponse(struct soap*, struct _trt__RemoveAudioSourceConfigurationResponse*);
    @endcode

  - <trt:AddPTZConfiguration> @ref _trt__AddPTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddPTZConfiguration(struct soap*, struct _trt__AddPTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddPTZConfiguration(struct soap*, struct _trt__AddPTZConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddPTZConfiguration(struct soap*, const char *URL, struct _trt__AddPTZConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddPTZConfiguration(struct soap*, const char *URL, struct _trt__AddPTZConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddPTZConfiguration(struct soap*, const char *URL, struct _trt__AddPTZConfiguration*);
    soap_POST_recv__trt__AddPTZConfiguration(struct soap*, struct _trt__AddPTZConfiguration*);
    @endcode

  - <trt:AddPTZConfigurationResponse> @ref _trt__AddPTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddPTZConfigurationResponse(struct soap*, struct _trt__AddPTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddPTZConfigurationResponse(struct soap*, struct _trt__AddPTZConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddPTZConfigurationResponse(struct soap*, const char *URL, struct _trt__AddPTZConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddPTZConfigurationResponse(struct soap*, const char *URL, struct _trt__AddPTZConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddPTZConfigurationResponse(struct soap*, const char *URL, struct _trt__AddPTZConfigurationResponse*);
    soap_POST_recv__trt__AddPTZConfigurationResponse(struct soap*, struct _trt__AddPTZConfigurationResponse*);
    @endcode

  - <trt:RemovePTZConfiguration> @ref _trt__RemovePTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemovePTZConfiguration(struct soap*, struct _trt__RemovePTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemovePTZConfiguration(struct soap*, struct _trt__RemovePTZConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemovePTZConfiguration(struct soap*, const char *URL, struct _trt__RemovePTZConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemovePTZConfiguration(struct soap*, const char *URL, struct _trt__RemovePTZConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemovePTZConfiguration(struct soap*, const char *URL, struct _trt__RemovePTZConfiguration*);
    soap_POST_recv__trt__RemovePTZConfiguration(struct soap*, struct _trt__RemovePTZConfiguration*);
    @endcode

  - <trt:RemovePTZConfigurationResponse> @ref _trt__RemovePTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemovePTZConfigurationResponse(struct soap*, struct _trt__RemovePTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemovePTZConfigurationResponse(struct soap*, struct _trt__RemovePTZConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemovePTZConfigurationResponse(struct soap*, const char *URL, struct _trt__RemovePTZConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemovePTZConfigurationResponse(struct soap*, const char *URL, struct _trt__RemovePTZConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemovePTZConfigurationResponse(struct soap*, const char *URL, struct _trt__RemovePTZConfigurationResponse*);
    soap_POST_recv__trt__RemovePTZConfigurationResponse(struct soap*, struct _trt__RemovePTZConfigurationResponse*);
    @endcode

  - <trt:AddVideoAnalyticsConfiguration> @ref _trt__AddVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoAnalyticsConfiguration(struct soap*, struct _trt__AddVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoAnalyticsConfiguration(struct soap*, struct _trt__AddVideoAnalyticsConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddVideoAnalyticsConfiguration(struct soap*, const char *URL, struct _trt__AddVideoAnalyticsConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddVideoAnalyticsConfiguration(struct soap*, const char *URL, struct _trt__AddVideoAnalyticsConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddVideoAnalyticsConfiguration(struct soap*, const char *URL, struct _trt__AddVideoAnalyticsConfiguration*);
    soap_POST_recv__trt__AddVideoAnalyticsConfiguration(struct soap*, struct _trt__AddVideoAnalyticsConfiguration*);
    @endcode

  - <trt:AddVideoAnalyticsConfigurationResponse> @ref _trt__AddVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__AddVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__AddVideoAnalyticsConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, struct _trt__AddVideoAnalyticsConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, struct _trt__AddVideoAnalyticsConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, struct _trt__AddVideoAnalyticsConfigurationResponse*);
    soap_POST_recv__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__AddVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoAnalyticsConfiguration> @ref _trt__RemoveVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoAnalyticsConfiguration(struct soap*, struct _trt__RemoveVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoAnalyticsConfiguration(struct soap*, struct _trt__RemoveVideoAnalyticsConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveVideoAnalyticsConfiguration(struct soap*, const char *URL, struct _trt__RemoveVideoAnalyticsConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveVideoAnalyticsConfiguration(struct soap*, const char *URL, struct _trt__RemoveVideoAnalyticsConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveVideoAnalyticsConfiguration(struct soap*, const char *URL, struct _trt__RemoveVideoAnalyticsConfiguration*);
    soap_POST_recv__trt__RemoveVideoAnalyticsConfiguration(struct soap*, struct _trt__RemoveVideoAnalyticsConfiguration*);
    @endcode

  - <trt:RemoveVideoAnalyticsConfigurationResponse> @ref _trt__RemoveVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__RemoveVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__RemoveVideoAnalyticsConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveVideoAnalyticsConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveVideoAnalyticsConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveVideoAnalyticsConfigurationResponse*);
    soap_POST_recv__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__RemoveVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:AddMetadataConfiguration> @ref _trt__AddMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddMetadataConfiguration(struct soap*, struct _trt__AddMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddMetadataConfiguration(struct soap*, struct _trt__AddMetadataConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddMetadataConfiguration(struct soap*, const char *URL, struct _trt__AddMetadataConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddMetadataConfiguration(struct soap*, const char *URL, struct _trt__AddMetadataConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddMetadataConfiguration(struct soap*, const char *URL, struct _trt__AddMetadataConfiguration*);
    soap_POST_recv__trt__AddMetadataConfiguration(struct soap*, struct _trt__AddMetadataConfiguration*);
    @endcode

  - <trt:AddMetadataConfigurationResponse> @ref _trt__AddMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddMetadataConfigurationResponse(struct soap*, struct _trt__AddMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddMetadataConfigurationResponse(struct soap*, struct _trt__AddMetadataConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddMetadataConfigurationResponse(struct soap*, const char *URL, struct _trt__AddMetadataConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddMetadataConfigurationResponse(struct soap*, const char *URL, struct _trt__AddMetadataConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddMetadataConfigurationResponse(struct soap*, const char *URL, struct _trt__AddMetadataConfigurationResponse*);
    soap_POST_recv__trt__AddMetadataConfigurationResponse(struct soap*, struct _trt__AddMetadataConfigurationResponse*);
    @endcode

  - <trt:RemoveMetadataConfiguration> @ref _trt__RemoveMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveMetadataConfiguration(struct soap*, struct _trt__RemoveMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveMetadataConfiguration(struct soap*, struct _trt__RemoveMetadataConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveMetadataConfiguration(struct soap*, const char *URL, struct _trt__RemoveMetadataConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveMetadataConfiguration(struct soap*, const char *URL, struct _trt__RemoveMetadataConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveMetadataConfiguration(struct soap*, const char *URL, struct _trt__RemoveMetadataConfiguration*);
    soap_POST_recv__trt__RemoveMetadataConfiguration(struct soap*, struct _trt__RemoveMetadataConfiguration*);
    @endcode

  - <trt:RemoveMetadataConfigurationResponse> @ref _trt__RemoveMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveMetadataConfigurationResponse(struct soap*, struct _trt__RemoveMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveMetadataConfigurationResponse(struct soap*, struct _trt__RemoveMetadataConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveMetadataConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveMetadataConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveMetadataConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveMetadataConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveMetadataConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveMetadataConfigurationResponse*);
    soap_POST_recv__trt__RemoveMetadataConfigurationResponse(struct soap*, struct _trt__RemoveMetadataConfigurationResponse*);
    @endcode

  - <trt:AddAudioOutputConfiguration> @ref _trt__AddAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioOutputConfiguration(struct soap*, struct _trt__AddAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioOutputConfiguration(struct soap*, struct _trt__AddAudioOutputConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioOutputConfiguration(struct soap*, const char *URL, struct _trt__AddAudioOutputConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioOutputConfiguration(struct soap*, const char *URL, struct _trt__AddAudioOutputConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioOutputConfiguration(struct soap*, const char *URL, struct _trt__AddAudioOutputConfiguration*);
    soap_POST_recv__trt__AddAudioOutputConfiguration(struct soap*, struct _trt__AddAudioOutputConfiguration*);
    @endcode

  - <trt:AddAudioOutputConfigurationResponse> @ref _trt__AddAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioOutputConfigurationResponse(struct soap*, struct _trt__AddAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioOutputConfigurationResponse(struct soap*, struct _trt__AddAudioOutputConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _trt__AddAudioOutputConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _trt__AddAudioOutputConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _trt__AddAudioOutputConfigurationResponse*);
    soap_POST_recv__trt__AddAudioOutputConfigurationResponse(struct soap*, struct _trt__AddAudioOutputConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioOutputConfiguration> @ref _trt__RemoveAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioOutputConfiguration(struct soap*, struct _trt__RemoveAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioOutputConfiguration(struct soap*, struct _trt__RemoveAudioOutputConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioOutputConfiguration(struct soap*, const char *URL, struct _trt__RemoveAudioOutputConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioOutputConfiguration(struct soap*, const char *URL, struct _trt__RemoveAudioOutputConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioOutputConfiguration(struct soap*, const char *URL, struct _trt__RemoveAudioOutputConfiguration*);
    soap_POST_recv__trt__RemoveAudioOutputConfiguration(struct soap*, struct _trt__RemoveAudioOutputConfiguration*);
    @endcode

  - <trt:RemoveAudioOutputConfigurationResponse> @ref _trt__RemoveAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioOutputConfigurationResponse(struct soap*, struct _trt__RemoveAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioOutputConfigurationResponse(struct soap*, struct _trt__RemoveAudioOutputConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveAudioOutputConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveAudioOutputConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveAudioOutputConfigurationResponse*);
    soap_POST_recv__trt__RemoveAudioOutputConfigurationResponse(struct soap*, struct _trt__RemoveAudioOutputConfigurationResponse*);
    @endcode

  - <trt:AddAudioDecoderConfiguration> @ref _trt__AddAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioDecoderConfiguration(struct soap*, struct _trt__AddAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioDecoderConfiguration(struct soap*, struct _trt__AddAudioDecoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioDecoderConfiguration(struct soap*, const char *URL, struct _trt__AddAudioDecoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioDecoderConfiguration(struct soap*, const char *URL, struct _trt__AddAudioDecoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioDecoderConfiguration(struct soap*, const char *URL, struct _trt__AddAudioDecoderConfiguration*);
    soap_POST_recv__trt__AddAudioDecoderConfiguration(struct soap*, struct _trt__AddAudioDecoderConfiguration*);
    @endcode

  - <trt:AddAudioDecoderConfigurationResponse> @ref _trt__AddAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioDecoderConfigurationResponse(struct soap*, struct _trt__AddAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioDecoderConfigurationResponse(struct soap*, struct _trt__AddAudioDecoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioDecoderConfigurationResponse(struct soap*, const char *URL, struct _trt__AddAudioDecoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioDecoderConfigurationResponse(struct soap*, const char *URL, struct _trt__AddAudioDecoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioDecoderConfigurationResponse(struct soap*, const char *URL, struct _trt__AddAudioDecoderConfigurationResponse*);
    soap_POST_recv__trt__AddAudioDecoderConfigurationResponse(struct soap*, struct _trt__AddAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioDecoderConfiguration> @ref _trt__RemoveAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioDecoderConfiguration(struct soap*, struct _trt__RemoveAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioDecoderConfiguration(struct soap*, struct _trt__RemoveAudioDecoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioDecoderConfiguration(struct soap*, const char *URL, struct _trt__RemoveAudioDecoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioDecoderConfiguration(struct soap*, const char *URL, struct _trt__RemoveAudioDecoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioDecoderConfiguration(struct soap*, const char *URL, struct _trt__RemoveAudioDecoderConfiguration*);
    soap_POST_recv__trt__RemoveAudioDecoderConfiguration(struct soap*, struct _trt__RemoveAudioDecoderConfiguration*);
    @endcode

  - <trt:RemoveAudioDecoderConfigurationResponse> @ref _trt__RemoveAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, struct _trt__RemoveAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, struct _trt__RemoveAudioDecoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveAudioDecoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveAudioDecoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, const char *URL, struct _trt__RemoveAudioDecoderConfigurationResponse*);
    soap_POST_recv__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, struct _trt__RemoveAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:DeleteProfile> @ref _trt__DeleteProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfile(struct soap*, struct _trt__DeleteProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfile(struct soap*, struct _trt__DeleteProfile*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__DeleteProfile(struct soap*, const char *URL, struct _trt__DeleteProfile*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__DeleteProfile(struct soap*, const char *URL, struct _trt__DeleteProfile*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__DeleteProfile(struct soap*, const char *URL, struct _trt__DeleteProfile*);
    soap_POST_recv__trt__DeleteProfile(struct soap*, struct _trt__DeleteProfile*);
    @endcode

  - <trt:DeleteProfileResponse> @ref _trt__DeleteProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfileResponse(struct soap*, struct _trt__DeleteProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfileResponse(struct soap*, struct _trt__DeleteProfileResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__DeleteProfileResponse(struct soap*, const char *URL, struct _trt__DeleteProfileResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__DeleteProfileResponse(struct soap*, const char *URL, struct _trt__DeleteProfileResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__DeleteProfileResponse(struct soap*, const char *URL, struct _trt__DeleteProfileResponse*);
    soap_POST_recv__trt__DeleteProfileResponse(struct soap*, struct _trt__DeleteProfileResponse*);
    @endcode

  - <trt:GetVideoEncoderConfigurations> @ref _trt__GetVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurations(struct soap*, struct _trt__GetVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurations(struct soap*, struct _trt__GetVideoEncoderConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoEncoderConfigurations(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoEncoderConfigurations(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoEncoderConfigurations(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurations*);
    soap_POST_recv__trt__GetVideoEncoderConfigurations(struct soap*, struct _trt__GetVideoEncoderConfigurations*);
    @endcode

  - <trt:GetVideoEncoderConfigurationsResponse> @ref _trt__GetVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationsResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationsResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoEncoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoEncoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoEncoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurationsResponse*);
    soap_POST_recv__trt__GetVideoEncoderConfigurationsResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetVideoSourceConfigurations> @ref _trt__GetVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurations(struct soap*, struct _trt__GetVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurations(struct soap*, struct _trt__GetVideoSourceConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceConfigurations(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceConfigurations(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceConfigurations(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurations*);
    soap_POST_recv__trt__GetVideoSourceConfigurations(struct soap*, struct _trt__GetVideoSourceConfigurations*);
    @endcode

  - <trt:GetVideoSourceConfigurationsResponse> @ref _trt__GetVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationsResponse(struct soap*, struct _trt__GetVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationsResponse(struct soap*, struct _trt__GetVideoSourceConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurationsResponse*);
    soap_POST_recv__trt__GetVideoSourceConfigurationsResponse(struct soap*, struct _trt__GetVideoSourceConfigurationsResponse*);
    @endcode

  - <trt:GetAudioEncoderConfigurations> @ref _trt__GetAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurations(struct soap*, struct _trt__GetAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurations(struct soap*, struct _trt__GetAudioEncoderConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioEncoderConfigurations(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioEncoderConfigurations(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioEncoderConfigurations(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurations*);
    soap_POST_recv__trt__GetAudioEncoderConfigurations(struct soap*, struct _trt__GetAudioEncoderConfigurations*);
    @endcode

  - <trt:GetAudioEncoderConfigurationsResponse> @ref _trt__GetAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationsResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationsResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioEncoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioEncoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioEncoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurationsResponse*);
    soap_POST_recv__trt__GetAudioEncoderConfigurationsResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetAudioSourceConfigurations> @ref _trt__GetAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurations(struct soap*, struct _trt__GetAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurations(struct soap*, struct _trt__GetAudioSourceConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSourceConfigurations(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSourceConfigurations(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSourceConfigurations(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurations*);
    soap_POST_recv__trt__GetAudioSourceConfigurations(struct soap*, struct _trt__GetAudioSourceConfigurations*);
    @endcode

  - <trt:GetAudioSourceConfigurationsResponse> @ref _trt__GetAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationsResponse(struct soap*, struct _trt__GetAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationsResponse(struct soap*, struct _trt__GetAudioSourceConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSourceConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSourceConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSourceConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurationsResponse*);
    soap_POST_recv__trt__GetAudioSourceConfigurationsResponse(struct soap*, struct _trt__GetAudioSourceConfigurationsResponse*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurations> @ref _trt__GetVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurations(struct soap*, struct _trt__GetVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurations(struct soap*, struct _trt__GetVideoAnalyticsConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoAnalyticsConfigurations(struct soap*, const char *URL, struct _trt__GetVideoAnalyticsConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoAnalyticsConfigurations(struct soap*, const char *URL, struct _trt__GetVideoAnalyticsConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoAnalyticsConfigurations(struct soap*, const char *URL, struct _trt__GetVideoAnalyticsConfigurations*);
    soap_POST_recv__trt__GetVideoAnalyticsConfigurations(struct soap*, struct _trt__GetVideoAnalyticsConfigurations*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurationsResponse> @ref _trt__GetVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, struct _trt__GetVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, struct _trt__GetVideoAnalyticsConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetVideoAnalyticsConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetVideoAnalyticsConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetVideoAnalyticsConfigurationsResponse*);
    soap_POST_recv__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, struct _trt__GetVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <trt:GetMetadataConfigurations> @ref _trt__GetMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurations(struct soap*, struct _trt__GetMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurations(struct soap*, struct _trt__GetMetadataConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetMetadataConfigurations(struct soap*, const char *URL, struct _trt__GetMetadataConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetMetadataConfigurations(struct soap*, const char *URL, struct _trt__GetMetadataConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetMetadataConfigurations(struct soap*, const char *URL, struct _trt__GetMetadataConfigurations*);
    soap_POST_recv__trt__GetMetadataConfigurations(struct soap*, struct _trt__GetMetadataConfigurations*);
    @endcode

  - <trt:GetMetadataConfigurationsResponse> @ref _trt__GetMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationsResponse(struct soap*, struct _trt__GetMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationsResponse(struct soap*, struct _trt__GetMetadataConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetMetadataConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetMetadataConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetMetadataConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetMetadataConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetMetadataConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetMetadataConfigurationsResponse*);
    soap_POST_recv__trt__GetMetadataConfigurationsResponse(struct soap*, struct _trt__GetMetadataConfigurationsResponse*);
    @endcode

  - <trt:GetAudioOutputConfigurations> @ref _trt__GetAudioOutputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurations(struct soap*, struct _trt__GetAudioOutputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurations(struct soap*, struct _trt__GetAudioOutputConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputConfigurations(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputConfigurations(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputConfigurations(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurations*);
    soap_POST_recv__trt__GetAudioOutputConfigurations(struct soap*, struct _trt__GetAudioOutputConfigurations*);
    @endcode

  - <trt:GetAudioOutputConfigurationsResponse> @ref _trt__GetAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationsResponse(struct soap*, struct _trt__GetAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationsResponse(struct soap*, struct _trt__GetAudioOutputConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurationsResponse*);
    soap_POST_recv__trt__GetAudioOutputConfigurationsResponse(struct soap*, struct _trt__GetAudioOutputConfigurationsResponse*);
    @endcode

  - <trt:GetAudioDecoderConfigurations> @ref _trt__GetAudioDecoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurations(struct soap*, struct _trt__GetAudioDecoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurations(struct soap*, struct _trt__GetAudioDecoderConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioDecoderConfigurations(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioDecoderConfigurations(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioDecoderConfigurations(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurations*);
    soap_POST_recv__trt__GetAudioDecoderConfigurations(struct soap*, struct _trt__GetAudioDecoderConfigurations*);
    @endcode

  - <trt:GetAudioDecoderConfigurationsResponse> @ref _trt__GetAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationsResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationsResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioDecoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioDecoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioDecoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurationsResponse*);
    soap_POST_recv__trt__GetAudioDecoderConfigurationsResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationsResponse*);
    @endcode

  - <trt:GetVideoSourceConfiguration> @ref _trt__GetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfiguration(struct soap*, struct _trt__GetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfiguration(struct soap*, struct _trt__GetVideoSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceConfiguration(struct soap*, const char *URL, struct _trt__GetVideoSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceConfiguration(struct soap*, const char *URL, struct _trt__GetVideoSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceConfiguration(struct soap*, const char *URL, struct _trt__GetVideoSourceConfiguration*);
    soap_POST_recv__trt__GetVideoSourceConfiguration(struct soap*, struct _trt__GetVideoSourceConfiguration*);
    @endcode

  - <trt:GetVideoSourceConfigurationResponse> @ref _trt__GetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationResponse(struct soap*, struct _trt__GetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationResponse(struct soap*, struct _trt__GetVideoSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurationResponse*);
    soap_POST_recv__trt__GetVideoSourceConfigurationResponse(struct soap*, struct _trt__GetVideoSourceConfigurationResponse*);
    @endcode

  - <trt:GetVideoEncoderConfiguration> @ref _trt__GetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfiguration(struct soap*, struct _trt__GetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfiguration(struct soap*, struct _trt__GetVideoEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoEncoderConfiguration(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoEncoderConfiguration(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoEncoderConfiguration(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfiguration*);
    soap_POST_recv__trt__GetVideoEncoderConfiguration(struct soap*, struct _trt__GetVideoEncoderConfiguration*);
    @endcode

  - <trt:GetVideoEncoderConfigurationResponse> @ref _trt__GetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurationResponse*);
    soap_POST_recv__trt__GetVideoEncoderConfigurationResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:GetAudioSourceConfiguration> @ref _trt__GetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfiguration(struct soap*, struct _trt__GetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfiguration(struct soap*, struct _trt__GetAudioSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSourceConfiguration(struct soap*, const char *URL, struct _trt__GetAudioSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSourceConfiguration(struct soap*, const char *URL, struct _trt__GetAudioSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSourceConfiguration(struct soap*, const char *URL, struct _trt__GetAudioSourceConfiguration*);
    soap_POST_recv__trt__GetAudioSourceConfiguration(struct soap*, struct _trt__GetAudioSourceConfiguration*);
    @endcode

  - <trt:GetAudioSourceConfigurationResponse> @ref _trt__GetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationResponse(struct soap*, struct _trt__GetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationResponse(struct soap*, struct _trt__GetAudioSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurationResponse*);
    soap_POST_recv__trt__GetAudioSourceConfigurationResponse(struct soap*, struct _trt__GetAudioSourceConfigurationResponse*);
    @endcode

  - <trt:GetAudioEncoderConfiguration> @ref _trt__GetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfiguration(struct soap*, struct _trt__GetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfiguration(struct soap*, struct _trt__GetAudioEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioEncoderConfiguration(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioEncoderConfiguration(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioEncoderConfiguration(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfiguration*);
    soap_POST_recv__trt__GetAudioEncoderConfiguration(struct soap*, struct _trt__GetAudioEncoderConfiguration*);
    @endcode

  - <trt:GetAudioEncoderConfigurationResponse> @ref _trt__GetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurationResponse*);
    soap_POST_recv__trt__GetAudioEncoderConfigurationResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:GetVideoAnalyticsConfiguration> @ref _trt__GetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfiguration(struct soap*, struct _trt__GetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfiguration(struct soap*, struct _trt__GetVideoAnalyticsConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoAnalyticsConfiguration(struct soap*, const char *URL, struct _trt__GetVideoAnalyticsConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoAnalyticsConfiguration(struct soap*, const char *URL, struct _trt__GetVideoAnalyticsConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoAnalyticsConfiguration(struct soap*, const char *URL, struct _trt__GetVideoAnalyticsConfiguration*);
    soap_POST_recv__trt__GetVideoAnalyticsConfiguration(struct soap*, struct _trt__GetVideoAnalyticsConfiguration*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurationResponse> @ref _trt__GetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__GetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__GetVideoAnalyticsConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, struct _trt__GetVideoAnalyticsConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, struct _trt__GetVideoAnalyticsConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, struct _trt__GetVideoAnalyticsConfigurationResponse*);
    soap_POST_recv__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__GetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:GetMetadataConfiguration> @ref _trt__GetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfiguration(struct soap*, struct _trt__GetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfiguration(struct soap*, struct _trt__GetMetadataConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetMetadataConfiguration(struct soap*, const char *URL, struct _trt__GetMetadataConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetMetadataConfiguration(struct soap*, const char *URL, struct _trt__GetMetadataConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetMetadataConfiguration(struct soap*, const char *URL, struct _trt__GetMetadataConfiguration*);
    soap_POST_recv__trt__GetMetadataConfiguration(struct soap*, struct _trt__GetMetadataConfiguration*);
    @endcode

  - <trt:GetMetadataConfigurationResponse> @ref _trt__GetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationResponse(struct soap*, struct _trt__GetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationResponse(struct soap*, struct _trt__GetMetadataConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetMetadataConfigurationResponse(struct soap*, const char *URL, struct _trt__GetMetadataConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetMetadataConfigurationResponse(struct soap*, const char *URL, struct _trt__GetMetadataConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetMetadataConfigurationResponse(struct soap*, const char *URL, struct _trt__GetMetadataConfigurationResponse*);
    soap_POST_recv__trt__GetMetadataConfigurationResponse(struct soap*, struct _trt__GetMetadataConfigurationResponse*);
    @endcode

  - <trt:GetAudioOutputConfiguration> @ref _trt__GetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfiguration(struct soap*, struct _trt__GetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfiguration(struct soap*, struct _trt__GetAudioOutputConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputConfiguration(struct soap*, const char *URL, struct _trt__GetAudioOutputConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputConfiguration(struct soap*, const char *URL, struct _trt__GetAudioOutputConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputConfiguration(struct soap*, const char *URL, struct _trt__GetAudioOutputConfiguration*);
    soap_POST_recv__trt__GetAudioOutputConfiguration(struct soap*, struct _trt__GetAudioOutputConfiguration*);
    @endcode

  - <trt:GetAudioOutputConfigurationResponse> @ref _trt__GetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationResponse(struct soap*, struct _trt__GetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationResponse(struct soap*, struct _trt__GetAudioOutputConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurationResponse*);
    soap_POST_recv__trt__GetAudioOutputConfigurationResponse(struct soap*, struct _trt__GetAudioOutputConfigurationResponse*);
    @endcode

  - <trt:GetAudioDecoderConfiguration> @ref _trt__GetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfiguration(struct soap*, struct _trt__GetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfiguration(struct soap*, struct _trt__GetAudioDecoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioDecoderConfiguration(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioDecoderConfiguration(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioDecoderConfiguration(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfiguration*);
    soap_POST_recv__trt__GetAudioDecoderConfiguration(struct soap*, struct _trt__GetAudioDecoderConfiguration*);
    @endcode

  - <trt:GetAudioDecoderConfigurationResponse> @ref _trt__GetAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioDecoderConfigurationResponse(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioDecoderConfigurationResponse(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioDecoderConfigurationResponse(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurationResponse*);
    soap_POST_recv__trt__GetAudioDecoderConfigurationResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:GetCompatibleVideoEncoderConfigurations> @ref _trt__GetCompatibleVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, struct _trt__GetCompatibleVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, struct _trt__GetCompatibleVideoEncoderConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleVideoEncoderConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleVideoEncoderConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleVideoEncoderConfigurations*);
    soap_POST_recv__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, struct _trt__GetCompatibleVideoEncoderConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoEncoderConfigurationsResponse> @ref _trt__GetCompatibleVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleVideoSourceConfigurations> @ref _trt__GetCompatibleVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoSourceConfigurations(struct soap*, struct _trt__GetCompatibleVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoSourceConfigurations(struct soap*, struct _trt__GetCompatibleVideoSourceConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleVideoSourceConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleVideoSourceConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleVideoSourceConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleVideoSourceConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleVideoSourceConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleVideoSourceConfigurations*);
    soap_POST_recv__trt__GetCompatibleVideoSourceConfigurations(struct soap*, struct _trt__GetCompatibleVideoSourceConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoSourceConfigurationsResponse> @ref _trt__GetCompatibleVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioEncoderConfigurations> @ref _trt__GetCompatibleAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, struct _trt__GetCompatibleAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, struct _trt__GetCompatibleAudioEncoderConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleAudioEncoderConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleAudioEncoderConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleAudioEncoderConfigurations*);
    soap_POST_recv__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, struct _trt__GetCompatibleAudioEncoderConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioEncoderConfigurationsResponse> @ref _trt__GetCompatibleAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioSourceConfigurations> @ref _trt__GetCompatibleAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioSourceConfigurations(struct soap*, struct _trt__GetCompatibleAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioSourceConfigurations(struct soap*, struct _trt__GetCompatibleAudioSourceConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioSourceConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleAudioSourceConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioSourceConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleAudioSourceConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioSourceConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleAudioSourceConfigurations*);
    soap_POST_recv__trt__GetCompatibleAudioSourceConfigurations(struct soap*, struct _trt__GetCompatibleAudioSourceConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioSourceConfigurationsResponse> @ref _trt__GetCompatibleAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleVideoAnalyticsConfigurations> @ref _trt__GetCompatibleVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, struct _trt__GetCompatibleVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, struct _trt__GetCompatibleVideoAnalyticsConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleVideoAnalyticsConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleVideoAnalyticsConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleVideoAnalyticsConfigurations*);
    soap_POST_recv__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, struct _trt__GetCompatibleVideoAnalyticsConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoAnalyticsConfigurationsResponse> @ref _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleMetadataConfigurations> @ref _trt__GetCompatibleMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleMetadataConfigurations(struct soap*, struct _trt__GetCompatibleMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleMetadataConfigurations(struct soap*, struct _trt__GetCompatibleMetadataConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleMetadataConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleMetadataConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleMetadataConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleMetadataConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleMetadataConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleMetadataConfigurations*);
    soap_POST_recv__trt__GetCompatibleMetadataConfigurations(struct soap*, struct _trt__GetCompatibleMetadataConfigurations*);
    @endcode

  - <trt:GetCompatibleMetadataConfigurationsResponse> @ref _trt__GetCompatibleMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, struct _trt__GetCompatibleMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, struct _trt__GetCompatibleMetadataConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleMetadataConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleMetadataConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleMetadataConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, struct _trt__GetCompatibleMetadataConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioOutputConfigurations> @ref _trt__GetCompatibleAudioOutputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioOutputConfigurations(struct soap*, struct _trt__GetCompatibleAudioOutputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioOutputConfigurations(struct soap*, struct _trt__GetCompatibleAudioOutputConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioOutputConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleAudioOutputConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioOutputConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleAudioOutputConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioOutputConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleAudioOutputConfigurations*);
    soap_POST_recv__trt__GetCompatibleAudioOutputConfigurations(struct soap*, struct _trt__GetCompatibleAudioOutputConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioOutputConfigurationsResponse> @ref _trt__GetCompatibleAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioDecoderConfigurations> @ref _trt__GetCompatibleAudioDecoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, struct _trt__GetCompatibleAudioDecoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, struct _trt__GetCompatibleAudioDecoderConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleAudioDecoderConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleAudioDecoderConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, const char *URL, struct _trt__GetCompatibleAudioDecoderConfigurations*);
    soap_POST_recv__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, struct _trt__GetCompatibleAudioDecoderConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioDecoderConfigurationsResponse> @ref _trt__GetCompatibleAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, const char *URL, struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    @endcode

  - <trt:SetVideoEncoderConfiguration> @ref _trt__SetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoEncoderConfiguration(struct soap*, struct _trt__SetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoEncoderConfiguration(struct soap*, struct _trt__SetVideoEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoEncoderConfiguration(struct soap*, const char *URL, struct _trt__SetVideoEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoEncoderConfiguration(struct soap*, const char *URL, struct _trt__SetVideoEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoEncoderConfiguration(struct soap*, const char *URL, struct _trt__SetVideoEncoderConfiguration*);
    soap_POST_recv__trt__SetVideoEncoderConfiguration(struct soap*, struct _trt__SetVideoEncoderConfiguration*);
    @endcode

  - <trt:SetVideoEncoderConfigurationResponse> @ref _trt__SetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoEncoderConfigurationResponse(struct soap*, struct _trt__SetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoEncoderConfigurationResponse(struct soap*, struct _trt__SetVideoEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__SetVideoEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__SetVideoEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__SetVideoEncoderConfigurationResponse*);
    soap_POST_recv__trt__SetVideoEncoderConfigurationResponse(struct soap*, struct _trt__SetVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:SetVideoSourceConfiguration> @ref _trt__SetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceConfiguration(struct soap*, struct _trt__SetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceConfiguration(struct soap*, struct _trt__SetVideoSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoSourceConfiguration(struct soap*, const char *URL, struct _trt__SetVideoSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoSourceConfiguration(struct soap*, const char *URL, struct _trt__SetVideoSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoSourceConfiguration(struct soap*, const char *URL, struct _trt__SetVideoSourceConfiguration*);
    soap_POST_recv__trt__SetVideoSourceConfiguration(struct soap*, struct _trt__SetVideoSourceConfiguration*);
    @endcode

  - <trt:SetVideoSourceConfigurationResponse> @ref _trt__SetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceConfigurationResponse(struct soap*, struct _trt__SetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceConfigurationResponse(struct soap*, struct _trt__SetVideoSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__SetVideoSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__SetVideoSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__SetVideoSourceConfigurationResponse*);
    soap_POST_recv__trt__SetVideoSourceConfigurationResponse(struct soap*, struct _trt__SetVideoSourceConfigurationResponse*);
    @endcode

  - <trt:SetAudioEncoderConfiguration> @ref _trt__SetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioEncoderConfiguration(struct soap*, struct _trt__SetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioEncoderConfiguration(struct soap*, struct _trt__SetAudioEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioEncoderConfiguration(struct soap*, const char *URL, struct _trt__SetAudioEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioEncoderConfiguration(struct soap*, const char *URL, struct _trt__SetAudioEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioEncoderConfiguration(struct soap*, const char *URL, struct _trt__SetAudioEncoderConfiguration*);
    soap_POST_recv__trt__SetAudioEncoderConfiguration(struct soap*, struct _trt__SetAudioEncoderConfiguration*);
    @endcode

  - <trt:SetAudioEncoderConfigurationResponse> @ref _trt__SetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioEncoderConfigurationResponse(struct soap*, struct _trt__SetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioEncoderConfigurationResponse(struct soap*, struct _trt__SetAudioEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__SetAudioEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__SetAudioEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioEncoderConfigurationResponse(struct soap*, const char *URL, struct _trt__SetAudioEncoderConfigurationResponse*);
    soap_POST_recv__trt__SetAudioEncoderConfigurationResponse(struct soap*, struct _trt__SetAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:SetAudioSourceConfiguration> @ref _trt__SetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioSourceConfiguration(struct soap*, struct _trt__SetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioSourceConfiguration(struct soap*, struct _trt__SetAudioSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioSourceConfiguration(struct soap*, const char *URL, struct _trt__SetAudioSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioSourceConfiguration(struct soap*, const char *URL, struct _trt__SetAudioSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioSourceConfiguration(struct soap*, const char *URL, struct _trt__SetAudioSourceConfiguration*);
    soap_POST_recv__trt__SetAudioSourceConfiguration(struct soap*, struct _trt__SetAudioSourceConfiguration*);
    @endcode

  - <trt:SetAudioSourceConfigurationResponse> @ref _trt__SetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioSourceConfigurationResponse(struct soap*, struct _trt__SetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioSourceConfigurationResponse(struct soap*, struct _trt__SetAudioSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__SetAudioSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__SetAudioSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioSourceConfigurationResponse(struct soap*, const char *URL, struct _trt__SetAudioSourceConfigurationResponse*);
    soap_POST_recv__trt__SetAudioSourceConfigurationResponse(struct soap*, struct _trt__SetAudioSourceConfigurationResponse*);
    @endcode

  - <trt:SetVideoAnalyticsConfiguration> @ref _trt__SetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoAnalyticsConfiguration(struct soap*, struct _trt__SetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoAnalyticsConfiguration(struct soap*, struct _trt__SetVideoAnalyticsConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoAnalyticsConfiguration(struct soap*, const char *URL, struct _trt__SetVideoAnalyticsConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoAnalyticsConfiguration(struct soap*, const char *URL, struct _trt__SetVideoAnalyticsConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoAnalyticsConfiguration(struct soap*, const char *URL, struct _trt__SetVideoAnalyticsConfiguration*);
    soap_POST_recv__trt__SetVideoAnalyticsConfiguration(struct soap*, struct _trt__SetVideoAnalyticsConfiguration*);
    @endcode

  - <trt:SetVideoAnalyticsConfigurationResponse> @ref _trt__SetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__SetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__SetVideoAnalyticsConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, struct _trt__SetVideoAnalyticsConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, struct _trt__SetVideoAnalyticsConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, struct _trt__SetVideoAnalyticsConfigurationResponse*);
    soap_POST_recv__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__SetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:SetMetadataConfiguration> @ref _trt__SetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetMetadataConfiguration(struct soap*, struct _trt__SetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetMetadataConfiguration(struct soap*, struct _trt__SetMetadataConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetMetadataConfiguration(struct soap*, const char *URL, struct _trt__SetMetadataConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetMetadataConfiguration(struct soap*, const char *URL, struct _trt__SetMetadataConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetMetadataConfiguration(struct soap*, const char *URL, struct _trt__SetMetadataConfiguration*);
    soap_POST_recv__trt__SetMetadataConfiguration(struct soap*, struct _trt__SetMetadataConfiguration*);
    @endcode

  - <trt:SetMetadataConfigurationResponse> @ref _trt__SetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetMetadataConfigurationResponse(struct soap*, struct _trt__SetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetMetadataConfigurationResponse(struct soap*, struct _trt__SetMetadataConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetMetadataConfigurationResponse(struct soap*, const char *URL, struct _trt__SetMetadataConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetMetadataConfigurationResponse(struct soap*, const char *URL, struct _trt__SetMetadataConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetMetadataConfigurationResponse(struct soap*, const char *URL, struct _trt__SetMetadataConfigurationResponse*);
    soap_POST_recv__trt__SetMetadataConfigurationResponse(struct soap*, struct _trt__SetMetadataConfigurationResponse*);
    @endcode

  - <trt:SetAudioOutputConfiguration> @ref _trt__SetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioOutputConfiguration(struct soap*, struct _trt__SetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioOutputConfiguration(struct soap*, struct _trt__SetAudioOutputConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioOutputConfiguration(struct soap*, const char *URL, struct _trt__SetAudioOutputConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioOutputConfiguration(struct soap*, const char *URL, struct _trt__SetAudioOutputConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioOutputConfiguration(struct soap*, const char *URL, struct _trt__SetAudioOutputConfiguration*);
    soap_POST_recv__trt__SetAudioOutputConfiguration(struct soap*, struct _trt__SetAudioOutputConfiguration*);
    @endcode

  - <trt:SetAudioOutputConfigurationResponse> @ref _trt__SetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioOutputConfigurationResponse(struct soap*, struct _trt__SetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioOutputConfigurationResponse(struct soap*, struct _trt__SetAudioOutputConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _trt__SetAudioOutputConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _trt__SetAudioOutputConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioOutputConfigurationResponse(struct soap*, const char *URL, struct _trt__SetAudioOutputConfigurationResponse*);
    soap_POST_recv__trt__SetAudioOutputConfigurationResponse(struct soap*, struct _trt__SetAudioOutputConfigurationResponse*);
    @endcode

  - <trt:SetAudioDecoderConfiguration> @ref _trt__SetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioDecoderConfiguration(struct soap*, struct _trt__SetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioDecoderConfiguration(struct soap*, struct _trt__SetAudioDecoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioDecoderConfiguration(struct soap*, const char *URL, struct _trt__SetAudioDecoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioDecoderConfiguration(struct soap*, const char *URL, struct _trt__SetAudioDecoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioDecoderConfiguration(struct soap*, const char *URL, struct _trt__SetAudioDecoderConfiguration*);
    soap_POST_recv__trt__SetAudioDecoderConfiguration(struct soap*, struct _trt__SetAudioDecoderConfiguration*);
    @endcode

  - <trt:SetAudioDecoderConfigurationResponse> @ref _trt__SetAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioDecoderConfigurationResponse(struct soap*, struct _trt__SetAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioDecoderConfigurationResponse(struct soap*, struct _trt__SetAudioDecoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioDecoderConfigurationResponse(struct soap*, const char *URL, struct _trt__SetAudioDecoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioDecoderConfigurationResponse(struct soap*, const char *URL, struct _trt__SetAudioDecoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioDecoderConfigurationResponse(struct soap*, const char *URL, struct _trt__SetAudioDecoderConfigurationResponse*);
    soap_POST_recv__trt__SetAudioDecoderConfigurationResponse(struct soap*, struct _trt__SetAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:GetVideoSourceConfigurationOptions> @ref _trt__GetVideoSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationOptions(struct soap*, struct _trt__GetVideoSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationOptions(struct soap*, struct _trt__GetVideoSourceConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceConfigurationOptions(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceConfigurationOptions(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceConfigurationOptions(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurationOptions*);
    soap_POST_recv__trt__GetVideoSourceConfigurationOptions(struct soap*, struct _trt__GetVideoSourceConfigurationOptions*);
    @endcode

  - <trt:GetVideoSourceConfigurationOptionsResponse> @ref _trt__GetVideoSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _trt__GetVideoSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _trt__GetVideoSourceConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetVideoSourceConfigurationOptionsResponse*);
    soap_POST_recv__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _trt__GetVideoSourceConfigurationOptionsResponse*);
    @endcode

  - <trt:GetVideoEncoderConfigurationOptions> @ref _trt__GetVideoEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationOptions(struct soap*, struct _trt__GetVideoEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationOptions(struct soap*, struct _trt__GetVideoEncoderConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoEncoderConfigurationOptions(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoEncoderConfigurationOptions(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoEncoderConfigurationOptions(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurationOptions*);
    soap_POST_recv__trt__GetVideoEncoderConfigurationOptions(struct soap*, struct _trt__GetVideoEncoderConfigurationOptions*);
    @endcode

  - <trt:GetVideoEncoderConfigurationOptionsResponse> @ref _trt__GetVideoEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetVideoEncoderConfigurationOptionsResponse*);
    soap_POST_recv__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioSourceConfigurationOptions> @ref _trt__GetAudioSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationOptions(struct soap*, struct _trt__GetAudioSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationOptions(struct soap*, struct _trt__GetAudioSourceConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSourceConfigurationOptions(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSourceConfigurationOptions(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSourceConfigurationOptions(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurationOptions*);
    soap_POST_recv__trt__GetAudioSourceConfigurationOptions(struct soap*, struct _trt__GetAudioSourceConfigurationOptions*);
    @endcode

  - <trt:GetAudioSourceConfigurationOptionsResponse> @ref _trt__GetAudioSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioSourceConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetAudioSourceConfigurationOptionsResponse*);
    soap_POST_recv__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioSourceConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioEncoderConfigurationOptions> @ref _trt__GetAudioEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationOptions(struct soap*, struct _trt__GetAudioEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationOptions(struct soap*, struct _trt__GetAudioEncoderConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioEncoderConfigurationOptions(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioEncoderConfigurationOptions(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioEncoderConfigurationOptions(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurationOptions*);
    soap_POST_recv__trt__GetAudioEncoderConfigurationOptions(struct soap*, struct _trt__GetAudioEncoderConfigurationOptions*);
    @endcode

  - <trt:GetAudioEncoderConfigurationOptionsResponse> @ref _trt__GetAudioEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetAudioEncoderConfigurationOptionsResponse*);
    soap_POST_recv__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationOptionsResponse*);
    @endcode

  - <trt:GetMetadataConfigurationOptions> @ref _trt__GetMetadataConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationOptions(struct soap*, struct _trt__GetMetadataConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationOptions(struct soap*, struct _trt__GetMetadataConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetMetadataConfigurationOptions(struct soap*, const char *URL, struct _trt__GetMetadataConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetMetadataConfigurationOptions(struct soap*, const char *URL, struct _trt__GetMetadataConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetMetadataConfigurationOptions(struct soap*, const char *URL, struct _trt__GetMetadataConfigurationOptions*);
    soap_POST_recv__trt__GetMetadataConfigurationOptions(struct soap*, struct _trt__GetMetadataConfigurationOptions*);
    @endcode

  - <trt:GetMetadataConfigurationOptionsResponse> @ref _trt__GetMetadataConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationOptionsResponse(struct soap*, struct _trt__GetMetadataConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationOptionsResponse(struct soap*, struct _trt__GetMetadataConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetMetadataConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetMetadataConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetMetadataConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetMetadataConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetMetadataConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetMetadataConfigurationOptionsResponse*);
    soap_POST_recv__trt__GetMetadataConfigurationOptionsResponse(struct soap*, struct _trt__GetMetadataConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioOutputConfigurationOptions> @ref _trt__GetAudioOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationOptions(struct soap*, struct _trt__GetAudioOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationOptions(struct soap*, struct _trt__GetAudioOutputConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputConfigurationOptions(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputConfigurationOptions(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputConfigurationOptions(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurationOptions*);
    soap_POST_recv__trt__GetAudioOutputConfigurationOptions(struct soap*, struct _trt__GetAudioOutputConfigurationOptions*);
    @endcode

  - <trt:GetAudioOutputConfigurationOptionsResponse> @ref _trt__GetAudioOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioOutputConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetAudioOutputConfigurationOptionsResponse*);
    soap_POST_recv__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioOutputConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioDecoderConfigurationOptions> @ref _trt__GetAudioDecoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationOptions(struct soap*, struct _trt__GetAudioDecoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationOptions(struct soap*, struct _trt__GetAudioDecoderConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioDecoderConfigurationOptions(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioDecoderConfigurationOptions(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioDecoderConfigurationOptions(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurationOptions*);
    soap_POST_recv__trt__GetAudioDecoderConfigurationOptions(struct soap*, struct _trt__GetAudioDecoderConfigurationOptions*);
    @endcode

  - <trt:GetAudioDecoderConfigurationOptionsResponse> @ref _trt__GetAudioDecoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _trt__GetAudioDecoderConfigurationOptionsResponse*);
    soap_POST_recv__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationOptionsResponse*);
    @endcode

  - <trt:GetGuaranteedNumberOfVideoEncoderInstances> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstances
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, struct _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, struct _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, const char *URL, struct _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, const char *URL, struct _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, const char *URL, struct _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    soap_POST_recv__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, struct _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    @endcode

  - <trt:GetGuaranteedNumberOfVideoEncoderInstancesResponse> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, const char *URL, struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, const char *URL, struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, const char *URL, struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    soap_POST_recv__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    @endcode

  - <trt:GetStreamUri> @ref _trt__GetStreamUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetStreamUri(struct soap*, struct _trt__GetStreamUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetStreamUri(struct soap*, struct _trt__GetStreamUri*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetStreamUri(struct soap*, const char *URL, struct _trt__GetStreamUri*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetStreamUri(struct soap*, const char *URL, struct _trt__GetStreamUri*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetStreamUri(struct soap*, const char *URL, struct _trt__GetStreamUri*);
    soap_POST_recv__trt__GetStreamUri(struct soap*, struct _trt__GetStreamUri*);
    @endcode

  - <trt:GetStreamUriResponse> @ref _trt__GetStreamUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetStreamUriResponse(struct soap*, struct _trt__GetStreamUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetStreamUriResponse(struct soap*, struct _trt__GetStreamUriResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetStreamUriResponse(struct soap*, const char *URL, struct _trt__GetStreamUriResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetStreamUriResponse(struct soap*, const char *URL, struct _trt__GetStreamUriResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetStreamUriResponse(struct soap*, const char *URL, struct _trt__GetStreamUriResponse*);
    soap_POST_recv__trt__GetStreamUriResponse(struct soap*, struct _trt__GetStreamUriResponse*);
    @endcode

  - <trt:StartMulticastStreaming> @ref _trt__StartMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StartMulticastStreaming(struct soap*, struct _trt__StartMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StartMulticastStreaming(struct soap*, struct _trt__StartMulticastStreaming*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__StartMulticastStreaming(struct soap*, const char *URL, struct _trt__StartMulticastStreaming*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__StartMulticastStreaming(struct soap*, const char *URL, struct _trt__StartMulticastStreaming*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__StartMulticastStreaming(struct soap*, const char *URL, struct _trt__StartMulticastStreaming*);
    soap_POST_recv__trt__StartMulticastStreaming(struct soap*, struct _trt__StartMulticastStreaming*);
    @endcode

  - <trt:StartMulticastStreamingResponse> @ref _trt__StartMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StartMulticastStreamingResponse(struct soap*, struct _trt__StartMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StartMulticastStreamingResponse(struct soap*, struct _trt__StartMulticastStreamingResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__StartMulticastStreamingResponse(struct soap*, const char *URL, struct _trt__StartMulticastStreamingResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__StartMulticastStreamingResponse(struct soap*, const char *URL, struct _trt__StartMulticastStreamingResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__StartMulticastStreamingResponse(struct soap*, const char *URL, struct _trt__StartMulticastStreamingResponse*);
    soap_POST_recv__trt__StartMulticastStreamingResponse(struct soap*, struct _trt__StartMulticastStreamingResponse*);
    @endcode

  - <trt:StopMulticastStreaming> @ref _trt__StopMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StopMulticastStreaming(struct soap*, struct _trt__StopMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StopMulticastStreaming(struct soap*, struct _trt__StopMulticastStreaming*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__StopMulticastStreaming(struct soap*, const char *URL, struct _trt__StopMulticastStreaming*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__StopMulticastStreaming(struct soap*, const char *URL, struct _trt__StopMulticastStreaming*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__StopMulticastStreaming(struct soap*, const char *URL, struct _trt__StopMulticastStreaming*);
    soap_POST_recv__trt__StopMulticastStreaming(struct soap*, struct _trt__StopMulticastStreaming*);
    @endcode

  - <trt:StopMulticastStreamingResponse> @ref _trt__StopMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StopMulticastStreamingResponse(struct soap*, struct _trt__StopMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StopMulticastStreamingResponse(struct soap*, struct _trt__StopMulticastStreamingResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__StopMulticastStreamingResponse(struct soap*, const char *URL, struct _trt__StopMulticastStreamingResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__StopMulticastStreamingResponse(struct soap*, const char *URL, struct _trt__StopMulticastStreamingResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__StopMulticastStreamingResponse(struct soap*, const char *URL, struct _trt__StopMulticastStreamingResponse*);
    soap_POST_recv__trt__StopMulticastStreamingResponse(struct soap*, struct _trt__StopMulticastStreamingResponse*);
    @endcode

  - <trt:SetSynchronizationPoint> @ref _trt__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetSynchronizationPoint(struct soap*, struct _trt__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetSynchronizationPoint(struct soap*, struct _trt__SetSynchronizationPoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetSynchronizationPoint(struct soap*, const char *URL, struct _trt__SetSynchronizationPoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetSynchronizationPoint(struct soap*, const char *URL, struct _trt__SetSynchronizationPoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetSynchronizationPoint(struct soap*, const char *URL, struct _trt__SetSynchronizationPoint*);
    soap_POST_recv__trt__SetSynchronizationPoint(struct soap*, struct _trt__SetSynchronizationPoint*);
    @endcode

  - <trt:SetSynchronizationPointResponse> @ref _trt__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetSynchronizationPointResponse(struct soap*, struct _trt__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetSynchronizationPointResponse(struct soap*, struct _trt__SetSynchronizationPointResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetSynchronizationPointResponse(struct soap*, const char *URL, struct _trt__SetSynchronizationPointResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetSynchronizationPointResponse(struct soap*, const char *URL, struct _trt__SetSynchronizationPointResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetSynchronizationPointResponse(struct soap*, const char *URL, struct _trt__SetSynchronizationPointResponse*);
    soap_POST_recv__trt__SetSynchronizationPointResponse(struct soap*, struct _trt__SetSynchronizationPointResponse*);
    @endcode

  - <trt:GetSnapshotUri> @ref _trt__GetSnapshotUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetSnapshotUri(struct soap*, const char *URL, struct _trt__GetSnapshotUri*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetSnapshotUri(struct soap*, const char *URL, struct _trt__GetSnapshotUri*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetSnapshotUri(struct soap*, const char *URL, struct _trt__GetSnapshotUri*);
    soap_POST_recv__trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri*);
    @endcode

  - <trt:GetSnapshotUriResponse> @ref _trt__GetSnapshotUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetSnapshotUriResponse(struct soap*, const char *URL, struct _trt__GetSnapshotUriResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetSnapshotUriResponse(struct soap*, const char *URL, struct _trt__GetSnapshotUriResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetSnapshotUriResponse(struct soap*, const char *URL, struct _trt__GetSnapshotUriResponse*);
    soap_POST_recv__trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse*);
    @endcode

  - <trt:GetVideoSourceModes> @ref _trt__GetVideoSourceModes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceModes(struct soap*, struct _trt__GetVideoSourceModes*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceModes(struct soap*, struct _trt__GetVideoSourceModes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceModes(struct soap*, const char *URL, struct _trt__GetVideoSourceModes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceModes(struct soap*, const char *URL, struct _trt__GetVideoSourceModes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceModes(struct soap*, const char *URL, struct _trt__GetVideoSourceModes*);
    soap_POST_recv__trt__GetVideoSourceModes(struct soap*, struct _trt__GetVideoSourceModes*);
    @endcode

  - <trt:GetVideoSourceModesResponse> @ref _trt__GetVideoSourceModesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceModesResponse(struct soap*, struct _trt__GetVideoSourceModesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceModesResponse(struct soap*, struct _trt__GetVideoSourceModesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceModesResponse(struct soap*, const char *URL, struct _trt__GetVideoSourceModesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceModesResponse(struct soap*, const char *URL, struct _trt__GetVideoSourceModesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceModesResponse(struct soap*, const char *URL, struct _trt__GetVideoSourceModesResponse*);
    soap_POST_recv__trt__GetVideoSourceModesResponse(struct soap*, struct _trt__GetVideoSourceModesResponse*);
    @endcode

  - <trt:SetVideoSourceMode> @ref _trt__SetVideoSourceMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceMode(struct soap*, struct _trt__SetVideoSourceMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceMode(struct soap*, struct _trt__SetVideoSourceMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoSourceMode(struct soap*, const char *URL, struct _trt__SetVideoSourceMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoSourceMode(struct soap*, const char *URL, struct _trt__SetVideoSourceMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoSourceMode(struct soap*, const char *URL, struct _trt__SetVideoSourceMode*);
    soap_POST_recv__trt__SetVideoSourceMode(struct soap*, struct _trt__SetVideoSourceMode*);
    @endcode

  - <trt:SetVideoSourceModeResponse> @ref _trt__SetVideoSourceModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceModeResponse(struct soap*, struct _trt__SetVideoSourceModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceModeResponse(struct soap*, struct _trt__SetVideoSourceModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoSourceModeResponse(struct soap*, const char *URL, struct _trt__SetVideoSourceModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoSourceModeResponse(struct soap*, const char *URL, struct _trt__SetVideoSourceModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoSourceModeResponse(struct soap*, const char *URL, struct _trt__SetVideoSourceModeResponse*);
    soap_POST_recv__trt__SetVideoSourceModeResponse(struct soap*, struct _trt__SetVideoSourceModeResponse*);
    @endcode

  - <trt:GetOSDs> @ref _trt__GetOSDs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDs(struct soap*, struct _trt__GetOSDs*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDs(struct soap*, struct _trt__GetOSDs*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetOSDs(struct soap*, const char *URL, struct _trt__GetOSDs*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetOSDs(struct soap*, const char *URL, struct _trt__GetOSDs*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetOSDs(struct soap*, const char *URL, struct _trt__GetOSDs*);
    soap_POST_recv__trt__GetOSDs(struct soap*, struct _trt__GetOSDs*);
    @endcode

  - <trt:GetOSDsResponse> @ref _trt__GetOSDsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDsResponse(struct soap*, struct _trt__GetOSDsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDsResponse(struct soap*, struct _trt__GetOSDsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetOSDsResponse(struct soap*, const char *URL, struct _trt__GetOSDsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetOSDsResponse(struct soap*, const char *URL, struct _trt__GetOSDsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetOSDsResponse(struct soap*, const char *URL, struct _trt__GetOSDsResponse*);
    soap_POST_recv__trt__GetOSDsResponse(struct soap*, struct _trt__GetOSDsResponse*);
    @endcode

  - <trt:GetOSD> @ref _trt__GetOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSD(struct soap*, struct _trt__GetOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSD(struct soap*, struct _trt__GetOSD*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetOSD(struct soap*, const char *URL, struct _trt__GetOSD*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetOSD(struct soap*, const char *URL, struct _trt__GetOSD*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetOSD(struct soap*, const char *URL, struct _trt__GetOSD*);
    soap_POST_recv__trt__GetOSD(struct soap*, struct _trt__GetOSD*);
    @endcode

  - <trt:GetOSDResponse> @ref _trt__GetOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDResponse(struct soap*, struct _trt__GetOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDResponse(struct soap*, struct _trt__GetOSDResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetOSDResponse(struct soap*, const char *URL, struct _trt__GetOSDResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetOSDResponse(struct soap*, const char *URL, struct _trt__GetOSDResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetOSDResponse(struct soap*, const char *URL, struct _trt__GetOSDResponse*);
    soap_POST_recv__trt__GetOSDResponse(struct soap*, struct _trt__GetOSDResponse*);
    @endcode

  - <trt:SetOSD> @ref _trt__SetOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetOSD(struct soap*, struct _trt__SetOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetOSD(struct soap*, struct _trt__SetOSD*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetOSD(struct soap*, const char *URL, struct _trt__SetOSD*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetOSD(struct soap*, const char *URL, struct _trt__SetOSD*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetOSD(struct soap*, const char *URL, struct _trt__SetOSD*);
    soap_POST_recv__trt__SetOSD(struct soap*, struct _trt__SetOSD*);
    @endcode

  - <trt:SetOSDResponse> @ref _trt__SetOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetOSDResponse(struct soap*, struct _trt__SetOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetOSDResponse(struct soap*, struct _trt__SetOSDResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetOSDResponse(struct soap*, const char *URL, struct _trt__SetOSDResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetOSDResponse(struct soap*, const char *URL, struct _trt__SetOSDResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetOSDResponse(struct soap*, const char *URL, struct _trt__SetOSDResponse*);
    soap_POST_recv__trt__SetOSDResponse(struct soap*, struct _trt__SetOSDResponse*);
    @endcode

  - <trt:GetOSDOptions> @ref _trt__GetOSDOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDOptions(struct soap*, struct _trt__GetOSDOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDOptions(struct soap*, struct _trt__GetOSDOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetOSDOptions(struct soap*, const char *URL, struct _trt__GetOSDOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetOSDOptions(struct soap*, const char *URL, struct _trt__GetOSDOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetOSDOptions(struct soap*, const char *URL, struct _trt__GetOSDOptions*);
    soap_POST_recv__trt__GetOSDOptions(struct soap*, struct _trt__GetOSDOptions*);
    @endcode

  - <trt:GetOSDOptionsResponse> @ref _trt__GetOSDOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDOptionsResponse(struct soap*, struct _trt__GetOSDOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDOptionsResponse(struct soap*, struct _trt__GetOSDOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetOSDOptionsResponse(struct soap*, const char *URL, struct _trt__GetOSDOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetOSDOptionsResponse(struct soap*, const char *URL, struct _trt__GetOSDOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetOSDOptionsResponse(struct soap*, const char *URL, struct _trt__GetOSDOptionsResponse*);
    soap_POST_recv__trt__GetOSDOptionsResponse(struct soap*, struct _trt__GetOSDOptionsResponse*);
    @endcode

  - <trt:CreateOSD> @ref _trt__CreateOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateOSD(struct soap*, struct _trt__CreateOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateOSD(struct soap*, struct _trt__CreateOSD*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__CreateOSD(struct soap*, const char *URL, struct _trt__CreateOSD*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__CreateOSD(struct soap*, const char *URL, struct _trt__CreateOSD*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__CreateOSD(struct soap*, const char *URL, struct _trt__CreateOSD*);
    soap_POST_recv__trt__CreateOSD(struct soap*, struct _trt__CreateOSD*);
    @endcode

  - <trt:CreateOSDResponse> @ref _trt__CreateOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateOSDResponse(struct soap*, struct _trt__CreateOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateOSDResponse(struct soap*, struct _trt__CreateOSDResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__CreateOSDResponse(struct soap*, const char *URL, struct _trt__CreateOSDResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__CreateOSDResponse(struct soap*, const char *URL, struct _trt__CreateOSDResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__CreateOSDResponse(struct soap*, const char *URL, struct _trt__CreateOSDResponse*);
    soap_POST_recv__trt__CreateOSDResponse(struct soap*, struct _trt__CreateOSDResponse*);
    @endcode

  - <trt:DeleteOSD> @ref _trt__DeleteOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteOSD(struct soap*, struct _trt__DeleteOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteOSD(struct soap*, struct _trt__DeleteOSD*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__DeleteOSD(struct soap*, const char *URL, struct _trt__DeleteOSD*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__DeleteOSD(struct soap*, const char *URL, struct _trt__DeleteOSD*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__DeleteOSD(struct soap*, const char *URL, struct _trt__DeleteOSD*);
    soap_POST_recv__trt__DeleteOSD(struct soap*, struct _trt__DeleteOSD*);
    @endcode

  - <trt:DeleteOSDResponse> @ref _trt__DeleteOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteOSDResponse(struct soap*, struct _trt__DeleteOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteOSDResponse(struct soap*, struct _trt__DeleteOSDResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__DeleteOSDResponse(struct soap*, const char *URL, struct _trt__DeleteOSDResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__DeleteOSDResponse(struct soap*, const char *URL, struct _trt__DeleteOSDResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__DeleteOSDResponse(struct soap*, const char *URL, struct _trt__DeleteOSDResponse*);
    soap_POST_recv__trt__DeleteOSDResponse(struct soap*, struct _trt__DeleteOSDResponse*);
    @endcode

*/

/**

@section tev Top-level root elements of schema "http://www.onvif.org/ver10/events/wsdl"

  - <tev:GetServiceCapabilities> @ref _tev__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetServiceCapabilities(struct soap*, struct _tev__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetServiceCapabilities(struct soap*, struct _tev__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetServiceCapabilities(struct soap*, const char *URL, struct _tev__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetServiceCapabilities(struct soap*, const char *URL, struct _tev__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetServiceCapabilities(struct soap*, const char *URL, struct _tev__GetServiceCapabilities*);
    soap_POST_recv__tev__GetServiceCapabilities(struct soap*, struct _tev__GetServiceCapabilities*);
    @endcode

  - <tev:GetServiceCapabilitiesResponse> @ref _tev__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetServiceCapabilitiesResponse(struct soap*, struct _tev__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetServiceCapabilitiesResponse(struct soap*, struct _tev__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tev__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tev__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tev__GetServiceCapabilitiesResponse*);
    soap_POST_recv__tev__GetServiceCapabilitiesResponse(struct soap*, struct _tev__GetServiceCapabilitiesResponse*);
    @endcode

  - <tev:Capabilities> (use wsdl2h option -g to auto-generate type _tev__Capabilities)

  - <tev:CreatePullPointSubscription> @ref _tev__CreatePullPointSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__CreatePullPointSubscription(struct soap*, struct _tev__CreatePullPointSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__CreatePullPointSubscription(struct soap*, struct _tev__CreatePullPointSubscription*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__CreatePullPointSubscription(struct soap*, const char *URL, struct _tev__CreatePullPointSubscription*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__CreatePullPointSubscription(struct soap*, const char *URL, struct _tev__CreatePullPointSubscription*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__CreatePullPointSubscription(struct soap*, const char *URL, struct _tev__CreatePullPointSubscription*);
    soap_POST_recv__tev__CreatePullPointSubscription(struct soap*, struct _tev__CreatePullPointSubscription*);
    @endcode

  - <tev:CreatePullPointSubscriptionResponse> @ref _tev__CreatePullPointSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__CreatePullPointSubscriptionResponse(struct soap*, struct _tev__CreatePullPointSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__CreatePullPointSubscriptionResponse(struct soap*, struct _tev__CreatePullPointSubscriptionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__CreatePullPointSubscriptionResponse(struct soap*, const char *URL, struct _tev__CreatePullPointSubscriptionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__CreatePullPointSubscriptionResponse(struct soap*, const char *URL, struct _tev__CreatePullPointSubscriptionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__CreatePullPointSubscriptionResponse(struct soap*, const char *URL, struct _tev__CreatePullPointSubscriptionResponse*);
    soap_POST_recv__tev__CreatePullPointSubscriptionResponse(struct soap*, struct _tev__CreatePullPointSubscriptionResponse*);
    @endcode

  - <tev:PullMessages> @ref _tev__PullMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessages(struct soap*, struct _tev__PullMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessages(struct soap*, struct _tev__PullMessages*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__PullMessages(struct soap*, const char *URL, struct _tev__PullMessages*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__PullMessages(struct soap*, const char *URL, struct _tev__PullMessages*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__PullMessages(struct soap*, const char *URL, struct _tev__PullMessages*);
    soap_POST_recv__tev__PullMessages(struct soap*, struct _tev__PullMessages*);
    @endcode

  - <tev:PullMessagesResponse> @ref _tev__PullMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessagesResponse(struct soap*, struct _tev__PullMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessagesResponse(struct soap*, struct _tev__PullMessagesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__PullMessagesResponse(struct soap*, const char *URL, struct _tev__PullMessagesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__PullMessagesResponse(struct soap*, const char *URL, struct _tev__PullMessagesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__PullMessagesResponse(struct soap*, const char *URL, struct _tev__PullMessagesResponse*);
    soap_POST_recv__tev__PullMessagesResponse(struct soap*, struct _tev__PullMessagesResponse*);
    @endcode

  - <tev:PullMessagesFaultResponse> @ref _tev__PullMessagesFaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessagesFaultResponse(struct soap*, struct _tev__PullMessagesFaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessagesFaultResponse(struct soap*, struct _tev__PullMessagesFaultResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__PullMessagesFaultResponse(struct soap*, const char *URL, struct _tev__PullMessagesFaultResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__PullMessagesFaultResponse(struct soap*, const char *URL, struct _tev__PullMessagesFaultResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__PullMessagesFaultResponse(struct soap*, const char *URL, struct _tev__PullMessagesFaultResponse*);
    soap_POST_recv__tev__PullMessagesFaultResponse(struct soap*, struct _tev__PullMessagesFaultResponse*);
    @endcode

  - <tev:Seek> @ref _tev__Seek
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__Seek(struct soap*, struct _tev__Seek*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__Seek(struct soap*, struct _tev__Seek*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__Seek(struct soap*, const char *URL, struct _tev__Seek*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__Seek(struct soap*, const char *URL, struct _tev__Seek*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__Seek(struct soap*, const char *URL, struct _tev__Seek*);
    soap_POST_recv__tev__Seek(struct soap*, struct _tev__Seek*);
    @endcode

  - <tev:SeekResponse> @ref _tev__SeekResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SeekResponse(struct soap*, struct _tev__SeekResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SeekResponse(struct soap*, struct _tev__SeekResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__SeekResponse(struct soap*, const char *URL, struct _tev__SeekResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__SeekResponse(struct soap*, const char *URL, struct _tev__SeekResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__SeekResponse(struct soap*, const char *URL, struct _tev__SeekResponse*);
    soap_POST_recv__tev__SeekResponse(struct soap*, struct _tev__SeekResponse*);
    @endcode

  - <tev:SetSynchronizationPoint> @ref _tev__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SetSynchronizationPoint(struct soap*, struct _tev__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SetSynchronizationPoint(struct soap*, struct _tev__SetSynchronizationPoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__SetSynchronizationPoint(struct soap*, const char *URL, struct _tev__SetSynchronizationPoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__SetSynchronizationPoint(struct soap*, const char *URL, struct _tev__SetSynchronizationPoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__SetSynchronizationPoint(struct soap*, const char *URL, struct _tev__SetSynchronizationPoint*);
    soap_POST_recv__tev__SetSynchronizationPoint(struct soap*, struct _tev__SetSynchronizationPoint*);
    @endcode

  - <tev:SetSynchronizationPointResponse> @ref _tev__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SetSynchronizationPointResponse(struct soap*, struct _tev__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SetSynchronizationPointResponse(struct soap*, struct _tev__SetSynchronizationPointResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__SetSynchronizationPointResponse(struct soap*, const char *URL, struct _tev__SetSynchronizationPointResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__SetSynchronizationPointResponse(struct soap*, const char *URL, struct _tev__SetSynchronizationPointResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__SetSynchronizationPointResponse(struct soap*, const char *URL, struct _tev__SetSynchronizationPointResponse*);
    soap_POST_recv__tev__SetSynchronizationPointResponse(struct soap*, struct _tev__SetSynchronizationPointResponse*);
    @endcode

  - <tev:GetEventProperties> @ref _tev__GetEventProperties
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventProperties(struct soap*, struct _tev__GetEventProperties*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventProperties(struct soap*, struct _tev__GetEventProperties*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetEventProperties(struct soap*, const char *URL, struct _tev__GetEventProperties*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetEventProperties(struct soap*, const char *URL, struct _tev__GetEventProperties*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetEventProperties(struct soap*, const char *URL, struct _tev__GetEventProperties*);
    soap_POST_recv__tev__GetEventProperties(struct soap*, struct _tev__GetEventProperties*);
    @endcode

  - <tev:GetEventPropertiesResponse> @ref _tev__GetEventPropertiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventPropertiesResponse(struct soap*, struct _tev__GetEventPropertiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventPropertiesResponse(struct soap*, struct _tev__GetEventPropertiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetEventPropertiesResponse(struct soap*, const char *URL, struct _tev__GetEventPropertiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetEventPropertiesResponse(struct soap*, const char *URL, struct _tev__GetEventPropertiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetEventPropertiesResponse(struct soap*, const char *URL, struct _tev__GetEventPropertiesResponse*);
    soap_POST_recv__tev__GetEventPropertiesResponse(struct soap*, struct _tev__GetEventPropertiesResponse*);
    @endcode

  - <tev:ChangedOnly> @ref _tev__ChangedOnly
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__ChangedOnly(struct soap*, _XML);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__ChangedOnly(struct soap*, _XML);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__ChangedOnly(struct soap*, const char *URL, _XML);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__ChangedOnly(struct soap*, const char *URL, _XML);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__ChangedOnly(struct soap*, const char *URL, _XML);
    soap_POST_recv__tev__ChangedOnly(struct soap*, _XML);
    @endcode

*/

/**

@section  Top-level root elements of schema ""

*/

/**

@section wsrfrw Top-level root elements of schema "http://docs.oasis-open.org/wsrf/rw-2"

*/

/**

@section wsrfr Top-level root elements of schema "http://docs.oasis-open.org/wsrf/r-2"

  - <wsrfr:ResourceUnknownFault> (use wsdl2h option -g to auto-generate type _wsrfr__ResourceUnknownFault)

  - <wsrfr:ResourceUnavailableFault> (use wsdl2h option -g to auto-generate type _wsrfr__ResourceUnavailableFault)

*/

/**

@section timg Top-level root elements of schema "http://www.onvif.org/ver20/imaging/wsdl"

  - <timg:GetServiceCapabilities> @ref _timg__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetServiceCapabilities(struct soap*, struct _timg__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetServiceCapabilities(struct soap*, struct _timg__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__GetServiceCapabilities(struct soap*, const char *URL, struct _timg__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__GetServiceCapabilities(struct soap*, const char *URL, struct _timg__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__GetServiceCapabilities(struct soap*, const char *URL, struct _timg__GetServiceCapabilities*);
    soap_POST_recv__timg__GetServiceCapabilities(struct soap*, struct _timg__GetServiceCapabilities*);
    @endcode

  - <timg:GetServiceCapabilitiesResponse> @ref _timg__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetServiceCapabilitiesResponse(struct soap*, struct _timg__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetServiceCapabilitiesResponse(struct soap*, struct _timg__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _timg__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _timg__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _timg__GetServiceCapabilitiesResponse*);
    soap_POST_recv__timg__GetServiceCapabilitiesResponse(struct soap*, struct _timg__GetServiceCapabilitiesResponse*);
    @endcode

  - <timg:Capabilities> (use wsdl2h option -g to auto-generate type _timg__Capabilities)

  - <timg:GetImagingSettings> @ref _timg__GetImagingSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetImagingSettings(struct soap*, struct _timg__GetImagingSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetImagingSettings(struct soap*, struct _timg__GetImagingSettings*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__GetImagingSettings(struct soap*, const char *URL, struct _timg__GetImagingSettings*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__GetImagingSettings(struct soap*, const char *URL, struct _timg__GetImagingSettings*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__GetImagingSettings(struct soap*, const char *URL, struct _timg__GetImagingSettings*);
    soap_POST_recv__timg__GetImagingSettings(struct soap*, struct _timg__GetImagingSettings*);
    @endcode

  - <timg:GetImagingSettingsResponse> @ref _timg__GetImagingSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetImagingSettingsResponse(struct soap*, struct _timg__GetImagingSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetImagingSettingsResponse(struct soap*, struct _timg__GetImagingSettingsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__GetImagingSettingsResponse(struct soap*, const char *URL, struct _timg__GetImagingSettingsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__GetImagingSettingsResponse(struct soap*, const char *URL, struct _timg__GetImagingSettingsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__GetImagingSettingsResponse(struct soap*, const char *URL, struct _timg__GetImagingSettingsResponse*);
    soap_POST_recv__timg__GetImagingSettingsResponse(struct soap*, struct _timg__GetImagingSettingsResponse*);
    @endcode

  - <timg:SetImagingSettings> @ref _timg__SetImagingSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__SetImagingSettings(struct soap*, struct _timg__SetImagingSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__SetImagingSettings(struct soap*, struct _timg__SetImagingSettings*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__SetImagingSettings(struct soap*, const char *URL, struct _timg__SetImagingSettings*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__SetImagingSettings(struct soap*, const char *URL, struct _timg__SetImagingSettings*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__SetImagingSettings(struct soap*, const char *URL, struct _timg__SetImagingSettings*);
    soap_POST_recv__timg__SetImagingSettings(struct soap*, struct _timg__SetImagingSettings*);
    @endcode

  - <timg:SetImagingSettingsResponse> @ref _timg__SetImagingSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__SetImagingSettingsResponse(struct soap*, struct _timg__SetImagingSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__SetImagingSettingsResponse(struct soap*, struct _timg__SetImagingSettingsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__SetImagingSettingsResponse(struct soap*, const char *URL, struct _timg__SetImagingSettingsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__SetImagingSettingsResponse(struct soap*, const char *URL, struct _timg__SetImagingSettingsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__SetImagingSettingsResponse(struct soap*, const char *URL, struct _timg__SetImagingSettingsResponse*);
    soap_POST_recv__timg__SetImagingSettingsResponse(struct soap*, struct _timg__SetImagingSettingsResponse*);
    @endcode

  - <timg:GetOptions> @ref _timg__GetOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetOptions(struct soap*, struct _timg__GetOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetOptions(struct soap*, struct _timg__GetOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__GetOptions(struct soap*, const char *URL, struct _timg__GetOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__GetOptions(struct soap*, const char *URL, struct _timg__GetOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__GetOptions(struct soap*, const char *URL, struct _timg__GetOptions*);
    soap_POST_recv__timg__GetOptions(struct soap*, struct _timg__GetOptions*);
    @endcode

  - <timg:GetOptionsResponse> @ref _timg__GetOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetOptionsResponse(struct soap*, struct _timg__GetOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetOptionsResponse(struct soap*, struct _timg__GetOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__GetOptionsResponse(struct soap*, const char *URL, struct _timg__GetOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__GetOptionsResponse(struct soap*, const char *URL, struct _timg__GetOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__GetOptionsResponse(struct soap*, const char *URL, struct _timg__GetOptionsResponse*);
    soap_POST_recv__timg__GetOptionsResponse(struct soap*, struct _timg__GetOptionsResponse*);
    @endcode

  - <timg:Move> @ref _timg__Move
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__Move(struct soap*, struct _timg__Move*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__Move(struct soap*, struct _timg__Move*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__Move(struct soap*, const char *URL, struct _timg__Move*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__Move(struct soap*, const char *URL, struct _timg__Move*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__Move(struct soap*, const char *URL, struct _timg__Move*);
    soap_POST_recv__timg__Move(struct soap*, struct _timg__Move*);
    @endcode

  - <timg:MoveResponse> @ref _timg__MoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__MoveResponse(struct soap*, struct _timg__MoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__MoveResponse(struct soap*, struct _timg__MoveResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__MoveResponse(struct soap*, const char *URL, struct _timg__MoveResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__MoveResponse(struct soap*, const char *URL, struct _timg__MoveResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__MoveResponse(struct soap*, const char *URL, struct _timg__MoveResponse*);
    soap_POST_recv__timg__MoveResponse(struct soap*, struct _timg__MoveResponse*);
    @endcode

  - <timg:GetMoveOptions> @ref _timg__GetMoveOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetMoveOptions(struct soap*, struct _timg__GetMoveOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetMoveOptions(struct soap*, struct _timg__GetMoveOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__GetMoveOptions(struct soap*, const char *URL, struct _timg__GetMoveOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__GetMoveOptions(struct soap*, const char *URL, struct _timg__GetMoveOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__GetMoveOptions(struct soap*, const char *URL, struct _timg__GetMoveOptions*);
    soap_POST_recv__timg__GetMoveOptions(struct soap*, struct _timg__GetMoveOptions*);
    @endcode

  - <timg:GetMoveOptionsResponse> @ref _timg__GetMoveOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetMoveOptionsResponse(struct soap*, struct _timg__GetMoveOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetMoveOptionsResponse(struct soap*, struct _timg__GetMoveOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__GetMoveOptionsResponse(struct soap*, const char *URL, struct _timg__GetMoveOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__GetMoveOptionsResponse(struct soap*, const char *URL, struct _timg__GetMoveOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__GetMoveOptionsResponse(struct soap*, const char *URL, struct _timg__GetMoveOptionsResponse*);
    soap_POST_recv__timg__GetMoveOptionsResponse(struct soap*, struct _timg__GetMoveOptionsResponse*);
    @endcode

  - <timg:Stop> @ref _timg__Stop
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__Stop(struct soap*, struct _timg__Stop*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__Stop(struct soap*, struct _timg__Stop*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__Stop(struct soap*, const char *URL, struct _timg__Stop*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__Stop(struct soap*, const char *URL, struct _timg__Stop*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__Stop(struct soap*, const char *URL, struct _timg__Stop*);
    soap_POST_recv__timg__Stop(struct soap*, struct _timg__Stop*);
    @endcode

  - <timg:StopResponse> @ref _timg__StopResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__StopResponse(struct soap*, struct _timg__StopResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__StopResponse(struct soap*, struct _timg__StopResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__StopResponse(struct soap*, const char *URL, struct _timg__StopResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__StopResponse(struct soap*, const char *URL, struct _timg__StopResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__StopResponse(struct soap*, const char *URL, struct _timg__StopResponse*);
    soap_POST_recv__timg__StopResponse(struct soap*, struct _timg__StopResponse*);
    @endcode

  - <timg:GetStatus> @ref _timg__GetStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetStatus(struct soap*, struct _timg__GetStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetStatus(struct soap*, struct _timg__GetStatus*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__GetStatus(struct soap*, const char *URL, struct _timg__GetStatus*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__GetStatus(struct soap*, const char *URL, struct _timg__GetStatus*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__GetStatus(struct soap*, const char *URL, struct _timg__GetStatus*);
    soap_POST_recv__timg__GetStatus(struct soap*, struct _timg__GetStatus*);
    @endcode

  - <timg:GetStatusResponse> @ref _timg__GetStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetStatusResponse(struct soap*, struct _timg__GetStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetStatusResponse(struct soap*, struct _timg__GetStatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__GetStatusResponse(struct soap*, const char *URL, struct _timg__GetStatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__GetStatusResponse(struct soap*, const char *URL, struct _timg__GetStatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__GetStatusResponse(struct soap*, const char *URL, struct _timg__GetStatusResponse*);
    soap_POST_recv__timg__GetStatusResponse(struct soap*, struct _timg__GetStatusResponse*);
    @endcode

  - <timg:GetPresets> @ref _timg__GetPresets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetPresets(struct soap*, struct _timg__GetPresets*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetPresets(struct soap*, struct _timg__GetPresets*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__GetPresets(struct soap*, const char *URL, struct _timg__GetPresets*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__GetPresets(struct soap*, const char *URL, struct _timg__GetPresets*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__GetPresets(struct soap*, const char *URL, struct _timg__GetPresets*);
    soap_POST_recv__timg__GetPresets(struct soap*, struct _timg__GetPresets*);
    @endcode

  - <timg:GetPresetsResponse> @ref _timg__GetPresetsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetPresetsResponse(struct soap*, struct _timg__GetPresetsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetPresetsResponse(struct soap*, struct _timg__GetPresetsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__GetPresetsResponse(struct soap*, const char *URL, struct _timg__GetPresetsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__GetPresetsResponse(struct soap*, const char *URL, struct _timg__GetPresetsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__GetPresetsResponse(struct soap*, const char *URL, struct _timg__GetPresetsResponse*);
    soap_POST_recv__timg__GetPresetsResponse(struct soap*, struct _timg__GetPresetsResponse*);
    @endcode

  - <timg:GetCurrentPreset> @ref _timg__GetCurrentPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetCurrentPreset(struct soap*, struct _timg__GetCurrentPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetCurrentPreset(struct soap*, struct _timg__GetCurrentPreset*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__GetCurrentPreset(struct soap*, const char *URL, struct _timg__GetCurrentPreset*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__GetCurrentPreset(struct soap*, const char *URL, struct _timg__GetCurrentPreset*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__GetCurrentPreset(struct soap*, const char *URL, struct _timg__GetCurrentPreset*);
    soap_POST_recv__timg__GetCurrentPreset(struct soap*, struct _timg__GetCurrentPreset*);
    @endcode

  - <timg:GetCurrentPresetResponse> @ref _timg__GetCurrentPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetCurrentPresetResponse(struct soap*, struct _timg__GetCurrentPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetCurrentPresetResponse(struct soap*, struct _timg__GetCurrentPresetResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__GetCurrentPresetResponse(struct soap*, const char *URL, struct _timg__GetCurrentPresetResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__GetCurrentPresetResponse(struct soap*, const char *URL, struct _timg__GetCurrentPresetResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__GetCurrentPresetResponse(struct soap*, const char *URL, struct _timg__GetCurrentPresetResponse*);
    soap_POST_recv__timg__GetCurrentPresetResponse(struct soap*, struct _timg__GetCurrentPresetResponse*);
    @endcode

  - <timg:SetCurrentPreset> @ref _timg__SetCurrentPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__SetCurrentPreset(struct soap*, struct _timg__SetCurrentPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__SetCurrentPreset(struct soap*, struct _timg__SetCurrentPreset*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__SetCurrentPreset(struct soap*, const char *URL, struct _timg__SetCurrentPreset*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__SetCurrentPreset(struct soap*, const char *URL, struct _timg__SetCurrentPreset*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__SetCurrentPreset(struct soap*, const char *URL, struct _timg__SetCurrentPreset*);
    soap_POST_recv__timg__SetCurrentPreset(struct soap*, struct _timg__SetCurrentPreset*);
    @endcode

  - <timg:SetCurrentPresetResponse> @ref _timg__SetCurrentPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__SetCurrentPresetResponse(struct soap*, struct _timg__SetCurrentPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__SetCurrentPresetResponse(struct soap*, struct _timg__SetCurrentPresetResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__timg__SetCurrentPresetResponse(struct soap*, const char *URL, struct _timg__SetCurrentPresetResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__timg__SetCurrentPresetResponse(struct soap*, const char *URL, struct _timg__SetCurrentPresetResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__timg__SetCurrentPresetResponse(struct soap*, const char *URL, struct _timg__SetCurrentPresetResponse*);
    soap_POST_recv__timg__SetCurrentPresetResponse(struct soap*, struct _timg__SetCurrentPresetResponse*);
    @endcode

*/

/**

@section ns1 Top-level root elements of schema "http://www.onvif.org/ver20/media/wsdl"

  - <ns1:GetServiceCapabilities> @ref _ns1__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetServiceCapabilities(struct soap*, struct _ns1__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetServiceCapabilities(struct soap*, struct _ns1__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetServiceCapabilities(struct soap*, const char *URL, struct _ns1__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetServiceCapabilities(struct soap*, const char *URL, struct _ns1__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetServiceCapabilities(struct soap*, const char *URL, struct _ns1__GetServiceCapabilities*);
    soap_POST_recv__ns1__GetServiceCapabilities(struct soap*, struct _ns1__GetServiceCapabilities*);
    @endcode

  - <ns1:GetServiceCapabilitiesResponse> @ref _ns1__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetServiceCapabilitiesResponse(struct soap*, struct _ns1__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetServiceCapabilitiesResponse(struct soap*, struct _ns1__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _ns1__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _ns1__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _ns1__GetServiceCapabilitiesResponse*);
    soap_POST_recv__ns1__GetServiceCapabilitiesResponse(struct soap*, struct _ns1__GetServiceCapabilitiesResponse*);
    @endcode

  - <ns1:Capabilities> (use wsdl2h option -g to auto-generate type _ns1__Capabilities)

  - <ns1:ConfigurationEnumeration> (use wsdl2h option -g to auto-generate type _ns1__ConfigurationEnumeration)

  - <ns1:CreateProfile> @ref _ns1__CreateProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CreateProfile(struct soap*, struct _ns1__CreateProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CreateProfile(struct soap*, struct _ns1__CreateProfile*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__CreateProfile(struct soap*, const char *URL, struct _ns1__CreateProfile*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__CreateProfile(struct soap*, const char *URL, struct _ns1__CreateProfile*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__CreateProfile(struct soap*, const char *URL, struct _ns1__CreateProfile*);
    soap_POST_recv__ns1__CreateProfile(struct soap*, struct _ns1__CreateProfile*);
    @endcode

  - <ns1:CreateProfileResponse> @ref _ns1__CreateProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CreateProfileResponse(struct soap*, struct _ns1__CreateProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CreateProfileResponse(struct soap*, struct _ns1__CreateProfileResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__CreateProfileResponse(struct soap*, const char *URL, struct _ns1__CreateProfileResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__CreateProfileResponse(struct soap*, const char *URL, struct _ns1__CreateProfileResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__CreateProfileResponse(struct soap*, const char *URL, struct _ns1__CreateProfileResponse*);
    soap_POST_recv__ns1__CreateProfileResponse(struct soap*, struct _ns1__CreateProfileResponse*);
    @endcode

  - <ns1:GetProfiles> @ref _ns1__GetProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetProfiles(struct soap*, struct _ns1__GetProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetProfiles(struct soap*, struct _ns1__GetProfiles*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetProfiles(struct soap*, const char *URL, struct _ns1__GetProfiles*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetProfiles(struct soap*, const char *URL, struct _ns1__GetProfiles*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetProfiles(struct soap*, const char *URL, struct _ns1__GetProfiles*);
    soap_POST_recv__ns1__GetProfiles(struct soap*, struct _ns1__GetProfiles*);
    @endcode

  - <ns1:GetProfilesResponse> @ref _ns1__GetProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetProfilesResponse(struct soap*, struct _ns1__GetProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetProfilesResponse(struct soap*, struct _ns1__GetProfilesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetProfilesResponse(struct soap*, const char *URL, struct _ns1__GetProfilesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetProfilesResponse(struct soap*, const char *URL, struct _ns1__GetProfilesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetProfilesResponse(struct soap*, const char *URL, struct _ns1__GetProfilesResponse*);
    soap_POST_recv__ns1__GetProfilesResponse(struct soap*, struct _ns1__GetProfilesResponse*);
    @endcode

  - <ns1:AddConfiguration> @ref _ns1__AddConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddConfiguration(struct soap*, struct _ns1__AddConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddConfiguration(struct soap*, struct _ns1__AddConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__AddConfiguration(struct soap*, const char *URL, struct _ns1__AddConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__AddConfiguration(struct soap*, const char *URL, struct _ns1__AddConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__AddConfiguration(struct soap*, const char *URL, struct _ns1__AddConfiguration*);
    soap_POST_recv__ns1__AddConfiguration(struct soap*, struct _ns1__AddConfiguration*);
    @endcode

  - <ns1:AddConfigurationResponse> @ref _ns1__AddConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddConfigurationResponse(struct soap*, struct _ns1__AddConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddConfigurationResponse(struct soap*, struct _ns1__AddConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__AddConfigurationResponse(struct soap*, const char *URL, struct _ns1__AddConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__AddConfigurationResponse(struct soap*, const char *URL, struct _ns1__AddConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__AddConfigurationResponse(struct soap*, const char *URL, struct _ns1__AddConfigurationResponse*);
    soap_POST_recv__ns1__AddConfigurationResponse(struct soap*, struct _ns1__AddConfigurationResponse*);
    @endcode

  - <ns1:RemoveConfiguration> @ref _ns1__RemoveConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RemoveConfiguration(struct soap*, struct _ns1__RemoveConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RemoveConfiguration(struct soap*, struct _ns1__RemoveConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__RemoveConfiguration(struct soap*, const char *URL, struct _ns1__RemoveConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__RemoveConfiguration(struct soap*, const char *URL, struct _ns1__RemoveConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__RemoveConfiguration(struct soap*, const char *URL, struct _ns1__RemoveConfiguration*);
    soap_POST_recv__ns1__RemoveConfiguration(struct soap*, struct _ns1__RemoveConfiguration*);
    @endcode

  - <ns1:RemoveConfigurationResponse> @ref _ns1__RemoveConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RemoveConfigurationResponse(struct soap*, struct _ns1__RemoveConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RemoveConfigurationResponse(struct soap*, struct _ns1__RemoveConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__RemoveConfigurationResponse(struct soap*, const char *URL, struct _ns1__RemoveConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__RemoveConfigurationResponse(struct soap*, const char *URL, struct _ns1__RemoveConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__RemoveConfigurationResponse(struct soap*, const char *URL, struct _ns1__RemoveConfigurationResponse*);
    soap_POST_recv__ns1__RemoveConfigurationResponse(struct soap*, struct _ns1__RemoveConfigurationResponse*);
    @endcode

  - <ns1:DeleteProfile> @ref _ns1__DeleteProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteProfile(struct soap*, struct _ns1__DeleteProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteProfile(struct soap*, struct _ns1__DeleteProfile*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__DeleteProfile(struct soap*, const char *URL, struct _ns1__DeleteProfile*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__DeleteProfile(struct soap*, const char *URL, struct _ns1__DeleteProfile*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__DeleteProfile(struct soap*, const char *URL, struct _ns1__DeleteProfile*);
    soap_POST_recv__ns1__DeleteProfile(struct soap*, struct _ns1__DeleteProfile*);
    @endcode

  - <ns1:DeleteProfileResponse> @ref _ns1__DeleteProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteProfileResponse(struct soap*, struct _ns1__DeleteProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteProfileResponse(struct soap*, struct _ns1__DeleteProfileResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__DeleteProfileResponse(struct soap*, const char *URL, struct _ns1__DeleteProfileResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__DeleteProfileResponse(struct soap*, const char *URL, struct _ns1__DeleteProfileResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__DeleteProfileResponse(struct soap*, const char *URL, struct _ns1__DeleteProfileResponse*);
    soap_POST_recv__ns1__DeleteProfileResponse(struct soap*, struct _ns1__DeleteProfileResponse*);
    @endcode

  - <ns1:GetVideoEncoderConfigurations> (use wsdl2h option -g to auto-generate type _ns1__GetVideoEncoderConfigurations)

  - <ns1:GetVideoEncoderConfigurationsResponse> @ref _ns1__GetVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetVideoEncoderConfigurationsResponse(struct soap*, struct _ns1__GetVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetVideoEncoderConfigurationsResponse(struct soap*, struct _ns1__GetVideoEncoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetVideoEncoderConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetVideoEncoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetVideoEncoderConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetVideoEncoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetVideoEncoderConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetVideoEncoderConfigurationsResponse*);
    soap_POST_recv__ns1__GetVideoEncoderConfigurationsResponse(struct soap*, struct _ns1__GetVideoEncoderConfigurationsResponse*);
    @endcode

  - <ns1:GetVideoSourceConfigurations> (use wsdl2h option -g to auto-generate type _ns1__GetVideoSourceConfigurations)

  - <ns1:GetVideoSourceConfigurationsResponse> @ref _ns1__GetVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetVideoSourceConfigurationsResponse(struct soap*, struct _ns1__GetVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetVideoSourceConfigurationsResponse(struct soap*, struct _ns1__GetVideoSourceConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetVideoSourceConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetVideoSourceConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetVideoSourceConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetVideoSourceConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetVideoSourceConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetVideoSourceConfigurationsResponse*);
    soap_POST_recv__ns1__GetVideoSourceConfigurationsResponse(struct soap*, struct _ns1__GetVideoSourceConfigurationsResponse*);
    @endcode

  - <ns1:GetAudioEncoderConfigurations> (use wsdl2h option -g to auto-generate type _ns1__GetAudioEncoderConfigurations)

  - <ns1:GetAudioEncoderConfigurationsResponse> @ref _ns1__GetAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAudioEncoderConfigurationsResponse(struct soap*, struct _ns1__GetAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAudioEncoderConfigurationsResponse(struct soap*, struct _ns1__GetAudioEncoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetAudioEncoderConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAudioEncoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetAudioEncoderConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAudioEncoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetAudioEncoderConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAudioEncoderConfigurationsResponse*);
    soap_POST_recv__ns1__GetAudioEncoderConfigurationsResponse(struct soap*, struct _ns1__GetAudioEncoderConfigurationsResponse*);
    @endcode

  - <ns1:GetAudioSourceConfigurations> (use wsdl2h option -g to auto-generate type _ns1__GetAudioSourceConfigurations)

  - <ns1:GetAudioSourceConfigurationsResponse> @ref _ns1__GetAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAudioSourceConfigurationsResponse(struct soap*, struct _ns1__GetAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAudioSourceConfigurationsResponse(struct soap*, struct _ns1__GetAudioSourceConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetAudioSourceConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAudioSourceConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetAudioSourceConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAudioSourceConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetAudioSourceConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAudioSourceConfigurationsResponse*);
    soap_POST_recv__ns1__GetAudioSourceConfigurationsResponse(struct soap*, struct _ns1__GetAudioSourceConfigurationsResponse*);
    @endcode

  - <ns1:GetAnalyticsConfigurations> (use wsdl2h option -g to auto-generate type _ns1__GetAnalyticsConfigurations)

  - <ns1:GetAnalyticsConfigurationsResponse> @ref _ns1__GetAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAnalyticsConfigurationsResponse(struct soap*, struct _ns1__GetAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAnalyticsConfigurationsResponse(struct soap*, struct _ns1__GetAnalyticsConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetAnalyticsConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAnalyticsConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetAnalyticsConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAnalyticsConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetAnalyticsConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAnalyticsConfigurationsResponse*);
    soap_POST_recv__ns1__GetAnalyticsConfigurationsResponse(struct soap*, struct _ns1__GetAnalyticsConfigurationsResponse*);
    @endcode

  - <ns1:GetMetadataConfigurations> (use wsdl2h option -g to auto-generate type _ns1__GetMetadataConfigurations)

  - <ns1:GetMetadataConfigurationsResponse> @ref _ns1__GetMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetMetadataConfigurationsResponse(struct soap*, struct _ns1__GetMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetMetadataConfigurationsResponse(struct soap*, struct _ns1__GetMetadataConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetMetadataConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetMetadataConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetMetadataConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetMetadataConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetMetadataConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetMetadataConfigurationsResponse*);
    soap_POST_recv__ns1__GetMetadataConfigurationsResponse(struct soap*, struct _ns1__GetMetadataConfigurationsResponse*);
    @endcode

  - <ns1:GetAudioOutputConfigurations> (use wsdl2h option -g to auto-generate type _ns1__GetAudioOutputConfigurations)

  - <ns1:GetAudioOutputConfigurationsResponse> @ref _ns1__GetAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAudioOutputConfigurationsResponse(struct soap*, struct _ns1__GetAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAudioOutputConfigurationsResponse(struct soap*, struct _ns1__GetAudioOutputConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetAudioOutputConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAudioOutputConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetAudioOutputConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAudioOutputConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetAudioOutputConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAudioOutputConfigurationsResponse*);
    soap_POST_recv__ns1__GetAudioOutputConfigurationsResponse(struct soap*, struct _ns1__GetAudioOutputConfigurationsResponse*);
    @endcode

  - <ns1:GetAudioDecoderConfigurations> (use wsdl2h option -g to auto-generate type _ns1__GetAudioDecoderConfigurations)

  - <ns1:GetAudioDecoderConfigurationsResponse> @ref _ns1__GetAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAudioDecoderConfigurationsResponse(struct soap*, struct _ns1__GetAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAudioDecoderConfigurationsResponse(struct soap*, struct _ns1__GetAudioDecoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetAudioDecoderConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAudioDecoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetAudioDecoderConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAudioDecoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetAudioDecoderConfigurationsResponse(struct soap*, const char *URL, struct _ns1__GetAudioDecoderConfigurationsResponse*);
    soap_POST_recv__ns1__GetAudioDecoderConfigurationsResponse(struct soap*, struct _ns1__GetAudioDecoderConfigurationsResponse*);
    @endcode

  - <ns1:SetVideoEncoderConfiguration> @ref _ns1__SetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetVideoEncoderConfiguration(struct soap*, struct _ns1__SetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetVideoEncoderConfiguration(struct soap*, struct _ns1__SetVideoEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__SetVideoEncoderConfiguration(struct soap*, const char *URL, struct _ns1__SetVideoEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__SetVideoEncoderConfiguration(struct soap*, const char *URL, struct _ns1__SetVideoEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__SetVideoEncoderConfiguration(struct soap*, const char *URL, struct _ns1__SetVideoEncoderConfiguration*);
    soap_POST_recv__ns1__SetVideoEncoderConfiguration(struct soap*, struct _ns1__SetVideoEncoderConfiguration*);
    @endcode

  - <ns1:SetVideoEncoderConfigurationResponse> (use wsdl2h option -g to auto-generate type _ns1__SetVideoEncoderConfigurationResponse)

  - <ns1:SetVideoSourceConfiguration> @ref _ns1__SetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetVideoSourceConfiguration(struct soap*, struct _ns1__SetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetVideoSourceConfiguration(struct soap*, struct _ns1__SetVideoSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__SetVideoSourceConfiguration(struct soap*, const char *URL, struct _ns1__SetVideoSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__SetVideoSourceConfiguration(struct soap*, const char *URL, struct _ns1__SetVideoSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__SetVideoSourceConfiguration(struct soap*, const char *URL, struct _ns1__SetVideoSourceConfiguration*);
    soap_POST_recv__ns1__SetVideoSourceConfiguration(struct soap*, struct _ns1__SetVideoSourceConfiguration*);
    @endcode

  - <ns1:SetVideoSourceConfigurationResponse> (use wsdl2h option -g to auto-generate type _ns1__SetVideoSourceConfigurationResponse)

  - <ns1:SetAudioEncoderConfiguration> @ref _ns1__SetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetAudioEncoderConfiguration(struct soap*, struct _ns1__SetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetAudioEncoderConfiguration(struct soap*, struct _ns1__SetAudioEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__SetAudioEncoderConfiguration(struct soap*, const char *URL, struct _ns1__SetAudioEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__SetAudioEncoderConfiguration(struct soap*, const char *URL, struct _ns1__SetAudioEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__SetAudioEncoderConfiguration(struct soap*, const char *URL, struct _ns1__SetAudioEncoderConfiguration*);
    soap_POST_recv__ns1__SetAudioEncoderConfiguration(struct soap*, struct _ns1__SetAudioEncoderConfiguration*);
    @endcode

  - <ns1:SetAudioEncoderConfigurationResponse> (use wsdl2h option -g to auto-generate type _ns1__SetAudioEncoderConfigurationResponse)

  - <ns1:SetAudioSourceConfiguration> @ref _ns1__SetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetAudioSourceConfiguration(struct soap*, struct _ns1__SetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetAudioSourceConfiguration(struct soap*, struct _ns1__SetAudioSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__SetAudioSourceConfiguration(struct soap*, const char *URL, struct _ns1__SetAudioSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__SetAudioSourceConfiguration(struct soap*, const char *URL, struct _ns1__SetAudioSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__SetAudioSourceConfiguration(struct soap*, const char *URL, struct _ns1__SetAudioSourceConfiguration*);
    soap_POST_recv__ns1__SetAudioSourceConfiguration(struct soap*, struct _ns1__SetAudioSourceConfiguration*);
    @endcode

  - <ns1:SetAudioSourceConfigurationResponse> (use wsdl2h option -g to auto-generate type _ns1__SetAudioSourceConfigurationResponse)

  - <ns1:SetMetadataConfiguration> @ref _ns1__SetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetMetadataConfiguration(struct soap*, struct _ns1__SetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetMetadataConfiguration(struct soap*, struct _ns1__SetMetadataConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__SetMetadataConfiguration(struct soap*, const char *URL, struct _ns1__SetMetadataConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__SetMetadataConfiguration(struct soap*, const char *URL, struct _ns1__SetMetadataConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__SetMetadataConfiguration(struct soap*, const char *URL, struct _ns1__SetMetadataConfiguration*);
    soap_POST_recv__ns1__SetMetadataConfiguration(struct soap*, struct _ns1__SetMetadataConfiguration*);
    @endcode

  - <ns1:SetMetadataConfigurationResponse> (use wsdl2h option -g to auto-generate type _ns1__SetMetadataConfigurationResponse)

  - <ns1:SetAudioOutputConfiguration> @ref _ns1__SetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetAudioOutputConfiguration(struct soap*, struct _ns1__SetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetAudioOutputConfiguration(struct soap*, struct _ns1__SetAudioOutputConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__SetAudioOutputConfiguration(struct soap*, const char *URL, struct _ns1__SetAudioOutputConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__SetAudioOutputConfiguration(struct soap*, const char *URL, struct _ns1__SetAudioOutputConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__SetAudioOutputConfiguration(struct soap*, const char *URL, struct _ns1__SetAudioOutputConfiguration*);
    soap_POST_recv__ns1__SetAudioOutputConfiguration(struct soap*, struct _ns1__SetAudioOutputConfiguration*);
    @endcode

  - <ns1:SetAudioOutputConfigurationResponse> (use wsdl2h option -g to auto-generate type _ns1__SetAudioOutputConfigurationResponse)

  - <ns1:SetAudioDecoderConfiguration> @ref _ns1__SetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetAudioDecoderConfiguration(struct soap*, struct _ns1__SetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetAudioDecoderConfiguration(struct soap*, struct _ns1__SetAudioDecoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__SetAudioDecoderConfiguration(struct soap*, const char *URL, struct _ns1__SetAudioDecoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__SetAudioDecoderConfiguration(struct soap*, const char *URL, struct _ns1__SetAudioDecoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__SetAudioDecoderConfiguration(struct soap*, const char *URL, struct _ns1__SetAudioDecoderConfiguration*);
    soap_POST_recv__ns1__SetAudioDecoderConfiguration(struct soap*, struct _ns1__SetAudioDecoderConfiguration*);
    @endcode

  - <ns1:SetAudioDecoderConfigurationResponse> (use wsdl2h option -g to auto-generate type _ns1__SetAudioDecoderConfigurationResponse)

  - <ns1:GetVideoSourceConfigurationOptions> (use wsdl2h option -g to auto-generate type _ns1__GetVideoSourceConfigurationOptions)

  - <ns1:GetVideoSourceConfigurationOptionsResponse> @ref _ns1__GetVideoSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _ns1__GetVideoSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _ns1__GetVideoSourceConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetVideoSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetVideoSourceConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetVideoSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetVideoSourceConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetVideoSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetVideoSourceConfigurationOptionsResponse*);
    soap_POST_recv__ns1__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _ns1__GetVideoSourceConfigurationOptionsResponse*);
    @endcode

  - <ns1:GetVideoEncoderConfigurationOptions> (use wsdl2h option -g to auto-generate type _ns1__GetVideoEncoderConfigurationOptions)

  - <ns1:GetVideoEncoderConfigurationOptionsResponse> @ref _ns1__GetVideoEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetVideoEncoderConfigurationOptionsResponse(struct soap*, struct _ns1__GetVideoEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetVideoEncoderConfigurationOptionsResponse(struct soap*, struct _ns1__GetVideoEncoderConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetVideoEncoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetVideoEncoderConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetVideoEncoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetVideoEncoderConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetVideoEncoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetVideoEncoderConfigurationOptionsResponse*);
    soap_POST_recv__ns1__GetVideoEncoderConfigurationOptionsResponse(struct soap*, struct _ns1__GetVideoEncoderConfigurationOptionsResponse*);
    @endcode

  - <ns1:GetAudioSourceConfigurationOptions> (use wsdl2h option -g to auto-generate type _ns1__GetAudioSourceConfigurationOptions)

  - <ns1:GetAudioSourceConfigurationOptionsResponse> @ref _ns1__GetAudioSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _ns1__GetAudioSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _ns1__GetAudioSourceConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetAudioSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetAudioSourceConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetAudioSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetAudioSourceConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetAudioSourceConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetAudioSourceConfigurationOptionsResponse*);
    soap_POST_recv__ns1__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _ns1__GetAudioSourceConfigurationOptionsResponse*);
    @endcode

  - <ns1:GetAudioEncoderConfigurationOptions> (use wsdl2h option -g to auto-generate type _ns1__GetAudioEncoderConfigurationOptions)

  - <ns1:GetAudioEncoderConfigurationOptionsResponse> @ref _ns1__GetAudioEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAudioEncoderConfigurationOptionsResponse(struct soap*, struct _ns1__GetAudioEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAudioEncoderConfigurationOptionsResponse(struct soap*, struct _ns1__GetAudioEncoderConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetAudioEncoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetAudioEncoderConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetAudioEncoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetAudioEncoderConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetAudioEncoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetAudioEncoderConfigurationOptionsResponse*);
    soap_POST_recv__ns1__GetAudioEncoderConfigurationOptionsResponse(struct soap*, struct _ns1__GetAudioEncoderConfigurationOptionsResponse*);
    @endcode

  - <ns1:GetMetadataConfigurationOptions> (use wsdl2h option -g to auto-generate type _ns1__GetMetadataConfigurationOptions)

  - <ns1:GetMetadataConfigurationOptionsResponse> @ref _ns1__GetMetadataConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetMetadataConfigurationOptionsResponse(struct soap*, struct _ns1__GetMetadataConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetMetadataConfigurationOptionsResponse(struct soap*, struct _ns1__GetMetadataConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetMetadataConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetMetadataConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetMetadataConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetMetadataConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetMetadataConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetMetadataConfigurationOptionsResponse*);
    soap_POST_recv__ns1__GetMetadataConfigurationOptionsResponse(struct soap*, struct _ns1__GetMetadataConfigurationOptionsResponse*);
    @endcode

  - <ns1:GetAudioOutputConfigurationOptions> (use wsdl2h option -g to auto-generate type _ns1__GetAudioOutputConfigurationOptions)

  - <ns1:GetAudioOutputConfigurationOptionsResponse> @ref _ns1__GetAudioOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _ns1__GetAudioOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _ns1__GetAudioOutputConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetAudioOutputConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetAudioOutputConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetAudioOutputConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetAudioOutputConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetAudioOutputConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetAudioOutputConfigurationOptionsResponse*);
    soap_POST_recv__ns1__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _ns1__GetAudioOutputConfigurationOptionsResponse*);
    @endcode

  - <ns1:GetAudioDecoderConfigurationOptions> (use wsdl2h option -g to auto-generate type _ns1__GetAudioDecoderConfigurationOptions)

  - <ns1:GetAudioDecoderConfigurationOptionsResponse> @ref _ns1__GetAudioDecoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAudioDecoderConfigurationOptionsResponse(struct soap*, struct _ns1__GetAudioDecoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAudioDecoderConfigurationOptionsResponse(struct soap*, struct _ns1__GetAudioDecoderConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetAudioDecoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetAudioDecoderConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetAudioDecoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetAudioDecoderConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetAudioDecoderConfigurationOptionsResponse(struct soap*, const char *URL, struct _ns1__GetAudioDecoderConfigurationOptionsResponse*);
    soap_POST_recv__ns1__GetAudioDecoderConfigurationOptionsResponse(struct soap*, struct _ns1__GetAudioDecoderConfigurationOptionsResponse*);
    @endcode

  - <ns1:GetVideoEncoderInstances> @ref _ns1__GetVideoEncoderInstances
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetVideoEncoderInstances(struct soap*, struct _ns1__GetVideoEncoderInstances*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetVideoEncoderInstances(struct soap*, struct _ns1__GetVideoEncoderInstances*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetVideoEncoderInstances(struct soap*, const char *URL, struct _ns1__GetVideoEncoderInstances*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetVideoEncoderInstances(struct soap*, const char *URL, struct _ns1__GetVideoEncoderInstances*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetVideoEncoderInstances(struct soap*, const char *URL, struct _ns1__GetVideoEncoderInstances*);
    soap_POST_recv__ns1__GetVideoEncoderInstances(struct soap*, struct _ns1__GetVideoEncoderInstances*);
    @endcode

  - <ns1:GetVideoEncoderInstancesResponse> @ref _ns1__GetVideoEncoderInstancesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetVideoEncoderInstancesResponse(struct soap*, struct _ns1__GetVideoEncoderInstancesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetVideoEncoderInstancesResponse(struct soap*, struct _ns1__GetVideoEncoderInstancesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetVideoEncoderInstancesResponse(struct soap*, const char *URL, struct _ns1__GetVideoEncoderInstancesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetVideoEncoderInstancesResponse(struct soap*, const char *URL, struct _ns1__GetVideoEncoderInstancesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetVideoEncoderInstancesResponse(struct soap*, const char *URL, struct _ns1__GetVideoEncoderInstancesResponse*);
    soap_POST_recv__ns1__GetVideoEncoderInstancesResponse(struct soap*, struct _ns1__GetVideoEncoderInstancesResponse*);
    @endcode

  - <ns1:GetStreamUri> @ref _ns1__GetStreamUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetStreamUri(struct soap*, struct _ns1__GetStreamUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetStreamUri(struct soap*, struct _ns1__GetStreamUri*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetStreamUri(struct soap*, const char *URL, struct _ns1__GetStreamUri*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetStreamUri(struct soap*, const char *URL, struct _ns1__GetStreamUri*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetStreamUri(struct soap*, const char *URL, struct _ns1__GetStreamUri*);
    soap_POST_recv__ns1__GetStreamUri(struct soap*, struct _ns1__GetStreamUri*);
    @endcode

  - <ns1:GetStreamUriResponse> @ref _ns1__GetStreamUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetStreamUriResponse(struct soap*, struct _ns1__GetStreamUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetStreamUriResponse(struct soap*, struct _ns1__GetStreamUriResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetStreamUriResponse(struct soap*, const char *URL, struct _ns1__GetStreamUriResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetStreamUriResponse(struct soap*, const char *URL, struct _ns1__GetStreamUriResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetStreamUriResponse(struct soap*, const char *URL, struct _ns1__GetStreamUriResponse*);
    soap_POST_recv__ns1__GetStreamUriResponse(struct soap*, struct _ns1__GetStreamUriResponse*);
    @endcode

  - <ns1:SetSynchronizationPoint> @ref _ns1__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetSynchronizationPoint(struct soap*, struct _ns1__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetSynchronizationPoint(struct soap*, struct _ns1__SetSynchronizationPoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__SetSynchronizationPoint(struct soap*, const char *URL, struct _ns1__SetSynchronizationPoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__SetSynchronizationPoint(struct soap*, const char *URL, struct _ns1__SetSynchronizationPoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__SetSynchronizationPoint(struct soap*, const char *URL, struct _ns1__SetSynchronizationPoint*);
    soap_POST_recv__ns1__SetSynchronizationPoint(struct soap*, struct _ns1__SetSynchronizationPoint*);
    @endcode

  - <ns1:SetSynchronizationPointResponse> @ref _ns1__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetSynchronizationPointResponse(struct soap*, struct _ns1__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetSynchronizationPointResponse(struct soap*, struct _ns1__SetSynchronizationPointResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__SetSynchronizationPointResponse(struct soap*, const char *URL, struct _ns1__SetSynchronizationPointResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__SetSynchronizationPointResponse(struct soap*, const char *URL, struct _ns1__SetSynchronizationPointResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__SetSynchronizationPointResponse(struct soap*, const char *URL, struct _ns1__SetSynchronizationPointResponse*);
    soap_POST_recv__ns1__SetSynchronizationPointResponse(struct soap*, struct _ns1__SetSynchronizationPointResponse*);
    @endcode

  - <ns1:GetSnapshotUri> @ref _ns1__GetSnapshotUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetSnapshotUri(struct soap*, struct _ns1__GetSnapshotUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetSnapshotUri(struct soap*, struct _ns1__GetSnapshotUri*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetSnapshotUri(struct soap*, const char *URL, struct _ns1__GetSnapshotUri*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetSnapshotUri(struct soap*, const char *URL, struct _ns1__GetSnapshotUri*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetSnapshotUri(struct soap*, const char *URL, struct _ns1__GetSnapshotUri*);
    soap_POST_recv__ns1__GetSnapshotUri(struct soap*, struct _ns1__GetSnapshotUri*);
    @endcode

  - <ns1:GetSnapshotUriResponse> @ref _ns1__GetSnapshotUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetSnapshotUriResponse(struct soap*, struct _ns1__GetSnapshotUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetSnapshotUriResponse(struct soap*, struct _ns1__GetSnapshotUriResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetSnapshotUriResponse(struct soap*, const char *URL, struct _ns1__GetSnapshotUriResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetSnapshotUriResponse(struct soap*, const char *URL, struct _ns1__GetSnapshotUriResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetSnapshotUriResponse(struct soap*, const char *URL, struct _ns1__GetSnapshotUriResponse*);
    soap_POST_recv__ns1__GetSnapshotUriResponse(struct soap*, struct _ns1__GetSnapshotUriResponse*);
    @endcode

  - <ns1:StartMulticastStreaming> (use wsdl2h option -g to auto-generate type _ns1__StartMulticastStreaming)

  - <ns1:StartMulticastStreamingResponse> (use wsdl2h option -g to auto-generate type _ns1__StartMulticastStreamingResponse)

  - <ns1:StopMulticastStreaming> (use wsdl2h option -g to auto-generate type _ns1__StopMulticastStreaming)

  - <ns1:StopMulticastStreamingResponse> (use wsdl2h option -g to auto-generate type _ns1__StopMulticastStreamingResponse)

  - <ns1:GetVideoSourceModes> @ref _ns1__GetVideoSourceModes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetVideoSourceModes(struct soap*, struct _ns1__GetVideoSourceModes*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetVideoSourceModes(struct soap*, struct _ns1__GetVideoSourceModes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetVideoSourceModes(struct soap*, const char *URL, struct _ns1__GetVideoSourceModes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetVideoSourceModes(struct soap*, const char *URL, struct _ns1__GetVideoSourceModes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetVideoSourceModes(struct soap*, const char *URL, struct _ns1__GetVideoSourceModes*);
    soap_POST_recv__ns1__GetVideoSourceModes(struct soap*, struct _ns1__GetVideoSourceModes*);
    @endcode

  - <ns1:GetVideoSourceModesResponse> @ref _ns1__GetVideoSourceModesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetVideoSourceModesResponse(struct soap*, struct _ns1__GetVideoSourceModesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetVideoSourceModesResponse(struct soap*, struct _ns1__GetVideoSourceModesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetVideoSourceModesResponse(struct soap*, const char *URL, struct _ns1__GetVideoSourceModesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetVideoSourceModesResponse(struct soap*, const char *URL, struct _ns1__GetVideoSourceModesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetVideoSourceModesResponse(struct soap*, const char *URL, struct _ns1__GetVideoSourceModesResponse*);
    soap_POST_recv__ns1__GetVideoSourceModesResponse(struct soap*, struct _ns1__GetVideoSourceModesResponse*);
    @endcode

  - <ns1:SetVideoSourceMode> @ref _ns1__SetVideoSourceMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetVideoSourceMode(struct soap*, struct _ns1__SetVideoSourceMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetVideoSourceMode(struct soap*, struct _ns1__SetVideoSourceMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__SetVideoSourceMode(struct soap*, const char *URL, struct _ns1__SetVideoSourceMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__SetVideoSourceMode(struct soap*, const char *URL, struct _ns1__SetVideoSourceMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__SetVideoSourceMode(struct soap*, const char *URL, struct _ns1__SetVideoSourceMode*);
    soap_POST_recv__ns1__SetVideoSourceMode(struct soap*, struct _ns1__SetVideoSourceMode*);
    @endcode

  - <ns1:SetVideoSourceModeResponse> @ref _ns1__SetVideoSourceModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetVideoSourceModeResponse(struct soap*, struct _ns1__SetVideoSourceModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetVideoSourceModeResponse(struct soap*, struct _ns1__SetVideoSourceModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__SetVideoSourceModeResponse(struct soap*, const char *URL, struct _ns1__SetVideoSourceModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__SetVideoSourceModeResponse(struct soap*, const char *URL, struct _ns1__SetVideoSourceModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__SetVideoSourceModeResponse(struct soap*, const char *URL, struct _ns1__SetVideoSourceModeResponse*);
    soap_POST_recv__ns1__SetVideoSourceModeResponse(struct soap*, struct _ns1__SetVideoSourceModeResponse*);
    @endcode

  - <ns1:GetOSDs> @ref _ns1__GetOSDs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetOSDs(struct soap*, struct _ns1__GetOSDs*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetOSDs(struct soap*, struct _ns1__GetOSDs*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetOSDs(struct soap*, const char *URL, struct _ns1__GetOSDs*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetOSDs(struct soap*, const char *URL, struct _ns1__GetOSDs*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetOSDs(struct soap*, const char *URL, struct _ns1__GetOSDs*);
    soap_POST_recv__ns1__GetOSDs(struct soap*, struct _ns1__GetOSDs*);
    @endcode

  - <ns1:GetOSDsResponse> @ref _ns1__GetOSDsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetOSDsResponse(struct soap*, struct _ns1__GetOSDsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetOSDsResponse(struct soap*, struct _ns1__GetOSDsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetOSDsResponse(struct soap*, const char *URL, struct _ns1__GetOSDsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetOSDsResponse(struct soap*, const char *URL, struct _ns1__GetOSDsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetOSDsResponse(struct soap*, const char *URL, struct _ns1__GetOSDsResponse*);
    soap_POST_recv__ns1__GetOSDsResponse(struct soap*, struct _ns1__GetOSDsResponse*);
    @endcode

  - <ns1:SetOSD> @ref _ns1__SetOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetOSD(struct soap*, struct _ns1__SetOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetOSD(struct soap*, struct _ns1__SetOSD*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__SetOSD(struct soap*, const char *URL, struct _ns1__SetOSD*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__SetOSD(struct soap*, const char *URL, struct _ns1__SetOSD*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__SetOSD(struct soap*, const char *URL, struct _ns1__SetOSD*);
    soap_POST_recv__ns1__SetOSD(struct soap*, struct _ns1__SetOSD*);
    @endcode

  - <ns1:SetOSDResponse> (use wsdl2h option -g to auto-generate type _ns1__SetOSDResponse)

  - <ns1:GetOSDOptions> @ref _ns1__GetOSDOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetOSDOptions(struct soap*, struct _ns1__GetOSDOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetOSDOptions(struct soap*, struct _ns1__GetOSDOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetOSDOptions(struct soap*, const char *URL, struct _ns1__GetOSDOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetOSDOptions(struct soap*, const char *URL, struct _ns1__GetOSDOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetOSDOptions(struct soap*, const char *URL, struct _ns1__GetOSDOptions*);
    soap_POST_recv__ns1__GetOSDOptions(struct soap*, struct _ns1__GetOSDOptions*);
    @endcode

  - <ns1:GetOSDOptionsResponse> @ref _ns1__GetOSDOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetOSDOptionsResponse(struct soap*, struct _ns1__GetOSDOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetOSDOptionsResponse(struct soap*, struct _ns1__GetOSDOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetOSDOptionsResponse(struct soap*, const char *URL, struct _ns1__GetOSDOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetOSDOptionsResponse(struct soap*, const char *URL, struct _ns1__GetOSDOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetOSDOptionsResponse(struct soap*, const char *URL, struct _ns1__GetOSDOptionsResponse*);
    soap_POST_recv__ns1__GetOSDOptionsResponse(struct soap*, struct _ns1__GetOSDOptionsResponse*);
    @endcode

  - <ns1:CreateOSD> @ref _ns1__CreateOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CreateOSD(struct soap*, struct _ns1__CreateOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CreateOSD(struct soap*, struct _ns1__CreateOSD*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__CreateOSD(struct soap*, const char *URL, struct _ns1__CreateOSD*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__CreateOSD(struct soap*, const char *URL, struct _ns1__CreateOSD*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__CreateOSD(struct soap*, const char *URL, struct _ns1__CreateOSD*);
    soap_POST_recv__ns1__CreateOSD(struct soap*, struct _ns1__CreateOSD*);
    @endcode

  - <ns1:CreateOSDResponse> @ref _ns1__CreateOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CreateOSDResponse(struct soap*, struct _ns1__CreateOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CreateOSDResponse(struct soap*, struct _ns1__CreateOSDResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__CreateOSDResponse(struct soap*, const char *URL, struct _ns1__CreateOSDResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__CreateOSDResponse(struct soap*, const char *URL, struct _ns1__CreateOSDResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__CreateOSDResponse(struct soap*, const char *URL, struct _ns1__CreateOSDResponse*);
    soap_POST_recv__ns1__CreateOSDResponse(struct soap*, struct _ns1__CreateOSDResponse*);
    @endcode

  - <ns1:DeleteOSD> @ref _ns1__DeleteOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteOSD(struct soap*, struct _ns1__DeleteOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteOSD(struct soap*, struct _ns1__DeleteOSD*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__DeleteOSD(struct soap*, const char *URL, struct _ns1__DeleteOSD*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__DeleteOSD(struct soap*, const char *URL, struct _ns1__DeleteOSD*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__DeleteOSD(struct soap*, const char *URL, struct _ns1__DeleteOSD*);
    soap_POST_recv__ns1__DeleteOSD(struct soap*, struct _ns1__DeleteOSD*);
    @endcode

  - <ns1:DeleteOSDResponse> (use wsdl2h option -g to auto-generate type _ns1__DeleteOSDResponse)

  - <ns1:GetMasks> @ref _ns1__GetMasks
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetMasks(struct soap*, struct _ns1__GetMasks*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetMasks(struct soap*, struct _ns1__GetMasks*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetMasks(struct soap*, const char *URL, struct _ns1__GetMasks*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetMasks(struct soap*, const char *URL, struct _ns1__GetMasks*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetMasks(struct soap*, const char *URL, struct _ns1__GetMasks*);
    soap_POST_recv__ns1__GetMasks(struct soap*, struct _ns1__GetMasks*);
    @endcode

  - <ns1:GetMasksResponse> @ref _ns1__GetMasksResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetMasksResponse(struct soap*, struct _ns1__GetMasksResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetMasksResponse(struct soap*, struct _ns1__GetMasksResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetMasksResponse(struct soap*, const char *URL, struct _ns1__GetMasksResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetMasksResponse(struct soap*, const char *URL, struct _ns1__GetMasksResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetMasksResponse(struct soap*, const char *URL, struct _ns1__GetMasksResponse*);
    soap_POST_recv__ns1__GetMasksResponse(struct soap*, struct _ns1__GetMasksResponse*);
    @endcode

  - <ns1:SetMask> @ref _ns1__SetMask
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetMask(struct soap*, struct _ns1__SetMask*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetMask(struct soap*, struct _ns1__SetMask*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__SetMask(struct soap*, const char *URL, struct _ns1__SetMask*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__SetMask(struct soap*, const char *URL, struct _ns1__SetMask*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__SetMask(struct soap*, const char *URL, struct _ns1__SetMask*);
    soap_POST_recv__ns1__SetMask(struct soap*, struct _ns1__SetMask*);
    @endcode

  - <ns1:SetMaskResponse> (use wsdl2h option -g to auto-generate type _ns1__SetMaskResponse)

  - <ns1:GetMaskOptions> @ref _ns1__GetMaskOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetMaskOptions(struct soap*, struct _ns1__GetMaskOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetMaskOptions(struct soap*, struct _ns1__GetMaskOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetMaskOptions(struct soap*, const char *URL, struct _ns1__GetMaskOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetMaskOptions(struct soap*, const char *URL, struct _ns1__GetMaskOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetMaskOptions(struct soap*, const char *URL, struct _ns1__GetMaskOptions*);
    soap_POST_recv__ns1__GetMaskOptions(struct soap*, struct _ns1__GetMaskOptions*);
    @endcode

  - <ns1:GetMaskOptionsResponse> @ref _ns1__GetMaskOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetMaskOptionsResponse(struct soap*, struct _ns1__GetMaskOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetMaskOptionsResponse(struct soap*, struct _ns1__GetMaskOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__GetMaskOptionsResponse(struct soap*, const char *URL, struct _ns1__GetMaskOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__GetMaskOptionsResponse(struct soap*, const char *URL, struct _ns1__GetMaskOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__GetMaskOptionsResponse(struct soap*, const char *URL, struct _ns1__GetMaskOptionsResponse*);
    soap_POST_recv__ns1__GetMaskOptionsResponse(struct soap*, struct _ns1__GetMaskOptionsResponse*);
    @endcode

  - <ns1:CreateMask> @ref _ns1__CreateMask
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CreateMask(struct soap*, struct _ns1__CreateMask*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CreateMask(struct soap*, struct _ns1__CreateMask*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__CreateMask(struct soap*, const char *URL, struct _ns1__CreateMask*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__CreateMask(struct soap*, const char *URL, struct _ns1__CreateMask*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__CreateMask(struct soap*, const char *URL, struct _ns1__CreateMask*);
    soap_POST_recv__ns1__CreateMask(struct soap*, struct _ns1__CreateMask*);
    @endcode

  - <ns1:CreateMaskResponse> @ref _ns1__CreateMaskResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CreateMaskResponse(struct soap*, struct _ns1__CreateMaskResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CreateMaskResponse(struct soap*, struct _ns1__CreateMaskResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__CreateMaskResponse(struct soap*, const char *URL, struct _ns1__CreateMaskResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__CreateMaskResponse(struct soap*, const char *URL, struct _ns1__CreateMaskResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__CreateMaskResponse(struct soap*, const char *URL, struct _ns1__CreateMaskResponse*);
    soap_POST_recv__ns1__CreateMaskResponse(struct soap*, struct _ns1__CreateMaskResponse*);
    @endcode

  - <ns1:DeleteMask> @ref _ns1__DeleteMask
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteMask(struct soap*, struct _ns1__DeleteMask*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteMask(struct soap*, struct _ns1__DeleteMask*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__DeleteMask(struct soap*, const char *URL, struct _ns1__DeleteMask*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__DeleteMask(struct soap*, const char *URL, struct _ns1__DeleteMask*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__DeleteMask(struct soap*, const char *URL, struct _ns1__DeleteMask*);
    soap_POST_recv__ns1__DeleteMask(struct soap*, struct _ns1__DeleteMask*);
    @endcode

  - <ns1:DeleteMaskResponse> (use wsdl2h option -g to auto-generate type _ns1__DeleteMaskResponse)

*/

/**

@section tptz Top-level root elements of schema "http://www.onvif.org/ver20/ptz/wsdl"

  - <tptz:GetServiceCapabilities> @ref _tptz__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetServiceCapabilities(struct soap*, struct _tptz__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetServiceCapabilities(struct soap*, struct _tptz__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetServiceCapabilities(struct soap*, const char *URL, struct _tptz__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetServiceCapabilities(struct soap*, const char *URL, struct _tptz__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetServiceCapabilities(struct soap*, const char *URL, struct _tptz__GetServiceCapabilities*);
    soap_POST_recv__tptz__GetServiceCapabilities(struct soap*, struct _tptz__GetServiceCapabilities*);
    @endcode

  - <tptz:GetServiceCapabilitiesResponse> @ref _tptz__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetServiceCapabilitiesResponse(struct soap*, struct _tptz__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetServiceCapabilitiesResponse(struct soap*, struct _tptz__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tptz__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tptz__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tptz__GetServiceCapabilitiesResponse*);
    soap_POST_recv__tptz__GetServiceCapabilitiesResponse(struct soap*, struct _tptz__GetServiceCapabilitiesResponse*);
    @endcode

  - <tptz:Capabilities> (use wsdl2h option -g to auto-generate type _tptz__Capabilities)

  - <tptz:GetNodes> @ref _tptz__GetNodes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodes(struct soap*, struct _tptz__GetNodes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodes(struct soap*, struct _tptz__GetNodes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetNodes(struct soap*, const char *URL, struct _tptz__GetNodes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetNodes(struct soap*, const char *URL, struct _tptz__GetNodes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetNodes(struct soap*, const char *URL, struct _tptz__GetNodes*);
    soap_POST_recv__tptz__GetNodes(struct soap*, struct _tptz__GetNodes*);
    @endcode

  - <tptz:GetNodesResponse> @ref _tptz__GetNodesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodesResponse(struct soap*, struct _tptz__GetNodesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodesResponse(struct soap*, struct _tptz__GetNodesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetNodesResponse(struct soap*, const char *URL, struct _tptz__GetNodesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetNodesResponse(struct soap*, const char *URL, struct _tptz__GetNodesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetNodesResponse(struct soap*, const char *URL, struct _tptz__GetNodesResponse*);
    soap_POST_recv__tptz__GetNodesResponse(struct soap*, struct _tptz__GetNodesResponse*);
    @endcode

  - <tptz:GetNode> @ref _tptz__GetNode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNode(struct soap*, struct _tptz__GetNode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNode(struct soap*, struct _tptz__GetNode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetNode(struct soap*, const char *URL, struct _tptz__GetNode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetNode(struct soap*, const char *URL, struct _tptz__GetNode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetNode(struct soap*, const char *URL, struct _tptz__GetNode*);
    soap_POST_recv__tptz__GetNode(struct soap*, struct _tptz__GetNode*);
    @endcode

  - <tptz:GetNodeResponse> @ref _tptz__GetNodeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodeResponse(struct soap*, struct _tptz__GetNodeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodeResponse(struct soap*, struct _tptz__GetNodeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetNodeResponse(struct soap*, const char *URL, struct _tptz__GetNodeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetNodeResponse(struct soap*, const char *URL, struct _tptz__GetNodeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetNodeResponse(struct soap*, const char *URL, struct _tptz__GetNodeResponse*);
    soap_POST_recv__tptz__GetNodeResponse(struct soap*, struct _tptz__GetNodeResponse*);
    @endcode

  - <tptz:GetConfigurations> @ref _tptz__GetConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurations(struct soap*, struct _tptz__GetConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurations(struct soap*, struct _tptz__GetConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurations(struct soap*, const char *URL, struct _tptz__GetConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurations(struct soap*, const char *URL, struct _tptz__GetConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurations(struct soap*, const char *URL, struct _tptz__GetConfigurations*);
    soap_POST_recv__tptz__GetConfigurations(struct soap*, struct _tptz__GetConfigurations*);
    @endcode

  - <tptz:GetConfigurationsResponse> @ref _tptz__GetConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationsResponse(struct soap*, struct _tptz__GetConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationsResponse(struct soap*, struct _tptz__GetConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurationsResponse(struct soap*, const char *URL, struct _tptz__GetConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurationsResponse(struct soap*, const char *URL, struct _tptz__GetConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurationsResponse(struct soap*, const char *URL, struct _tptz__GetConfigurationsResponse*);
    soap_POST_recv__tptz__GetConfigurationsResponse(struct soap*, struct _tptz__GetConfigurationsResponse*);
    @endcode

  - <tptz:GetConfiguration> @ref _tptz__GetConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfiguration(struct soap*, struct _tptz__GetConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfiguration(struct soap*, struct _tptz__GetConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfiguration(struct soap*, const char *URL, struct _tptz__GetConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfiguration(struct soap*, const char *URL, struct _tptz__GetConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfiguration(struct soap*, const char *URL, struct _tptz__GetConfiguration*);
    soap_POST_recv__tptz__GetConfiguration(struct soap*, struct _tptz__GetConfiguration*);
    @endcode

  - <tptz:GetConfigurationResponse> @ref _tptz__GetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationResponse(struct soap*, struct _tptz__GetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationResponse(struct soap*, struct _tptz__GetConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurationResponse(struct soap*, const char *URL, struct _tptz__GetConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurationResponse(struct soap*, const char *URL, struct _tptz__GetConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurationResponse(struct soap*, const char *URL, struct _tptz__GetConfigurationResponse*);
    soap_POST_recv__tptz__GetConfigurationResponse(struct soap*, struct _tptz__GetConfigurationResponse*);
    @endcode

  - <tptz:SetConfiguration> @ref _tptz__SetConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetConfiguration(struct soap*, struct _tptz__SetConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetConfiguration(struct soap*, struct _tptz__SetConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetConfiguration(struct soap*, const char *URL, struct _tptz__SetConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetConfiguration(struct soap*, const char *URL, struct _tptz__SetConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetConfiguration(struct soap*, const char *URL, struct _tptz__SetConfiguration*);
    soap_POST_recv__tptz__SetConfiguration(struct soap*, struct _tptz__SetConfiguration*);
    @endcode

  - <tptz:SetConfigurationResponse> @ref _tptz__SetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetConfigurationResponse(struct soap*, struct _tptz__SetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetConfigurationResponse(struct soap*, struct _tptz__SetConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetConfigurationResponse(struct soap*, const char *URL, struct _tptz__SetConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetConfigurationResponse(struct soap*, const char *URL, struct _tptz__SetConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetConfigurationResponse(struct soap*, const char *URL, struct _tptz__SetConfigurationResponse*);
    soap_POST_recv__tptz__SetConfigurationResponse(struct soap*, struct _tptz__SetConfigurationResponse*);
    @endcode

  - <tptz:GetConfigurationOptions> @ref _tptz__GetConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationOptions(struct soap*, struct _tptz__GetConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationOptions(struct soap*, struct _tptz__GetConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurationOptions(struct soap*, const char *URL, struct _tptz__GetConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurationOptions(struct soap*, const char *URL, struct _tptz__GetConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurationOptions(struct soap*, const char *URL, struct _tptz__GetConfigurationOptions*);
    soap_POST_recv__tptz__GetConfigurationOptions(struct soap*, struct _tptz__GetConfigurationOptions*);
    @endcode

  - <tptz:GetConfigurationOptionsResponse> @ref _tptz__GetConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationOptionsResponse(struct soap*, struct _tptz__GetConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationOptionsResponse(struct soap*, struct _tptz__GetConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurationOptionsResponse(struct soap*, const char *URL, struct _tptz__GetConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurationOptionsResponse(struct soap*, const char *URL, struct _tptz__GetConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurationOptionsResponse(struct soap*, const char *URL, struct _tptz__GetConfigurationOptionsResponse*);
    soap_POST_recv__tptz__GetConfigurationOptionsResponse(struct soap*, struct _tptz__GetConfigurationOptionsResponse*);
    @endcode

  - <tptz:SendAuxiliaryCommand> @ref _tptz__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SendAuxiliaryCommand(struct soap*, struct _tptz__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SendAuxiliaryCommand(struct soap*, struct _tptz__SendAuxiliaryCommand*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SendAuxiliaryCommand(struct soap*, const char *URL, struct _tptz__SendAuxiliaryCommand*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SendAuxiliaryCommand(struct soap*, const char *URL, struct _tptz__SendAuxiliaryCommand*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SendAuxiliaryCommand(struct soap*, const char *URL, struct _tptz__SendAuxiliaryCommand*);
    soap_POST_recv__tptz__SendAuxiliaryCommand(struct soap*, struct _tptz__SendAuxiliaryCommand*);
    @endcode

  - <tptz:SendAuxiliaryCommandResponse> @ref _tptz__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SendAuxiliaryCommandResponse(struct soap*, struct _tptz__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SendAuxiliaryCommandResponse(struct soap*, struct _tptz__SendAuxiliaryCommandResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SendAuxiliaryCommandResponse(struct soap*, const char *URL, struct _tptz__SendAuxiliaryCommandResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SendAuxiliaryCommandResponse(struct soap*, const char *URL, struct _tptz__SendAuxiliaryCommandResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SendAuxiliaryCommandResponse(struct soap*, const char *URL, struct _tptz__SendAuxiliaryCommandResponse*);
    soap_POST_recv__tptz__SendAuxiliaryCommandResponse(struct soap*, struct _tptz__SendAuxiliaryCommandResponse*);
    @endcode

  - <tptz:GetPresets> @ref _tptz__GetPresets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresets(struct soap*, struct _tptz__GetPresets*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresets(struct soap*, struct _tptz__GetPresets*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresets(struct soap*, const char *URL, struct _tptz__GetPresets*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresets(struct soap*, const char *URL, struct _tptz__GetPresets*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresets(struct soap*, const char *URL, struct _tptz__GetPresets*);
    soap_POST_recv__tptz__GetPresets(struct soap*, struct _tptz__GetPresets*);
    @endcode

  - <tptz:GetPresetsResponse> @ref _tptz__GetPresetsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetsResponse(struct soap*, struct _tptz__GetPresetsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetsResponse(struct soap*, struct _tptz__GetPresetsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetsResponse(struct soap*, const char *URL, struct _tptz__GetPresetsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetsResponse(struct soap*, const char *URL, struct _tptz__GetPresetsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetsResponse(struct soap*, const char *URL, struct _tptz__GetPresetsResponse*);
    soap_POST_recv__tptz__GetPresetsResponse(struct soap*, struct _tptz__GetPresetsResponse*);
    @endcode

  - <tptz:SetPreset> @ref _tptz__SetPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetPreset(struct soap*, struct _tptz__SetPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetPreset(struct soap*, struct _tptz__SetPreset*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetPreset(struct soap*, const char *URL, struct _tptz__SetPreset*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetPreset(struct soap*, const char *URL, struct _tptz__SetPreset*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetPreset(struct soap*, const char *URL, struct _tptz__SetPreset*);
    soap_POST_recv__tptz__SetPreset(struct soap*, struct _tptz__SetPreset*);
    @endcode

  - <tptz:SetPresetResponse> @ref _tptz__SetPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetPresetResponse(struct soap*, struct _tptz__SetPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetPresetResponse(struct soap*, struct _tptz__SetPresetResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetPresetResponse(struct soap*, const char *URL, struct _tptz__SetPresetResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetPresetResponse(struct soap*, const char *URL, struct _tptz__SetPresetResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetPresetResponse(struct soap*, const char *URL, struct _tptz__SetPresetResponse*);
    soap_POST_recv__tptz__SetPresetResponse(struct soap*, struct _tptz__SetPresetResponse*);
    @endcode

  - <tptz:RemovePreset> @ref _tptz__RemovePreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePreset(struct soap*, struct _tptz__RemovePreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePreset(struct soap*, struct _tptz__RemovePreset*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RemovePreset(struct soap*, const char *URL, struct _tptz__RemovePreset*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RemovePreset(struct soap*, const char *URL, struct _tptz__RemovePreset*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RemovePreset(struct soap*, const char *URL, struct _tptz__RemovePreset*);
    soap_POST_recv__tptz__RemovePreset(struct soap*, struct _tptz__RemovePreset*);
    @endcode

  - <tptz:RemovePresetResponse> @ref _tptz__RemovePresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetResponse(struct soap*, struct _tptz__RemovePresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetResponse(struct soap*, struct _tptz__RemovePresetResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RemovePresetResponse(struct soap*, const char *URL, struct _tptz__RemovePresetResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RemovePresetResponse(struct soap*, const char *URL, struct _tptz__RemovePresetResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RemovePresetResponse(struct soap*, const char *URL, struct _tptz__RemovePresetResponse*);
    soap_POST_recv__tptz__RemovePresetResponse(struct soap*, struct _tptz__RemovePresetResponse*);
    @endcode

  - <tptz:GotoPreset> @ref _tptz__GotoPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoPreset(struct soap*, struct _tptz__GotoPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoPreset(struct soap*, struct _tptz__GotoPreset*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GotoPreset(struct soap*, const char *URL, struct _tptz__GotoPreset*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GotoPreset(struct soap*, const char *URL, struct _tptz__GotoPreset*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GotoPreset(struct soap*, const char *URL, struct _tptz__GotoPreset*);
    soap_POST_recv__tptz__GotoPreset(struct soap*, struct _tptz__GotoPreset*);
    @endcode

  - <tptz:GotoPresetResponse> @ref _tptz__GotoPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoPresetResponse(struct soap*, struct _tptz__GotoPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoPresetResponse(struct soap*, struct _tptz__GotoPresetResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GotoPresetResponse(struct soap*, const char *URL, struct _tptz__GotoPresetResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GotoPresetResponse(struct soap*, const char *URL, struct _tptz__GotoPresetResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GotoPresetResponse(struct soap*, const char *URL, struct _tptz__GotoPresetResponse*);
    soap_POST_recv__tptz__GotoPresetResponse(struct soap*, struct _tptz__GotoPresetResponse*);
    @endcode

  - <tptz:GetStatus> @ref _tptz__GetStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetStatus(struct soap*, struct _tptz__GetStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetStatus(struct soap*, struct _tptz__GetStatus*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetStatus(struct soap*, const char *URL, struct _tptz__GetStatus*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetStatus(struct soap*, const char *URL, struct _tptz__GetStatus*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetStatus(struct soap*, const char *URL, struct _tptz__GetStatus*);
    soap_POST_recv__tptz__GetStatus(struct soap*, struct _tptz__GetStatus*);
    @endcode

  - <tptz:GetStatusResponse> @ref _tptz__GetStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetStatusResponse(struct soap*, struct _tptz__GetStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetStatusResponse(struct soap*, struct _tptz__GetStatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetStatusResponse(struct soap*, const char *URL, struct _tptz__GetStatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetStatusResponse(struct soap*, const char *URL, struct _tptz__GetStatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetStatusResponse(struct soap*, const char *URL, struct _tptz__GetStatusResponse*);
    soap_POST_recv__tptz__GetStatusResponse(struct soap*, struct _tptz__GetStatusResponse*);
    @endcode

  - <tptz:GotoHomePosition> @ref _tptz__GotoHomePosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoHomePosition(struct soap*, struct _tptz__GotoHomePosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoHomePosition(struct soap*, struct _tptz__GotoHomePosition*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GotoHomePosition(struct soap*, const char *URL, struct _tptz__GotoHomePosition*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GotoHomePosition(struct soap*, const char *URL, struct _tptz__GotoHomePosition*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GotoHomePosition(struct soap*, const char *URL, struct _tptz__GotoHomePosition*);
    soap_POST_recv__tptz__GotoHomePosition(struct soap*, struct _tptz__GotoHomePosition*);
    @endcode

  - <tptz:GotoHomePositionResponse> @ref _tptz__GotoHomePositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoHomePositionResponse(struct soap*, struct _tptz__GotoHomePositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoHomePositionResponse(struct soap*, struct _tptz__GotoHomePositionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GotoHomePositionResponse(struct soap*, const char *URL, struct _tptz__GotoHomePositionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GotoHomePositionResponse(struct soap*, const char *URL, struct _tptz__GotoHomePositionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GotoHomePositionResponse(struct soap*, const char *URL, struct _tptz__GotoHomePositionResponse*);
    soap_POST_recv__tptz__GotoHomePositionResponse(struct soap*, struct _tptz__GotoHomePositionResponse*);
    @endcode

  - <tptz:SetHomePosition> @ref _tptz__SetHomePosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetHomePosition(struct soap*, struct _tptz__SetHomePosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetHomePosition(struct soap*, struct _tptz__SetHomePosition*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetHomePosition(struct soap*, const char *URL, struct _tptz__SetHomePosition*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetHomePosition(struct soap*, const char *URL, struct _tptz__SetHomePosition*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetHomePosition(struct soap*, const char *URL, struct _tptz__SetHomePosition*);
    soap_POST_recv__tptz__SetHomePosition(struct soap*, struct _tptz__SetHomePosition*);
    @endcode

  - <tptz:SetHomePositionResponse> @ref _tptz__SetHomePositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetHomePositionResponse(struct soap*, struct _tptz__SetHomePositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetHomePositionResponse(struct soap*, struct _tptz__SetHomePositionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetHomePositionResponse(struct soap*, const char *URL, struct _tptz__SetHomePositionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetHomePositionResponse(struct soap*, const char *URL, struct _tptz__SetHomePositionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetHomePositionResponse(struct soap*, const char *URL, struct _tptz__SetHomePositionResponse*);
    soap_POST_recv__tptz__SetHomePositionResponse(struct soap*, struct _tptz__SetHomePositionResponse*);
    @endcode

  - <tptz:ContinuousMove> @ref _tptz__ContinuousMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ContinuousMove(struct soap*, struct _tptz__ContinuousMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ContinuousMove(struct soap*, struct _tptz__ContinuousMove*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__ContinuousMove(struct soap*, const char *URL, struct _tptz__ContinuousMove*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__ContinuousMove(struct soap*, const char *URL, struct _tptz__ContinuousMove*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__ContinuousMove(struct soap*, const char *URL, struct _tptz__ContinuousMove*);
    soap_POST_recv__tptz__ContinuousMove(struct soap*, struct _tptz__ContinuousMove*);
    @endcode

  - <tptz:ContinuousMoveResponse> @ref _tptz__ContinuousMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ContinuousMoveResponse(struct soap*, struct _tptz__ContinuousMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ContinuousMoveResponse(struct soap*, struct _tptz__ContinuousMoveResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__ContinuousMoveResponse(struct soap*, const char *URL, struct _tptz__ContinuousMoveResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__ContinuousMoveResponse(struct soap*, const char *URL, struct _tptz__ContinuousMoveResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__ContinuousMoveResponse(struct soap*, const char *URL, struct _tptz__ContinuousMoveResponse*);
    soap_POST_recv__tptz__ContinuousMoveResponse(struct soap*, struct _tptz__ContinuousMoveResponse*);
    @endcode

  - <tptz:RelativeMove> @ref _tptz__RelativeMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RelativeMove(struct soap*, struct _tptz__RelativeMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RelativeMove(struct soap*, struct _tptz__RelativeMove*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RelativeMove(struct soap*, const char *URL, struct _tptz__RelativeMove*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RelativeMove(struct soap*, const char *URL, struct _tptz__RelativeMove*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RelativeMove(struct soap*, const char *URL, struct _tptz__RelativeMove*);
    soap_POST_recv__tptz__RelativeMove(struct soap*, struct _tptz__RelativeMove*);
    @endcode

  - <tptz:RelativeMoveResponse> @ref _tptz__RelativeMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RelativeMoveResponse(struct soap*, struct _tptz__RelativeMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RelativeMoveResponse(struct soap*, struct _tptz__RelativeMoveResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RelativeMoveResponse(struct soap*, const char *URL, struct _tptz__RelativeMoveResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RelativeMoveResponse(struct soap*, const char *URL, struct _tptz__RelativeMoveResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RelativeMoveResponse(struct soap*, const char *URL, struct _tptz__RelativeMoveResponse*);
    soap_POST_recv__tptz__RelativeMoveResponse(struct soap*, struct _tptz__RelativeMoveResponse*);
    @endcode

  - <tptz:AbsoluteMove> @ref _tptz__AbsoluteMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__AbsoluteMove(struct soap*, struct _tptz__AbsoluteMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__AbsoluteMove(struct soap*, struct _tptz__AbsoluteMove*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__AbsoluteMove(struct soap*, const char *URL, struct _tptz__AbsoluteMove*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__AbsoluteMove(struct soap*, const char *URL, struct _tptz__AbsoluteMove*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__AbsoluteMove(struct soap*, const char *URL, struct _tptz__AbsoluteMove*);
    soap_POST_recv__tptz__AbsoluteMove(struct soap*, struct _tptz__AbsoluteMove*);
    @endcode

  - <tptz:AbsoluteMoveResponse> @ref _tptz__AbsoluteMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__AbsoluteMoveResponse(struct soap*, struct _tptz__AbsoluteMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__AbsoluteMoveResponse(struct soap*, struct _tptz__AbsoluteMoveResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__AbsoluteMoveResponse(struct soap*, const char *URL, struct _tptz__AbsoluteMoveResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__AbsoluteMoveResponse(struct soap*, const char *URL, struct _tptz__AbsoluteMoveResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__AbsoluteMoveResponse(struct soap*, const char *URL, struct _tptz__AbsoluteMoveResponse*);
    soap_POST_recv__tptz__AbsoluteMoveResponse(struct soap*, struct _tptz__AbsoluteMoveResponse*);
    @endcode

  - <tptz:GeoMove> @ref _tptz__GeoMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GeoMove(struct soap*, struct _tptz__GeoMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GeoMove(struct soap*, struct _tptz__GeoMove*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GeoMove(struct soap*, const char *URL, struct _tptz__GeoMove*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GeoMove(struct soap*, const char *URL, struct _tptz__GeoMove*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GeoMove(struct soap*, const char *URL, struct _tptz__GeoMove*);
    soap_POST_recv__tptz__GeoMove(struct soap*, struct _tptz__GeoMove*);
    @endcode

  - <tptz:GeoMoveResponse> @ref _tptz__GeoMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GeoMoveResponse(struct soap*, struct _tptz__GeoMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GeoMoveResponse(struct soap*, struct _tptz__GeoMoveResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GeoMoveResponse(struct soap*, const char *URL, struct _tptz__GeoMoveResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GeoMoveResponse(struct soap*, const char *URL, struct _tptz__GeoMoveResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GeoMoveResponse(struct soap*, const char *URL, struct _tptz__GeoMoveResponse*);
    soap_POST_recv__tptz__GeoMoveResponse(struct soap*, struct _tptz__GeoMoveResponse*);
    @endcode

  - <tptz:Stop> @ref _tptz__Stop
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__Stop(struct soap*, struct _tptz__Stop*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__Stop(struct soap*, struct _tptz__Stop*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__Stop(struct soap*, const char *URL, struct _tptz__Stop*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__Stop(struct soap*, const char *URL, struct _tptz__Stop*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__Stop(struct soap*, const char *URL, struct _tptz__Stop*);
    soap_POST_recv__tptz__Stop(struct soap*, struct _tptz__Stop*);
    @endcode

  - <tptz:StopResponse> @ref _tptz__StopResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__StopResponse(struct soap*, struct _tptz__StopResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__StopResponse(struct soap*, struct _tptz__StopResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__StopResponse(struct soap*, const char *URL, struct _tptz__StopResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__StopResponse(struct soap*, const char *URL, struct _tptz__StopResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__StopResponse(struct soap*, const char *URL, struct _tptz__StopResponse*);
    soap_POST_recv__tptz__StopResponse(struct soap*, struct _tptz__StopResponse*);
    @endcode

  - <tptz:GetPresetTours> @ref _tptz__GetPresetTours
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTours(struct soap*, struct _tptz__GetPresetTours*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTours(struct soap*, struct _tptz__GetPresetTours*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTours(struct soap*, const char *URL, struct _tptz__GetPresetTours*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTours(struct soap*, const char *URL, struct _tptz__GetPresetTours*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTours(struct soap*, const char *URL, struct _tptz__GetPresetTours*);
    soap_POST_recv__tptz__GetPresetTours(struct soap*, struct _tptz__GetPresetTours*);
    @endcode

  - <tptz:GetPresetToursResponse> @ref _tptz__GetPresetToursResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetToursResponse(struct soap*, struct _tptz__GetPresetToursResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetToursResponse(struct soap*, struct _tptz__GetPresetToursResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetToursResponse(struct soap*, const char *URL, struct _tptz__GetPresetToursResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetToursResponse(struct soap*, const char *URL, struct _tptz__GetPresetToursResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetToursResponse(struct soap*, const char *URL, struct _tptz__GetPresetToursResponse*);
    soap_POST_recv__tptz__GetPresetToursResponse(struct soap*, struct _tptz__GetPresetToursResponse*);
    @endcode

  - <tptz:GetPresetTour> @ref _tptz__GetPresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTour(struct soap*, struct _tptz__GetPresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTour(struct soap*, struct _tptz__GetPresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTour(struct soap*, const char *URL, struct _tptz__GetPresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTour(struct soap*, const char *URL, struct _tptz__GetPresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTour(struct soap*, const char *URL, struct _tptz__GetPresetTour*);
    soap_POST_recv__tptz__GetPresetTour(struct soap*, struct _tptz__GetPresetTour*);
    @endcode

  - <tptz:GetPresetTourResponse> @ref _tptz__GetPresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourResponse(struct soap*, struct _tptz__GetPresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourResponse(struct soap*, struct _tptz__GetPresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTourResponse(struct soap*, const char *URL, struct _tptz__GetPresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTourResponse(struct soap*, const char *URL, struct _tptz__GetPresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTourResponse(struct soap*, const char *URL, struct _tptz__GetPresetTourResponse*);
    soap_POST_recv__tptz__GetPresetTourResponse(struct soap*, struct _tptz__GetPresetTourResponse*);
    @endcode

  - <tptz:GetPresetTourOptions> @ref _tptz__GetPresetTourOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourOptions(struct soap*, struct _tptz__GetPresetTourOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourOptions(struct soap*, struct _tptz__GetPresetTourOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTourOptions(struct soap*, const char *URL, struct _tptz__GetPresetTourOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTourOptions(struct soap*, const char *URL, struct _tptz__GetPresetTourOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTourOptions(struct soap*, const char *URL, struct _tptz__GetPresetTourOptions*);
    soap_POST_recv__tptz__GetPresetTourOptions(struct soap*, struct _tptz__GetPresetTourOptions*);
    @endcode

  - <tptz:GetPresetTourOptionsResponse> @ref _tptz__GetPresetTourOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourOptionsResponse(struct soap*, struct _tptz__GetPresetTourOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourOptionsResponse(struct soap*, struct _tptz__GetPresetTourOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTourOptionsResponse(struct soap*, const char *URL, struct _tptz__GetPresetTourOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTourOptionsResponse(struct soap*, const char *URL, struct _tptz__GetPresetTourOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTourOptionsResponse(struct soap*, const char *URL, struct _tptz__GetPresetTourOptionsResponse*);
    soap_POST_recv__tptz__GetPresetTourOptionsResponse(struct soap*, struct _tptz__GetPresetTourOptionsResponse*);
    @endcode

  - <tptz:CreatePresetTour> @ref _tptz__CreatePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__CreatePresetTour(struct soap*, struct _tptz__CreatePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__CreatePresetTour(struct soap*, struct _tptz__CreatePresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__CreatePresetTour(struct soap*, const char *URL, struct _tptz__CreatePresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__CreatePresetTour(struct soap*, const char *URL, struct _tptz__CreatePresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__CreatePresetTour(struct soap*, const char *URL, struct _tptz__CreatePresetTour*);
    soap_POST_recv__tptz__CreatePresetTour(struct soap*, struct _tptz__CreatePresetTour*);
    @endcode

  - <tptz:CreatePresetTourResponse> @ref _tptz__CreatePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__CreatePresetTourResponse(struct soap*, struct _tptz__CreatePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__CreatePresetTourResponse(struct soap*, struct _tptz__CreatePresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__CreatePresetTourResponse(struct soap*, const char *URL, struct _tptz__CreatePresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__CreatePresetTourResponse(struct soap*, const char *URL, struct _tptz__CreatePresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__CreatePresetTourResponse(struct soap*, const char *URL, struct _tptz__CreatePresetTourResponse*);
    soap_POST_recv__tptz__CreatePresetTourResponse(struct soap*, struct _tptz__CreatePresetTourResponse*);
    @endcode

  - <tptz:ModifyPresetTour> @ref _tptz__ModifyPresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ModifyPresetTour(struct soap*, struct _tptz__ModifyPresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ModifyPresetTour(struct soap*, struct _tptz__ModifyPresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__ModifyPresetTour(struct soap*, const char *URL, struct _tptz__ModifyPresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__ModifyPresetTour(struct soap*, const char *URL, struct _tptz__ModifyPresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__ModifyPresetTour(struct soap*, const char *URL, struct _tptz__ModifyPresetTour*);
    soap_POST_recv__tptz__ModifyPresetTour(struct soap*, struct _tptz__ModifyPresetTour*);
    @endcode

  - <tptz:ModifyPresetTourResponse> @ref _tptz__ModifyPresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ModifyPresetTourResponse(struct soap*, struct _tptz__ModifyPresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ModifyPresetTourResponse(struct soap*, struct _tptz__ModifyPresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__ModifyPresetTourResponse(struct soap*, const char *URL, struct _tptz__ModifyPresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__ModifyPresetTourResponse(struct soap*, const char *URL, struct _tptz__ModifyPresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__ModifyPresetTourResponse(struct soap*, const char *URL, struct _tptz__ModifyPresetTourResponse*);
    soap_POST_recv__tptz__ModifyPresetTourResponse(struct soap*, struct _tptz__ModifyPresetTourResponse*);
    @endcode

  - <tptz:OperatePresetTour> @ref _tptz__OperatePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__OperatePresetTour(struct soap*, struct _tptz__OperatePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__OperatePresetTour(struct soap*, struct _tptz__OperatePresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__OperatePresetTour(struct soap*, const char *URL, struct _tptz__OperatePresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__OperatePresetTour(struct soap*, const char *URL, struct _tptz__OperatePresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__OperatePresetTour(struct soap*, const char *URL, struct _tptz__OperatePresetTour*);
    soap_POST_recv__tptz__OperatePresetTour(struct soap*, struct _tptz__OperatePresetTour*);
    @endcode

  - <tptz:OperatePresetTourResponse> @ref _tptz__OperatePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__OperatePresetTourResponse(struct soap*, struct _tptz__OperatePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__OperatePresetTourResponse(struct soap*, struct _tptz__OperatePresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__OperatePresetTourResponse(struct soap*, const char *URL, struct _tptz__OperatePresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__OperatePresetTourResponse(struct soap*, const char *URL, struct _tptz__OperatePresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__OperatePresetTourResponse(struct soap*, const char *URL, struct _tptz__OperatePresetTourResponse*);
    soap_POST_recv__tptz__OperatePresetTourResponse(struct soap*, struct _tptz__OperatePresetTourResponse*);
    @endcode

  - <tptz:RemovePresetTour> @ref _tptz__RemovePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetTour(struct soap*, struct _tptz__RemovePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetTour(struct soap*, struct _tptz__RemovePresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RemovePresetTour(struct soap*, const char *URL, struct _tptz__RemovePresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RemovePresetTour(struct soap*, const char *URL, struct _tptz__RemovePresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RemovePresetTour(struct soap*, const char *URL, struct _tptz__RemovePresetTour*);
    soap_POST_recv__tptz__RemovePresetTour(struct soap*, struct _tptz__RemovePresetTour*);
    @endcode

  - <tptz:RemovePresetTourResponse> @ref _tptz__RemovePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetTourResponse(struct soap*, struct _tptz__RemovePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetTourResponse(struct soap*, struct _tptz__RemovePresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RemovePresetTourResponse(struct soap*, const char *URL, struct _tptz__RemovePresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RemovePresetTourResponse(struct soap*, const char *URL, struct _tptz__RemovePresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RemovePresetTourResponse(struct soap*, const char *URL, struct _tptz__RemovePresetTourResponse*);
    soap_POST_recv__tptz__RemovePresetTourResponse(struct soap*, struct _tptz__RemovePresetTourResponse*);
    @endcode

  - <tptz:GetCompatibleConfigurations> @ref _tptz__GetCompatibleConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetCompatibleConfigurations(struct soap*, struct _tptz__GetCompatibleConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetCompatibleConfigurations(struct soap*, struct _tptz__GetCompatibleConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetCompatibleConfigurations(struct soap*, const char *URL, struct _tptz__GetCompatibleConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetCompatibleConfigurations(struct soap*, const char *URL, struct _tptz__GetCompatibleConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetCompatibleConfigurations(struct soap*, const char *URL, struct _tptz__GetCompatibleConfigurations*);
    soap_POST_recv__tptz__GetCompatibleConfigurations(struct soap*, struct _tptz__GetCompatibleConfigurations*);
    @endcode

  - <tptz:GetCompatibleConfigurationsResponse> @ref _tptz__GetCompatibleConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetCompatibleConfigurationsResponse(struct soap*, struct _tptz__GetCompatibleConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetCompatibleConfigurationsResponse(struct soap*, struct _tptz__GetCompatibleConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetCompatibleConfigurationsResponse(struct soap*, const char *URL, struct _tptz__GetCompatibleConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetCompatibleConfigurationsResponse(struct soap*, const char *URL, struct _tptz__GetCompatibleConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetCompatibleConfigurationsResponse(struct soap*, const char *URL, struct _tptz__GetCompatibleConfigurationsResponse*);
    soap_POST_recv__tptz__GetCompatibleConfigurationsResponse(struct soap*, struct _tptz__GetCompatibleConfigurationsResponse*);
    @endcode

*/

/* End of /home/ydd/share/gsoap-2.8/samples/onvif/onvif.h */
